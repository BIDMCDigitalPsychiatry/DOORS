{"version":3,"sources":["../node_modules/react-virtualized/dist/commonjs/Grid/Grid.js","../node_modules/react-virtualized/dist/commonjs/Grid/utils/calculateSizeAndPositionDataAndUpdateScrollOffset.js","../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/commonjs/Grid/utils/maxElementSize.js","../node_modules/react-virtualized/dist/commonjs/utils/createCallbackMemoizer.js","../node_modules/react-virtualized/dist/commonjs/Grid/utils/updateScrollIndexHelper.js","../node_modules/react-virtualized/dist/commonjs/utils/requestAnimationTimeout.js","../node_modules/react-virtualized/dist/commonjs/utils/animationFrame.js","../node_modules/react-virtualized/dist/commonjs/Grid/accessibilityOverscanIndicesGetter.js","../node_modules/mui-virtualized-table/dist/utils.js","../node_modules/react-virtualized/dist/commonjs/AutoSizer/AutoSizer.js","../node_modules/react-virtualized/dist/commonjs/vendor/detectElementResize.js","../node_modules/@babel/runtime/helpers/toConsumableArray.js","../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/slicedToArray.js","../node_modules/@babel/runtime/helpers/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/nonIterableRest.js","../node_modules/react-virtualized/dist/es/Grid/utils/calculateSizeAndPositionDataAndUpdateScrollOffset.js","../node_modules/react-virtualized/dist/es/Grid/utils/CellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/es/Grid/utils/maxElementSize.js","../node_modules/react-virtualized/dist/es/Grid/utils/ScalingCellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/es/utils/createCallbackMemoizer.js","../node_modules/react-virtualized/dist/es/Grid/utils/updateScrollIndexHelper.js","../node_modules/react-virtualized/dist/es/utils/animationFrame.js","../node_modules/react-virtualized/dist/es/Grid/Grid.js","../node_modules/react-virtualized/dist/es/utils/requestAnimationTimeout.js","../node_modules/react-virtualized/dist/es/Grid/defaultOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/es/Grid/defaultCellRangeRenderer.js","../node_modules/react-virtualized/dist/es/Grid/accessibilityOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/es/ArrowKeyStepper/types.js","../node_modules/react-virtualized/dist/es/ArrowKeyStepper/ArrowKeyStepper.js","../node_modules/react-virtualized/dist/es/AutoSizer/AutoSizer.js","../node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurer.js","../node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurerCache.js","../node_modules/react-virtualized/dist/es/Collection/CollectionView.js","../node_modules/react-virtualized/dist/es/Collection/Section.js","../node_modules/react-virtualized/dist/es/Collection/SectionManager.js","../node_modules/react-virtualized/dist/es/utils/getUpdatedOffsetForIndex.js","../node_modules/react-virtualized/dist/es/Collection/Collection.js","../node_modules/react-virtualized/dist/es/Collection/utils/calculateSizeAndPositionData.js","../node_modules/react-virtualized/dist/es/Collection/index.js","../node_modules/react-virtualized/dist/es/ColumnSizer/ColumnSizer.js","../node_modules/react-virtualized/dist/es/ColumnSizer/index.js","../node_modules/react-virtualized/dist/es/InfiniteLoader/InfiniteLoader.js","../node_modules/react-virtualized/dist/es/InfiniteLoader/index.js","../node_modules/react-virtualized/dist/es/List/List.js","../node_modules/react-virtualized/dist/es/vendor/binarySearchBounds.js","../node_modules/react-virtualized/dist/es/vendor/intervalTree.js","../node_modules/react-virtualized/dist/es/Masonry/PositionCache.js","../node_modules/react-virtualized/dist/es/Masonry/Masonry.js","../node_modules/react-virtualized/dist/es/Masonry/index.js","../node_modules/react-virtualized/dist/es/MultiGrid/CellMeasurerCacheDecorator.js","../node_modules/react-virtualized/dist/es/MultiGrid/MultiGrid.js","../node_modules/react-virtualized/dist/es/ScrollSync/ScrollSync.js","../node_modules/react-virtualized/dist/es/Table/defaultHeaderRowRenderer.js","../node_modules/react-virtualized/dist/es/Table/SortDirection.js","../node_modules/react-virtualized/dist/es/Table/SortIndicator.js","../node_modules/react-virtualized/dist/es/Table/defaultHeaderRenderer.js","../node_modules/react-virtualized/dist/es/Table/defaultRowRenderer.js","../node_modules/react-virtualized/dist/es/Table/Column.js","../node_modules/react-virtualized/dist/es/Table/Table.js","../node_modules/react-virtualized/dist/es/Table/defaultCellDataGetter.js","../node_modules/react-virtualized/dist/es/Table/defaultCellRenderer.js","../node_modules/react-virtualized/dist/es/Table/index.js","../node_modules/react-virtualized/dist/es/WindowScroller/utils/onScroll.js","../node_modules/react-virtualized/dist/es/WindowScroller/utils/dimensions.js","../node_modules/react-virtualized/dist/es/WindowScroller/WindowScroller.js","../node_modules/@material-ui/core/esm/TablePagination/TablePaginationActions.js","../node_modules/@material-ui/core/esm/TablePagination/TablePagination.js","../node_modules/@material-ui/core/esm/internal/svg-icons/ArrowDownward.js","../node_modules/@material-ui/core/esm/TableSortLabel/TableSortLabel.js","../node_modules/@material-ui/core/esm/Table/Table.js","../node_modules/@material-ui/core/esm/TableFooter/TableFooter.js","../node_modules/@material-ui/icons/esm/CheckBox.js","../node_modules/@material-ui/icons/esm/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/styles/createMuiStrictModeTheme.js","../node_modules/@material-ui/core/esm/styles/cssUtils.js","../node_modules/@material-ui/core/esm/styles/responsiveFontSizes.js","../node_modules/@material-ui/core/esm/styles/withTheme.js","../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/createClass.js","../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/inherits.js","../node_modules/react-virtualized/dist/commonjs/Grid/types.js","../node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js","../node_modules/react-virtualized/dist/commonjs/Grid/utils/ScalingCellSizeAndPositionManager.js","../node_modules/dom-helpers/esm/canUseDOM.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/react-virtualized/dist/commonjs/CellMeasurer/types.js","../node_modules/react-virtualized/dist/commonjs/Grid/defaultOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/commonjs/Grid/defaultCellRangeRenderer.js","../node_modules/@material-ui/core/esm/Table/TableContext.js","../node_modules/@material-ui/core/esm/TableCell/index.js","../node_modules/@material-ui/core/esm/TableCell/TableCell.js","../node_modules/@material-ui/core/esm/Table/Tablelvl2Context.js","../node_modules/react-virtualized/dist/commonjs/AutoSizer/index.js","../node_modules/@reactions/component/es/index.js","../node_modules/react-virtualized/dist/es/vendor/detectElementResize.js","../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../node_modules/mui-virtualized-table/dist/index.js","../node_modules/react-virtualized/dist/commonjs/MultiGrid/index.js","../node_modules/react-virtualized/dist/commonjs/MultiGrid/MultiGrid.js","../node_modules/@babel/runtime/helpers/setPrototypeOf.js","../node_modules/react-virtualized/dist/commonjs/MultiGrid/CellMeasurerCacheDecorator.js","../node_modules/react-virtualized/dist/commonjs/CellMeasurer/index.js","../node_modules/react-virtualized/dist/commonjs/CellMeasurer/CellMeasurer.js","../node_modules/react-virtualized/dist/commonjs/CellMeasurer/CellMeasurerCache.js","../node_modules/react-virtualized/dist/commonjs/Grid/index.js"],"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","DEFAULT_SCROLLING_RESET_TIME_INTERVAL","_class","_temp","_extends2","_classCallCheck2","_createClass2","_possibleConstructorReturn2","_getPrototypeOf2","_assertThisInitialized2","_inherits2","_defineProperty2","React","_clsx","_calculateSizeAndPositionDataAndUpdateScrollOffset","_ScalingCellSizeAndPositionManager","_createCallbackMemoizer","_defaultOverscanIndicesGetter","_updateScrollIndexHelper","_defaultCellRangeRenderer","_scrollbarSize","_reactLifecyclesCompat","_requestAnimationTimeout","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","SCROLL_POSITION_CHANGE_REASONS","Grid","_React$PureComponent","props","_this","this","call","_disablePointerEventsTimeoutId","setState","isScrolling","needToResetStyleCache","onSectionRendered","_onGridRenderedMemoizer","callback","indices","columnOverscanStartIndex","_columnStartIndex","columnOverscanStopIndex","_columnStopIndex","columnStartIndex","_renderedColumnStartIndex","columnStopIndex","_renderedColumnStopIndex","rowOverscanStartIndex","_rowStartIndex","rowOverscanStopIndex","_rowStopIndex","rowStartIndex","_renderedRowStartIndex","rowStopIndex","_renderedRowStopIndex","ref","_scrollingContainer","event","handleScrollEvent","columnSizeAndPositionManager","cellCount","columnCount","cellSizeGetter","params","_wrapSizeGetter","columnWidth","estimatedCellSize","_getEstimatedColumnSize","rowSizeAndPositionManager","rowCount","rowHeight","_getEstimatedRowSize","state","instanceProps","prevColumnWidth","prevRowHeight","prevColumnCount","prevRowCount","prevIsScrolling","prevScrollToColumn","scrollToColumn","prevScrollToRow","scrollToRow","scrollbarSize","scrollbarSizeMeasured","scrollDirectionHorizontal","SCROLL_DIRECTION_FORWARD","scrollDirectionVertical","scrollLeft","scrollTop","scrollPositionChangeReason","_initialScrollTop","_getCalculatedScrollTop","_initialScrollLeft","_getCalculatedScrollLeft","_ref","undefined","_ref$alignment","alignment","scrollToAlignment","_ref$columnIndex","columnIndex","_ref$rowIndex","rowIndex","offsetProps","getTotalSize","_ref2","_ref2$scrollLeft","scrollLeftParam","_ref2$scrollTop","scrollTopParam","_debounceScrollEnded","_this$props","autoHeight","autoWidth","height","width","totalRowsHeight","totalColumnsWidth","Math","min","max","newState","SCROLL_DIRECTION_BACKWARD","_invokeOnScrollMemoizer","_ref3","_deferredInvalidateColumnIndex","_deferredInvalidateRowIndex","_this$props2","getSizeAndPositionOfCell","_ref4","_ref4$columnIndex","_ref4$rowIndex","_this$props3","resetCell","_recomputeScrollLeftFlag","_recomputeScrollTopFlag","_styleCache","_cellCache","forceUpdate","_ref5","_updateScrollLeftForScrollToColumn","_updateScrollTopForScrollToRow","_this$props4","getScrollbarSize","_handleInvalidatedGridSize","prevState","stateUpdate","_getScrollToPositionStateUpdate","sizeIsBiggerThanZero","_invokeOnGridRenderedHelper","_maybeCallOnScrollbarPresenceChange","prevProps","_this2","_this$props5","_this$state","columnOrRowCountJustIncreasedFromZero","sizeJustIncreasedFromZero","cellSizeAndPositionManager","previousCellsCount","previousCellSize","previousScrollToAlignment","previousScrollToIndex","previousSize","scrollOffset","scrollToIndex","size","updateScrollIndexCallback","cancelAnimationTimeout","_this$props6","autoContainerWidth","className","containerProps","containerRole","containerStyle","id","noContentRenderer","role","style","tabIndex","_this$state2","_isScrolling","gridStyle","boxSizing","direction","position","WebkitOverflowScrolling","willChange","_resetStyleCache","_calculateChildrenToRender","verticalScrollBarSize","horizontalScrollBarSize","_horizontalScrollBarSize","_verticalScrollBarSize","_scrollbarPresenceChanged","overflowX","overflowY","childrenToDisplay","_childrenToDisplay","showNoContentRenderer","createElement","_setScrollingContainerRef","onScroll","_onScroll","maxWidth","maxHeight","overflow","pointerEvents","cellRenderer","cellRangeRenderer","deferredMeasurementCache","overscanColumnCount","overscanIndicesGetter","overscanRowCount","isScrollingOptOut","visibleColumnIndices","getVisibleCellRange","containerSize","offset","visibleRowIndices","horizontalOffsetAdjustment","getOffsetAdjustment","verticalOffsetAdjustment","start","stop","overscanColumnIndices","overscanCellsCount","scrollDirection","startIndex","stopIndex","overscanRowIndices","overscanStartIndex","overscanStopIndex","hasFixedHeight","has","hasFixedWidth","cellCache","parent","styleCache","scrollingResetTimeInterval","requestAnimationTimeout","_debounceScrollEndedCallback","recomputeGridSize","_ref6","_this3","_onScrollMemoizer","_ref7","_this3$props","clientHeight","clientWidth","scrollHeight","scrollWidth","hasOwnProperty","Boolean","onScrollbarPresenceChange","horizontal","vertical","_ref8","_getScrollLeftForScrollToColumnStateUpdate","concat","_getScrollTopForScrollToRowStateUpdate","nextProps","assign","maybeStateA","maybeStateB","configure","cellSize","computeMetadataCallback","computeMetadataCallbackProps","nextCellsCount","nextCellSize","nextScrollToIndex","updateScrollOffsetForScrollToIndex","estimatedColumnSize","estimatedRowSize","_ref9","finalColumn","targetIndex","scrollBarSize","getUpdatedOffsetForIndex","align","currentOffset","calculatedScrollLeft","finalRow","calculatedScrollTop","PureComponent","polyfill","_default","CellSizeAndPositionManager","_cellSizeGetter","_cellCount","_estimatedCellSize","_lastMeasuredIndex","index","Error","lastMeasuredCellSizeAndPosition","getSizeAndPositionOfLastMeasuredCell","isNaN","_cellSizeAndPositionData","_lastBatchedIndex","_ref3$align","idealOffset","datum","maxOffset","minOffset","totalSize","_findNearestCell","high","low","middle","floor","interval","_binarySearch","lastMeasuredIndex","_exponentialSearch","getMaxElementSize","window","chrome","requireAllKeys","cachedIndices","allInitialized","every","Array","isArray","indexChanged","some","cachedValue","join","getCellCount","hasScrollToIndex","sizeHasChanged","bpfrpt_proptype_AnimationTimeoutId","_animationFrame","frame","caf","delay","Promise","resolve","then","Date","now","raf","timeout","win","request","self","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","cancel","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","clearTimeout","SCROLL_DIRECTION_VERTICAL","SCROLL_DIRECTION_HORIZONTAL","getDeterministicColumnWidth","column","tableWidth","percentageBasedWidth","percentAsString","parseFloat","percentToFixedWidth","minWidth","calcColumnWidth","columns","totalAllocatedWidth","reduce","result","c","variableWidthColumns","initialDistributedWidthPerColumn","activeMinWidthColumns","allocatedMinWidth","remainingWidth","_getPrototypeOf3","_detectElementResize","AutoSizer","_React$Component","_len","args","_key","defaultHeight","defaultWidth","disableHeight","disableWidth","onResize","_parentNode","offsetHeight","offsetWidth","_window","getComputedStyle","paddingLeft","parseInt","paddingRight","paddingTop","paddingBottom","newHeight","newWidth","autoSizer","_autoSizer","nonce","parentNode","ownerDocument","defaultView","HTMLElement","addResizeListener","_onResize","removeResizeListener","children","outerStyle","childParams","_setRef","Component","hostWindow","global","attachEvent","document","requestFrame","fn","cancelFrame","resetTriggers","element","triggers","__resizeTriggers__","expand","firstElementChild","contract","lastElementChild","expandChild","scrollListener","e","indexOf","__resizeRAF__","__resizeLast__","checkTriggers","__resizeListeners__","animation","keyframeprefix","animationstartevent","domPrefixes","split","startEvents","pfx","elm","animationName","toLowerCase","animationKeyframes","animationStyle","doc","elementStyle","getElementById","css","head","getElementsByTagName","type","setAttribute","styleSheet","cssText","appendChild","createTextNode","createStyles","innerHTML","addEventListener","__animationListener__","detachEvent","splice","removeEventListener","removeChild","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","module","arr","arrayLikeToArray","iter","Symbol","iterator","from","TypeError","arrayWithHoles","iterableToArrayLimit","nonIterableRest","_arr","_n","_d","_e","_s","_i","next","done","err","calculateSizeAndPositionDataAndUpdateScrollOffset","_classCallCheck","_defineProperty","_createClass","ScalingCellSizeAndPositionManager","_ref$maxScrollSize","maxScrollSize","_objectWithoutProperties","_cellSizeAndPositionManager","_maxScrollSize","getEstimatedCellSize","getLastMeasuredIndex","safeTotalSize","offsetPercentage","_getOffsetPercentage","round","_safeOffsetToOffset","_offsetToSafeOffset","createCallbackMemoizer","updateScrollIndexHelper","_possibleConstructorReturn","_getPrototypeOf","_assertThisInitialized","_inherits","_extends","clsx","renderedCells","areOffsetsAdjusted","canCacheStyle","rowDatum","columnDatum","isVisible","left","top","cellRendererParams","renderedCell","defaultOverscanIndicesGetter","ArrowKeyStepper","disabled","mode","_this$_getScrollState","_getScrollState","scrollToColumnPrevious","scrollToRowPrevious","_this$_getScrollState2","preventDefault","_updateScrollState","_this$_getScrollState3","onKeyDown","_onKeyDown","_onSectionRendered","isControlled","onScrollToChange","createDetectElementResize","CellMeasurer","cache","_this$props$columnInd","_this$props$rowIndex","_this$_getCellMeasure","_getCellMeasurements","getHeight","getWidth","set","Element","console","warn","_child","_maybeMeasureCell","measure","_measure","registerChild","_registerChild","node","findDOMNode","styleWidth","styleHeight","ceil","_this$props2$columnIn","_this$props2$rowIndex","_this$_getCellMeasure2","invalidateCellSizeAfterRender","CellMeasurerCache","_keyMapper","_columnWidthCache","_defaultWidth","_rowHeightCache","_defaultHeight","fixedHeight","fixedWidth","keyMapper","minHeight","_hasFixedHeight","_hasFixedWidth","_minHeight","_minWidth","defaultKeyMapper","_cellHeightCache","_cellWidthCache","_updateCachedColumnAndRowSizes","_rowCount","_columnCount","_key2","columnKey","rowKey","get","CollectionView","cellLayoutManager","_onSectionRenderedMemoizer","getLastRenderedIndices","scrollToCell","scrollPosition","getScrollPositionForCell","cellIndex","_setScrollPosition","_enablePointerEventsAfterDelay","isScrollingChange","_cellLayoutManager$ge","totalHeight","totalWidth","cancelable","_scrollbarSizeMeasured","_calculateSizeAndPositionDataOnNextUpdate","_updateScrollPositionForScrollToCell","_invokeOnSectionRenderedHelper","_cellLayoutManager$ge2","horizontalOverscanSize","verticalOverscanSize","_this$state3","_lastRenderedCellCount","_lastRenderedCellLayoutManager","calculateSizeAndPositionData","_cellLayoutManager$ge3","right","bottom","cellRenderers","x","y","collectionStyle","propTypes","Section","_indexMap","_indices","SectionManager","sectionSize","_sectionSize","_cellMetadata","_sections","getSections","section","getCellIndices","map","sectionXStart","sectionXStop","sectionYStart","sectionYStop","sections","sectionX","sectionY","toString","cellMetadatum","addCellIndex","_ref$align","cellOffset","Collection","context","_lastRenderedCellIndices","_isScrollingChange","bind","_setCollectionViewRef","_collectionView","recomputeCellSizesAndPositions","data","cellSizeAndPositionGetter","cellMetadata","sectionManager","registerCell","_calculateSizeAndPositionData","_sectionManager","_height","_width","cellGroupRenderer","getCellMetadata","cellRendererProps","ColumnSizer","columnMaxWidth","columnMinWidth","_registeredChild","safeColumnMinWidth","safeColumnMaxWidth","adjustedWidth","getColumnWidth","child","InfiniteLoader","_loadMoreRowsMemoizer","_onRowsRendered","autoReload","_doStuff","_lastRenderedStartIndex","_lastRenderedStopIndex","onRowsRendered","unloadedRanges","loadMoreRows","unloadedRange","promise","lastRenderedStartIndex","lastRenderedStopIndex","isRangeVisible","component","currentIndex","recomputeSize","recomputeRowHeights","forceUpdateReactVirtualizedComponent","isRowLoaded","minimumBatchSize","threshold","rangeStartIndex","rangeStopIndex","potentialStopIndex","_index","firstUnloadedRange","_index2","scanForUnloadedRanges","squashedUnloadedRanges","_toConsumableArray","_loadUnloadedRanges","registeredChild","List","rowRenderer","widthDescriptor","writable","getOffsetForCell","measureAllCells","_ref6$columnIndex","_ref6$rowIndex","scrollToPosition","noRowsRenderer","classNames","_cellRenderer","accessibilityOverscanIndicesGetter","ge","a","l","h","m","_GEP","_GEA","gt","_GTP","_GTA","lt","_LTP","_LTA","le","_LEP","_LEA","eq","p","_EQP","_EQA","IntervalTreeNode","mid","leftPoints","rightPoints","count","proto","prototype","copy","b","rebuild","intervals","ntree","createIntervalTree","rebuildWithInterval","rebuildWithoutInterval","idx","reportLeftRange","hi","cb","r","reportRightRange","lo","reportRange","compareNumbers","compareBegin","d","compareEnd","pts","sort","leftIntervals","rightIntervals","centerIntervals","s","slice","IntervalTree","root","insert","weight","bounds","remove","n","queryPoint","queryInterval","tproto","PositionCache","defaultCellHeight","unmeasuredCellCount","tallestColumnSize","renderCallback","_intervalTree","_slicedToArray","_leftMap","columnSizeMap","_columnSizeMap","columnHeight","Masonry","eventScrollTop","currentTarget","_getEstimatedTotalHeight","_debounceResetIsScrolling","_positionCache","_invalidateOnUpdateStartIndex","_invalidateOnUpdateStopIndex","_populatePositionCache","_checkInvalidateOnUpdate","_invokeOnScrollCallback","_invokeOnCellsRenderedCallback","_debounceResetIsScrollingId","cellMeasurerCache","overscanByPixels","rowDirection","estimateTotalHeight","shortestColumnSize","measuredCellCount","range","_style","batchSize","_startIndex","_stopIndex","_debounceResetIsScrollingCallback","estimatedColumnCount","_onScrollMemoized","_startIndexMemoized","_stopIndexMemoized","onCellsRendered","cellPositioner","_cellPositioner","setPosition","noop","CellMeasurerCacheDecorator","_cellMeasurerCache","_columnIndexOffset","_rowIndexOffset","_params$columnIndexOf","columnIndexOffset","_params$rowIndexOffse","rowIndexOffset","clear","clearAll","MultiGrid","showHorizontalScrollbar","showVerticalScrollbar","_bottomLeftGrid","_bottomRightGrid","rest","fixedRowCount","fixedColumnCount","scrollInfo","_topLeftGrid","_topRightGrid","_fixedColumnCount","_fixedRowCount","_maybeCalculateCachedStyles","_deferredMeasurementCacheBottomLeftGrid","_deferredMeasurementCacheBottomRightGrid","_deferredMeasurementCacheTopRightGrid","_ref7$columnIndex","_ref7$rowIndex","_ref8$columnIndex","_ref8$rowIndex","adjustedColumnIndex","adjustedRowIndex","_leftGridWidth","_topGridHeight","_this$props7","_this$props8","_prepareForRender","_this$state4","_containerOuterStyle","_containerTopStyle","_renderTopLeftGrid","_renderTopRightGrid","_containerBottomStyle","_renderBottomLeftGrid","_renderBottomRightGrid","_getTopGridHeight","leftGridWidth","_getLeftGridWidth","topGridHeight","resetAll","_this$props9","enableFixedColumnScroll","enableFixedRowScroll","styleBottomLeftGrid","styleBottomRightGrid","styleTopLeftGrid","styleTopRightGrid","sizeChange","_lastRenderedHeight","_lastRenderedWidth","leftSizeChange","_lastRenderedColumnWidth","_lastRenderedFixedColumnCount","topSizeChange","_lastRenderedFixedRowCount","_lastRenderedRowHeight","_lastRenderedStyle","_lastRenderedStyleBottomLeftGrid","_bottomLeftGridStyle","_lastRenderedStyleBottomRightGrid","_bottomRightGridStyle","_lastRenderedStyleTopLeftGrid","_topLeftGridStyle","_lastRenderedStyleTopRightGrid","_topRightGridStyle","hideBottomLeftGridScrollbar","additionalRowCount","_getBottomGridHeight","gridWidth","bottomLeftGrid","_cellRendererBottomLeftGrid","classNameBottomLeftGrid","_onScrollTop","_bottomLeftGridRef","_rowHeightBottomGrid","_cellRendererBottomRightGrid","classNameBottomRightGrid","_columnWidthRightGrid","_onScrollbarPresenceChange","_bottomRightGridRef","_getRightGridWidth","classNameTopLeftGrid","_topLeftGridRef","hideTopRightGridScrollbar","_this$state5","additionalColumnCount","additionalHeight","gridHeight","topRightGrid","_cellRendererTopRightGrid","classNameTopRightGrid","_onScrollLeft","_topRightGridRef","ScrollSync","defaultHeaderRowRenderer","SortDirection","ASC","DESC","SortIndicator","sortDirection","viewBox","fill","defaultHeaderRenderer","dataKey","label","sortBy","showSortIndicator","title","defaultRowRenderer","onRowClick","onRowDoubleClick","onRowMouseOut","onRowMouseOver","onRowRightClick","rowData","a11yProps","onClick","onDoubleClick","onMouseOut","onMouseOver","onContextMenu","Column","cellDataGetter","cellData","String","defaultSortDirection","flexGrow","flexShrink","headerRenderer","Table","scrollbarWidth","_createColumn","_createRow","_ref3$columnIndex","_ref3$rowIndex","_Grid","_setScrollbarWidth","disableHeader","gridClassName","headerHeight","headerRowRenderer","rowClassName","rowStyle","availableRowsHeight","rowClass","rowStyleObject","_cachedColumnStyles","toArray","flexStyles","_getFlexStyleForColumn","_getHeaderColumns","onColumnClick","_column$props","columnData","headerOnClick","headerOnKeyDown","headerTabIndex","headerAriaSort","headerAriaLabel","headerClassName","headerStyle","onHeaderClick","_column$props2","disableSort","sortEnabled","ReactVirtualized__Table__sortableHeaderColumn","renderedHeader","newSortDirection","rowGetter","flattenedStyle","_getRowHeight","customStyle","flexValue","flex","msFlex","WebkitFlex","_this4","_createHeader","getScrollbarWidth","mountedInstances","originalBodyPointerEvents","disablePointerEventsTimeoutId","enablePointerEventsIfDisabled","body","enablePointerEventsAfterDelayCallback","instance","__resetIsScrolling","onScrollWindow","maximumTimeout","enablePointerEventsAfterDelay","scrollElement","__handleWindowScrollEvent","registerScrollListener","unregisterScrollListener","isWindow","getBoundingBox","getBoundingClientRect","getDimensions","innerHeight","innerWidth","serverHeight","serverWidth","getPositionOffset","container","documentElement","containerElement","elementRect","containerRect","getScrollOffset","_elementRect","_containerRect","scrollY","scrollX","getWindow","WindowScroller","updatePosition","scrollTo","_positionFromTop","_isMounted","_positionFromLeft","thisNode","ReactDOM","dimensions","_registerResizeListener","prevScrollElement","_unregisterResizeListener","onChildScroll","_onChildScroll","KeyboardArrowRight","KeyboardArrowLeft","TablePaginationActions","backIconButtonProps","nextIconButtonProps","onChangePage","page","rowsPerPage","other","theme","useTheme","IconButton","color","defaultLabelDisplayedRows","to","defaultRowsPerPageOptions","TablePagination","colSpan","_props$ActionsCompone","ActionsComponent","_props$backIconButton","backIconButtonText","classes","colSpanProp","_props$component","TableCell","_props$labelDisplayed","labelDisplayedRows","_props$labelRowsPerPa","labelRowsPerPage","_props$nextIconButton","nextIconButtonText","onChangeRowsPerPage","_props$rowsPerPageOpt","rowsPerPageOptions","_props$SelectProps","SelectProps","selectId","useId","labelId","MenuItemComponent","native","MenuItem","Toolbar","toolbar","spacer","Typography","variant","caption","Select","select","icon","selectIcon","input","InputBase","selectRoot","onChange","rowsPerPageOption","menuItem","actions","withStyles","palette","text","primary","fontSize","typography","pxToRem","padding","marginRight","marginLeft","textAlign","textAlignLast","name","createSvgIcon","TableSortLabel","_props$active","active","_props$direction","_props$hideSortIcon","hideSortIcon","_props$IconComponent","IconComponent","ArrowDownwardIcon","ButtonBase","disableRipple","capitalize","cursor","display","justifyContent","flexDirection","alignItems","secondary","opacity","transition","transitions","create","duration","shorter","userSelect","iconDirectionDesc","transform","iconDirectionAsc","_props$padding","_props$size","_props$stickyHeader","stickyHeader","table","TableContext","Provider","borderCollapse","borderSpacing","body2","spacing","captionSide","tablelvl2","TableFooter","Tablelvl2Context","createMuiStrictModeTheme","options","createMuiTheme","deepmerge","unstable_strictMode","isUnitless","toUnitless","convertLength","baseFontSize","toUnit","fromUnit","match","pxLength","outputLength","toFixed","alignProperty","grid","sizeBelow","sizeAbove","fontGrid","lineHeight","pixels","htmlFontSize","responsiveProperty","cssProperty","_ref3$unit","unit","_ref3$breakpoints","breakpoints","_ref3$transform","output","factor","breakpoint","responsiveFontSizes","themeInput","_options$breakpoints","_options$disableAlign","disableAlign","_options$factor","_options$variants","variants","convert","breakpointValues","values","remFontSize","maxFontSize","minFontSize","_formatMuiErrorMessage","withTheme","withThemeCreator","defaultTheme","Constructor","_defineProperties","descriptor","configurable","protoProps","staticProps","_typeof","assertThisInitialized","ReferenceError","o","setPrototypeOf","getPrototypeOf","__proto__","subClass","superClass","constructor","bpfrpt_proptype_VisibleCellRange","bpfrpt_proptype_Alignment","bpfrpt_proptype_OverscanIndicesGetter","bpfrpt_proptype_OverscanIndices","bpfrpt_proptype_OverscanIndicesGetterParams","bpfrpt_proptype_RenderedSection","bpfrpt_proptype_ScrollbarPresenceChange","bpfrpt_proptype_Scroll","bpfrpt_proptype_NoContentRenderer","bpfrpt_proptype_CellSize","bpfrpt_proptype_CellSizeGetter","bpfrpt_proptype_CellRangeRenderer","bpfrpt_proptype_CellRangeRendererParams","bpfrpt_proptype_StyleCache","bpfrpt_proptype_CellCache","bpfrpt_proptype_CellRenderer","bpfrpt_proptype_CellRendererParams","bpfrpt_proptype_CellPosition","componentWillMount","getDerivedStateFromProps","componentWillReceiveProps","componentWillUpdate","nextState","__reactInternalSnapshotFlag","__reactInternalSnapshot","getSnapshotBeforeUpdate","isReactComponent","foundWillMountName","foundWillReceivePropsName","foundWillUpdateName","UNSAFE_componentWillMount","UNSAFE_componentWillReceiveProps","UNSAFE_componentWillUpdate","componentName","displayName","newApiName","componentDidUpdate","maybeSnapshot","snapshot","__suppressDeprecationWarning","_objectWithoutProperties2","_CellSizeAndPositionManager","_maxElementSize","recalc","canUseDOM","scrollDiv","bpfrpt_proptype_CellMeasureCache","_props$align","paddingProp","scopeProp","scope","sizeProp","variantProp","isHeadCell","ariaSort","verticalAlign","borderBottom","lighten","fade","divider","darken","fontWeight","fontWeightMedium","footer","sizeSmall","paddingCheckbox","paddingNone","alignLeft","alignCenter","alignRight","alignJustify","zIndex","backgroundColor","background","default","_AutoSizer","_initialiseProps","getArgs","_setState","_forceUpdate","componentDidMount","didMount","shouldComponentUpdate","shouldUpdate","componentWillUnmount","willUnmount","didUpdate","render","_props","initialState","len","arr2","minLen","test","sliceIterator","MuiTable","_react2","_propTypes2","_MultiGrid2","_classnames2","_Table2","_TableCell2","_TableFooter2","_TablePagination2","_TableSortLabel2","_styles","_reactDraggable2","_utils","obj","__esModule","useStyles","makeStyles","grey","borderRight","outline","cell","cellClickable","cellSelected","cellHovered","cellDisabled","cellContents","whiteSpace","textOverflow","cellHeader","cellInLastColumn","cellInLastRow","borderTop","FOOTER_BORDER_HEIGHT","dragHandle","DragHandleActive","DragHandleIcon","_ref7$maxHeight","pagination","fitHeightToRows","_ref7$fixedRowCount","_ref7$fixedColumnCoun","_ref7$rowHeight","_ref7$includeHeaders","includeHeaders","isCellHovered","isCellSelected","isCellDisabled","Classes","orderBy","orderDirection","onCellClick","onCellDoubleClick","onCellContextMenu","resizable","cellProps","multiGrid","useRef","useCallback","current","useEffect","calculatedHeight","paginationHeight","mixins","calculatedHeightWithFooter","containerHeight","multiGridHeight","defaultCellProps","_React$useState","useState","hoveredColumn","hoveredRowData","_React$useState2","_React$useState2$","setHovered","_React$useState3","Columns","widths","initialWidth","calculateWidths","_React$useState4","setWidths","resizableColumnWidths","resizeRow","deltaX","prev","delta","findIndex","nextDataKey","handleDrag","handleMouse","_classNames","isHeader","isSelected","isDisabled","isHovered","resolveCellProps","_resolveCellProps$res","cellStyle","contents","header","float","axis","defaultClassName","defaultClassNameDragging","onDrag","hasCellClick","hasCellDoubleClick","hasCellContextMenu","isClickable","onMouseEnter","onMouseLeave","Fragment","useCellRenderer","array","number","bool","oneOfType","func","string","noPointer","_MultiGrid","_CellMeasurerCacheDecorator","_setPrototypeOf","_CellMeasurer","_CellMeasurerCache","_reactDom","DEFAULT_WIDTH","DEFAULT_HEIGHT","_accessibilityOverscanIndicesGetter","_types"],"mappings":"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","file":"static/js/3.9b5c80c6.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.DEFAULT_SCROLLING_RESET_TIME_INTERVAL = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\n\nvar _calculateSizeAndPositionDataAndUpdateScrollOffset = _interopRequireDefault(require(\"./utils/calculateSizeAndPositionDataAndUpdateScrollOffset\"));\n\nvar _ScalingCellSizeAndPositionManager = _interopRequireDefault(require(\"./utils/ScalingCellSizeAndPositionManager\"));\n\nvar _createCallbackMemoizer = _interopRequireDefault(require(\"../utils/createCallbackMemoizer\"));\n\nvar _defaultOverscanIndicesGetter = _interopRequireWildcard(require(\"./defaultOverscanIndicesGetter\"));\n\nvar _updateScrollIndexHelper = _interopRequireDefault(require(\"./utils/updateScrollIndexHelper\"));\n\nvar _defaultCellRangeRenderer = _interopRequireDefault(require(\"./defaultCellRangeRenderer\"));\n\nvar _scrollbarSize = _interopRequireDefault(require(\"dom-helpers/scrollbarSize\"));\n\nvar _reactLifecyclesCompat = require(\"react-lifecycles-compat\");\n\nvar _requestAnimationTimeout = require(\"../utils/requestAnimationTimeout\");\n\nvar _types = require(\"./types\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\nvar DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nexports.DEFAULT_SCROLLING_RESET_TIME_INTERVAL = DEFAULT_SCROLLING_RESET_TIME_INTERVAL;\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n\nvar renderNull = function renderNull() {\n  return null;\n};\n\n/**\n * Renders tabular data with virtualization along the vertical and horizontal axes.\n * Row heights and column widths must be known ahead of time and specified as properties.\n */\nvar Grid = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  (0, _inherits2[\"default\"])(Grid, _React$PureComponent);\n\n  // Invokes onSectionRendered callback only when start/stop row or column indices change\n  function Grid(props) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, Grid);\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(Grid).call(this, props));\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onGridRenderedMemoizer\", (0, _createCallbackMemoizer[\"default\"])());\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onScrollMemoizer\", (0, _createCallbackMemoizer[\"default\"])(false));\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_deferredInvalidateColumnIndex\", null);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_deferredInvalidateRowIndex\", null);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_recomputeScrollLeftFlag\", false);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_recomputeScrollTopFlag\", false);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_horizontalScrollBarSize\", 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_verticalScrollBarSize\", 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_scrollbarPresenceChanged\", false);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_scrollingContainer\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_childrenToDisplay\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_columnStartIndex\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_columnStopIndex\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_rowStartIndex\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_rowStopIndex\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_renderedColumnStartIndex\", 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_renderedColumnStopIndex\", 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_renderedRowStartIndex\", 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_renderedRowStopIndex\", 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_initialScrollTop\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_initialScrollLeft\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_disablePointerEventsTimeoutId\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_styleCache\", {});\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_cellCache\", {});\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_debounceScrollEndedCallback\", function () {\n      _this._disablePointerEventsTimeoutId = null; // isScrolling is used to determine if we reset styleCache\n\n      _this.setState({\n        isScrolling: false,\n        needToResetStyleCache: false\n      });\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_invokeOnGridRenderedHelper\", function () {\n      var onSectionRendered = _this.props.onSectionRendered;\n\n      _this._onGridRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          columnOverscanStartIndex: _this._columnStartIndex,\n          columnOverscanStopIndex: _this._columnStopIndex,\n          columnStartIndex: _this._renderedColumnStartIndex,\n          columnStopIndex: _this._renderedColumnStopIndex,\n          rowOverscanStartIndex: _this._rowStartIndex,\n          rowOverscanStopIndex: _this._rowStopIndex,\n          rowStartIndex: _this._renderedRowStartIndex,\n          rowStopIndex: _this._renderedRowStopIndex\n        }\n      });\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target === _this._scrollingContainer) {\n        _this.handleScrollEvent(event.target);\n      }\n    });\n    var columnSizeAndPositionManager = new _ScalingCellSizeAndPositionManager[\"default\"]({\n      cellCount: props.columnCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.columnWidth)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedColumnSize(props)\n    });\n    var rowSizeAndPositionManager = new _ScalingCellSizeAndPositionManager[\"default\"]({\n      cellCount: props.rowCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.rowHeight)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedRowSize(props)\n    });\n    _this.state = {\n      instanceProps: {\n        columnSizeAndPositionManager: columnSizeAndPositionManager,\n        rowSizeAndPositionManager: rowSizeAndPositionManager,\n        prevColumnWidth: props.columnWidth,\n        prevRowHeight: props.rowHeight,\n        prevColumnCount: props.columnCount,\n        prevRowCount: props.rowCount,\n        prevIsScrolling: props.isScrolling === true,\n        prevScrollToColumn: props.scrollToColumn,\n        prevScrollToRow: props.scrollToRow,\n        scrollbarSize: 0,\n        scrollbarSizeMeasured: false\n      },\n      isScrolling: false,\n      scrollDirectionHorizontal: _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD,\n      scrollDirectionVertical: _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollPositionChangeReason: null,\n      needToResetStyleCache: false\n    };\n\n    if (props.scrollToRow > 0) {\n      _this._initialScrollTop = _this._getCalculatedScrollTop(props, _this.state);\n    }\n\n    if (props.scrollToColumn > 0) {\n      _this._initialScrollLeft = _this._getCalculatedScrollLeft(props, _this.state);\n    }\n\n    return _this;\n  }\n  /**\n   * Gets offsets for a given cell and alignment.\n   */\n\n\n  (0, _createClass2[\"default\"])(Grid, [{\n    key: \"getOffsetForCell\",\n    value: function getOffsetForCell() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$alignment = _ref.alignment,\n          alignment = _ref$alignment === void 0 ? this.props.scrollToAlignment : _ref$alignment,\n          _ref$columnIndex = _ref.columnIndex,\n          columnIndex = _ref$columnIndex === void 0 ? this.props.scrollToColumn : _ref$columnIndex,\n          _ref$rowIndex = _ref.rowIndex,\n          rowIndex = _ref$rowIndex === void 0 ? this.props.scrollToRow : _ref$rowIndex;\n\n      var offsetProps = _objectSpread({}, this.props, {\n        scrollToAlignment: alignment,\n        scrollToColumn: columnIndex,\n        scrollToRow: rowIndex\n      });\n\n      return {\n        scrollLeft: this._getCalculatedScrollLeft(offsetProps),\n        scrollTop: this._getCalculatedScrollTop(offsetProps)\n      };\n    }\n    /**\n     * Gets estimated total rows' height.\n     */\n\n  }, {\n    key: \"getTotalRowsHeight\",\n    value: function getTotalRowsHeight() {\n      return this.state.instanceProps.rowSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * Gets estimated total columns' width.\n     */\n\n  }, {\n    key: \"getTotalColumnsWidth\",\n    value: function getTotalColumnsWidth() {\n      return this.state.instanceProps.columnSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * This method handles a scroll event originating from an external scroll control.\n     * It's an advanced method and should probably not be used unless you're implementing a custom scroll-bar solution.\n     */\n\n  }, {\n    key: \"handleScrollEvent\",\n    value: function handleScrollEvent(_ref2) {\n      var _ref2$scrollLeft = _ref2.scrollLeft,\n          scrollLeftParam = _ref2$scrollLeft === void 0 ? 0 : _ref2$scrollLeft,\n          _ref2$scrollTop = _ref2.scrollTop,\n          scrollTopParam = _ref2$scrollTop === void 0 ? 0 : _ref2$scrollTop;\n\n      // On iOS, we can arrive at negative offsets by swiping past the start.\n      // To prevent flicker here, we make playing in the negative offset zone cause nothing to happen.\n      if (scrollTopParam < 0) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      this._debounceScrollEnded();\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          autoWidth = _this$props.autoWidth,\n          height = _this$props.height,\n          width = _this$props.width;\n      var instanceProps = this.state.instanceProps; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollbarSize = instanceProps.scrollbarSize;\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var scrollLeft = Math.min(Math.max(0, totalColumnsWidth - width + scrollbarSize), scrollLeftParam);\n      var scrollTop = Math.min(Math.max(0, totalRowsHeight - height + scrollbarSize), scrollTopParam); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (this.state.scrollLeft !== scrollLeft || this.state.scrollTop !== scrollTop) {\n        // Track scrolling direction so we can more efficiently overscan rows to reduce empty space around the edges while scrolling.\n        // Don't change direction for an axis unless scroll offset has changed.\n        var scrollDirectionHorizontal = scrollLeft !== this.state.scrollLeft ? scrollLeft > this.state.scrollLeft ? _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD : _defaultOverscanIndicesGetter.SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionHorizontal;\n        var scrollDirectionVertical = scrollTop !== this.state.scrollTop ? scrollTop > this.state.scrollTop ? _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD : _defaultOverscanIndicesGetter.SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionVertical;\n        var newState = {\n          isScrolling: true,\n          scrollDirectionHorizontal: scrollDirectionHorizontal,\n          scrollDirectionVertical: scrollDirectionVertical,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.OBSERVED\n        };\n\n        if (!autoHeight) {\n          newState.scrollTop = scrollTop;\n        }\n\n        if (!autoWidth) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        newState.needToResetStyleCache = false;\n        this.setState(newState);\n      }\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalColumnsWidth: totalColumnsWidth,\n        totalRowsHeight: totalRowsHeight\n      });\n    }\n    /**\n     * Invalidate Grid size and recompute visible cells.\n     * This is a deferred wrapper for recomputeGridSize().\n     * It sets a flag to be evaluated on cDM/cDU to avoid unnecessary renders.\n     * This method is intended for advanced use-cases like CellMeasurer.\n     */\n    // @TODO (bvaughn) Add automated test coverage for this.\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rowIndex = _ref3.rowIndex;\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /**\n     * Pre-measure all columns and rows in a Grid.\n     * Typically cells are only measured as needed and estimated sizes are used for cells that have not yet been measured.\n     * This method ensures that the next call to getTotalSize() returns an exact size (as opposed to just an estimated one).\n     */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      var _this$props2 = this.props,\n          columnCount = _this$props2.columnCount,\n          rowCount = _this$props2.rowCount;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.getSizeAndPositionOfCell(columnCount - 1);\n      instanceProps.rowSizeAndPositionManager.getSizeAndPositionOfCell(rowCount - 1);\n    }\n    /**\n     * Forced recompute of row heights and column widths.\n     * This function should be called if dynamic column or row sizes have changed but nothing else has.\n     * Since Grid only receives :columnCount and :rowCount it has no way of detecting when the underlying data changes.\n     */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref4$columnIndex = _ref4.columnIndex,\n          columnIndex = _ref4$columnIndex === void 0 ? 0 : _ref4$columnIndex,\n          _ref4$rowIndex = _ref4.rowIndex,\n          rowIndex = _ref4$rowIndex === void 0 ? 0 : _ref4$rowIndex;\n\n      var _this$props3 = this.props,\n          scrollToColumn = _this$props3.scrollToColumn,\n          scrollToRow = _this$props3.scrollToRow;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.resetCell(columnIndex);\n      instanceProps.rowSizeAndPositionManager.resetCell(rowIndex); // Cell sizes may be determined by a function property.\n      // In this case the cDU handler can't know if they changed.\n      // Store this flag to let the next cDU pass know it needs to recompute the scroll offset.\n\n      this._recomputeScrollLeftFlag = scrollToColumn >= 0 && (this.state.scrollDirectionHorizontal === _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD ? columnIndex <= scrollToColumn : columnIndex >= scrollToColumn);\n      this._recomputeScrollTopFlag = scrollToRow >= 0 && (this.state.scrollDirectionVertical === _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD ? rowIndex <= scrollToRow : rowIndex >= scrollToRow); // Clear cell cache in case we are scrolling;\n      // Invalid row heights likely mean invalid cached content as well.\n\n      this._styleCache = {};\n      this._cellCache = {};\n      this.forceUpdate();\n    }\n    /**\n     * Ensure column and row are visible.\n     */\n\n  }, {\n    key: \"scrollToCell\",\n    value: function scrollToCell(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n      var columnCount = this.props.columnCount;\n      var props = this.props; // Don't adjust scroll offset for single-column grids (eg List, Table).\n      // This can cause a funky scroll offset because of the vertical scrollbar width.\n\n      if (columnCount > 1 && columnIndex !== undefined) {\n        this._updateScrollLeftForScrollToColumn(_objectSpread({}, props, {\n          scrollToColumn: columnIndex\n        }));\n      }\n\n      if (rowIndex !== undefined) {\n        this._updateScrollTopForScrollToRow(_objectSpread({}, props, {\n          scrollToRow: rowIndex\n        }));\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          getScrollbarSize = _this$props4.getScrollbarSize,\n          height = _this$props4.height,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToColumn = _this$props4.scrollToColumn,\n          scrollTop = _this$props4.scrollTop,\n          scrollToRow = _this$props4.scrollToRow,\n          width = _this$props4.width;\n      var instanceProps = this.state.instanceProps; // Reset initial offsets to be ignored in browser\n\n      this._initialScrollTop = 0;\n      this._initialScrollLeft = 0; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n\n      if (!instanceProps.scrollbarSizeMeasured) {\n        this.setState(function (prevState) {\n          var stateUpdate = _objectSpread({}, prevState, {\n            needToResetStyleCache: false\n          });\n\n          stateUpdate.instanceProps.scrollbarSize = getScrollbarSize();\n          stateUpdate.instanceProps.scrollbarSizeMeasured = true;\n          return stateUpdate;\n        });\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 || typeof scrollTop === 'number' && scrollTop >= 0) {\n        var stateUpdate = Grid._getScrollToPositionStateUpdate({\n          prevState: this.state,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        if (stateUpdate) {\n          stateUpdate.needToResetStyleCache = false;\n          this.setState(stateUpdate);\n        }\n      } // refs don't work in `react-test-renderer`\n\n\n      if (this._scrollingContainer) {\n        // setting the ref's scrollLeft and scrollTop.\n        // Somehow in MultiGrid the main grid doesn't trigger a update on mount.\n        if (this._scrollingContainer.scrollLeft !== this.state.scrollLeft) {\n          this._scrollingContainer.scrollLeft = this.state.scrollLeft;\n        }\n\n        if (this._scrollingContainer.scrollTop !== this.state.scrollTop) {\n          this._scrollingContainer.scrollTop = this.state.scrollTop;\n        }\n      } // Don't update scroll offset if the size is 0; we don't render any cells in this case.\n      // Setting a state may cause us to later thing we've updated the offce when we haven't.\n\n\n      var sizeIsBiggerThanZero = height > 0 && width > 0;\n\n      if (scrollToColumn >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollLeftForScrollToColumn();\n      }\n\n      if (scrollToRow >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollTopForScrollToRow();\n      } // Update onRowsRendered callback\n\n\n      this._invokeOnGridRenderedHelper(); // Initialize onScroll callback\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalColumnsWidth: instanceProps.columnSizeAndPositionManager.getTotalSize(),\n        totalRowsHeight: instanceProps.rowSizeAndPositionManager.getTotalSize()\n      });\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) New scroll-to-cell props have been set\n     */\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      var _this$props5 = this.props,\n          autoHeight = _this$props5.autoHeight,\n          autoWidth = _this$props5.autoWidth,\n          columnCount = _this$props5.columnCount,\n          height = _this$props5.height,\n          rowCount = _this$props5.rowCount,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToColumn = _this$props5.scrollToColumn,\n          scrollToRow = _this$props5.scrollToRow,\n          width = _this$props5.width;\n      var _this$state = this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollPositionChangeReason = _this$state.scrollPositionChangeReason,\n          scrollTop = _this$state.scrollTop,\n          instanceProps = _this$state.instanceProps; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // Handle edge case where column or row count has only just increased over 0.\n      // In this case we may have to restore a previously-specified scroll offset.\n      // For more info see bvaughn/react-virtualized/issues/218\n\n\n      var columnOrRowCountJustIncreasedFromZero = columnCount > 0 && prevProps.columnCount === 0 || rowCount > 0 && prevProps.rowCount === 0; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        // @TRICKY :autoHeight and :autoWidth properties instructs Grid to leave :scrollTop and :scrollLeft management to an external HOC (eg WindowScroller).\n        // In this case we should avoid checking scrollingContainer.scrollTop and scrollingContainer.scrollLeft since it forces layout/flow.\n        if (!autoWidth && scrollLeft >= 0 && (scrollLeft !== this._scrollingContainer.scrollLeft || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (!autoHeight && scrollTop >= 0 && (scrollTop !== this._scrollingContainer.scrollTop || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Special case where the previous size was 0:\n      // In this case we don't show any windowed cells at all.\n      // So we should always recalculate offset afterwards.\n\n\n      var sizeJustIncreasedFromZero = (prevProps.width === 0 || prevProps.height === 0) && height > 0 && width > 0; // Update scroll offsets if the current :scrollToColumn or :scrollToRow values requires it\n      // @TODO Do we also need this check or can the one in componentWillUpdate() suffice?\n\n      if (this._recomputeScrollLeftFlag) {\n        this._recomputeScrollLeftFlag = false;\n\n        this._updateScrollLeftForScrollToColumn(this.props);\n      } else {\n        (0, _updateScrollIndexHelper[\"default\"])({\n          cellSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          previousCellsCount: prevProps.columnCount,\n          previousCellSize: prevProps.columnWidth,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToColumn,\n          previousSize: prevProps.width,\n          scrollOffset: scrollLeft,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToColumn,\n          size: width,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollLeftForScrollToColumn(_this2.props);\n          }\n        });\n      }\n\n      if (this._recomputeScrollTopFlag) {\n        this._recomputeScrollTopFlag = false;\n\n        this._updateScrollTopForScrollToRow(this.props);\n      } else {\n        (0, _updateScrollIndexHelper[\"default\"])({\n          cellSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          previousCellsCount: prevProps.rowCount,\n          previousCellSize: prevProps.rowHeight,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToRow,\n          previousSize: prevProps.height,\n          scrollOffset: scrollTop,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToRow,\n          size: height,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollTopForScrollToRow(_this2.props);\n          }\n        });\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnGridRenderedHelper(); // Changes to :scrollLeft or :scrollTop should also notify :onScroll listeners\n\n\n      if (scrollLeft !== prevState.scrollLeft || scrollTop !== prevState.scrollTop) {\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n\n        this._invokeOnScrollMemoizer({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          totalColumnsWidth: totalColumnsWidth,\n          totalRowsHeight: totalRowsHeight\n        });\n      }\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        (0, _requestAnimationTimeout.cancelAnimationTimeout)(this._disablePointerEventsTimeoutId);\n      }\n    }\n    /**\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoContainerWidth = _this$props6.autoContainerWidth,\n          autoHeight = _this$props6.autoHeight,\n          autoWidth = _this$props6.autoWidth,\n          className = _this$props6.className,\n          containerProps = _this$props6.containerProps,\n          containerRole = _this$props6.containerRole,\n          containerStyle = _this$props6.containerStyle,\n          height = _this$props6.height,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          role = _this$props6.role,\n          style = _this$props6.style,\n          tabIndex = _this$props6.tabIndex,\n          width = _this$props6.width;\n      var _this$state2 = this.state,\n          instanceProps = _this$state2.instanceProps,\n          needToResetStyleCache = _this$state2.needToResetStyleCache;\n\n      var isScrolling = this._isScrolling();\n\n      var gridStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        width: autoWidth ? 'auto' : width,\n        WebkitOverflowScrolling: 'touch',\n        willChange: 'transform'\n      };\n\n      if (needToResetStyleCache) {\n        this._styleCache = {};\n      } // calculate _styleCache here\n      // if state.isScrolling (not from _isScrolling) then reset\n\n\n      if (!this.state.isScrolling) {\n        this._resetStyleCache();\n      } // calculate children to render here\n\n\n      this._calculateChildrenToRender(this.props, this.state);\n\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize(); // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n      var horizontalScrollBarSize = totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n\n      if (horizontalScrollBarSize !== this._horizontalScrollBarSize || verticalScrollBarSize !== this._verticalScrollBarSize) {\n        this._horizontalScrollBarSize = horizontalScrollBarSize;\n        this._verticalScrollBarSize = verticalScrollBarSize;\n        this._scrollbarPresenceChanged = true;\n      } // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n\n      gridStyle.overflowX = totalColumnsWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      gridStyle.overflowY = totalRowsHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      var childrenToDisplay = this._childrenToDisplay;\n      var showNoContentRenderer = childrenToDisplay.length === 0 && height > 0 && width > 0;\n      return React.createElement(\"div\", (0, _extends2[\"default\"])({\n        ref: this._setScrollingContainerRef\n      }, containerProps, {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-readonly\": this.props['aria-readonly'],\n        className: (0, _clsx[\"default\"])('ReactVirtualized__Grid', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({}, gridStyle, {}, style),\n        tabIndex: tabIndex\n      }), childrenToDisplay.length > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Grid__innerScrollContainer\",\n        role: containerRole,\n        style: _objectSpread({\n          width: autoContainerWidth ? 'auto' : totalColumnsWidth,\n          height: totalRowsHeight,\n          maxWidth: totalColumnsWidth,\n          maxHeight: totalRowsHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }, containerStyle)\n      }, childrenToDisplay), showNoContentRenderer && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n  }, {\n    key: \"_calculateChildrenToRender\",\n    value: function _calculateChildrenToRender() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      var cellRenderer = props.cellRenderer,\n          cellRangeRenderer = props.cellRangeRenderer,\n          columnCount = props.columnCount,\n          deferredMeasurementCache = props.deferredMeasurementCache,\n          height = props.height,\n          overscanColumnCount = props.overscanColumnCount,\n          overscanIndicesGetter = props.overscanIndicesGetter,\n          overscanRowCount = props.overscanRowCount,\n          rowCount = props.rowCount,\n          width = props.width,\n          isScrollingOptOut = props.isScrollingOptOut;\n      var scrollDirectionHorizontal = state.scrollDirectionHorizontal,\n          scrollDirectionVertical = state.scrollDirectionVertical,\n          instanceProps = state.instanceProps;\n      var scrollTop = this._initialScrollTop > 0 ? this._initialScrollTop : state.scrollTop;\n      var scrollLeft = this._initialScrollLeft > 0 ? this._initialScrollLeft : state.scrollLeft;\n\n      var isScrolling = this._isScrolling(props, state);\n\n      this._childrenToDisplay = []; // Render only enough columns and rows to cover the visible area of the grid.\n\n      if (height > 0 && width > 0) {\n        var visibleColumnIndices = instanceProps.columnSizeAndPositionManager.getVisibleCellRange({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var visibleRowIndices = instanceProps.rowSizeAndPositionManager.getVisibleCellRange({\n          containerSize: height,\n          offset: scrollTop\n        });\n        var horizontalOffsetAdjustment = instanceProps.columnSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var verticalOffsetAdjustment = instanceProps.rowSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: height,\n          offset: scrollTop\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        this._renderedColumnStartIndex = visibleColumnIndices.start;\n        this._renderedColumnStopIndex = visibleColumnIndices.stop;\n        this._renderedRowStartIndex = visibleRowIndices.start;\n        this._renderedRowStopIndex = visibleRowIndices.stop;\n        var overscanColumnIndices = overscanIndicesGetter({\n          direction: 'horizontal',\n          cellCount: columnCount,\n          overscanCellsCount: overscanColumnCount,\n          scrollDirection: scrollDirectionHorizontal,\n          startIndex: typeof visibleColumnIndices.start === 'number' ? visibleColumnIndices.start : 0,\n          stopIndex: typeof visibleColumnIndices.stop === 'number' ? visibleColumnIndices.stop : -1\n        });\n        var overscanRowIndices = overscanIndicesGetter({\n          direction: 'vertical',\n          cellCount: rowCount,\n          overscanCellsCount: overscanRowCount,\n          scrollDirection: scrollDirectionVertical,\n          startIndex: typeof visibleRowIndices.start === 'number' ? visibleRowIndices.start : 0,\n          stopIndex: typeof visibleRowIndices.stop === 'number' ? visibleRowIndices.stop : -1\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        var columnStartIndex = overscanColumnIndices.overscanStartIndex;\n        var columnStopIndex = overscanColumnIndices.overscanStopIndex;\n        var rowStartIndex = overscanRowIndices.overscanStartIndex;\n        var rowStopIndex = overscanRowIndices.overscanStopIndex; // Advanced use-cases (eg CellMeasurer) require batched measurements to determine accurate sizes.\n\n        if (deferredMeasurementCache) {\n          // If rows have a dynamic height, scan the rows we are about to render.\n          // If any have not yet been measured, then we need to render all columns initially,\n          // Because the height of the row is equal to the tallest cell within that row,\n          // (And so we can't know the height without measuring all column-cells first).\n          if (!deferredMeasurementCache.hasFixedHeight()) {\n            for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n              if (!deferredMeasurementCache.has(rowIndex, 0)) {\n                columnStartIndex = 0;\n                columnStopIndex = columnCount - 1;\n                break;\n              }\n            }\n          } // If columns have a dynamic width, scan the columns we are about to render.\n          // If any have not yet been measured, then we need to render all rows initially,\n          // Because the width of the column is equal to the widest cell within that column,\n          // (And so we can't know the width without measuring all row-cells first).\n\n\n          if (!deferredMeasurementCache.hasFixedWidth()) {\n            for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n              if (!deferredMeasurementCache.has(0, columnIndex)) {\n                rowStartIndex = 0;\n                rowStopIndex = rowCount - 1;\n                break;\n              }\n            }\n          }\n        }\n\n        this._childrenToDisplay = cellRangeRenderer({\n          cellCache: this._cellCache,\n          cellRenderer: cellRenderer,\n          columnSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          columnStartIndex: columnStartIndex,\n          columnStopIndex: columnStopIndex,\n          deferredMeasurementCache: deferredMeasurementCache,\n          horizontalOffsetAdjustment: horizontalOffsetAdjustment,\n          isScrolling: isScrolling,\n          isScrollingOptOut: isScrollingOptOut,\n          parent: this,\n          rowSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          rowStartIndex: rowStartIndex,\n          rowStopIndex: rowStopIndex,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          styleCache: this._styleCache,\n          verticalOffsetAdjustment: verticalOffsetAdjustment,\n          visibleColumnIndices: visibleColumnIndices,\n          visibleRowIndices: visibleRowIndices\n        }); // update the indices\n\n        this._columnStartIndex = columnStartIndex;\n        this._columnStopIndex = columnStopIndex;\n        this._rowStartIndex = rowStartIndex;\n        this._rowStopIndex = rowStopIndex;\n      }\n    }\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Grid.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_debounceScrollEnded\",\n    value: function _debounceScrollEnded() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._disablePointerEventsTimeoutId) {\n        (0, _requestAnimationTimeout.cancelAnimationTimeout)(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = (0, _requestAnimationTimeout.requestAnimationTimeout)(this._debounceScrollEndedCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n\n    /**\n     * Check for batched CellMeasurer size invalidations.\n     * This will occur the first time one or more previously unmeasured cells are rendered.\n     */\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number' && typeof this._deferredInvalidateRowIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n      }\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref6) {\n      var _this3 = this;\n\n      var scrollLeft = _ref6.scrollLeft,\n          scrollTop = _ref6.scrollTop,\n          totalColumnsWidth = _ref6.totalColumnsWidth,\n          totalRowsHeight = _ref6.totalRowsHeight;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref7) {\n          var scrollLeft = _ref7.scrollLeft,\n              scrollTop = _ref7.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalRowsHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalColumnsWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_isScrolling\",\n    value: function _isScrolling() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      // If isScrolling is defined in props, use it to override the value in state\n      // This is a performance optimization for WindowScroller + Grid\n      return Object.hasOwnProperty.call(props, 'isScrolling') ? Boolean(props.isScrolling) : Boolean(state.isScrolling);\n    }\n  }, {\n    key: \"_maybeCallOnScrollbarPresenceChange\",\n    value: function _maybeCallOnScrollbarPresenceChange() {\n      if (this._scrollbarPresenceChanged) {\n        var onScrollbarPresenceChange = this.props.onScrollbarPresenceChange;\n        this._scrollbarPresenceChanged = false;\n        onScrollbarPresenceChange({\n          horizontal: this._horizontalScrollBarSize > 0,\n          size: this.state.instanceProps.scrollbarSize,\n          vertical: this._verticalScrollBarSize > 0\n        });\n      }\n    }\n  }, {\n    key: \"scrollToPosition\",\n\n    /**\n     * Scroll to the specified offset(s).\n     * Useful for animating position changes.\n     */\n    value: function scrollToPosition(_ref8) {\n      var scrollLeft = _ref8.scrollLeft,\n          scrollTop = _ref8.scrollTop;\n\n      var stateUpdate = Grid._getScrollToPositionStateUpdate({\n        prevState: this.state,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollLeft(props, state);\n    }\n  }, {\n    key: \"_updateScrollLeftForScrollToColumn\",\n    value: function _updateScrollLeftForScrollToColumn() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollLeftForScrollToColumnStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollTop(props, state);\n    }\n  }, {\n    key: \"_resetStyleCache\",\n    value: function _resetStyleCache() {\n      var styleCache = this._styleCache;\n      var cellCache = this._cellCache;\n      var isScrollingOptOut = this.props.isScrollingOptOut; // Reset cell and style caches once scrolling stops.\n      // This makes Grid simpler to use (since cells commonly change).\n      // And it keeps the caches from growing too large.\n      // Performance is most sensitive when a user is scrolling.\n      // Don't clear visible cells from cellCache if isScrollingOptOut is specified.\n      // This keeps the cellCache to a resonable size.\n\n      this._cellCache = {};\n      this._styleCache = {}; // Copy over the visible cell styles so avoid unnecessary re-render.\n\n      for (var rowIndex = this._rowStartIndex; rowIndex <= this._rowStopIndex; rowIndex++) {\n        for (var columnIndex = this._columnStartIndex; columnIndex <= this._columnStopIndex; columnIndex++) {\n          var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n          this._styleCache[key] = styleCache[key];\n\n          if (isScrollingOptOut) {\n            this._cellCache[key] = cellCache[key];\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_updateScrollTopForScrollToRow\",\n    value: function _updateScrollTopForScrollToRow() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollTopForScrollToRowStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var newState = {};\n\n      if (nextProps.columnCount === 0 && prevState.scrollLeft !== 0 || nextProps.rowCount === 0 && prevState.scrollTop !== 0) {\n        newState.scrollLeft = 0;\n        newState.scrollTop = 0; // only use scroll{Left,Top} from props if scrollTo{Column,Row} isn't specified\n        // scrollTo{Column,Row} should override scroll{Left,Top}\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft && nextProps.scrollToColumn < 0 || nextProps.scrollTop !== prevState.scrollTop && nextProps.scrollToRow < 0) {\n        Object.assign(newState, Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: nextProps.scrollLeft,\n          scrollTop: nextProps.scrollTop\n        }));\n      }\n\n      var instanceProps = prevState.instanceProps; // Initially we should not clearStyleCache\n\n      newState.needToResetStyleCache = false;\n\n      if (nextProps.columnWidth !== instanceProps.prevColumnWidth || nextProps.rowHeight !== instanceProps.prevRowHeight) {\n        // Reset cache. set it to {} in render\n        newState.needToResetStyleCache = true;\n      }\n\n      instanceProps.columnSizeAndPositionManager.configure({\n        cellCount: nextProps.columnCount,\n        estimatedCellSize: Grid._getEstimatedColumnSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.columnWidth)\n      });\n      instanceProps.rowSizeAndPositionManager.configure({\n        cellCount: nextProps.rowCount,\n        estimatedCellSize: Grid._getEstimatedRowSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.rowHeight)\n      });\n\n      if (instanceProps.prevColumnCount === 0 || instanceProps.prevRowCount === 0) {\n        instanceProps.prevColumnCount = 0;\n        instanceProps.prevRowCount = 0;\n      } // If scrolling is controlled outside this component, clear cache when scrolling stops\n\n\n      if (nextProps.autoHeight && nextProps.isScrolling === false && instanceProps.prevIsScrolling === true) {\n        Object.assign(newState, {\n          isScrolling: false\n        });\n      }\n\n      var maybeStateA;\n      var maybeStateB;\n      (0, _calculateSizeAndPositionDataAndUpdateScrollOffset[\"default\"])({\n        cellCount: instanceProps.prevColumnCount,\n        cellSize: typeof instanceProps.prevColumnWidth === 'number' ? instanceProps.prevColumnWidth : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.columnSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.columnCount,\n        nextCellSize: typeof nextProps.columnWidth === 'number' ? nextProps.columnWidth : null,\n        nextScrollToIndex: nextProps.scrollToColumn,\n        scrollToIndex: instanceProps.prevScrollToColumn,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateA = Grid._getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState);\n        }\n      });\n      (0, _calculateSizeAndPositionDataAndUpdateScrollOffset[\"default\"])({\n        cellCount: instanceProps.prevRowCount,\n        cellSize: typeof instanceProps.prevRowHeight === 'number' ? instanceProps.prevRowHeight : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.rowSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.rowCount,\n        nextCellSize: typeof nextProps.rowHeight === 'number' ? nextProps.rowHeight : null,\n        nextScrollToIndex: nextProps.scrollToRow,\n        scrollToIndex: instanceProps.prevScrollToRow,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateB = Grid._getScrollTopForScrollToRowStateUpdate(nextProps, prevState);\n        }\n      });\n      instanceProps.prevColumnCount = nextProps.columnCount;\n      instanceProps.prevColumnWidth = nextProps.columnWidth;\n      instanceProps.prevIsScrolling = nextProps.isScrolling === true;\n      instanceProps.prevRowCount = nextProps.rowCount;\n      instanceProps.prevRowHeight = nextProps.rowHeight;\n      instanceProps.prevScrollToColumn = nextProps.scrollToColumn;\n      instanceProps.prevScrollToRow = nextProps.scrollToRow; // getting scrollBarSize (moved from componentWillMount)\n\n      instanceProps.scrollbarSize = nextProps.getScrollbarSize();\n\n      if (instanceProps.scrollbarSize === undefined) {\n        instanceProps.scrollbarSizeMeasured = false;\n        instanceProps.scrollbarSize = 0;\n      } else {\n        instanceProps.scrollbarSizeMeasured = true;\n      }\n\n      newState.instanceProps = instanceProps;\n      return _objectSpread({}, newState, {}, maybeStateA, {}, maybeStateB);\n    }\n  }, {\n    key: \"_getEstimatedColumnSize\",\n    value: function _getEstimatedColumnSize(props) {\n      return typeof props.columnWidth === 'number' ? props.columnWidth : props.estimatedColumnSize;\n    }\n  }, {\n    key: \"_getEstimatedRowSize\",\n    value: function _getEstimatedRowSize(props) {\n      return typeof props.rowHeight === 'number' ? props.rowHeight : props.estimatedRowSize;\n    }\n  }, {\n    key: \"_getScrollToPositionStateUpdate\",\n\n    /**\n     * Get the updated state after scrolling to\n     * scrollLeft and scrollTop\n     */\n    value: function _getScrollToPositionStateUpdate(_ref9) {\n      var prevState = _ref9.prevState,\n          scrollLeft = _ref9.scrollLeft,\n          scrollTop = _ref9.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0) {\n        newState.scrollDirectionHorizontal = scrollLeft > prevState.scrollLeft ? _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD : _defaultOverscanIndicesGetter.SCROLL_DIRECTION_BACKWARD;\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (typeof scrollTop === 'number' && scrollTop >= 0) {\n        newState.scrollDirectionVertical = scrollTop > prevState.scrollTop ? _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD : _defaultOverscanIndicesGetter.SCROLL_DIRECTION_BACKWARD;\n        newState.scrollTop = scrollTop;\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft || typeof scrollTop === 'number' && scrollTop >= 0 && scrollTop !== prevState.scrollTop) {\n        return newState;\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_wrapSizeGetter\",\n    value: function _wrapSizeGetter(value) {\n      return typeof value === 'function' ? value : function () {\n        return value;\n      };\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft(nextProps, prevState) {\n      var columnCount = nextProps.columnCount,\n          height = nextProps.height,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToColumn = nextProps.scrollToColumn,\n          width = nextProps.width;\n      var scrollLeft = prevState.scrollLeft,\n          instanceProps = prevState.instanceProps;\n\n      if (columnCount > 0) {\n        var finalColumn = columnCount - 1;\n        var targetIndex = scrollToColumn < 0 ? finalColumn : Math.min(finalColumn, scrollToColumn);\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n        return instanceProps.columnSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: width - scrollBarSize,\n          currentOffset: scrollLeft,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollLeftForScrollToColumnStateUpdate\",\n    value: function _getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState) {\n      var scrollLeft = prevState.scrollLeft;\n\n      var calculatedScrollLeft = Grid._getCalculatedScrollLeft(nextProps, prevState);\n\n      if (typeof calculatedScrollLeft === 'number' && calculatedScrollLeft >= 0 && scrollLeft !== calculatedScrollLeft) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: calculatedScrollLeft,\n          scrollTop: -1\n        });\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop(nextProps, prevState) {\n      var height = nextProps.height,\n          rowCount = nextProps.rowCount,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToRow = nextProps.scrollToRow,\n          width = nextProps.width;\n      var scrollTop = prevState.scrollTop,\n          instanceProps = prevState.instanceProps;\n\n      if (rowCount > 0) {\n        var finalRow = rowCount - 1;\n        var targetIndex = scrollToRow < 0 ? finalRow : Math.min(finalRow, scrollToRow);\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n        return instanceProps.rowSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: height - scrollBarSize,\n          currentOffset: scrollTop,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollTopForScrollToRowStateUpdate\",\n    value: function _getScrollTopForScrollToRowStateUpdate(nextProps, prevState) {\n      var scrollTop = prevState.scrollTop;\n\n      var calculatedScrollTop = Grid._getCalculatedScrollTop(nextProps, prevState);\n\n      if (typeof calculatedScrollTop === 'number' && calculatedScrollTop >= 0 && scrollTop !== calculatedScrollTop) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: -1,\n          scrollTop: calculatedScrollTop\n        });\n      }\n\n      return {};\n    }\n  }]);\n  return Grid;\n}(React.PureComponent), (0, _defineProperty2[\"default\"])(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": _propTypes[\"default\"].string.isRequired,\n  \"aria-readonly\": _propTypes[\"default\"].bool,\n\n  /**\n   * Set the width of the inner scrollable container to 'auto'.\n   * This is useful for single-column Grids to ensure that the column doesn't extend below a vertical scrollbar.\n   */\n  \"autoContainerWidth\": _propTypes[\"default\"].bool.isRequired,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoHeight\": _propTypes[\"default\"].bool.isRequired,\n\n  /**\n   * Removes fixed width from the scrollingContainer so that the total width of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoWidth\": _propTypes[\"default\"].bool.isRequired,\n\n  /** Responsible for rendering a cell given an row and column index.  */\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof _types.bpfrpt_proptype_CellRenderer === \"function\" ? _types.bpfrpt_proptype_CellRenderer.isRequired ? _types.bpfrpt_proptype_CellRenderer.isRequired : _types.bpfrpt_proptype_CellRenderer : _propTypes[\"default\"].shape(_types.bpfrpt_proptype_CellRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a group of cells given their index ranges.  */\n  \"cellRangeRenderer\": function cellRangeRenderer() {\n    return (typeof _types.bpfrpt_proptype_CellRangeRenderer === \"function\" ? _types.bpfrpt_proptype_CellRangeRenderer.isRequired ? _types.bpfrpt_proptype_CellRangeRenderer.isRequired : _types.bpfrpt_proptype_CellRangeRenderer : _propTypes[\"default\"].shape(_types.bpfrpt_proptype_CellRangeRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Optional custom CSS class name to attach to root Grid element.  */\n  \"className\": _propTypes[\"default\"].string,\n\n  /** Number of columns in grid.  */\n  \"columnCount\": _propTypes[\"default\"].number.isRequired,\n\n  /** Either a fixed column width (number) or a function that returns the width of a column given its index.  */\n  \"columnWidth\": function columnWidth() {\n    return (typeof _types.bpfrpt_proptype_CellSize === \"function\" ? _types.bpfrpt_proptype_CellSize.isRequired ? _types.bpfrpt_proptype_CellSize.isRequired : _types.bpfrpt_proptype_CellSize : _propTypes[\"default\"].shape(_types.bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Unfiltered props for the Grid container. */\n  \"containerProps\": _propTypes[\"default\"].object,\n\n  /** ARIA role for the cell-container.  */\n  \"containerRole\": _propTypes[\"default\"].string.isRequired,\n\n  /** Optional inline style applied to inner cell-container */\n  \"containerStyle\": _propTypes[\"default\"].object.isRequired,\n\n  /**\n   * If CellMeasurer is used to measure this Grid's children, this should be a pointer to its CellMeasurerCache.\n   * A shared CellMeasurerCache reference enables Grid and CellMeasurer to share measurement data.\n   */\n  \"deferredMeasurementCache\": _propTypes[\"default\"].object,\n\n  /**\n   * Used to estimate the total width of a Grid before all of its columns have actually been measured.\n   * The estimated total width is adjusted as columns are rendered.\n   */\n  \"estimatedColumnSize\": _propTypes[\"default\"].number.isRequired,\n\n  /**\n   * Used to estimate the total height of a Grid before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": _propTypes[\"default\"].number.isRequired,\n\n  /** Exposed for testing purposes only.  */\n  \"getScrollbarSize\": _propTypes[\"default\"].func.isRequired,\n\n  /** Height of Grid; this property determines the number of visible (vs virtualized) rows.  */\n  \"height\": _propTypes[\"default\"].number.isRequired,\n\n  /** Optional custom id to attach to root Grid element.  */\n  \"id\": _propTypes[\"default\"].string,\n\n  /**\n   * Override internal is-scrolling state tracking.\n   * This property is primarily intended for use with the WindowScroller component.\n   */\n  \"isScrolling\": _propTypes[\"default\"].bool,\n\n  /**\n   * Opt-out of isScrolling param passed to cellRangeRenderer.\n   * To avoid the extra render when scroll stops.\n   */\n  \"isScrollingOptOut\": _propTypes[\"default\"].bool.isRequired,\n\n  /** Optional renderer to be used in place of rows when either :rowCount or :columnCount is 0.  */\n  \"noContentRenderer\": function noContentRenderer() {\n    return (typeof _types.bpfrpt_proptype_NoContentRenderer === \"function\" ? _types.bpfrpt_proptype_NoContentRenderer.isRequired ? _types.bpfrpt_proptype_NoContentRenderer.isRequired : _types.bpfrpt_proptype_NoContentRenderer : _propTypes[\"default\"].shape(_types.bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": _propTypes[\"default\"].func.isRequired,\n\n  /**\n   * Called whenever a horizontal or vertical scrollbar is added or removed.\n   * This prop is not intended for end-user use;\n   * It is used by MultiGrid to support fixed-row/fixed-column scroll syncing.\n   */\n  \"onScrollbarPresenceChange\": _propTypes[\"default\"].func.isRequired,\n\n  /** Callback invoked with information about the section of the Grid that was just rendered.  */\n  \"onSectionRendered\": _propTypes[\"default\"].func.isRequired,\n\n  /**\n   * Number of columns to render before/after the visible section of the grid.\n   * These columns can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanColumnCount\": _propTypes[\"default\"].number.isRequired,\n\n  /**\n   * Calculates the number of cells to overscan before and after a specified range.\n   * This function ensures that overscanning doesn't exceed the available cells.\n   */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof _types.bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? _types.bpfrpt_proptype_OverscanIndicesGetter.isRequired ? _types.bpfrpt_proptype_OverscanIndicesGetter.isRequired : _types.bpfrpt_proptype_OverscanIndicesGetter : _propTypes[\"default\"].shape(_types.bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible section of the grid.\n   * These rows can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanRowCount\": _propTypes[\"default\"].number.isRequired,\n\n  /** ARIA role for the grid element.  */\n  \"role\": _propTypes[\"default\"].string.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * Should implement the following interface: ({ index: number }): number\n   */\n  \"rowHeight\": function rowHeight() {\n    return (typeof _types.bpfrpt_proptype_CellSize === \"function\" ? _types.bpfrpt_proptype_CellSize.isRequired ? _types.bpfrpt_proptype_CellSize.isRequired : _types.bpfrpt_proptype_CellSize : _propTypes[\"default\"].shape(_types.bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in grid.  */\n  \"rowCount\": _propTypes[\"default\"].number.isRequired,\n\n  /** Wait this amount of time after the last scroll event before resetting Grid `pointer-events`. */\n  \"scrollingResetTimeInterval\": _propTypes[\"default\"].number.isRequired,\n\n  /** Horizontal offset. */\n  \"scrollLeft\": _propTypes[\"default\"].number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof _types.bpfrpt_proptype_Alignment === \"function\" ? _types.bpfrpt_proptype_Alignment.isRequired ? _types.bpfrpt_proptype_Alignment.isRequired : _types.bpfrpt_proptype_Alignment : _propTypes[\"default\"].shape(_types.bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Column index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToColumn\": _propTypes[\"default\"].number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": _propTypes[\"default\"].number,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToRow\": _propTypes[\"default\"].number.isRequired,\n\n  /** Optional inline style */\n  \"style\": _propTypes[\"default\"].object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": _propTypes[\"default\"].number,\n\n  /** Width of Grid; this property determines the number of visible (vs virtualized) columns.  */\n  \"width\": _propTypes[\"default\"].number.isRequired\n}), _temp);\n(0, _defineProperty2[\"default\"])(Grid, \"defaultProps\", {\n  'aria-label': 'grid',\n  'aria-readonly': true,\n  autoContainerWidth: false,\n  autoHeight: false,\n  autoWidth: false,\n  cellRangeRenderer: _defaultCellRangeRenderer[\"default\"],\n  containerRole: 'rowgroup',\n  containerStyle: {},\n  estimatedColumnSize: 100,\n  estimatedRowSize: 30,\n  getScrollbarSize: _scrollbarSize[\"default\"],\n  noContentRenderer: renderNull,\n  onScroll: function onScroll() {},\n  onScrollbarPresenceChange: function onScrollbarPresenceChange() {},\n  onSectionRendered: function onSectionRendered() {},\n  overscanColumnCount: 0,\n  overscanIndicesGetter: _defaultOverscanIndicesGetter[\"default\"],\n  overscanRowCount: 10,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  scrollToAlignment: 'auto',\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  tabIndex: 0,\n  isScrollingOptOut: false\n});\n(0, _reactLifecyclesCompat.polyfill)(Grid);\nvar _default = Grid;\nexports[\"default\"] = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = calculateSizeAndPositionDataAndUpdateScrollOffset;\n\n/**\n * Helper method that determines when to recalculate row or column metadata.\n */\nfunction calculateSizeAndPositionDataAndUpdateScrollOffset(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSize = _ref.cellSize,\n      computeMetadataCallback = _ref.computeMetadataCallback,\n      computeMetadataCallbackProps = _ref.computeMetadataCallbackProps,\n      nextCellsCount = _ref.nextCellsCount,\n      nextCellSize = _ref.nextCellSize,\n      nextScrollToIndex = _ref.nextScrollToIndex,\n      scrollToIndex = _ref.scrollToIndex,\n      updateScrollOffsetForScrollToIndex = _ref.updateScrollOffsetForScrollToIndex;\n\n  // Don't compare cell sizes if they are functions because inline functions would cause infinite loops.\n  // In that event users should use the manual recompute methods to inform of changes.\n  if (cellCount !== nextCellsCount || (typeof cellSize === 'number' || typeof nextCellSize === 'number') && cellSize !== nextCellSize) {\n    computeMetadataCallback(computeMetadataCallbackProps); // Updated cell metadata may have hidden the previous scrolled-to item.\n    // In this case we should also update the scrollTop to ensure it stays visible.\n\n    if (scrollToIndex >= 0 && scrollToIndex === nextScrollToIndex) {\n      updateScrollOffsetForScrollToIndex();\n    }\n  }\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _types = require(\"../types\");\n\n/**\n * Just-in-time calculates and caches size and position information for a collection of cells.\n */\nvar CellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  // Cache of size and position data for cells, mapped by cell index.\n  // Note that invalid values may exist in this map so only rely on cells up to this._lastMeasuredIndex\n  // Measurements for cells up to this index can be trusted; cells afterward should be estimated.\n  // Used in deferred mode to track which cells have been queued for measurement.\n  function CellSizeAndPositionManager(_ref) {\n    var cellCount = _ref.cellCount,\n        cellSizeGetter = _ref.cellSizeGetter,\n        estimatedCellSize = _ref.estimatedCellSize;\n    (0, _classCallCheck2[\"default\"])(this, CellSizeAndPositionManager);\n    (0, _defineProperty2[\"default\"])(this, \"_cellSizeAndPositionData\", {});\n    (0, _defineProperty2[\"default\"])(this, \"_lastMeasuredIndex\", -1);\n    (0, _defineProperty2[\"default\"])(this, \"_lastBatchedIndex\", -1);\n    (0, _defineProperty2[\"default\"])(this, \"_cellCount\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_cellSizeGetter\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_estimatedCellSize\", void 0);\n    this._cellSizeGetter = cellSizeGetter;\n    this._cellCount = cellCount;\n    this._estimatedCellSize = estimatedCellSize;\n  }\n\n  (0, _createClass2[\"default\"])(CellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return false;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(_ref2) {\n      var cellCount = _ref2.cellCount,\n          estimatedCellSize = _ref2.estimatedCellSize,\n          cellSizeGetter = _ref2.cellSizeGetter;\n      this._cellCount = cellCount;\n      this._estimatedCellSize = estimatedCellSize;\n      this._cellSizeGetter = cellSizeGetter;\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellCount;\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._estimatedCellSize;\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._lastMeasuredIndex;\n    }\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment() {\n      return 0;\n    }\n    /**\n     * This method returns the size and position for the cell at the specified index.\n     * It just-in-time calculates (or used cached values) for cells leading up to the index.\n     */\n\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      if (index < 0 || index >= this._cellCount) {\n        throw Error(\"Requested index \".concat(index, \" is outside of range 0..\").concat(this._cellCount));\n      }\n\n      if (index > this._lastMeasuredIndex) {\n        var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n        var offset = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n\n        for (var i = this._lastMeasuredIndex + 1; i <= index; i++) {\n          var size = this._cellSizeGetter({\n            index: i\n          }); // undefined or NaN probably means a logic error in the size getter.\n          // null means we're using CellMeasurer and haven't yet measured a given index.\n\n\n          if (size === undefined || isNaN(size)) {\n            throw Error(\"Invalid size returned for cell \".concat(i, \" of value \").concat(size));\n          } else if (size === null) {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: 0\n            };\n            this._lastBatchedIndex = index;\n          } else {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: size\n            };\n            offset += size;\n            this._lastMeasuredIndex = index;\n          }\n        }\n      }\n\n      return this._cellSizeAndPositionData[index];\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._lastMeasuredIndex >= 0 ? this._cellSizeAndPositionData[this._lastMeasuredIndex] : {\n        offset: 0,\n        size: 0\n      };\n    }\n    /**\n     * Total size of all cells being measured.\n     * This value will be completely estimated initially.\n     * As cells are measured, the estimate will be updated.\n     */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var totalSizeOfMeasuredCells = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n      var numUnmeasuredCells = this._cellCount - this._lastMeasuredIndex - 1;\n      var totalSizeOfUnmeasuredCells = numUnmeasuredCells * this._estimatedCellSize;\n      return totalSizeOfMeasuredCells + totalSizeOfUnmeasuredCells;\n    }\n    /**\n     * Determines a new offset that ensures a certain cell is visible, given the current offset.\n     * If the cell is already visible then the current offset will be returned.\n     * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n     *\n     * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n     * @param containerSize Size (width or height) of the container viewport\n     * @param currentOffset Container's current (x or y) offset\n     * @param totalSize Total size (width or height) of all cells\n     * @return Offset to use to ensure the specified cell is visible\n     */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n\n      if (containerSize <= 0) {\n        return 0;\n      }\n\n      var datum = this.getSizeAndPositionOfCell(targetIndex);\n      var maxOffset = datum.offset;\n      var minOffset = maxOffset - containerSize + datum.size;\n      var idealOffset;\n\n      switch (align) {\n        case 'start':\n          idealOffset = maxOffset;\n          break;\n\n        case 'end':\n          idealOffset = minOffset;\n          break;\n\n        case 'center':\n          idealOffset = maxOffset - (containerSize - datum.size) / 2;\n          break;\n\n        default:\n          idealOffset = Math.max(minOffset, Math.min(maxOffset, currentOffset));\n          break;\n      }\n\n      var totalSize = this.getTotalSize();\n      return Math.max(0, Math.min(totalSize - containerSize, idealOffset));\n    }\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(params) {\n      var containerSize = params.containerSize,\n          offset = params.offset;\n      var totalSize = this.getTotalSize();\n\n      if (totalSize === 0) {\n        return {};\n      }\n\n      var maxOffset = offset + containerSize;\n\n      var start = this._findNearestCell(offset);\n\n      var datum = this.getSizeAndPositionOfCell(start);\n      offset = datum.offset + datum.size;\n      var stop = start;\n\n      while (offset < maxOffset && stop < this._cellCount - 1) {\n        stop++;\n        offset += this.getSizeAndPositionOfCell(stop).size;\n      }\n\n      return {\n        start: start,\n        stop: stop\n      };\n    }\n    /**\n     * Clear all cached values for cells after the specified index.\n     * This method should be called for any cell that has changed its size.\n     * It will not immediately perform any calculations; they'll be performed the next time getSizeAndPositionOfCell() is called.\n     */\n\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._lastMeasuredIndex = Math.min(this._lastMeasuredIndex, index - 1);\n    }\n  }, {\n    key: \"_binarySearch\",\n    value: function _binarySearch(high, low, offset) {\n      while (low <= high) {\n        var middle = low + Math.floor((high - low) / 2);\n        var currentOffset = this.getSizeAndPositionOfCell(middle).offset;\n\n        if (currentOffset === offset) {\n          return middle;\n        } else if (currentOffset < offset) {\n          low = middle + 1;\n        } else if (currentOffset > offset) {\n          high = middle - 1;\n        }\n      }\n\n      if (low > 0) {\n        return low - 1;\n      } else {\n        return 0;\n      }\n    }\n  }, {\n    key: \"_exponentialSearch\",\n    value: function _exponentialSearch(index, offset) {\n      var interval = 1;\n\n      while (index < this._cellCount && this.getSizeAndPositionOfCell(index).offset < offset) {\n        index += interval;\n        interval *= 2;\n      }\n\n      return this._binarySearch(Math.min(index, this._cellCount - 1), Math.floor(index / 2), offset);\n    }\n    /**\n     * Searches for the cell (index) nearest the specified offset.\n     *\n     * If no exact match is found the next lowest cell index will be returned.\n     * This allows partially visible cells (with offsets just before/above the fold) to be visible.\n     */\n\n  }, {\n    key: \"_findNearestCell\",\n    value: function _findNearestCell(offset) {\n      if (isNaN(offset)) {\n        throw Error(\"Invalid offset \".concat(offset, \" specified\"));\n      } // Our search algorithms find the nearest match at or below the specified offset.\n      // So make sure the offset is at least 0 or no match will be found.\n\n\n      offset = Math.max(0, offset);\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var lastMeasuredIndex = Math.max(0, this._lastMeasuredIndex);\n\n      if (lastMeasuredCellSizeAndPosition.offset >= offset) {\n        // If we've already measured cells within this range just use a binary search as it's faster.\n        return this._binarySearch(lastMeasuredIndex, 0, offset);\n      } else {\n        // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n        // The exponential search avoids pre-computing sizes for the full set of cells as a binary search would.\n        // The overall complexity for this approach is O(log n).\n        return this._exponentialSearch(lastMeasuredIndex, offset);\n      }\n    }\n  }]);\n  return CellSizeAndPositionManager;\n}();\n\nexports[\"default\"] = CellSizeAndPositionManager;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getMaxElementSize = void 0;\nvar DEFAULT_MAX_ELEMENT_SIZE = 1500000;\nvar CHROME_MAX_ELEMENT_SIZE = 1.67771e7;\n\nvar isBrowser = function isBrowser() {\n  return typeof window !== 'undefined';\n};\n\nvar isChrome = function isChrome() {\n  return !!window.chrome;\n};\n\nvar getMaxElementSize = function getMaxElementSize() {\n  if (isBrowser()) {\n    if (isChrome()) {\n      return CHROME_MAX_ELEMENT_SIZE;\n    }\n  }\n\n  return DEFAULT_MAX_ELEMENT_SIZE;\n};\n\nexports.getMaxElementSize = getMaxElementSize;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = createCallbackMemoizer;\n\n/**\n * Helper utility that updates the specified callback whenever any of the specified indices have changed.\n */\nfunction createCallbackMemoizer() {\n  var requireAllKeys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  var cachedIndices = {};\n  return function (_ref) {\n    var callback = _ref.callback,\n        indices = _ref.indices;\n    var keys = Object.keys(indices);\n    var allInitialized = !requireAllKeys || keys.every(function (key) {\n      var value = indices[key];\n      return Array.isArray(value) ? value.length > 0 : value >= 0;\n    });\n    var indexChanged = keys.length !== Object.keys(cachedIndices).length || keys.some(function (key) {\n      var cachedValue = cachedIndices[key];\n      var value = indices[key];\n      return Array.isArray(value) ? cachedValue.join(',') !== value.join(',') : cachedValue !== value;\n    });\n    cachedIndices = indices;\n\n    if (allInitialized && indexChanged) {\n      callback(indices);\n    }\n  };\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = updateScrollIndexHelper;\n\nvar _ScalingCellSizeAndPositionManager = _interopRequireDefault(require(\"./ScalingCellSizeAndPositionManager.js\"));\n\nvar _types = require(\"../types\");\n\nfunction updateScrollIndexHelper(_ref) {\n  var cellSize = _ref.cellSize,\n      cellSizeAndPositionManager = _ref.cellSizeAndPositionManager,\n      previousCellsCount = _ref.previousCellsCount,\n      previousCellSize = _ref.previousCellSize,\n      previousScrollToAlignment = _ref.previousScrollToAlignment,\n      previousScrollToIndex = _ref.previousScrollToIndex,\n      previousSize = _ref.previousSize,\n      scrollOffset = _ref.scrollOffset,\n      scrollToAlignment = _ref.scrollToAlignment,\n      scrollToIndex = _ref.scrollToIndex,\n      size = _ref.size,\n      sizeJustIncreasedFromZero = _ref.sizeJustIncreasedFromZero,\n      updateScrollIndexCallback = _ref.updateScrollIndexCallback;\n  var cellCount = cellSizeAndPositionManager.getCellCount();\n  var hasScrollToIndex = scrollToIndex >= 0 && scrollToIndex < cellCount;\n  var sizeHasChanged = size !== previousSize || sizeJustIncreasedFromZero || !previousCellSize || typeof cellSize === 'number' && cellSize !== previousCellSize; // If we have a new scroll target OR if height/row-height has changed,\n  // We should ensure that the scroll target is visible.\n\n  if (hasScrollToIndex && (sizeHasChanged || scrollToAlignment !== previousScrollToAlignment || scrollToIndex !== previousScrollToIndex)) {\n    updateScrollIndexCallback(scrollToIndex); // If we don't have a selected item but list size or number of children have decreased,\n    // Make sure we aren't scrolled too far past the current content.\n  } else if (!hasScrollToIndex && cellCount > 0 && (size < previousSize || cellCount < previousCellsCount)) {\n    // We need to ensure that the current scroll offset is still within the collection's range.\n    // To do this, we don't need to measure everything; CellMeasurer would perform poorly.\n    // Just check to make sure we're still okay.\n    // Only adjust the scroll position if we've scrolled below the last set of rows.\n    if (scrollOffset > cellSizeAndPositionManager.getTotalSize() - size) {\n      updateScrollIndexCallback(cellCount - 1);\n    }\n  }\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bpfrpt_proptype_AnimationTimeoutId = exports.requestAnimationTimeout = exports.cancelAnimationTimeout = void 0;\n\nvar _animationFrame = require(\"./animationFrame\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar bpfrpt_proptype_AnimationTimeoutId = process.env.NODE_ENV === 'production' ? null : {\n  \"id\": _propTypes[\"default\"].number.isRequired\n};\nexports.bpfrpt_proptype_AnimationTimeoutId = bpfrpt_proptype_AnimationTimeoutId;\n\nvar cancelAnimationTimeout = function cancelAnimationTimeout(frame) {\n  return (0, _animationFrame.caf)(frame.id);\n};\n/**\n * Recursively calls requestAnimationFrame until a specified delay has been met or exceeded.\n * When the delay time has been reached the function you're timing out will be called.\n *\n * Credit: Joe Lambert (https://gist.github.com/joelambert/1002116#file-requesttimeout-js)\n */\n\n\nexports.cancelAnimationTimeout = cancelAnimationTimeout;\n\nvar requestAnimationTimeout = function requestAnimationTimeout(callback, delay) {\n  var start; // wait for end of processing current event handler, because event handler may be long\n\n  Promise.resolve().then(function () {\n    start = Date.now();\n  });\n\n  var timeout = function timeout() {\n    if (Date.now() - start >= delay) {\n      callback.call();\n    } else {\n      frame.id = (0, _animationFrame.raf)(timeout);\n    }\n  };\n\n  var frame = {\n    id: (0, _animationFrame.raf)(timeout)\n  };\n  return frame;\n};\n\nexports.requestAnimationTimeout = requestAnimationTimeout;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.caf = exports.raf = void 0;\n// Properly handle server-side rendering.\nvar win;\n\nif (typeof window !== 'undefined') {\n  win = window;\n} else if (typeof self !== 'undefined') {\n  win = self;\n} else {\n  win = {};\n} // requestAnimationFrame() shim by Paul Irish\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\nvar request = win.requestAnimationFrame || win.webkitRequestAnimationFrame || win.mozRequestAnimationFrame || win.oRequestAnimationFrame || win.msRequestAnimationFrame || function (callback) {\n  return win.setTimeout(callback, 1000 / 60);\n};\n\nvar cancel = win.cancelAnimationFrame || win.webkitCancelAnimationFrame || win.mozCancelAnimationFrame || win.oCancelAnimationFrame || win.msCancelAnimationFrame || function (id) {\n  win.clearTimeout(id);\n};\n\nvar raf = request;\nexports.raf = raf;\nvar caf = cancel;\nexports.caf = caf;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = defaultOverscanIndicesGetter;\nexports.SCROLL_DIRECTION_VERTICAL = exports.SCROLL_DIRECTION_HORIZONTAL = exports.SCROLL_DIRECTION_FORWARD = exports.SCROLL_DIRECTION_BACKWARD = void 0;\n\nvar _types = require(\"./types\");\n\nvar SCROLL_DIRECTION_BACKWARD = -1;\nexports.SCROLL_DIRECTION_BACKWARD = SCROLL_DIRECTION_BACKWARD;\nvar SCROLL_DIRECTION_FORWARD = 1;\nexports.SCROLL_DIRECTION_FORWARD = SCROLL_DIRECTION_FORWARD;\nvar SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexports.SCROLL_DIRECTION_HORIZONTAL = SCROLL_DIRECTION_HORIZONTAL;\nvar SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexports.SCROLL_DIRECTION_VERTICAL = SCROLL_DIRECTION_VERTICAL;\n\nfunction defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n  // Make sure we render at least 1 cell extra before and after (except near boundaries)\n  // This is necessary in order to support keyboard navigation (TAB/SHIFT+TAB) in some cases\n  // For more info see issues #625\n  overscanCellsCount = Math.max(1, overscanCellsCount);\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - 1),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + 1)\n    };\n  }\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calcColumnWidth = calcColumnWidth;\nfunction calcColumnWidth(index, columns, tableWidth) {\n  var column = columns[index];\n\n  var width = getDeterministicColumnWidth(column, tableWidth);\n\n  if (width) {\n    return width;\n  }\n\n  var totalAllocatedWidth = columns.reduce(function (result, c) {\n    return result + (getDeterministicColumnWidth(c, tableWidth) || 0);\n  }, 0);\n\n  // Evenly distribute remaining width amoungst columns (accounting for minWidths)\n  var variableWidthColumns = columns.filter(function (c) {\n    return typeof c.width !== 'number' && typeof c.width !== 'string';\n  });\n  var initialDistributedWidthPerColumn = (tableWidth - totalAllocatedWidth) / variableWidthColumns.length;\n  var activeMinWidthColumns = variableWidthColumns.filter(function (c) {\n    return c.minWidth > initialDistributedWidthPerColumn ? c.minWidth : 0;\n  });\n  var allocatedMinWidth = activeMinWidthColumns.reduce(function (result, c) {\n    return result + c.minWidth;\n  }, 0);\n  var remainingWidth = tableWidth - totalAllocatedWidth - allocatedMinWidth;\n\n  return Math.max(column.minWidth || 0, remainingWidth / (variableWidthColumns.length - activeMinWidthColumns.length));\n}\n\nfunction getDeterministicColumnWidth(column, tableWidth) {\n  if (typeof column.width === 'number') {\n    // Fixed width\n    return column.width;\n  } else if (typeof column.width === 'string') {\n    // Percentage width\n    var percentageBasedWidth = percentToFixedWidth(column.width, tableWidth);\n    return Math.max(percentageBasedWidth, column.minWidth || 0);\n  } else {\n    // Variable width\n    return null;\n  }\n}\n\nfunction percentToFixedWidth(percentAsString, tableWidth) {\n  return parseFloat(percentAsString) / 100 * tableWidth;\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf3 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _detectElementResize = _interopRequireDefault(require(\"../vendor/detectElementResize\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar AutoSizer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inherits2[\"default\"])(AutoSizer, _React$Component);\n\n  function AutoSizer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, AutoSizer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3[\"default\"])(AutoSizer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"state\", {\n      height: _this.props.defaultHeight || 0,\n      width: _this.props.defaultWidth || 0\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_parentNode\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_autoSizer\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_window\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_detectElementResize\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onResize\", function () {\n      var _this$props = _this.props,\n          disableHeight = _this$props.disableHeight,\n          disableWidth = _this$props.disableWidth,\n          onResize = _this$props.onResize;\n\n      if (_this._parentNode) {\n        // Guard against AutoSizer component being removed from the DOM immediately after being added.\n        // This can result in invalid style values which can result in NaN values if we don't handle them.\n        // See issue #150 for more context.\n        var height = _this._parentNode.offsetHeight || 0;\n        var width = _this._parentNode.offsetWidth || 0;\n        var win = _this._window || window;\n        var style = win.getComputedStyle(_this._parentNode) || {};\n        var paddingLeft = parseInt(style.paddingLeft, 10) || 0;\n        var paddingRight = parseInt(style.paddingRight, 10) || 0;\n        var paddingTop = parseInt(style.paddingTop, 10) || 0;\n        var paddingBottom = parseInt(style.paddingBottom, 10) || 0;\n        var newHeight = height - paddingTop - paddingBottom;\n        var newWidth = width - paddingLeft - paddingRight;\n\n        if (!disableHeight && _this.state.height !== newHeight || !disableWidth && _this.state.width !== newWidth) {\n          _this.setState({\n            height: height - paddingTop - paddingBottom,\n            width: width - paddingLeft - paddingRight\n          });\n\n          onResize({\n            height: height,\n            width: width\n          });\n        }\n      }\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_setRef\", function (autoSizer) {\n      _this._autoSizer = autoSizer;\n    });\n    return _this;\n  }\n\n  (0, _createClass2[\"default\"])(AutoSizer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var nonce = this.props.nonce;\n\n      if (this._autoSizer && this._autoSizer.parentNode && this._autoSizer.parentNode.ownerDocument && this._autoSizer.parentNode.ownerDocument.defaultView && this._autoSizer.parentNode instanceof this._autoSizer.parentNode.ownerDocument.defaultView.HTMLElement) {\n        // Delay access of parentNode until mount.\n        // This handles edge-cases where the component has already been unmounted before its ref has been set,\n        // As well as libraries like react-lite which have a slightly different lifecycle.\n        this._parentNode = this._autoSizer.parentNode;\n        this._window = this._autoSizer.parentNode.ownerDocument.defaultView; // Defer requiring resize handler in order to support server-side rendering.\n        // See issue #41\n\n        this._detectElementResize = (0, _detectElementResize[\"default\"])(nonce, this._window);\n\n        this._detectElementResize.addResizeListener(this._parentNode, this._onResize);\n\n        this._onResize();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._detectElementResize && this._parentNode) {\n        this._detectElementResize.removeResizeListener(this._parentNode, this._onResize);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          className = _this$props2.className,\n          disableHeight = _this$props2.disableHeight,\n          disableWidth = _this$props2.disableWidth,\n          style = _this$props2.style;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width; // Outer div should not force width/height since that may prevent containers from shrinking.\n      // Inner component should overflow and use calculated width/height.\n      // See issue #68 for more information.\n\n      var outerStyle = {\n        overflow: 'visible'\n      };\n      var childParams = {};\n\n      if (!disableHeight) {\n        outerStyle.height = 0;\n        childParams.height = height;\n      }\n\n      if (!disableWidth) {\n        outerStyle.width = 0;\n        childParams.width = width;\n      }\n      /**\n       * TODO: Avoid rendering children before the initial measurements have been collected.\n       * At best this would just be wasting cycles.\n       * Add this check into version 10 though as it could break too many ref callbacks in version 9.\n       * Note that if default width/height props were provided this would still work with SSR.\n      if (\n        height !== 0 &&\n        width !== 0\n      ) {\n        child = children({ height, width })\n      }\n      */\n\n\n      return React.createElement(\"div\", {\n        className: className,\n        ref: this._setRef,\n        style: _objectSpread({}, outerStyle, {}, style)\n      }, children(childParams));\n    }\n  }]);\n  return AutoSizer;\n}(React.Component), (0, _defineProperty2[\"default\"])(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /** Function responsible for rendering children.*/\n  \"children\": _propTypes[\"default\"].func.isRequired,\n\n  /** Optional custom CSS class name to attach to root AutoSizer element.  */\n  \"className\": _propTypes[\"default\"].string,\n\n  /** Default height to use for initial render; useful for SSR */\n  \"defaultHeight\": _propTypes[\"default\"].number,\n\n  /** Default width to use for initial render; useful for SSR */\n  \"defaultWidth\": _propTypes[\"default\"].number,\n\n  /** Disable dynamic :height property */\n  \"disableHeight\": _propTypes[\"default\"].bool.isRequired,\n\n  /** Disable dynamic :width property */\n  \"disableWidth\": _propTypes[\"default\"].bool.isRequired,\n\n  /** Nonce of the inlined stylesheet for Content Security Policy */\n  \"nonce\": _propTypes[\"default\"].string,\n\n  /** Callback to be invoked on-resize */\n  \"onResize\": _propTypes[\"default\"].func.isRequired,\n\n  /** Optional inline style */\n  \"style\": _propTypes[\"default\"].object\n}), _temp);\nexports[\"default\"] = AutoSizer;\n(0, _defineProperty2[\"default\"])(AutoSizer, \"defaultProps\", {\n  onResize: function onResize() {},\n  disableHeight: false,\n  disableWidth: false,\n  style: {}\n});","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = createDetectElementResize;\n\n/**\n * Detect Element Resize.\n * https://github.com/sdecima/javascript-detect-element-resize\n * Sebastian Decima\n *\n * Forked from version 0.5.3; includes the following modifications:\n * 1) Guard against unsafe 'window' and 'document' references (to support SSR).\n * 2) Defer initialization code via a top-level function wrapper (to support SSR).\n * 3) Avoid unnecessary reflows by not measuring size for scroll events bubbling from children.\n * 4) Add nonce for style element.\n * 5) Added support for injecting custom window object\n **/\nfunction createDetectElementResize(nonce, hostWindow) {\n  // Check `document` and `window` in case of server-side rendering\n  var _window;\n\n  if (typeof hostWindow !== 'undefined') {\n    _window = hostWindow;\n  } else if (typeof window !== 'undefined') {\n    _window = window;\n  } else if (typeof self !== 'undefined') {\n    _window = self;\n  } else {\n    _window = global;\n  }\n\n  var attachEvent = typeof _window.document !== 'undefined' && _window.document.attachEvent;\n\n  if (!attachEvent) {\n    var requestFrame = function () {\n      var raf = _window.requestAnimationFrame || _window.mozRequestAnimationFrame || _window.webkitRequestAnimationFrame || function (fn) {\n        return _window.setTimeout(fn, 20);\n      };\n\n      return function (fn) {\n        return raf(fn);\n      };\n    }();\n\n    var cancelFrame = function () {\n      var cancel = _window.cancelAnimationFrame || _window.mozCancelAnimationFrame || _window.webkitCancelAnimationFrame || _window.clearTimeout;\n      return function (id) {\n        return cancel(id);\n      };\n    }();\n\n    var resetTriggers = function resetTriggers(element) {\n      var triggers = element.__resizeTriggers__,\n          expand = triggers.firstElementChild,\n          contract = triggers.lastElementChild,\n          expandChild = expand.firstElementChild;\n      contract.scrollLeft = contract.scrollWidth;\n      contract.scrollTop = contract.scrollHeight;\n      expandChild.style.width = expand.offsetWidth + 1 + 'px';\n      expandChild.style.height = expand.offsetHeight + 1 + 'px';\n      expand.scrollLeft = expand.scrollWidth;\n      expand.scrollTop = expand.scrollHeight;\n    };\n\n    var checkTriggers = function checkTriggers(element) {\n      return element.offsetWidth != element.__resizeLast__.width || element.offsetHeight != element.__resizeLast__.height;\n    };\n\n    var scrollListener = function scrollListener(e) {\n      // Don't measure (which forces) reflow for scrolls that happen inside of children!\n      if (e.target.className && typeof e.target.className.indexOf === 'function' && e.target.className.indexOf('contract-trigger') < 0 && e.target.className.indexOf('expand-trigger') < 0) {\n        return;\n      }\n\n      var element = this;\n      resetTriggers(this);\n\n      if (this.__resizeRAF__) {\n        cancelFrame(this.__resizeRAF__);\n      }\n\n      this.__resizeRAF__ = requestFrame(function () {\n        if (checkTriggers(element)) {\n          element.__resizeLast__.width = element.offsetWidth;\n          element.__resizeLast__.height = element.offsetHeight;\n\n          element.__resizeListeners__.forEach(function (fn) {\n            fn.call(element, e);\n          });\n        }\n      });\n    };\n    /* Detect CSS Animations support to detect element display/re-attach */\n\n\n    var animation = false,\n        keyframeprefix = '',\n        animationstartevent = 'animationstart',\n        domPrefixes = 'Webkit Moz O ms'.split(' '),\n        startEvents = 'webkitAnimationStart animationstart oAnimationStart MSAnimationStart'.split(' '),\n        pfx = '';\n    {\n      var elm = _window.document.createElement('fakeelement');\n\n      if (elm.style.animationName !== undefined) {\n        animation = true;\n      }\n\n      if (animation === false) {\n        for (var i = 0; i < domPrefixes.length; i++) {\n          if (elm.style[domPrefixes[i] + 'AnimationName'] !== undefined) {\n            pfx = domPrefixes[i];\n            keyframeprefix = '-' + pfx.toLowerCase() + '-';\n            animationstartevent = startEvents[i];\n            animation = true;\n            break;\n          }\n        }\n      }\n    }\n    var animationName = 'resizeanim';\n    var animationKeyframes = '@' + keyframeprefix + 'keyframes ' + animationName + ' { from { opacity: 0; } to { opacity: 0; } } ';\n    var animationStyle = keyframeprefix + 'animation: 1ms ' + animationName + '; ';\n  }\n\n  var createStyles = function createStyles(doc) {\n    if (!doc.getElementById('detectElementResize')) {\n      //opacity:0 works around a chrome bug https://code.google.com/p/chromium/issues/detail?id=286360\n      var css = (animationKeyframes ? animationKeyframes : '') + '.resize-triggers { ' + (animationStyle ? animationStyle : '') + 'visibility: hidden; opacity: 0; } ' + '.resize-triggers, .resize-triggers > div, .contract-trigger:before { content: \" \"; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; z-index: -1; } .resize-triggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',\n          head = doc.head || doc.getElementsByTagName('head')[0],\n          style = doc.createElement('style');\n      style.id = 'detectElementResize';\n      style.type = 'text/css';\n\n      if (nonce != null) {\n        style.setAttribute('nonce', nonce);\n      }\n\n      if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n      } else {\n        style.appendChild(doc.createTextNode(css));\n      }\n\n      head.appendChild(style);\n    }\n  };\n\n  var addResizeListener = function addResizeListener(element, fn) {\n    if (attachEvent) {\n      element.attachEvent('onresize', fn);\n    } else {\n      if (!element.__resizeTriggers__) {\n        var doc = element.ownerDocument;\n\n        var elementStyle = _window.getComputedStyle(element);\n\n        if (elementStyle && elementStyle.position == 'static') {\n          element.style.position = 'relative';\n        }\n\n        createStyles(doc);\n        element.__resizeLast__ = {};\n        element.__resizeListeners__ = [];\n        (element.__resizeTriggers__ = doc.createElement('div')).className = 'resize-triggers';\n        element.__resizeTriggers__.innerHTML = '<div class=\"expand-trigger\"><div></div></div>' + '<div class=\"contract-trigger\"></div>';\n        element.appendChild(element.__resizeTriggers__);\n        resetTriggers(element);\n        element.addEventListener('scroll', scrollListener, true);\n        /* Listen for a css animation to detect element display/re-attach */\n\n        if (animationstartevent) {\n          element.__resizeTriggers__.__animationListener__ = function animationListener(e) {\n            if (e.animationName == animationName) {\n              resetTriggers(element);\n            }\n          };\n\n          element.__resizeTriggers__.addEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n        }\n      }\n\n      element.__resizeListeners__.push(fn);\n    }\n  };\n\n  var removeResizeListener = function removeResizeListener(element, fn) {\n    if (attachEvent) {\n      element.detachEvent('onresize', fn);\n    } else {\n      element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n\n      if (!element.__resizeListeners__.length) {\n        element.removeEventListener('scroll', scrollListener, true);\n\n        if (element.__resizeTriggers__.__animationListener__) {\n          element.__resizeTriggers__.removeEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n\n          element.__resizeTriggers__.__animationListener__ = null;\n        }\n\n        try {\n          element.__resizeTriggers__ = !element.removeChild(element.__resizeTriggers__);\n        } catch (e) {// Preact compat; see developit/preact-compat/issues/228\n        }\n      }\n    }\n  };\n\n  return {\n    addResizeListener: addResizeListener,\n    removeResizeListener: removeResizeListener\n  };\n}","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;","/**\n * Helper method that determines when to recalculate row or column metadata.\n */\nexport default function calculateSizeAndPositionDataAndUpdateScrollOffset(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSize = _ref.cellSize,\n      computeMetadataCallback = _ref.computeMetadataCallback,\n      computeMetadataCallbackProps = _ref.computeMetadataCallbackProps,\n      nextCellsCount = _ref.nextCellsCount,\n      nextCellSize = _ref.nextCellSize,\n      nextScrollToIndex = _ref.nextScrollToIndex,\n      scrollToIndex = _ref.scrollToIndex,\n      updateScrollOffsetForScrollToIndex = _ref.updateScrollOffsetForScrollToIndex;\n\n  // Don't compare cell sizes if they are functions because inline functions would cause infinite loops.\n  // In that event users should use the manual recompute methods to inform of changes.\n  if (cellCount !== nextCellsCount || (typeof cellSize === 'number' || typeof nextCellSize === 'number') && cellSize !== nextCellSize) {\n    computeMetadataCallback(computeMetadataCallbackProps); // Updated cell metadata may have hidden the previous scrolled-to item.\n    // In this case we should also update the scrollTop to ensure it stays visible.\n\n    if (scrollToIndex >= 0 && scrollToIndex === nextScrollToIndex) {\n      updateScrollOffsetForScrollToIndex();\n    }\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\n/**\n * Just-in-time calculates and caches size and position information for a collection of cells.\n */\nvar CellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  // Cache of size and position data for cells, mapped by cell index.\n  // Note that invalid values may exist in this map so only rely on cells up to this._lastMeasuredIndex\n  // Measurements for cells up to this index can be trusted; cells afterward should be estimated.\n  // Used in deferred mode to track which cells have been queued for measurement.\n  function CellSizeAndPositionManager(_ref) {\n    var cellCount = _ref.cellCount,\n        cellSizeGetter = _ref.cellSizeGetter,\n        estimatedCellSize = _ref.estimatedCellSize;\n\n    _classCallCheck(this, CellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionData\", {});\n\n    _defineProperty(this, \"_lastMeasuredIndex\", -1);\n\n    _defineProperty(this, \"_lastBatchedIndex\", -1);\n\n    _defineProperty(this, \"_cellCount\", void 0);\n\n    _defineProperty(this, \"_cellSizeGetter\", void 0);\n\n    _defineProperty(this, \"_estimatedCellSize\", void 0);\n\n    this._cellSizeGetter = cellSizeGetter;\n    this._cellCount = cellCount;\n    this._estimatedCellSize = estimatedCellSize;\n  }\n\n  _createClass(CellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return false;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(_ref2) {\n      var cellCount = _ref2.cellCount,\n          estimatedCellSize = _ref2.estimatedCellSize,\n          cellSizeGetter = _ref2.cellSizeGetter;\n      this._cellCount = cellCount;\n      this._estimatedCellSize = estimatedCellSize;\n      this._cellSizeGetter = cellSizeGetter;\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellCount;\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._estimatedCellSize;\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._lastMeasuredIndex;\n    }\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment() {\n      return 0;\n    }\n    /**\n     * This method returns the size and position for the cell at the specified index.\n     * It just-in-time calculates (or used cached values) for cells leading up to the index.\n     */\n\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      if (index < 0 || index >= this._cellCount) {\n        throw Error(\"Requested index \".concat(index, \" is outside of range 0..\").concat(this._cellCount));\n      }\n\n      if (index > this._lastMeasuredIndex) {\n        var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n        var offset = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n\n        for (var i = this._lastMeasuredIndex + 1; i <= index; i++) {\n          var size = this._cellSizeGetter({\n            index: i\n          }); // undefined or NaN probably means a logic error in the size getter.\n          // null means we're using CellMeasurer and haven't yet measured a given index.\n\n\n          if (size === undefined || isNaN(size)) {\n            throw Error(\"Invalid size returned for cell \".concat(i, \" of value \").concat(size));\n          } else if (size === null) {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: 0\n            };\n            this._lastBatchedIndex = index;\n          } else {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: size\n            };\n            offset += size;\n            this._lastMeasuredIndex = index;\n          }\n        }\n      }\n\n      return this._cellSizeAndPositionData[index];\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._lastMeasuredIndex >= 0 ? this._cellSizeAndPositionData[this._lastMeasuredIndex] : {\n        offset: 0,\n        size: 0\n      };\n    }\n    /**\n     * Total size of all cells being measured.\n     * This value will be completely estimated initially.\n     * As cells are measured, the estimate will be updated.\n     */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var totalSizeOfMeasuredCells = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n      var numUnmeasuredCells = this._cellCount - this._lastMeasuredIndex - 1;\n      var totalSizeOfUnmeasuredCells = numUnmeasuredCells * this._estimatedCellSize;\n      return totalSizeOfMeasuredCells + totalSizeOfUnmeasuredCells;\n    }\n    /**\n     * Determines a new offset that ensures a certain cell is visible, given the current offset.\n     * If the cell is already visible then the current offset will be returned.\n     * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n     *\n     * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n     * @param containerSize Size (width or height) of the container viewport\n     * @param currentOffset Container's current (x or y) offset\n     * @param totalSize Total size (width or height) of all cells\n     * @return Offset to use to ensure the specified cell is visible\n     */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n\n      if (containerSize <= 0) {\n        return 0;\n      }\n\n      var datum = this.getSizeAndPositionOfCell(targetIndex);\n      var maxOffset = datum.offset;\n      var minOffset = maxOffset - containerSize + datum.size;\n      var idealOffset;\n\n      switch (align) {\n        case 'start':\n          idealOffset = maxOffset;\n          break;\n\n        case 'end':\n          idealOffset = minOffset;\n          break;\n\n        case 'center':\n          idealOffset = maxOffset - (containerSize - datum.size) / 2;\n          break;\n\n        default:\n          idealOffset = Math.max(minOffset, Math.min(maxOffset, currentOffset));\n          break;\n      }\n\n      var totalSize = this.getTotalSize();\n      return Math.max(0, Math.min(totalSize - containerSize, idealOffset));\n    }\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(params) {\n      var containerSize = params.containerSize,\n          offset = params.offset;\n      var totalSize = this.getTotalSize();\n\n      if (totalSize === 0) {\n        return {};\n      }\n\n      var maxOffset = offset + containerSize;\n\n      var start = this._findNearestCell(offset);\n\n      var datum = this.getSizeAndPositionOfCell(start);\n      offset = datum.offset + datum.size;\n      var stop = start;\n\n      while (offset < maxOffset && stop < this._cellCount - 1) {\n        stop++;\n        offset += this.getSizeAndPositionOfCell(stop).size;\n      }\n\n      return {\n        start: start,\n        stop: stop\n      };\n    }\n    /**\n     * Clear all cached values for cells after the specified index.\n     * This method should be called for any cell that has changed its size.\n     * It will not immediately perform any calculations; they'll be performed the next time getSizeAndPositionOfCell() is called.\n     */\n\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._lastMeasuredIndex = Math.min(this._lastMeasuredIndex, index - 1);\n    }\n  }, {\n    key: \"_binarySearch\",\n    value: function _binarySearch(high, low, offset) {\n      while (low <= high) {\n        var middle = low + Math.floor((high - low) / 2);\n        var currentOffset = this.getSizeAndPositionOfCell(middle).offset;\n\n        if (currentOffset === offset) {\n          return middle;\n        } else if (currentOffset < offset) {\n          low = middle + 1;\n        } else if (currentOffset > offset) {\n          high = middle - 1;\n        }\n      }\n\n      if (low > 0) {\n        return low - 1;\n      } else {\n        return 0;\n      }\n    }\n  }, {\n    key: \"_exponentialSearch\",\n    value: function _exponentialSearch(index, offset) {\n      var interval = 1;\n\n      while (index < this._cellCount && this.getSizeAndPositionOfCell(index).offset < offset) {\n        index += interval;\n        interval *= 2;\n      }\n\n      return this._binarySearch(Math.min(index, this._cellCount - 1), Math.floor(index / 2), offset);\n    }\n    /**\n     * Searches for the cell (index) nearest the specified offset.\n     *\n     * If no exact match is found the next lowest cell index will be returned.\n     * This allows partially visible cells (with offsets just before/above the fold) to be visible.\n     */\n\n  }, {\n    key: \"_findNearestCell\",\n    value: function _findNearestCell(offset) {\n      if (isNaN(offset)) {\n        throw Error(\"Invalid offset \".concat(offset, \" specified\"));\n      } // Our search algorithms find the nearest match at or below the specified offset.\n      // So make sure the offset is at least 0 or no match will be found.\n\n\n      offset = Math.max(0, offset);\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var lastMeasuredIndex = Math.max(0, this._lastMeasuredIndex);\n\n      if (lastMeasuredCellSizeAndPosition.offset >= offset) {\n        // If we've already measured cells within this range just use a binary search as it's faster.\n        return this._binarySearch(lastMeasuredIndex, 0, offset);\n      } else {\n        // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n        // The exponential search avoids pre-computing sizes for the full set of cells as a binary search would.\n        // The overall complexity for this approach is O(log n).\n        return this._exponentialSearch(lastMeasuredIndex, offset);\n      }\n    }\n  }]);\n\n  return CellSizeAndPositionManager;\n}();\n\nexport { CellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","var DEFAULT_MAX_ELEMENT_SIZE = 1500000;\nvar CHROME_MAX_ELEMENT_SIZE = 1.67771e7;\n\nvar isBrowser = function isBrowser() {\n  return typeof window !== 'undefined';\n};\n\nvar isChrome = function isChrome() {\n  return !!window.chrome;\n};\n\nexport var getMaxElementSize = function getMaxElementSize() {\n  if (isBrowser()) {\n    if (isChrome()) {\n      return CHROME_MAX_ELEMENT_SIZE;\n    }\n  }\n\n  return DEFAULT_MAX_ELEMENT_SIZE;\n};","import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport CellSizeAndPositionManager from './CellSizeAndPositionManager';\nimport { getMaxElementSize } from './maxElementSize.js';\n\n/**\n * Extends CellSizeAndPositionManager and adds scaling behavior for lists that are too large to fit within a browser's native limits.\n */\nvar ScalingCellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  function ScalingCellSizeAndPositionManager(_ref) {\n    var _ref$maxScrollSize = _ref.maxScrollSize,\n        maxScrollSize = _ref$maxScrollSize === void 0 ? getMaxElementSize() : _ref$maxScrollSize,\n        params = _objectWithoutProperties(_ref, [\"maxScrollSize\"]);\n\n    _classCallCheck(this, ScalingCellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionManager\", void 0);\n\n    _defineProperty(this, \"_maxScrollSize\", void 0);\n\n    // Favor composition over inheritance to simplify IE10 support\n    this._cellSizeAndPositionManager = new CellSizeAndPositionManager(params);\n    this._maxScrollSize = maxScrollSize;\n  }\n\n  _createClass(ScalingCellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return this._cellSizeAndPositionManager.getTotalSize() > this._maxScrollSize;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(params) {\n      this._cellSizeAndPositionManager.configure(params);\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellSizeAndPositionManager.getCellCount();\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._cellSizeAndPositionManager.getEstimatedCellSize();\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._cellSizeAndPositionManager.getLastMeasuredIndex();\n    }\n    /**\n     * Number of pixels a cell at the given position (offset) should be shifted in order to fit within the scaled container.\n     * The offset passed to this function is scaled (safe) as well.\n     */\n\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment(_ref2) {\n      var containerSize = _ref2.containerSize,\n          offset = _ref2.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      var offsetPercentage = this._getOffsetPercentage({\n        containerSize: containerSize,\n        offset: offset,\n        totalSize: safeTotalSize\n      });\n\n      return Math.round(offsetPercentage * (safeTotalSize - totalSize));\n    }\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfCell(index);\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfLastMeasuredCell();\n    }\n    /** See CellSizeAndPositionManager#getTotalSize */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return Math.min(this._maxScrollSize, this._cellSizeAndPositionManager.getTotalSize());\n    }\n    /** See CellSizeAndPositionManager#getUpdatedOffsetForIndex */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n      currentOffset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: currentOffset\n      });\n\n      var offset = this._cellSizeAndPositionManager.getUpdatedOffsetForIndex({\n        align: align,\n        containerSize: containerSize,\n        currentOffset: currentOffset,\n        targetIndex: targetIndex\n      });\n\n      return this._offsetToSafeOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n    /** See CellSizeAndPositionManager#getVisibleCellRange */\n\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(_ref4) {\n      var containerSize = _ref4.containerSize,\n          offset = _ref4.offset;\n      offset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n      return this._cellSizeAndPositionManager.getVisibleCellRange({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._cellSizeAndPositionManager.resetCell(index);\n    }\n  }, {\n    key: \"_getOffsetPercentage\",\n    value: function _getOffsetPercentage(_ref5) {\n      var containerSize = _ref5.containerSize,\n          offset = _ref5.offset,\n          totalSize = _ref5.totalSize;\n      return totalSize <= containerSize ? 0 : offset / (totalSize - containerSize);\n    }\n  }, {\n    key: \"_offsetToSafeOffset\",\n    value: function _offsetToSafeOffset(_ref6) {\n      var containerSize = _ref6.containerSize,\n          offset = _ref6.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: totalSize\n        });\n\n        return Math.round(offsetPercentage * (safeTotalSize - containerSize));\n      }\n    }\n  }, {\n    key: \"_safeOffsetToOffset\",\n    value: function _safeOffsetToOffset(_ref7) {\n      var containerSize = _ref7.containerSize,\n          offset = _ref7.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: safeTotalSize\n        });\n\n        return Math.round(offsetPercentage * (totalSize - containerSize));\n      }\n    }\n  }]);\n\n  return ScalingCellSizeAndPositionManager;\n}();\n\nexport { ScalingCellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","/**\n * Helper utility that updates the specified callback whenever any of the specified indices have changed.\n */\nexport default function createCallbackMemoizer() {\n  var requireAllKeys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  var cachedIndices = {};\n  return function (_ref) {\n    var callback = _ref.callback,\n        indices = _ref.indices;\n    var keys = Object.keys(indices);\n    var allInitialized = !requireAllKeys || keys.every(function (key) {\n      var value = indices[key];\n      return Array.isArray(value) ? value.length > 0 : value >= 0;\n    });\n    var indexChanged = keys.length !== Object.keys(cachedIndices).length || keys.some(function (key) {\n      var cachedValue = cachedIndices[key];\n      var value = indices[key];\n      return Array.isArray(value) ? cachedValue.join(',') !== value.join(',') : cachedValue !== value;\n    });\n    cachedIndices = indices;\n\n    if (allInitialized && indexChanged) {\n      callback(indices);\n    }\n  };\n}","import ScalingCellSizeAndPositionManager from './ScalingCellSizeAndPositionManager.js';\n/**\n * Helper function that determines when to update scroll offsets to ensure that a scroll-to-index remains visible.\n * This function also ensures that the scroll ofset isn't past the last column/row of cells.\n */\n\nexport default function updateScrollIndexHelper(_ref) {\n  var cellSize = _ref.cellSize,\n      cellSizeAndPositionManager = _ref.cellSizeAndPositionManager,\n      previousCellsCount = _ref.previousCellsCount,\n      previousCellSize = _ref.previousCellSize,\n      previousScrollToAlignment = _ref.previousScrollToAlignment,\n      previousScrollToIndex = _ref.previousScrollToIndex,\n      previousSize = _ref.previousSize,\n      scrollOffset = _ref.scrollOffset,\n      scrollToAlignment = _ref.scrollToAlignment,\n      scrollToIndex = _ref.scrollToIndex,\n      size = _ref.size,\n      sizeJustIncreasedFromZero = _ref.sizeJustIncreasedFromZero,\n      updateScrollIndexCallback = _ref.updateScrollIndexCallback;\n  var cellCount = cellSizeAndPositionManager.getCellCount();\n  var hasScrollToIndex = scrollToIndex >= 0 && scrollToIndex < cellCount;\n  var sizeHasChanged = size !== previousSize || sizeJustIncreasedFromZero || !previousCellSize || typeof cellSize === 'number' && cellSize !== previousCellSize; // If we have a new scroll target OR if height/row-height has changed,\n  // We should ensure that the scroll target is visible.\n\n  if (hasScrollToIndex && (sizeHasChanged || scrollToAlignment !== previousScrollToAlignment || scrollToIndex !== previousScrollToIndex)) {\n    updateScrollIndexCallback(scrollToIndex); // If we don't have a selected item but list size or number of children have decreased,\n    // Make sure we aren't scrolled too far past the current content.\n  } else if (!hasScrollToIndex && cellCount > 0 && (size < previousSize || cellCount < previousCellsCount)) {\n    // We need to ensure that the current scroll offset is still within the collection's range.\n    // To do this, we don't need to measure everything; CellMeasurer would perform poorly.\n    // Just check to make sure we're still okay.\n    // Only adjust the scroll position if we've scrolled below the last set of rows.\n    if (scrollOffset > cellSizeAndPositionManager.getTotalSize() - size) {\n      updateScrollIndexCallback(cellCount - 1);\n    }\n  }\n}\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSize } from \"../types\";","// Properly handle server-side rendering.\nvar win;\n\nif (typeof window !== 'undefined') {\n  win = window;\n} else if (typeof self !== 'undefined') {\n  win = self;\n} else {\n  win = {};\n} // requestAnimationFrame() shim by Paul Irish\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\nvar request = win.requestAnimationFrame || win.webkitRequestAnimationFrame || win.mozRequestAnimationFrame || win.oRequestAnimationFrame || win.msRequestAnimationFrame || function (callback) {\n  return win.setTimeout(callback, 1000 / 60);\n};\n\nvar cancel = win.cancelAnimationFrame || win.webkitCancelAnimationFrame || win.mozCancelAnimationFrame || win.oCancelAnimationFrame || win.msCancelAnimationFrame || function (id) {\n  win.clearTimeout(id);\n};\n\nexport var raf = request;\nexport var caf = cancel;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport calculateSizeAndPositionDataAndUpdateScrollOffset from './utils/calculateSizeAndPositionDataAndUpdateScrollOffset';\nimport ScalingCellSizeAndPositionManager from './utils/ScalingCellSizeAndPositionManager';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport defaultOverscanIndicesGetter, { SCROLL_DIRECTION_BACKWARD, SCROLL_DIRECTION_FORWARD } from './defaultOverscanIndicesGetter';\nimport updateScrollIndexHelper from './utils/updateScrollIndexHelper';\nimport defaultCellRangeRenderer from './defaultCellRangeRenderer';\nimport scrollbarSize from 'dom-helpers/scrollbarSize';\nimport { polyfill } from 'react-lifecycles-compat';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n\nvar renderNull = function renderNull() {\n  return null;\n};\n\n/**\n * Renders tabular data with virtualization along the vertical and horizontal axes.\n * Row heights and column widths must be known ahead of time and specified as properties.\n */\nvar Grid = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Grid, _React$PureComponent);\n\n  // Invokes onSectionRendered callback only when start/stop row or column indices change\n  function Grid(props) {\n    var _this;\n\n    _classCallCheck(this, Grid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Grid).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"_onGridRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollLeftFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollTopFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_horizontalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_verticalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollbarPresenceChanged\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollingContainer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_childrenToDisplay\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollTop\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollLeft\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_disablePointerEventsTimeoutId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_styleCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceScrollEndedCallback\", function () {\n      _this._disablePointerEventsTimeoutId = null; // isScrolling is used to determine if we reset styleCache\n\n      _this.setState({\n        isScrolling: false,\n        needToResetStyleCache: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnGridRenderedHelper\", function () {\n      var onSectionRendered = _this.props.onSectionRendered;\n\n      _this._onGridRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          columnOverscanStartIndex: _this._columnStartIndex,\n          columnOverscanStopIndex: _this._columnStopIndex,\n          columnStartIndex: _this._renderedColumnStartIndex,\n          columnStopIndex: _this._renderedColumnStopIndex,\n          rowOverscanStartIndex: _this._rowStartIndex,\n          rowOverscanStopIndex: _this._rowStopIndex,\n          rowStartIndex: _this._renderedRowStartIndex,\n          rowStopIndex: _this._renderedRowStopIndex\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target === _this._scrollingContainer) {\n        _this.handleScrollEvent(event.target);\n      }\n    });\n\n    var columnSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.columnCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.columnWidth)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedColumnSize(props)\n    });\n    var rowSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.rowCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.rowHeight)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedRowSize(props)\n    });\n    _this.state = {\n      instanceProps: {\n        columnSizeAndPositionManager: columnSizeAndPositionManager,\n        rowSizeAndPositionManager: rowSizeAndPositionManager,\n        prevColumnWidth: props.columnWidth,\n        prevRowHeight: props.rowHeight,\n        prevColumnCount: props.columnCount,\n        prevRowCount: props.rowCount,\n        prevIsScrolling: props.isScrolling === true,\n        prevScrollToColumn: props.scrollToColumn,\n        prevScrollToRow: props.scrollToRow,\n        scrollbarSize: 0,\n        scrollbarSizeMeasured: false\n      },\n      isScrolling: false,\n      scrollDirectionHorizontal: SCROLL_DIRECTION_FORWARD,\n      scrollDirectionVertical: SCROLL_DIRECTION_FORWARD,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollPositionChangeReason: null,\n      needToResetStyleCache: false\n    };\n\n    if (props.scrollToRow > 0) {\n      _this._initialScrollTop = _this._getCalculatedScrollTop(props, _this.state);\n    }\n\n    if (props.scrollToColumn > 0) {\n      _this._initialScrollLeft = _this._getCalculatedScrollLeft(props, _this.state);\n    }\n\n    return _this;\n  }\n  /**\n   * Gets offsets for a given cell and alignment.\n   */\n\n\n  _createClass(Grid, [{\n    key: \"getOffsetForCell\",\n    value: function getOffsetForCell() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$alignment = _ref.alignment,\n          alignment = _ref$alignment === void 0 ? this.props.scrollToAlignment : _ref$alignment,\n          _ref$columnIndex = _ref.columnIndex,\n          columnIndex = _ref$columnIndex === void 0 ? this.props.scrollToColumn : _ref$columnIndex,\n          _ref$rowIndex = _ref.rowIndex,\n          rowIndex = _ref$rowIndex === void 0 ? this.props.scrollToRow : _ref$rowIndex;\n\n      var offsetProps = _objectSpread({}, this.props, {\n        scrollToAlignment: alignment,\n        scrollToColumn: columnIndex,\n        scrollToRow: rowIndex\n      });\n\n      return {\n        scrollLeft: this._getCalculatedScrollLeft(offsetProps),\n        scrollTop: this._getCalculatedScrollTop(offsetProps)\n      };\n    }\n    /**\n     * Gets estimated total rows' height.\n     */\n\n  }, {\n    key: \"getTotalRowsHeight\",\n    value: function getTotalRowsHeight() {\n      return this.state.instanceProps.rowSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * Gets estimated total columns' width.\n     */\n\n  }, {\n    key: \"getTotalColumnsWidth\",\n    value: function getTotalColumnsWidth() {\n      return this.state.instanceProps.columnSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * This method handles a scroll event originating from an external scroll control.\n     * It's an advanced method and should probably not be used unless you're implementing a custom scroll-bar solution.\n     */\n\n  }, {\n    key: \"handleScrollEvent\",\n    value: function handleScrollEvent(_ref2) {\n      var _ref2$scrollLeft = _ref2.scrollLeft,\n          scrollLeftParam = _ref2$scrollLeft === void 0 ? 0 : _ref2$scrollLeft,\n          _ref2$scrollTop = _ref2.scrollTop,\n          scrollTopParam = _ref2$scrollTop === void 0 ? 0 : _ref2$scrollTop;\n\n      // On iOS, we can arrive at negative offsets by swiping past the start.\n      // To prevent flicker here, we make playing in the negative offset zone cause nothing to happen.\n      if (scrollTopParam < 0) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      this._debounceScrollEnded();\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          autoWidth = _this$props.autoWidth,\n          height = _this$props.height,\n          width = _this$props.width;\n      var instanceProps = this.state.instanceProps; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollbarSize = instanceProps.scrollbarSize;\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var scrollLeft = Math.min(Math.max(0, totalColumnsWidth - width + scrollbarSize), scrollLeftParam);\n      var scrollTop = Math.min(Math.max(0, totalRowsHeight - height + scrollbarSize), scrollTopParam); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (this.state.scrollLeft !== scrollLeft || this.state.scrollTop !== scrollTop) {\n        // Track scrolling direction so we can more efficiently overscan rows to reduce empty space around the edges while scrolling.\n        // Don't change direction for an axis unless scroll offset has changed.\n        var scrollDirectionHorizontal = scrollLeft !== this.state.scrollLeft ? scrollLeft > this.state.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionHorizontal;\n        var scrollDirectionVertical = scrollTop !== this.state.scrollTop ? scrollTop > this.state.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionVertical;\n        var newState = {\n          isScrolling: true,\n          scrollDirectionHorizontal: scrollDirectionHorizontal,\n          scrollDirectionVertical: scrollDirectionVertical,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.OBSERVED\n        };\n\n        if (!autoHeight) {\n          newState.scrollTop = scrollTop;\n        }\n\n        if (!autoWidth) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        newState.needToResetStyleCache = false;\n        this.setState(newState);\n      }\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalColumnsWidth: totalColumnsWidth,\n        totalRowsHeight: totalRowsHeight\n      });\n    }\n    /**\n     * Invalidate Grid size and recompute visible cells.\n     * This is a deferred wrapper for recomputeGridSize().\n     * It sets a flag to be evaluated on cDM/cDU to avoid unnecessary renders.\n     * This method is intended for advanced use-cases like CellMeasurer.\n     */\n    // @TODO (bvaughn) Add automated test coverage for this.\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rowIndex = _ref3.rowIndex;\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /**\n     * Pre-measure all columns and rows in a Grid.\n     * Typically cells are only measured as needed and estimated sizes are used for cells that have not yet been measured.\n     * This method ensures that the next call to getTotalSize() returns an exact size (as opposed to just an estimated one).\n     */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      var _this$props2 = this.props,\n          columnCount = _this$props2.columnCount,\n          rowCount = _this$props2.rowCount;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.getSizeAndPositionOfCell(columnCount - 1);\n      instanceProps.rowSizeAndPositionManager.getSizeAndPositionOfCell(rowCount - 1);\n    }\n    /**\n     * Forced recompute of row heights and column widths.\n     * This function should be called if dynamic column or row sizes have changed but nothing else has.\n     * Since Grid only receives :columnCount and :rowCount it has no way of detecting when the underlying data changes.\n     */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref4$columnIndex = _ref4.columnIndex,\n          columnIndex = _ref4$columnIndex === void 0 ? 0 : _ref4$columnIndex,\n          _ref4$rowIndex = _ref4.rowIndex,\n          rowIndex = _ref4$rowIndex === void 0 ? 0 : _ref4$rowIndex;\n\n      var _this$props3 = this.props,\n          scrollToColumn = _this$props3.scrollToColumn,\n          scrollToRow = _this$props3.scrollToRow;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.resetCell(columnIndex);\n      instanceProps.rowSizeAndPositionManager.resetCell(rowIndex); // Cell sizes may be determined by a function property.\n      // In this case the cDU handler can't know if they changed.\n      // Store this flag to let the next cDU pass know it needs to recompute the scroll offset.\n\n      this._recomputeScrollLeftFlag = scrollToColumn >= 0 && (this.state.scrollDirectionHorizontal === SCROLL_DIRECTION_FORWARD ? columnIndex <= scrollToColumn : columnIndex >= scrollToColumn);\n      this._recomputeScrollTopFlag = scrollToRow >= 0 && (this.state.scrollDirectionVertical === SCROLL_DIRECTION_FORWARD ? rowIndex <= scrollToRow : rowIndex >= scrollToRow); // Clear cell cache in case we are scrolling;\n      // Invalid row heights likely mean invalid cached content as well.\n\n      this._styleCache = {};\n      this._cellCache = {};\n      this.forceUpdate();\n    }\n    /**\n     * Ensure column and row are visible.\n     */\n\n  }, {\n    key: \"scrollToCell\",\n    value: function scrollToCell(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n      var columnCount = this.props.columnCount;\n      var props = this.props; // Don't adjust scroll offset for single-column grids (eg List, Table).\n      // This can cause a funky scroll offset because of the vertical scrollbar width.\n\n      if (columnCount > 1 && columnIndex !== undefined) {\n        this._updateScrollLeftForScrollToColumn(_objectSpread({}, props, {\n          scrollToColumn: columnIndex\n        }));\n      }\n\n      if (rowIndex !== undefined) {\n        this._updateScrollTopForScrollToRow(_objectSpread({}, props, {\n          scrollToRow: rowIndex\n        }));\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          getScrollbarSize = _this$props4.getScrollbarSize,\n          height = _this$props4.height,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToColumn = _this$props4.scrollToColumn,\n          scrollTop = _this$props4.scrollTop,\n          scrollToRow = _this$props4.scrollToRow,\n          width = _this$props4.width;\n      var instanceProps = this.state.instanceProps; // Reset initial offsets to be ignored in browser\n\n      this._initialScrollTop = 0;\n      this._initialScrollLeft = 0; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n\n      if (!instanceProps.scrollbarSizeMeasured) {\n        this.setState(function (prevState) {\n          var stateUpdate = _objectSpread({}, prevState, {\n            needToResetStyleCache: false\n          });\n\n          stateUpdate.instanceProps.scrollbarSize = getScrollbarSize();\n          stateUpdate.instanceProps.scrollbarSizeMeasured = true;\n          return stateUpdate;\n        });\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 || typeof scrollTop === 'number' && scrollTop >= 0) {\n        var stateUpdate = Grid._getScrollToPositionStateUpdate({\n          prevState: this.state,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        if (stateUpdate) {\n          stateUpdate.needToResetStyleCache = false;\n          this.setState(stateUpdate);\n        }\n      } // refs don't work in `react-test-renderer`\n\n\n      if (this._scrollingContainer) {\n        // setting the ref's scrollLeft and scrollTop.\n        // Somehow in MultiGrid the main grid doesn't trigger a update on mount.\n        if (this._scrollingContainer.scrollLeft !== this.state.scrollLeft) {\n          this._scrollingContainer.scrollLeft = this.state.scrollLeft;\n        }\n\n        if (this._scrollingContainer.scrollTop !== this.state.scrollTop) {\n          this._scrollingContainer.scrollTop = this.state.scrollTop;\n        }\n      } // Don't update scroll offset if the size is 0; we don't render any cells in this case.\n      // Setting a state may cause us to later thing we've updated the offce when we haven't.\n\n\n      var sizeIsBiggerThanZero = height > 0 && width > 0;\n\n      if (scrollToColumn >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollLeftForScrollToColumn();\n      }\n\n      if (scrollToRow >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollTopForScrollToRow();\n      } // Update onRowsRendered callback\n\n\n      this._invokeOnGridRenderedHelper(); // Initialize onScroll callback\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalColumnsWidth: instanceProps.columnSizeAndPositionManager.getTotalSize(),\n        totalRowsHeight: instanceProps.rowSizeAndPositionManager.getTotalSize()\n      });\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) New scroll-to-cell props have been set\n     */\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      var _this$props5 = this.props,\n          autoHeight = _this$props5.autoHeight,\n          autoWidth = _this$props5.autoWidth,\n          columnCount = _this$props5.columnCount,\n          height = _this$props5.height,\n          rowCount = _this$props5.rowCount,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToColumn = _this$props5.scrollToColumn,\n          scrollToRow = _this$props5.scrollToRow,\n          width = _this$props5.width;\n      var _this$state = this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollPositionChangeReason = _this$state.scrollPositionChangeReason,\n          scrollTop = _this$state.scrollTop,\n          instanceProps = _this$state.instanceProps; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // Handle edge case where column or row count has only just increased over 0.\n      // In this case we may have to restore a previously-specified scroll offset.\n      // For more info see bvaughn/react-virtualized/issues/218\n\n\n      var columnOrRowCountJustIncreasedFromZero = columnCount > 0 && prevProps.columnCount === 0 || rowCount > 0 && prevProps.rowCount === 0; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        // @TRICKY :autoHeight and :autoWidth properties instructs Grid to leave :scrollTop and :scrollLeft management to an external HOC (eg WindowScroller).\n        // In this case we should avoid checking scrollingContainer.scrollTop and scrollingContainer.scrollLeft since it forces layout/flow.\n        if (!autoWidth && scrollLeft >= 0 && (scrollLeft !== this._scrollingContainer.scrollLeft || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (!autoHeight && scrollTop >= 0 && (scrollTop !== this._scrollingContainer.scrollTop || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Special case where the previous size was 0:\n      // In this case we don't show any windowed cells at all.\n      // So we should always recalculate offset afterwards.\n\n\n      var sizeJustIncreasedFromZero = (prevProps.width === 0 || prevProps.height === 0) && height > 0 && width > 0; // Update scroll offsets if the current :scrollToColumn or :scrollToRow values requires it\n      // @TODO Do we also need this check or can the one in componentWillUpdate() suffice?\n\n      if (this._recomputeScrollLeftFlag) {\n        this._recomputeScrollLeftFlag = false;\n\n        this._updateScrollLeftForScrollToColumn(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          previousCellsCount: prevProps.columnCount,\n          previousCellSize: prevProps.columnWidth,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToColumn,\n          previousSize: prevProps.width,\n          scrollOffset: scrollLeft,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToColumn,\n          size: width,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollLeftForScrollToColumn(_this2.props);\n          }\n        });\n      }\n\n      if (this._recomputeScrollTopFlag) {\n        this._recomputeScrollTopFlag = false;\n\n        this._updateScrollTopForScrollToRow(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          previousCellsCount: prevProps.rowCount,\n          previousCellSize: prevProps.rowHeight,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToRow,\n          previousSize: prevProps.height,\n          scrollOffset: scrollTop,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToRow,\n          size: height,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollTopForScrollToRow(_this2.props);\n          }\n        });\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnGridRenderedHelper(); // Changes to :scrollLeft or :scrollTop should also notify :onScroll listeners\n\n\n      if (scrollLeft !== prevState.scrollLeft || scrollTop !== prevState.scrollTop) {\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n\n        this._invokeOnScrollMemoizer({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          totalColumnsWidth: totalColumnsWidth,\n          totalRowsHeight: totalRowsHeight\n        });\n      }\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n    /**\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoContainerWidth = _this$props6.autoContainerWidth,\n          autoHeight = _this$props6.autoHeight,\n          autoWidth = _this$props6.autoWidth,\n          className = _this$props6.className,\n          containerProps = _this$props6.containerProps,\n          containerRole = _this$props6.containerRole,\n          containerStyle = _this$props6.containerStyle,\n          height = _this$props6.height,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          role = _this$props6.role,\n          style = _this$props6.style,\n          tabIndex = _this$props6.tabIndex,\n          width = _this$props6.width;\n      var _this$state2 = this.state,\n          instanceProps = _this$state2.instanceProps,\n          needToResetStyleCache = _this$state2.needToResetStyleCache;\n\n      var isScrolling = this._isScrolling();\n\n      var gridStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        width: autoWidth ? 'auto' : width,\n        WebkitOverflowScrolling: 'touch',\n        willChange: 'transform'\n      };\n\n      if (needToResetStyleCache) {\n        this._styleCache = {};\n      } // calculate _styleCache here\n      // if state.isScrolling (not from _isScrolling) then reset\n\n\n      if (!this.state.isScrolling) {\n        this._resetStyleCache();\n      } // calculate children to render here\n\n\n      this._calculateChildrenToRender(this.props, this.state);\n\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize(); // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n      var horizontalScrollBarSize = totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n\n      if (horizontalScrollBarSize !== this._horizontalScrollBarSize || verticalScrollBarSize !== this._verticalScrollBarSize) {\n        this._horizontalScrollBarSize = horizontalScrollBarSize;\n        this._verticalScrollBarSize = verticalScrollBarSize;\n        this._scrollbarPresenceChanged = true;\n      } // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n\n      gridStyle.overflowX = totalColumnsWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      gridStyle.overflowY = totalRowsHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      var childrenToDisplay = this._childrenToDisplay;\n      var showNoContentRenderer = childrenToDisplay.length === 0 && height > 0 && width > 0;\n      return React.createElement(\"div\", _extends({\n        ref: this._setScrollingContainerRef\n      }, containerProps, {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-readonly\": this.props['aria-readonly'],\n        className: clsx('ReactVirtualized__Grid', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({}, gridStyle, {}, style),\n        tabIndex: tabIndex\n      }), childrenToDisplay.length > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Grid__innerScrollContainer\",\n        role: containerRole,\n        style: _objectSpread({\n          width: autoContainerWidth ? 'auto' : totalColumnsWidth,\n          height: totalRowsHeight,\n          maxWidth: totalColumnsWidth,\n          maxHeight: totalRowsHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }, containerStyle)\n      }, childrenToDisplay), showNoContentRenderer && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n  }, {\n    key: \"_calculateChildrenToRender\",\n    value: function _calculateChildrenToRender() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      var cellRenderer = props.cellRenderer,\n          cellRangeRenderer = props.cellRangeRenderer,\n          columnCount = props.columnCount,\n          deferredMeasurementCache = props.deferredMeasurementCache,\n          height = props.height,\n          overscanColumnCount = props.overscanColumnCount,\n          overscanIndicesGetter = props.overscanIndicesGetter,\n          overscanRowCount = props.overscanRowCount,\n          rowCount = props.rowCount,\n          width = props.width,\n          isScrollingOptOut = props.isScrollingOptOut;\n      var scrollDirectionHorizontal = state.scrollDirectionHorizontal,\n          scrollDirectionVertical = state.scrollDirectionVertical,\n          instanceProps = state.instanceProps;\n      var scrollTop = this._initialScrollTop > 0 ? this._initialScrollTop : state.scrollTop;\n      var scrollLeft = this._initialScrollLeft > 0 ? this._initialScrollLeft : state.scrollLeft;\n\n      var isScrolling = this._isScrolling(props, state);\n\n      this._childrenToDisplay = []; // Render only enough columns and rows to cover the visible area of the grid.\n\n      if (height > 0 && width > 0) {\n        var visibleColumnIndices = instanceProps.columnSizeAndPositionManager.getVisibleCellRange({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var visibleRowIndices = instanceProps.rowSizeAndPositionManager.getVisibleCellRange({\n          containerSize: height,\n          offset: scrollTop\n        });\n        var horizontalOffsetAdjustment = instanceProps.columnSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var verticalOffsetAdjustment = instanceProps.rowSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: height,\n          offset: scrollTop\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        this._renderedColumnStartIndex = visibleColumnIndices.start;\n        this._renderedColumnStopIndex = visibleColumnIndices.stop;\n        this._renderedRowStartIndex = visibleRowIndices.start;\n        this._renderedRowStopIndex = visibleRowIndices.stop;\n        var overscanColumnIndices = overscanIndicesGetter({\n          direction: 'horizontal',\n          cellCount: columnCount,\n          overscanCellsCount: overscanColumnCount,\n          scrollDirection: scrollDirectionHorizontal,\n          startIndex: typeof visibleColumnIndices.start === 'number' ? visibleColumnIndices.start : 0,\n          stopIndex: typeof visibleColumnIndices.stop === 'number' ? visibleColumnIndices.stop : -1\n        });\n        var overscanRowIndices = overscanIndicesGetter({\n          direction: 'vertical',\n          cellCount: rowCount,\n          overscanCellsCount: overscanRowCount,\n          scrollDirection: scrollDirectionVertical,\n          startIndex: typeof visibleRowIndices.start === 'number' ? visibleRowIndices.start : 0,\n          stopIndex: typeof visibleRowIndices.stop === 'number' ? visibleRowIndices.stop : -1\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        var columnStartIndex = overscanColumnIndices.overscanStartIndex;\n        var columnStopIndex = overscanColumnIndices.overscanStopIndex;\n        var rowStartIndex = overscanRowIndices.overscanStartIndex;\n        var rowStopIndex = overscanRowIndices.overscanStopIndex; // Advanced use-cases (eg CellMeasurer) require batched measurements to determine accurate sizes.\n\n        if (deferredMeasurementCache) {\n          // If rows have a dynamic height, scan the rows we are about to render.\n          // If any have not yet been measured, then we need to render all columns initially,\n          // Because the height of the row is equal to the tallest cell within that row,\n          // (And so we can't know the height without measuring all column-cells first).\n          if (!deferredMeasurementCache.hasFixedHeight()) {\n            for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n              if (!deferredMeasurementCache.has(rowIndex, 0)) {\n                columnStartIndex = 0;\n                columnStopIndex = columnCount - 1;\n                break;\n              }\n            }\n          } // If columns have a dynamic width, scan the columns we are about to render.\n          // If any have not yet been measured, then we need to render all rows initially,\n          // Because the width of the column is equal to the widest cell within that column,\n          // (And so we can't know the width without measuring all row-cells first).\n\n\n          if (!deferredMeasurementCache.hasFixedWidth()) {\n            for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n              if (!deferredMeasurementCache.has(0, columnIndex)) {\n                rowStartIndex = 0;\n                rowStopIndex = rowCount - 1;\n                break;\n              }\n            }\n          }\n        }\n\n        this._childrenToDisplay = cellRangeRenderer({\n          cellCache: this._cellCache,\n          cellRenderer: cellRenderer,\n          columnSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          columnStartIndex: columnStartIndex,\n          columnStopIndex: columnStopIndex,\n          deferredMeasurementCache: deferredMeasurementCache,\n          horizontalOffsetAdjustment: horizontalOffsetAdjustment,\n          isScrolling: isScrolling,\n          isScrollingOptOut: isScrollingOptOut,\n          parent: this,\n          rowSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          rowStartIndex: rowStartIndex,\n          rowStopIndex: rowStopIndex,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          styleCache: this._styleCache,\n          verticalOffsetAdjustment: verticalOffsetAdjustment,\n          visibleColumnIndices: visibleColumnIndices,\n          visibleRowIndices: visibleRowIndices\n        }); // update the indices\n\n        this._columnStartIndex = columnStartIndex;\n        this._columnStopIndex = columnStopIndex;\n        this._rowStartIndex = rowStartIndex;\n        this._rowStopIndex = rowStopIndex;\n      }\n    }\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Grid.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_debounceScrollEnded\",\n    value: function _debounceScrollEnded() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = requestAnimationTimeout(this._debounceScrollEndedCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n\n    /**\n     * Check for batched CellMeasurer size invalidations.\n     * This will occur the first time one or more previously unmeasured cells are rendered.\n     */\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number' && typeof this._deferredInvalidateRowIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n      }\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref6) {\n      var _this3 = this;\n\n      var scrollLeft = _ref6.scrollLeft,\n          scrollTop = _ref6.scrollTop,\n          totalColumnsWidth = _ref6.totalColumnsWidth,\n          totalRowsHeight = _ref6.totalRowsHeight;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref7) {\n          var scrollLeft = _ref7.scrollLeft,\n              scrollTop = _ref7.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalRowsHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalColumnsWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_isScrolling\",\n    value: function _isScrolling() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      // If isScrolling is defined in props, use it to override the value in state\n      // This is a performance optimization for WindowScroller + Grid\n      return Object.hasOwnProperty.call(props, 'isScrolling') ? Boolean(props.isScrolling) : Boolean(state.isScrolling);\n    }\n  }, {\n    key: \"_maybeCallOnScrollbarPresenceChange\",\n    value: function _maybeCallOnScrollbarPresenceChange() {\n      if (this._scrollbarPresenceChanged) {\n        var onScrollbarPresenceChange = this.props.onScrollbarPresenceChange;\n        this._scrollbarPresenceChanged = false;\n        onScrollbarPresenceChange({\n          horizontal: this._horizontalScrollBarSize > 0,\n          size: this.state.instanceProps.scrollbarSize,\n          vertical: this._verticalScrollBarSize > 0\n        });\n      }\n    }\n  }, {\n    key: \"scrollToPosition\",\n\n    /**\n     * Scroll to the specified offset(s).\n     * Useful for animating position changes.\n     */\n    value: function scrollToPosition(_ref8) {\n      var scrollLeft = _ref8.scrollLeft,\n          scrollTop = _ref8.scrollTop;\n\n      var stateUpdate = Grid._getScrollToPositionStateUpdate({\n        prevState: this.state,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollLeft(props, state);\n    }\n  }, {\n    key: \"_updateScrollLeftForScrollToColumn\",\n    value: function _updateScrollLeftForScrollToColumn() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollLeftForScrollToColumnStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollTop(props, state);\n    }\n  }, {\n    key: \"_resetStyleCache\",\n    value: function _resetStyleCache() {\n      var styleCache = this._styleCache;\n      var cellCache = this._cellCache;\n      var isScrollingOptOut = this.props.isScrollingOptOut; // Reset cell and style caches once scrolling stops.\n      // This makes Grid simpler to use (since cells commonly change).\n      // And it keeps the caches from growing too large.\n      // Performance is most sensitive when a user is scrolling.\n      // Don't clear visible cells from cellCache if isScrollingOptOut is specified.\n      // This keeps the cellCache to a resonable size.\n\n      this._cellCache = {};\n      this._styleCache = {}; // Copy over the visible cell styles so avoid unnecessary re-render.\n\n      for (var rowIndex = this._rowStartIndex; rowIndex <= this._rowStopIndex; rowIndex++) {\n        for (var columnIndex = this._columnStartIndex; columnIndex <= this._columnStopIndex; columnIndex++) {\n          var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n          this._styleCache[key] = styleCache[key];\n\n          if (isScrollingOptOut) {\n            this._cellCache[key] = cellCache[key];\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_updateScrollTopForScrollToRow\",\n    value: function _updateScrollTopForScrollToRow() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollTopForScrollToRowStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var newState = {};\n\n      if (nextProps.columnCount === 0 && prevState.scrollLeft !== 0 || nextProps.rowCount === 0 && prevState.scrollTop !== 0) {\n        newState.scrollLeft = 0;\n        newState.scrollTop = 0; // only use scroll{Left,Top} from props if scrollTo{Column,Row} isn't specified\n        // scrollTo{Column,Row} should override scroll{Left,Top}\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft && nextProps.scrollToColumn < 0 || nextProps.scrollTop !== prevState.scrollTop && nextProps.scrollToRow < 0) {\n        Object.assign(newState, Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: nextProps.scrollLeft,\n          scrollTop: nextProps.scrollTop\n        }));\n      }\n\n      var instanceProps = prevState.instanceProps; // Initially we should not clearStyleCache\n\n      newState.needToResetStyleCache = false;\n\n      if (nextProps.columnWidth !== instanceProps.prevColumnWidth || nextProps.rowHeight !== instanceProps.prevRowHeight) {\n        // Reset cache. set it to {} in render\n        newState.needToResetStyleCache = true;\n      }\n\n      instanceProps.columnSizeAndPositionManager.configure({\n        cellCount: nextProps.columnCount,\n        estimatedCellSize: Grid._getEstimatedColumnSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.columnWidth)\n      });\n      instanceProps.rowSizeAndPositionManager.configure({\n        cellCount: nextProps.rowCount,\n        estimatedCellSize: Grid._getEstimatedRowSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.rowHeight)\n      });\n\n      if (instanceProps.prevColumnCount === 0 || instanceProps.prevRowCount === 0) {\n        instanceProps.prevColumnCount = 0;\n        instanceProps.prevRowCount = 0;\n      } // If scrolling is controlled outside this component, clear cache when scrolling stops\n\n\n      if (nextProps.autoHeight && nextProps.isScrolling === false && instanceProps.prevIsScrolling === true) {\n        Object.assign(newState, {\n          isScrolling: false\n        });\n      }\n\n      var maybeStateA;\n      var maybeStateB;\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevColumnCount,\n        cellSize: typeof instanceProps.prevColumnWidth === 'number' ? instanceProps.prevColumnWidth : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.columnSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.columnCount,\n        nextCellSize: typeof nextProps.columnWidth === 'number' ? nextProps.columnWidth : null,\n        nextScrollToIndex: nextProps.scrollToColumn,\n        scrollToIndex: instanceProps.prevScrollToColumn,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateA = Grid._getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState);\n        }\n      });\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevRowCount,\n        cellSize: typeof instanceProps.prevRowHeight === 'number' ? instanceProps.prevRowHeight : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.rowSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.rowCount,\n        nextCellSize: typeof nextProps.rowHeight === 'number' ? nextProps.rowHeight : null,\n        nextScrollToIndex: nextProps.scrollToRow,\n        scrollToIndex: instanceProps.prevScrollToRow,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateB = Grid._getScrollTopForScrollToRowStateUpdate(nextProps, prevState);\n        }\n      });\n      instanceProps.prevColumnCount = nextProps.columnCount;\n      instanceProps.prevColumnWidth = nextProps.columnWidth;\n      instanceProps.prevIsScrolling = nextProps.isScrolling === true;\n      instanceProps.prevRowCount = nextProps.rowCount;\n      instanceProps.prevRowHeight = nextProps.rowHeight;\n      instanceProps.prevScrollToColumn = nextProps.scrollToColumn;\n      instanceProps.prevScrollToRow = nextProps.scrollToRow; // getting scrollBarSize (moved from componentWillMount)\n\n      instanceProps.scrollbarSize = nextProps.getScrollbarSize();\n\n      if (instanceProps.scrollbarSize === undefined) {\n        instanceProps.scrollbarSizeMeasured = false;\n        instanceProps.scrollbarSize = 0;\n      } else {\n        instanceProps.scrollbarSizeMeasured = true;\n      }\n\n      newState.instanceProps = instanceProps;\n      return _objectSpread({}, newState, {}, maybeStateA, {}, maybeStateB);\n    }\n  }, {\n    key: \"_getEstimatedColumnSize\",\n    value: function _getEstimatedColumnSize(props) {\n      return typeof props.columnWidth === 'number' ? props.columnWidth : props.estimatedColumnSize;\n    }\n  }, {\n    key: \"_getEstimatedRowSize\",\n    value: function _getEstimatedRowSize(props) {\n      return typeof props.rowHeight === 'number' ? props.rowHeight : props.estimatedRowSize;\n    }\n  }, {\n    key: \"_getScrollToPositionStateUpdate\",\n\n    /**\n     * Get the updated state after scrolling to\n     * scrollLeft and scrollTop\n     */\n    value: function _getScrollToPositionStateUpdate(_ref9) {\n      var prevState = _ref9.prevState,\n          scrollLeft = _ref9.scrollLeft,\n          scrollTop = _ref9.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0) {\n        newState.scrollDirectionHorizontal = scrollLeft > prevState.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (typeof scrollTop === 'number' && scrollTop >= 0) {\n        newState.scrollDirectionVertical = scrollTop > prevState.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollTop = scrollTop;\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft || typeof scrollTop === 'number' && scrollTop >= 0 && scrollTop !== prevState.scrollTop) {\n        return newState;\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_wrapSizeGetter\",\n    value: function _wrapSizeGetter(value) {\n      return typeof value === 'function' ? value : function () {\n        return value;\n      };\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft(nextProps, prevState) {\n      var columnCount = nextProps.columnCount,\n          height = nextProps.height,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToColumn = nextProps.scrollToColumn,\n          width = nextProps.width;\n      var scrollLeft = prevState.scrollLeft,\n          instanceProps = prevState.instanceProps;\n\n      if (columnCount > 0) {\n        var finalColumn = columnCount - 1;\n        var targetIndex = scrollToColumn < 0 ? finalColumn : Math.min(finalColumn, scrollToColumn);\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n        return instanceProps.columnSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: width - scrollBarSize,\n          currentOffset: scrollLeft,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollLeftForScrollToColumnStateUpdate\",\n    value: function _getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState) {\n      var scrollLeft = prevState.scrollLeft;\n\n      var calculatedScrollLeft = Grid._getCalculatedScrollLeft(nextProps, prevState);\n\n      if (typeof calculatedScrollLeft === 'number' && calculatedScrollLeft >= 0 && scrollLeft !== calculatedScrollLeft) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: calculatedScrollLeft,\n          scrollTop: -1\n        });\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop(nextProps, prevState) {\n      var height = nextProps.height,\n          rowCount = nextProps.rowCount,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToRow = nextProps.scrollToRow,\n          width = nextProps.width;\n      var scrollTop = prevState.scrollTop,\n          instanceProps = prevState.instanceProps;\n\n      if (rowCount > 0) {\n        var finalRow = rowCount - 1;\n        var targetIndex = scrollToRow < 0 ? finalRow : Math.min(finalRow, scrollToRow);\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n        return instanceProps.rowSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: height - scrollBarSize,\n          currentOffset: scrollTop,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollTopForScrollToRowStateUpdate\",\n    value: function _getScrollTopForScrollToRowStateUpdate(nextProps, prevState) {\n      var scrollTop = prevState.scrollTop;\n\n      var calculatedScrollTop = Grid._getCalculatedScrollTop(nextProps, prevState);\n\n      if (typeof calculatedScrollTop === 'number' && calculatedScrollTop >= 0 && scrollTop !== calculatedScrollTop) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: -1,\n          scrollTop: calculatedScrollTop\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return Grid;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string.isRequired,\n  \"aria-readonly\": PropTypes.bool,\n\n  /**\n   * Set the width of the inner scrollable container to 'auto'.\n   * This is useful for single-column Grids to ensure that the column doesn't extend below a vertical scrollbar.\n   */\n  \"autoContainerWidth\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed width from the scrollingContainer so that the total width of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoWidth\": PropTypes.bool.isRequired,\n\n  /** Responsible for rendering a cell given an row and column index.  */\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof bpfrpt_proptype_CellRenderer === \"function\" ? bpfrpt_proptype_CellRenderer.isRequired ? bpfrpt_proptype_CellRenderer.isRequired : bpfrpt_proptype_CellRenderer : PropTypes.shape(bpfrpt_proptype_CellRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a group of cells given their index ranges.  */\n  \"cellRangeRenderer\": function cellRangeRenderer() {\n    return (typeof bpfrpt_proptype_CellRangeRenderer === \"function\" ? bpfrpt_proptype_CellRangeRenderer.isRequired ? bpfrpt_proptype_CellRangeRenderer.isRequired : bpfrpt_proptype_CellRangeRenderer : PropTypes.shape(bpfrpt_proptype_CellRangeRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Optional custom CSS class name to attach to root Grid element.  */\n  \"className\": PropTypes.string,\n\n  /** Number of columns in grid.  */\n  \"columnCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed column width (number) or a function that returns the width of a column given its index.  */\n  \"columnWidth\": function columnWidth() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Unfiltered props for the Grid container. */\n  \"containerProps\": PropTypes.object,\n\n  /** ARIA role for the cell-container.  */\n  \"containerRole\": PropTypes.string.isRequired,\n\n  /** Optional inline style applied to inner cell-container */\n  \"containerStyle\": PropTypes.object.isRequired,\n\n  /**\n   * If CellMeasurer is used to measure this Grid's children, this should be a pointer to its CellMeasurerCache.\n   * A shared CellMeasurerCache reference enables Grid and CellMeasurer to share measurement data.\n   */\n  \"deferredMeasurementCache\": PropTypes.object,\n\n  /**\n   * Used to estimate the total width of a Grid before all of its columns have actually been measured.\n   * The estimated total width is adjusted as columns are rendered.\n   */\n  \"estimatedColumnSize\": PropTypes.number.isRequired,\n\n  /**\n   * Used to estimate the total height of a Grid before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Exposed for testing purposes only.  */\n  \"getScrollbarSize\": PropTypes.func.isRequired,\n\n  /** Height of Grid; this property determines the number of visible (vs virtualized) rows.  */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional custom id to attach to root Grid element.  */\n  \"id\": PropTypes.string,\n\n  /**\n   * Override internal is-scrolling state tracking.\n   * This property is primarily intended for use with the WindowScroller component.\n   */\n  \"isScrolling\": PropTypes.bool,\n\n  /**\n   * Opt-out of isScrolling param passed to cellRangeRenderer.\n   * To avoid the extra render when scroll stops.\n   */\n  \"isScrollingOptOut\": PropTypes.bool.isRequired,\n\n  /** Optional renderer to be used in place of rows when either :rowCount or :columnCount is 0.  */\n  \"noContentRenderer\": function noContentRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /**\n   * Called whenever a horizontal or vertical scrollbar is added or removed.\n   * This prop is not intended for end-user use;\n   * It is used by MultiGrid to support fixed-row/fixed-column scroll syncing.\n   */\n  \"onScrollbarPresenceChange\": PropTypes.func.isRequired,\n\n  /** Callback invoked with information about the section of the Grid that was just rendered.  */\n  \"onSectionRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Number of columns to render before/after the visible section of the grid.\n   * These columns can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanColumnCount\": PropTypes.number.isRequired,\n\n  /**\n   * Calculates the number of cells to overscan before and after a specified range.\n   * This function ensures that overscanning doesn't exceed the available cells.\n   */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible section of the grid.\n   * These rows can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** ARIA role for the grid element.  */\n  \"role\": PropTypes.string.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * Should implement the following interface: ({ index: number }): number\n   */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in grid.  */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** Wait this amount of time after the last scroll event before resetting Grid `pointer-events`. */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Horizontal offset. */\n  \"scrollLeft\": PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Column index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToColumn\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToRow\": PropTypes.number.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of Grid; this property determines the number of visible (vs virtualized) columns.  */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(Grid, \"defaultProps\", {\n  'aria-label': 'grid',\n  'aria-readonly': true,\n  autoContainerWidth: false,\n  autoHeight: false,\n  autoWidth: false,\n  cellRangeRenderer: defaultCellRangeRenderer,\n  containerRole: 'rowgroup',\n  containerStyle: {},\n  estimatedColumnSize: 100,\n  estimatedRowSize: 30,\n  getScrollbarSize: scrollbarSize,\n  noContentRenderer: renderNull,\n  onScroll: function onScroll() {},\n  onScrollbarPresenceChange: function onScrollbarPresenceChange() {},\n  onSectionRendered: function onSectionRendered() {},\n  overscanColumnCount: 0,\n  overscanIndicesGetter: defaultOverscanIndicesGetter,\n  overscanRowCount: 10,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  scrollToAlignment: 'auto',\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  tabIndex: 0,\n  isScrollingOptOut: false\n});\n\npolyfill(Grid);\nexport default Grid;\nimport { bpfrpt_proptype_CellRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellRangeRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellPosition } from \"./types\";\nimport { bpfrpt_proptype_CellSize } from \"./types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"./types\";\nimport { bpfrpt_proptype_NoContentRenderer } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport { bpfrpt_proptype_ScrollbarPresenceChange } from \"./types\";\nimport { bpfrpt_proptype_RenderedSection } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"./types\";\nimport { bpfrpt_proptype_Alignment } from \"./types\";\nimport { bpfrpt_proptype_CellCache } from \"./types\";\nimport { bpfrpt_proptype_StyleCache } from \"./types\";\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";","import { caf, raf } from './animationFrame';\nvar bpfrpt_proptype_AnimationTimeoutId = process.env.NODE_ENV === 'production' ? null : {\n  \"id\": PropTypes.number.isRequired\n};\nexport var cancelAnimationTimeout = function cancelAnimationTimeout(frame) {\n  return caf(frame.id);\n};\n/**\n * Recursively calls requestAnimationFrame until a specified delay has been met or exceeded.\n * When the delay time has been reached the function you're timing out will be called.\n *\n * Credit: Joe Lambert (https://gist.github.com/joelambert/1002116#file-requesttimeout-js)\n */\n\nexport var requestAnimationTimeout = function requestAnimationTimeout(callback, delay) {\n  var start; // wait for end of processing current event handler, because event handler may be long\n\n  Promise.resolve().then(function () {\n    start = Date.now();\n  });\n\n  var timeout = function timeout() {\n    if (Date.now() - start >= delay) {\n      callback.call();\n    } else {\n      frame.id = raf(timeout);\n    }\n  };\n\n  var frame = {\n    id: raf(timeout)\n  };\n  return frame;\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_AnimationTimeoutId };","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","/**\n * Default implementation of cellRangeRenderer used by Grid.\n * This renderer supports cell-caching while the user is scrolling.\n */\nexport default function defaultCellRangeRenderer(_ref) {\n  var cellCache = _ref.cellCache,\n      cellRenderer = _ref.cellRenderer,\n      columnSizeAndPositionManager = _ref.columnSizeAndPositionManager,\n      columnStartIndex = _ref.columnStartIndex,\n      columnStopIndex = _ref.columnStopIndex,\n      deferredMeasurementCache = _ref.deferredMeasurementCache,\n      horizontalOffsetAdjustment = _ref.horizontalOffsetAdjustment,\n      isScrolling = _ref.isScrolling,\n      isScrollingOptOut = _ref.isScrollingOptOut,\n      parent = _ref.parent,\n      rowSizeAndPositionManager = _ref.rowSizeAndPositionManager,\n      rowStartIndex = _ref.rowStartIndex,\n      rowStopIndex = _ref.rowStopIndex,\n      styleCache = _ref.styleCache,\n      verticalOffsetAdjustment = _ref.verticalOffsetAdjustment,\n      visibleColumnIndices = _ref.visibleColumnIndices,\n      visibleRowIndices = _ref.visibleRowIndices;\n  var renderedCells = []; // Browsers have native size limits for elements (eg Chrome 33M pixels, IE 1.5M pixes).\n  // User cannot scroll beyond these size limitations.\n  // In order to work around this, ScalingCellSizeAndPositionManager compresses offsets.\n  // We should never cache styles for compressed offsets though as this can lead to bugs.\n  // See issue #576 for more.\n\n  var areOffsetsAdjusted = columnSizeAndPositionManager.areOffsetsAdjusted() || rowSizeAndPositionManager.areOffsetsAdjusted();\n  var canCacheStyle = !isScrolling && !areOffsetsAdjusted;\n\n  for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n    var rowDatum = rowSizeAndPositionManager.getSizeAndPositionOfCell(rowIndex);\n\n    for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n      var columnDatum = columnSizeAndPositionManager.getSizeAndPositionOfCell(columnIndex);\n      var isVisible = columnIndex >= visibleColumnIndices.start && columnIndex <= visibleColumnIndices.stop && rowIndex >= visibleRowIndices.start && rowIndex <= visibleRowIndices.stop;\n      var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n      var style = void 0; // Cache style objects so shallow-compare doesn't re-render unnecessarily.\n\n      if (canCacheStyle && styleCache[key]) {\n        style = styleCache[key];\n      } else {\n        // In deferred mode, cells will be initially rendered before we know their size.\n        // Don't interfere with CellMeasurer's measurements by setting an invalid size.\n        if (deferredMeasurementCache && !deferredMeasurementCache.has(rowIndex, columnIndex)) {\n          // Position not-yet-measured cells at top/left 0,0,\n          // And give them width/height of 'auto' so they can grow larger than the parent Grid if necessary.\n          // Positioning them further to the right/bottom influences their measured size.\n          style = {\n            height: 'auto',\n            left: 0,\n            position: 'absolute',\n            top: 0,\n            width: 'auto'\n          };\n        } else {\n          style = {\n            height: rowDatum.size,\n            left: columnDatum.offset + horizontalOffsetAdjustment,\n            position: 'absolute',\n            top: rowDatum.offset + verticalOffsetAdjustment,\n            width: columnDatum.size\n          };\n          styleCache[key] = style;\n        }\n      }\n\n      var cellRendererParams = {\n        columnIndex: columnIndex,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent,\n        rowIndex: rowIndex,\n        style: style\n      };\n      var renderedCell = void 0; // Avoid re-creating cells while scrolling.\n      // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n      // If a scroll is in progress- cache and reuse cells.\n      // This cache will be thrown away once scrolling completes.\n      // However if we are scaling scroll positions and sizes, we should also avoid caching.\n      // This is because the offset changes slightly as scroll position changes and caching leads to stale values.\n      // For more info refer to issue #395\n      //\n      // If isScrollingOptOut is specified, we always cache cells.\n      // For more info refer to issue #1028\n\n      if ((isScrollingOptOut || isScrolling) && !horizontalOffsetAdjustment && !verticalOffsetAdjustment) {\n        if (!cellCache[key]) {\n          cellCache[key] = cellRenderer(cellRendererParams);\n        }\n\n        renderedCell = cellCache[key]; // If the user is no longer scrolling, don't cache cells.\n        // This makes dynamic cell content difficult for users and would also lead to a heavier memory footprint.\n      } else {\n        renderedCell = cellRenderer(cellRendererParams);\n      }\n\n      if (renderedCell == null || renderedCell === false) {\n        continue;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        warnAboutMissingStyle(parent, renderedCell);\n      }\n\n      renderedCells.push(renderedCell);\n    }\n  }\n\n  return renderedCells;\n}\n\nfunction warnAboutMissingStyle(parent, renderedCell) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (renderedCell) {\n      // If the direct child is a CellMeasurer, then we should check its child\n      // See issue #611\n      if (renderedCell.type && renderedCell.type.__internalCellMeasurerFlag) {\n        renderedCell = renderedCell.props.children;\n      }\n\n      if (renderedCell && renderedCell.props && renderedCell.props.style === undefined && parent.__warnedAboutMissingStyle !== true) {\n        parent.__warnedAboutMissingStyle = true;\n        console.warn('Rendered cell should include style property for positioning.');\n      }\n    }\n  }\n}\n\nimport { bpfrpt_proptype_CellRangeRendererParams } from \"./types\";","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n  // Make sure we render at least 1 cell extra before and after (except near boundaries)\n  // This is necessary in order to support keyboard navigation (TAB/SHIFT+TAB) in some cases\n  // For more info see issues #625\n  overscanCellsCount = Math.max(1, overscanCellsCount);\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - 1),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + 1)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","var bpfrpt_proptype_ScrollIndices = process.env.NODE_ENV === 'production' ? null : {\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_ScrollIndices };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\n/**\n * This HOC decorates a virtualized component and responds to arrow-key events by scrolling one row or column at a time.\n */\n\nvar ArrowKeyStepper = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ArrowKeyStepper, _React$PureComponent);\n\n  function ArrowKeyStepper() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ArrowKeyStepper);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ArrowKeyStepper)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollToColumn: 0,\n      scrollToRow: 0,\n      instanceProps: {\n        prevScrollToColumn: 0,\n        prevScrollToRow: 0\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onKeyDown\", function (event) {\n      var _this$props = _this.props,\n          columnCount = _this$props.columnCount,\n          disabled = _this$props.disabled,\n          mode = _this$props.mode,\n          rowCount = _this$props.rowCount;\n\n      if (disabled) {\n        return;\n      }\n\n      var _this$_getScrollState = _this._getScrollState(),\n          scrollToColumnPrevious = _this$_getScrollState.scrollToColumn,\n          scrollToRowPrevious = _this$_getScrollState.scrollToRow;\n\n      var _this$_getScrollState2 = _this._getScrollState(),\n          scrollToColumn = _this$_getScrollState2.scrollToColumn,\n          scrollToRow = _this$_getScrollState2.scrollToRow; // The above cases all prevent default event event behavior.\n      // This is to keep the grid from scrolling after the snap-to update.\n\n\n      switch (event.key) {\n        case 'ArrowDown':\n          scrollToRow = mode === 'cells' ? Math.min(scrollToRow + 1, rowCount - 1) : Math.min(_this._rowStopIndex + 1, rowCount - 1);\n          break;\n\n        case 'ArrowLeft':\n          scrollToColumn = mode === 'cells' ? Math.max(scrollToColumn - 1, 0) : Math.max(_this._columnStartIndex - 1, 0);\n          break;\n\n        case 'ArrowRight':\n          scrollToColumn = mode === 'cells' ? Math.min(scrollToColumn + 1, columnCount - 1) : Math.min(_this._columnStopIndex + 1, columnCount - 1);\n          break;\n\n        case 'ArrowUp':\n          scrollToRow = mode === 'cells' ? Math.max(scrollToRow - 1, 0) : Math.max(_this._rowStartIndex - 1, 0);\n          break;\n      }\n\n      if (scrollToColumn !== scrollToColumnPrevious || scrollToRow !== scrollToRowPrevious) {\n        event.preventDefault();\n\n        _this._updateScrollState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref) {\n      var columnStartIndex = _ref.columnStartIndex,\n          columnStopIndex = _ref.columnStopIndex,\n          rowStartIndex = _ref.rowStartIndex,\n          rowStopIndex = _ref.rowStopIndex;\n      _this._columnStartIndex = columnStartIndex;\n      _this._columnStopIndex = columnStopIndex;\n      _this._rowStartIndex = rowStartIndex;\n      _this._rowStopIndex = rowStopIndex;\n    });\n\n    return _this;\n  }\n\n  _createClass(ArrowKeyStepper, [{\n    key: \"setScrollIndexes\",\n    value: function setScrollIndexes(_ref2) {\n      var scrollToColumn = _ref2.scrollToColumn,\n          scrollToRow = _ref2.scrollToRow;\n      this.setState({\n        scrollToRow: scrollToRow,\n        scrollToColumn: scrollToColumn\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          className = _this$props2.className,\n          children = _this$props2.children;\n\n      var _this$_getScrollState3 = this._getScrollState(),\n          scrollToColumn = _this$_getScrollState3.scrollToColumn,\n          scrollToRow = _this$_getScrollState3.scrollToRow;\n\n      return React.createElement(\"div\", {\n        className: className,\n        onKeyDown: this._onKeyDown\n      }, children({\n        onSectionRendered: this._onSectionRendered,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow\n      }));\n    }\n  }, {\n    key: \"_getScrollState\",\n    value: function _getScrollState() {\n      return this.props.isControlled ? this.props : this.state;\n    }\n  }, {\n    key: \"_updateScrollState\",\n    value: function _updateScrollState(_ref3) {\n      var scrollToColumn = _ref3.scrollToColumn,\n          scrollToRow = _ref3.scrollToRow;\n      var _this$props3 = this.props,\n          isControlled = _this$props3.isControlled,\n          onScrollToChange = _this$props3.onScrollToChange;\n\n      if (typeof onScrollToChange === 'function') {\n        onScrollToChange({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n\n      if (!isControlled) {\n        this.setState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.isControlled) {\n        return {};\n      }\n\n      if (nextProps.scrollToColumn !== prevState.instanceProps.prevScrollToColumn || nextProps.scrollToRow !== prevState.instanceProps.prevScrollToRow) {\n        return _objectSpread({}, prevState, {\n          scrollToColumn: nextProps.scrollToColumn,\n          scrollToRow: nextProps.scrollToRow,\n          instanceProps: {\n            prevScrollToColumn: nextProps.scrollToColumn,\n            prevScrollToRow: nextProps.scrollToRow\n          }\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return ArrowKeyStepper;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"children\": PropTypes.func.isRequired,\n  \"className\": PropTypes.string,\n  \"columnCount\": PropTypes.number.isRequired,\n  \"disabled\": PropTypes.bool.isRequired,\n  \"isControlled\": PropTypes.bool.isRequired,\n  \"mode\": PropTypes.oneOf([\"cells\", \"edges\"]).isRequired,\n  \"onScrollToChange\": PropTypes.func,\n  \"rowCount\": PropTypes.number.isRequired,\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(ArrowKeyStepper, \"defaultProps\", {\n  disabled: false,\n  isControlled: false,\n  mode: 'edges',\n  scrollToColumn: 0,\n  scrollToRow: 0\n});\n\npolyfill(ArrowKeyStepper);\nexport default ArrowKeyStepper;\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_ScrollIndices } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport createDetectElementResize from '../vendor/detectElementResize';\nvar AutoSizer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AutoSizer, _React$Component);\n\n  function AutoSizer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AutoSizer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AutoSizer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      height: _this.props.defaultHeight || 0,\n      width: _this.props.defaultWidth || 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_parentNode\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_autoSizer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      var _this$props = _this.props,\n          disableHeight = _this$props.disableHeight,\n          disableWidth = _this$props.disableWidth,\n          onResize = _this$props.onResize;\n\n      if (_this._parentNode) {\n        // Guard against AutoSizer component being removed from the DOM immediately after being added.\n        // This can result in invalid style values which can result in NaN values if we don't handle them.\n        // See issue #150 for more context.\n        var height = _this._parentNode.offsetHeight || 0;\n        var width = _this._parentNode.offsetWidth || 0;\n        var win = _this._window || window;\n        var style = win.getComputedStyle(_this._parentNode) || {};\n        var paddingLeft = parseInt(style.paddingLeft, 10) || 0;\n        var paddingRight = parseInt(style.paddingRight, 10) || 0;\n        var paddingTop = parseInt(style.paddingTop, 10) || 0;\n        var paddingBottom = parseInt(style.paddingBottom, 10) || 0;\n        var newHeight = height - paddingTop - paddingBottom;\n        var newWidth = width - paddingLeft - paddingRight;\n\n        if (!disableHeight && _this.state.height !== newHeight || !disableWidth && _this.state.width !== newWidth) {\n          _this.setState({\n            height: height - paddingTop - paddingBottom,\n            width: width - paddingLeft - paddingRight\n          });\n\n          onResize({\n            height: height,\n            width: width\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (autoSizer) {\n      _this._autoSizer = autoSizer;\n    });\n\n    return _this;\n  }\n\n  _createClass(AutoSizer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var nonce = this.props.nonce;\n\n      if (this._autoSizer && this._autoSizer.parentNode && this._autoSizer.parentNode.ownerDocument && this._autoSizer.parentNode.ownerDocument.defaultView && this._autoSizer.parentNode instanceof this._autoSizer.parentNode.ownerDocument.defaultView.HTMLElement) {\n        // Delay access of parentNode until mount.\n        // This handles edge-cases where the component has already been unmounted before its ref has been set,\n        // As well as libraries like react-lite which have a slightly different lifecycle.\n        this._parentNode = this._autoSizer.parentNode;\n        this._window = this._autoSizer.parentNode.ownerDocument.defaultView; // Defer requiring resize handler in order to support server-side rendering.\n        // See issue #41\n\n        this._detectElementResize = createDetectElementResize(nonce, this._window);\n\n        this._detectElementResize.addResizeListener(this._parentNode, this._onResize);\n\n        this._onResize();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._detectElementResize && this._parentNode) {\n        this._detectElementResize.removeResizeListener(this._parentNode, this._onResize);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          className = _this$props2.className,\n          disableHeight = _this$props2.disableHeight,\n          disableWidth = _this$props2.disableWidth,\n          style = _this$props2.style;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width; // Outer div should not force width/height since that may prevent containers from shrinking.\n      // Inner component should overflow and use calculated width/height.\n      // See issue #68 for more information.\n\n      var outerStyle = {\n        overflow: 'visible'\n      };\n      var childParams = {};\n\n      if (!disableHeight) {\n        outerStyle.height = 0;\n        childParams.height = height;\n      }\n\n      if (!disableWidth) {\n        outerStyle.width = 0;\n        childParams.width = width;\n      }\n      /**\n       * TODO: Avoid rendering children before the initial measurements have been collected.\n       * At best this would just be wasting cycles.\n       * Add this check into version 10 though as it could break too many ref callbacks in version 9.\n       * Note that if default width/height props were provided this would still work with SSR.\n      if (\n        height !== 0 &&\n        width !== 0\n      ) {\n        child = children({ height, width })\n      }\n      */\n\n\n      return React.createElement(\"div\", {\n        className: className,\n        ref: this._setRef,\n        style: _objectSpread({}, outerStyle, {}, style)\n      }, children(childParams));\n    }\n  }]);\n\n  return AutoSizer;\n}(React.Component), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /** Function responsible for rendering children.*/\n  \"children\": PropTypes.func.isRequired,\n\n  /** Optional custom CSS class name to attach to root AutoSizer element.  */\n  \"className\": PropTypes.string,\n\n  /** Default height to use for initial render; useful for SSR */\n  \"defaultHeight\": PropTypes.number,\n\n  /** Default width to use for initial render; useful for SSR */\n  \"defaultWidth\": PropTypes.number,\n\n  /** Disable dynamic :height property */\n  \"disableHeight\": PropTypes.bool.isRequired,\n\n  /** Disable dynamic :width property */\n  \"disableWidth\": PropTypes.bool.isRequired,\n\n  /** Nonce of the inlined stylesheet for Content Security Policy */\n  \"nonce\": PropTypes.string,\n\n  /** Callback to be invoked on-resize */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object\n}), _temp);\n\n_defineProperty(AutoSizer, \"defaultProps\", {\n  onResize: function onResize() {},\n  disableHeight: false,\n  disableWidth: false,\n  style: {}\n});\n\nexport { AutoSizer as default };\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\n\n/**\n * Wraps a cell and measures its rendered content.\n * Measurements are stored in a per-cell cache.\n * Cached-content is not be re-measured.\n */\nvar CellMeasurer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CellMeasurer, _React$PureComponent);\n\n  function CellMeasurer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CellMeasurer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CellMeasurer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_measure\", function () {\n      var _this$props = _this.props,\n          cache = _this$props.cache,\n          _this$props$columnInd = _this$props.columnIndex,\n          columnIndex = _this$props$columnInd === void 0 ? 0 : _this$props$columnInd,\n          parent = _this$props.parent,\n          _this$props$rowIndex = _this$props.rowIndex,\n          rowIndex = _this$props$rowIndex === void 0 ? _this.props.index || 0 : _this$props$rowIndex;\n\n      var _this$_getCellMeasure = _this._getCellMeasurements(),\n          height = _this$_getCellMeasure.height,\n          width = _this$_getCellMeasure.width;\n\n      if (height !== cache.getHeight(rowIndex, columnIndex) || width !== cache.getWidth(rowIndex, columnIndex)) {\n        cache.set(rowIndex, columnIndex, width, height);\n\n        if (parent && typeof parent.recomputeGridSize === 'function') {\n          parent.recomputeGridSize({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('CellMeasurer registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      if (element) {\n        _this._maybeMeasureCell();\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(CellMeasurer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return typeof children === 'function' ? children({\n        measure: this._measure,\n        registerChild: this._registerChild\n      }) : children;\n    }\n  }, {\n    key: \"_getCellMeasurements\",\n    value: function _getCellMeasurements() {\n      var cache = this.props.cache;\n      var node = this._child || findDOMNode(this); // TODO Check for a bad combination of fixedWidth and missing numeric width or vice versa with height\n\n      if (node && node.ownerDocument && node.ownerDocument.defaultView && node instanceof node.ownerDocument.defaultView.HTMLElement) {\n        var styleWidth = node.style.width;\n        var styleHeight = node.style.height; // If we are re-measuring a cell that has already been measured,\n        // It will have a hard-coded width/height from the previous measurement.\n        // The fact that we are measuring indicates this measurement is probably stale,\n        // So explicitly clear it out (eg set to \"auto\") so we can recalculate.\n        // See issue #593 for more info.\n        // Even if we are measuring initially- if we're inside of a MultiGrid component,\n        // Explicitly clear width/height before measuring to avoid being tainted by another Grid.\n        // eg top/left Grid renders before bottom/right Grid\n        // Since the CellMeasurerCache is shared between them this taints derived cell size values.\n\n        if (!cache.hasFixedWidth()) {\n          node.style.width = 'auto';\n        }\n\n        if (!cache.hasFixedHeight()) {\n          node.style.height = 'auto';\n        }\n\n        var height = Math.ceil(node.offsetHeight);\n        var width = Math.ceil(node.offsetWidth); // Reset after measuring to avoid breaking styles; see #660\n\n        if (styleWidth) {\n          node.style.width = styleWidth;\n        }\n\n        if (styleHeight) {\n          node.style.height = styleHeight;\n        }\n\n        return {\n          height: height,\n          width: width\n        };\n      } else {\n        return {\n          height: 0,\n          width: 0\n        };\n      }\n    }\n  }, {\n    key: \"_maybeMeasureCell\",\n    value: function _maybeMeasureCell() {\n      var _this$props2 = this.props,\n          cache = _this$props2.cache,\n          _this$props2$columnIn = _this$props2.columnIndex,\n          columnIndex = _this$props2$columnIn === void 0 ? 0 : _this$props2$columnIn,\n          parent = _this$props2.parent,\n          _this$props2$rowIndex = _this$props2.rowIndex,\n          rowIndex = _this$props2$rowIndex === void 0 ? this.props.index || 0 : _this$props2$rowIndex;\n\n      if (!cache.has(rowIndex, columnIndex)) {\n        var _this$_getCellMeasure2 = this._getCellMeasurements(),\n            height = _this$_getCellMeasure2.height,\n            width = _this$_getCellMeasure2.width;\n\n        cache.set(rowIndex, columnIndex, width, height); // If size has changed, let Grid know to re-render.\n\n        if (parent && typeof parent.invalidateCellSizeAfterRender === 'function') {\n          parent.invalidateCellSizeAfterRender({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    }\n  }]);\n\n  return CellMeasurer;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"cache\": function cache() {\n    return (typeof bpfrpt_proptype_CellMeasureCache === \"function\" ? bpfrpt_proptype_CellMeasureCache.isRequired ? bpfrpt_proptype_CellMeasureCache.isRequired : bpfrpt_proptype_CellMeasureCache : PropTypes.shape(bpfrpt_proptype_CellMeasureCache).isRequired).apply(this, arguments);\n  },\n  \"children\": PropTypes.oneOfType([PropTypes.func, PropTypes.node]).isRequired,\n  \"columnIndex\": PropTypes.number,\n  \"index\": PropTypes.number,\n  \"parent\": PropTypes.shape({\n    invalidateCellSizeAfterRender: PropTypes.func,\n    recomputeGridSize: PropTypes.func\n  }).isRequired,\n  \"rowIndex\": PropTypes.number\n}), _temp); // Used for DEV mode warning check\n\n_defineProperty(CellMeasurer, \"__internalCellMeasurerFlag\", false);\n\nexport { CellMeasurer as default };\n\nif (process.env.NODE_ENV !== 'production') {\n  CellMeasurer.__internalCellMeasurerFlag = true;\n}\n\nimport { bpfrpt_proptype_CellMeasureCache } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nexport var DEFAULT_HEIGHT = 30;\nexport var DEFAULT_WIDTH = 100; // Enables more intelligent mapping of a given column and row index to an item ID.\n// This prevents a cell cache from being invalidated when its parent collection is modified.\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCache =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCache() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCache);\n\n    _defineProperty(this, \"_cellHeightCache\", {});\n\n    _defineProperty(this, \"_cellWidthCache\", {});\n\n    _defineProperty(this, \"_columnWidthCache\", {});\n\n    _defineProperty(this, \"_rowHeightCache\", {});\n\n    _defineProperty(this, \"_defaultHeight\", void 0);\n\n    _defineProperty(this, \"_defaultWidth\", void 0);\n\n    _defineProperty(this, \"_minHeight\", void 0);\n\n    _defineProperty(this, \"_minWidth\", void 0);\n\n    _defineProperty(this, \"_keyMapper\", void 0);\n\n    _defineProperty(this, \"_hasFixedHeight\", void 0);\n\n    _defineProperty(this, \"_hasFixedWidth\", void 0);\n\n    _defineProperty(this, \"_columnCount\", 0);\n\n    _defineProperty(this, \"_rowCount\", 0);\n\n    _defineProperty(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      var key = _this._keyMapper(0, index);\n\n      return _this._columnWidthCache[key] !== undefined ? _this._columnWidthCache[key] : _this._defaultWidth;\n    });\n\n    _defineProperty(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      var key = _this._keyMapper(index, 0);\n\n      return _this._rowHeightCache[key] !== undefined ? _this._rowHeightCache[key] : _this._defaultHeight;\n    });\n\n    var defaultHeight = params.defaultHeight,\n        defaultWidth = params.defaultWidth,\n        fixedHeight = params.fixedHeight,\n        fixedWidth = params.fixedWidth,\n        keyMapper = params.keyMapper,\n        minHeight = params.minHeight,\n        minWidth = params.minWidth;\n    this._hasFixedHeight = fixedHeight === true;\n    this._hasFixedWidth = fixedWidth === true;\n    this._minHeight = minHeight || 0;\n    this._minWidth = minWidth || 0;\n    this._keyMapper = keyMapper || defaultKeyMapper;\n    this._defaultHeight = Math.max(this._minHeight, typeof defaultHeight === 'number' ? defaultHeight : DEFAULT_HEIGHT);\n    this._defaultWidth = Math.max(this._minWidth, typeof defaultWidth === 'number' ? defaultWidth : DEFAULT_WIDTH);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (this._hasFixedHeight === false && this._hasFixedWidth === false) {\n        console.warn(\"CellMeasurerCache should only measure a cell's width or height. \" + 'You have configured CellMeasurerCache to measure both. ' + 'This will result in poor performance.');\n      }\n\n      if (this._hasFixedHeight === false && this._defaultHeight === 0) {\n        console.warn('Fixed height CellMeasurerCache should specify a :defaultHeight greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n\n      if (this._hasFixedWidth === false && this._defaultWidth === 0) {\n        console.warn('Fixed width CellMeasurerCache should specify a :defaultWidth greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n    }\n  }\n\n  _createClass(CellMeasurerCache, [{\n    key: \"clear\",\n    value: function clear(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      delete this._cellHeightCache[key];\n      delete this._cellWidthCache[key];\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellHeightCache = {};\n      this._cellWidthCache = {};\n      this._columnWidthCache = {};\n      this._rowHeightCache = {};\n      this._rowCount = 0;\n      this._columnCount = 0;\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._hasFixedHeight;\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._hasFixedWidth;\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedHeight) {\n        return this._defaultHeight;\n      } else {\n        var _key = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellHeightCache[_key] !== undefined ? Math.max(this._minHeight, this._cellHeightCache[_key]) : this._defaultHeight;\n      }\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedWidth) {\n        return this._defaultWidth;\n      } else {\n        var _key2 = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellWidthCache[_key2] !== undefined ? Math.max(this._minWidth, this._cellWidthCache[_key2]) : this._defaultWidth;\n      }\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      return this._cellHeightCache[key] !== undefined;\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      if (columnIndex >= this._columnCount) {\n        this._columnCount = columnIndex + 1;\n      }\n\n      if (rowIndex >= this._rowCount) {\n        this._rowCount = rowIndex + 1;\n      } // Size is cached per cell so we don't have to re-measure if cells are re-ordered.\n\n\n      this._cellHeightCache[key] = height;\n      this._cellWidthCache[key] = width;\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"_updateCachedColumnAndRowSizes\",\n    value: function _updateCachedColumnAndRowSizes(rowIndex, columnIndex) {\n      // :columnWidth and :rowHeight are derived based on all cells in a column/row.\n      // Pre-cache these derived values for faster lookup later.\n      // Reads are expected to occur more frequently than writes in this case.\n      // Only update non-fixed dimensions though to avoid doing unnecessary work.\n      if (!this._hasFixedWidth) {\n        var columnWidth = 0;\n\n        for (var i = 0; i < this._rowCount; i++) {\n          columnWidth = Math.max(columnWidth, this.getWidth(i, columnIndex));\n        }\n\n        var columnKey = this._keyMapper(0, columnIndex);\n\n        this._columnWidthCache[columnKey] = columnWidth;\n      }\n\n      if (!this._hasFixedHeight) {\n        var rowHeight = 0;\n\n        for (var _i = 0; _i < this._columnCount; _i++) {\n          rowHeight = Math.max(rowHeight, this.getHeight(rowIndex, _i));\n        }\n\n        var rowKey = this._keyMapper(rowIndex, 0);\n\n        this._rowHeightCache[rowKey] = rowHeight;\n      }\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCache;\n}();\n\nexport { CellMeasurerCache as default };\n\nfunction defaultKeyMapper(rowIndex, columnIndex) {\n  return \"\".concat(rowIndex, \"-\").concat(columnIndex);\n}\n\nimport { bpfrpt_proptype_CellMeasureCache } from \"./types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize'; // @TODO Merge Collection and CollectionView\n\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nvar IS_SCROLLING_TIMEOUT = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n/**\n * Monitors changes in properties (eg. cellCount) and state (eg. scroll offsets) to determine when rendering needs to occur.\n * This component does not render any visible content itself; it defers to the specified :cellLayoutManager.\n */\n\nvar CollectionView =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CollectionView, _React$PureComponent);\n\n  // Invokes callbacks only when their values have changed.\n  function CollectionView() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CollectionView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CollectionView)).call.apply(_getPrototypeOf2, [this].concat(args))); // If this component is being rendered server-side, getScrollbarSize() will return undefined.\n    // We handle this case in componentDidMount()\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_calculateSizeAndPositionDataOnNextUpdate\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnSectionRenderedHelper\", function () {\n      var _this$props = _this.props,\n          cellLayoutManager = _this$props.cellLayoutManager,\n          onSectionRendered = _this$props.onSectionRendered;\n\n      _this._onSectionRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          indices: cellLayoutManager.getLastRenderedIndices()\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_updateScrollPositionForScrollToCell\", function () {\n      var _this$props2 = _this.props,\n          cellLayoutManager = _this$props2.cellLayoutManager,\n          height = _this$props2.height,\n          scrollToAlignment = _this$props2.scrollToAlignment,\n          scrollToCell = _this$props2.scrollToCell,\n          width = _this$props2.width;\n      var _this$state = _this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop;\n\n      if (scrollToCell >= 0) {\n        var scrollPosition = cellLayoutManager.getScrollPositionForCell({\n          align: scrollToAlignment,\n          cellIndex: scrollToCell,\n          height: height,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          width: width\n        });\n\n        if (scrollPosition.scrollLeft !== scrollLeft || scrollPosition.scrollTop !== scrollTop) {\n          _this._setScrollPosition(scrollPosition);\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target !== _this._scrollingContainer) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._enablePointerEventsAfterDelay(); // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scrollTop never exceeds the total height.\n\n\n      var _this$props3 = _this.props,\n          cellLayoutManager = _this$props3.cellLayoutManager,\n          height = _this$props3.height,\n          isScrollingChange = _this$props3.isScrollingChange,\n          width = _this$props3.width;\n      var scrollbarSize = _this._scrollbarSize;\n\n      var _cellLayoutManager$ge = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge.height,\n          totalWidth = _cellLayoutManager$ge.width;\n\n      var scrollLeft = Math.max(0, Math.min(totalWidth - width + scrollbarSize, event.target.scrollLeft));\n      var scrollTop = Math.max(0, Math.min(totalHeight - height + scrollbarSize, event.target.scrollTop)); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (_this.state.scrollLeft !== scrollLeft || _this.state.scrollTop !== scrollTop) {\n        // Browsers with cancelable scroll events (eg. Firefox) interrupt scrolling animations if scrollTop/scrollLeft is set.\n        // Other browsers (eg. Safari) don't scroll as well without the help under certain conditions (DOM or style changes during scrolling).\n        // All things considered, this seems to be the best current work around that I'm aware of.\n        // For more information see https://github.com/bvaughn/react-virtualized/pull/124\n        var scrollPositionChangeReason = event.cancelable ? SCROLL_POSITION_CHANGE_REASONS.OBSERVED : SCROLL_POSITION_CHANGE_REASONS.REQUESTED; // Synchronously set :isScrolling the first time (since _setNextState will reschedule its animation frame each time it's called)\n\n        if (!_this.state.isScrolling) {\n          isScrollingChange(true);\n        }\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollPositionChangeReason: scrollPositionChangeReason,\n          scrollTop: scrollTop\n        });\n      }\n\n      _this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalWidth: totalWidth,\n        totalHeight: totalHeight\n      });\n    });\n\n    _this._scrollbarSize = getScrollbarSize();\n\n    if (_this._scrollbarSize === undefined) {\n      _this._scrollbarSizeMeasured = false;\n      _this._scrollbarSize = 0;\n    } else {\n      _this._scrollbarSizeMeasured = true;\n    }\n\n    return _this;\n  }\n  /**\n   * Forced recompute of cell sizes and positions.\n   * This function should be called if cell sizes have changed but nothing else has.\n   * Since cell positions are calculated by callbacks, the collection view has no way of detecting when the underlying data has changed.\n   */\n\n\n  _createClass(CollectionView, [{\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._calculateSizeAndPositionDataOnNextUpdate = true;\n      this.forceUpdate();\n    }\n    /* ---------------------------- Component lifecycle methods ---------------------------- */\n\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          cellLayoutManager = _this$props4.cellLayoutManager,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToCell = _this$props4.scrollToCell,\n          scrollTop = _this$props4.scrollTop; // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n      if (!this._scrollbarSizeMeasured) {\n        this._scrollbarSize = getScrollbarSize();\n        this._scrollbarSizeMeasured = true;\n        this.setState({});\n      }\n\n      if (scrollToCell >= 0) {\n        this._updateScrollPositionForScrollToCell();\n      } else if (scrollLeft >= 0 || scrollTop >= 0) {\n        this._setScrollPosition({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      } // Update onSectionRendered callback.\n\n\n      this._invokeOnSectionRenderedHelper();\n\n      var _cellLayoutManager$ge2 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge2.height,\n          totalWidth = _cellLayoutManager$ge2.width; // Initialize onScroll callback.\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalHeight: totalHeight,\n        totalWidth: totalWidth\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this$props5 = this.props,\n          height = _this$props5.height,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToCell = _this$props5.scrollToCell,\n          width = _this$props5.width;\n      var _this$state2 = this.state,\n          scrollLeft = _this$state2.scrollLeft,\n          scrollPositionChangeReason = _this$state2.scrollPositionChangeReason,\n          scrollTop = _this$state2.scrollTop; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        if (scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft && scrollLeft !== this._scrollingContainer.scrollLeft) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop >= 0 && scrollTop !== prevState.scrollTop && scrollTop !== this._scrollingContainer.scrollTop) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Update scroll offsets if the current :scrollToCell values requires it\n\n\n      if (height !== prevProps.height || scrollToAlignment !== prevProps.scrollToAlignment || scrollToCell !== prevProps.scrollToCell || width !== prevProps.width) {\n        this._updateScrollPositionForScrollToCell();\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnSectionRenderedHelper();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoHeight = _this$props6.autoHeight,\n          cellCount = _this$props6.cellCount,\n          cellLayoutManager = _this$props6.cellLayoutManager,\n          className = _this$props6.className,\n          height = _this$props6.height,\n          horizontalOverscanSize = _this$props6.horizontalOverscanSize,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          style = _this$props6.style,\n          verticalOverscanSize = _this$props6.verticalOverscanSize,\n          width = _this$props6.width;\n      var _this$state3 = this.state,\n          isScrolling = _this$state3.isScrolling,\n          scrollLeft = _this$state3.scrollLeft,\n          scrollTop = _this$state3.scrollTop; // Memoization reset\n\n      if (this._lastRenderedCellCount !== cellCount || this._lastRenderedCellLayoutManager !== cellLayoutManager || this._calculateSizeAndPositionDataOnNextUpdate) {\n        this._lastRenderedCellCount = cellCount;\n        this._lastRenderedCellLayoutManager = cellLayoutManager;\n        this._calculateSizeAndPositionDataOnNextUpdate = false;\n        cellLayoutManager.calculateSizeAndPositionData();\n      }\n\n      var _cellLayoutManager$ge3 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge3.height,\n          totalWidth = _cellLayoutManager$ge3.width; // Safely expand the rendered area by the specified overscan amount\n\n\n      var left = Math.max(0, scrollLeft - horizontalOverscanSize);\n      var top = Math.max(0, scrollTop - verticalOverscanSize);\n      var right = Math.min(totalWidth, scrollLeft + width + horizontalOverscanSize);\n      var bottom = Math.min(totalHeight, scrollTop + height + verticalOverscanSize);\n      var childrenToDisplay = height > 0 && width > 0 ? cellLayoutManager.cellRenderers({\n        height: bottom - top,\n        isScrolling: isScrolling,\n        width: right - left,\n        x: left,\n        y: top\n      }) : [];\n      var collectionStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        WebkitOverflowScrolling: 'touch',\n        width: width,\n        willChange: 'transform'\n      }; // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalHeight > height ? this._scrollbarSize : 0;\n      var horizontalScrollBarSize = totalWidth > width ? this._scrollbarSize : 0; // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n      collectionStyle.overflowX = totalWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      collectionStyle.overflowY = totalHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Collection', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: \"grid\",\n        style: _objectSpread({}, collectionStyle, {}, style),\n        tabIndex: 0\n      }, cellCount > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Collection__innerScrollContainer\",\n        style: {\n          height: totalHeight,\n          maxHeight: totalHeight,\n          maxWidth: totalWidth,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          width: totalWidth\n        }\n      }, childrenToDisplay), cellCount === 0 && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Collection.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_enablePointerEventsAfterDelay\",\n    value: function _enablePointerEventsAfterDelay() {\n      var _this2 = this;\n\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = setTimeout(function () {\n        var isScrollingChange = _this2.props.isScrollingChange;\n        isScrollingChange(false);\n        _this2._disablePointerEventsTimeoutId = null;\n\n        _this2.setState({\n          isScrolling: false\n        });\n      }, IS_SCROLLING_TIMEOUT);\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref) {\n      var _this3 = this;\n\n      var scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          totalHeight = _ref.totalHeight,\n          totalWidth = _ref.totalWidth;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref2) {\n          var scrollLeft = _ref2.scrollLeft,\n              scrollTop = _ref2.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_setScrollPosition\",\n    value: function _setScrollPosition(_ref3) {\n      var scrollLeft = _ref3.scrollLeft,\n          scrollTop = _ref3.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (scrollLeft >= 0) {\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (scrollTop >= 0) {\n        newState.scrollTop = scrollTop;\n      }\n\n      if (scrollLeft >= 0 && scrollLeft !== this.state.scrollLeft || scrollTop >= 0 && scrollTop !== this.state.scrollTop) {\n        this.setState(newState);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.cellCount === 0 && (prevState.scrollLeft !== 0 || prevState.scrollTop !== 0)) {\n        return {\n          scrollLeft: 0,\n          scrollTop: 0,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null ? nextProps.scrollTop : prevState.scrollTop,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return CollectionView;\n}(React.PureComponent);\n\n_defineProperty(CollectionView, \"defaultProps\", {\n  'aria-label': 'grid',\n  horizontalOverscanSize: 0,\n  noContentRenderer: function noContentRenderer() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  onSectionRendered: function onSectionRendered() {\n    return null;\n  },\n  scrollToAlignment: 'auto',\n  scrollToCell: -1,\n  style: {},\n  verticalOverscanSize: 0\n});\n\nCollectionView.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /**\n   * Number of cells in collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Calculates cell sizes and positions and manages rendering the appropriate cells given a specified window.\n   */\n  cellLayoutManager: PropTypes.object.isRequired,\n\n  /**\n   * Optional custom CSS class name to attach to root Collection element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * Height of Collection; this property determines the number of visible (vs virtualized) rows.\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Optional custom id to attach to root Collection element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Enables the `Collection` to horiontally \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  horizontalOverscanSize: PropTypes.number.isRequired,\n  isScrollingChange: PropTypes.func,\n\n  /**\n   * Optional renderer to be used in place of rows when either :rowCount or :cellCount is 0.\n   */\n  noContentRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, clientWidth, scrollHeight, scrollLeft, scrollTop, scrollWidth }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked with information about the section of the Collection that was just rendered.\n   * This callback is passed a named :indices parameter which is an Array of the most recently rendered section indices.\n   */\n  onSectionRendered: PropTypes.func.isRequired,\n\n  /**\n   * Horizontal offset.\n   */\n  scrollLeft: PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /**\n   * Cell index to ensure visible (by forcefully scrolling if necessary).\n   */\n  scrollToCell: PropTypes.number.isRequired,\n\n  /**\n   * Vertical offset.\n   */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Optional custom inline style to attach to root Collection element.\n   */\n  style: PropTypes.object,\n\n  /**\n   * Enables the `Collection` to vertically \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  verticalOverscanSize: PropTypes.number.isRequired,\n\n  /**\n   * Width of Collection; this property determines the number of visible (vs virtualized) columns.\n   */\n  width: PropTypes.number.isRequired\n} : {};\npolyfill(CollectionView);\nexport default CollectionView;","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * A section of the Window.\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * Sections have a fixed size and contain 0 to many cells (tracked by their indices).\n */\nvar Section =\n/*#__PURE__*/\nfunction () {\n  function Section(_ref) {\n    var height = _ref.height,\n        width = _ref.width,\n        x = _ref.x,\n        y = _ref.y;\n\n    _classCallCheck(this, Section);\n\n    this.height = height;\n    this.width = width;\n    this.x = x;\n    this.y = y;\n    this._indexMap = {};\n    this._indices = [];\n  }\n  /** Add a cell to this section. */\n\n\n  _createClass(Section, [{\n    key: \"addCellIndex\",\n    value: function addCellIndex(_ref2) {\n      var index = _ref2.index;\n\n      if (!this._indexMap[index]) {\n        this._indexMap[index] = true;\n\n        this._indices.push(index);\n      }\n    }\n    /** Get all cell indices that have been added to this section. */\n\n  }, {\n    key: \"getCellIndices\",\n    value: function getCellIndices() {\n      return this._indices;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.x, \",\").concat(this.y, \" \").concat(this.width, \"x\").concat(this.height);\n    }\n  }]);\n\n  return Section;\n}();\n\nexport { Section as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * \n */\nimport Section from './Section';\nvar SECTION_SIZE = 100;\n\n/**\n * Contains 0 to many Sections.\n * Grows (and adds Sections) dynamically as cells are registered.\n * Automatically adds cells to the appropriate Section(s).\n */\nvar SectionManager =\n/*#__PURE__*/\nfunction () {\n  function SectionManager() {\n    var sectionSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SECTION_SIZE;\n\n    _classCallCheck(this, SectionManager);\n\n    this._sectionSize = sectionSize;\n    this._cellMetadata = [];\n    this._sections = {};\n  }\n  /**\n   * Gets all cell indices contained in the specified region.\n   * A region may encompass 1 or more Sections.\n   */\n\n\n  _createClass(SectionManager, [{\n    key: \"getCellIndices\",\n    value: function getCellIndices(_ref) {\n      var height = _ref.height,\n          width = _ref.width,\n          x = _ref.x,\n          y = _ref.y;\n      var indices = {};\n      this.getSections({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      }).forEach(function (section) {\n        return section.getCellIndices().forEach(function (index) {\n          indices[index] = index;\n        });\n      }); // Object keys are strings; this function returns numbers\n\n      return Object.keys(indices).map(function (index) {\n        return indices[index];\n      });\n    }\n    /** Get size and position information for the cell specified. */\n\n  }, {\n    key: \"getCellMetadata\",\n    value: function getCellMetadata(_ref2) {\n      var index = _ref2.index;\n      return this._cellMetadata[index];\n    }\n    /** Get all Sections overlapping the specified region. */\n\n  }, {\n    key: \"getSections\",\n    value: function getSections(_ref3) {\n      var height = _ref3.height,\n          width = _ref3.width,\n          x = _ref3.x,\n          y = _ref3.y;\n      var sectionXStart = Math.floor(x / this._sectionSize);\n      var sectionXStop = Math.floor((x + width - 1) / this._sectionSize);\n      var sectionYStart = Math.floor(y / this._sectionSize);\n      var sectionYStop = Math.floor((y + height - 1) / this._sectionSize);\n      var sections = [];\n\n      for (var sectionX = sectionXStart; sectionX <= sectionXStop; sectionX++) {\n        for (var sectionY = sectionYStart; sectionY <= sectionYStop; sectionY++) {\n          var key = \"\".concat(sectionX, \".\").concat(sectionY);\n\n          if (!this._sections[key]) {\n            this._sections[key] = new Section({\n              height: this._sectionSize,\n              width: this._sectionSize,\n              x: sectionX * this._sectionSize,\n              y: sectionY * this._sectionSize\n            });\n          }\n\n          sections.push(this._sections[key]);\n        }\n      }\n\n      return sections;\n    }\n    /** Total number of Sections based on the currently registered cells. */\n\n  }, {\n    key: \"getTotalSectionCount\",\n    value: function getTotalSectionCount() {\n      return Object.keys(this._sections).length;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var _this = this;\n\n      return Object.keys(this._sections).map(function (index) {\n        return _this._sections[index].toString();\n      });\n    }\n    /** Adds a cell to the appropriate Sections and registers it metadata for later retrievable. */\n\n  }, {\n    key: \"registerCell\",\n    value: function registerCell(_ref4) {\n      var cellMetadatum = _ref4.cellMetadatum,\n          index = _ref4.index;\n      this._cellMetadata[index] = cellMetadatum;\n      this.getSections(cellMetadatum).forEach(function (section) {\n        return section.addCellIndex({\n          index: index\n        });\n      });\n    }\n  }]);\n\n  return SectionManager;\n}();\n\nexport { SectionManager as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","/**\n * Determines a new offset that ensures a certain cell is visible, given the current offset.\n * If the cell is already visible then the current offset will be returned.\n * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n *\n * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n * @param cellOffset Offset (x or y) position for cell\n * @param cellSize Size (width or height) of cell\n * @param containerSize Total size (width or height) of the container\n * @param currentOffset Container's current (x or y) offset\n * @return Offset to use to ensure the specified cell is visible\n */\nexport default function getUpdatedOffsetForIndex(_ref) {\n  var _ref$align = _ref.align,\n      align = _ref$align === void 0 ? 'auto' : _ref$align,\n      cellOffset = _ref.cellOffset,\n      cellSize = _ref.cellSize,\n      containerSize = _ref.containerSize,\n      currentOffset = _ref.currentOffset;\n  var maxOffset = cellOffset;\n  var minOffset = maxOffset - containerSize + cellSize;\n\n  switch (align) {\n    case 'start':\n      return maxOffset;\n\n    case 'end':\n      return minOffset;\n\n    case 'center':\n      return maxOffset - (containerSize - cellSize) / 2;\n\n    default:\n      return Math.max(minOffset, Math.min(maxOffset, currentOffset));\n  }\n}","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport CollectionView from './CollectionView';\nimport _calculateSizeAndPositionData from './utils/calculateSizeAndPositionData';\nimport getUpdatedOffsetForIndex from '../utils/getUpdatedOffsetForIndex';\n\n/**\n * Renders scattered or non-linear data.\n * Unlike Grid, which renders checkerboard data, Collection can render arbitrarily positioned- even overlapping- data.\n */\nvar Collection =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Collection, _React$PureComponent);\n\n  function Collection(props, context) {\n    var _this;\n\n    _classCallCheck(this, Collection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Collection).call(this, props, context));\n    _this._cellMetadata = [];\n    _this._lastRenderedCellIndices = []; // Cell cache during scroll (for performance)\n\n    _this._cellCache = [];\n    _this._isScrollingChange = _this._isScrollingChange.bind(_assertThisInitialized(_this));\n    _this._setCollectionViewRef = _this._setCollectionViewRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Collection, [{\n    key: \"forceUpdate\",\n    value: function forceUpdate() {\n      if (this._collectionView !== undefined) {\n        this._collectionView.forceUpdate();\n      }\n    }\n    /** See Collection#recomputeCellSizesAndPositions */\n\n  }, {\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._cellCache = [];\n\n      this._collectionView.recomputeCellSizesAndPositions();\n    }\n    /** React lifecycle methods */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = _extends({}, this.props);\n\n      return React.createElement(CollectionView, _extends({\n        cellLayoutManager: this,\n        isScrollingChange: this._isScrollingChange,\n        ref: this._setCollectionViewRef\n      }, props));\n    }\n    /** CellLayoutManager interface */\n\n  }, {\n    key: \"calculateSizeAndPositionData\",\n    value: function calculateSizeAndPositionData() {\n      var _this$props = this.props,\n          cellCount = _this$props.cellCount,\n          cellSizeAndPositionGetter = _this$props.cellSizeAndPositionGetter,\n          sectionSize = _this$props.sectionSize;\n\n      var data = _calculateSizeAndPositionData({\n        cellCount: cellCount,\n        cellSizeAndPositionGetter: cellSizeAndPositionGetter,\n        sectionSize: sectionSize\n      });\n\n      this._cellMetadata = data.cellMetadata;\n      this._sectionManager = data.sectionManager;\n      this._height = data.height;\n      this._width = data.width;\n    }\n    /**\n     * Returns the most recently rendered set of cell indices.\n     */\n\n  }, {\n    key: \"getLastRenderedIndices\",\n    value: function getLastRenderedIndices() {\n      return this._lastRenderedCellIndices;\n    }\n    /**\n     * Calculates the minimum amount of change from the current scroll position to ensure the specified cell is (fully) visible.\n     */\n\n  }, {\n    key: \"getScrollPositionForCell\",\n    value: function getScrollPositionForCell(_ref) {\n      var align = _ref.align,\n          cellIndex = _ref.cellIndex,\n          height = _ref.height,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          width = _ref.width;\n      var cellCount = this.props.cellCount;\n\n      if (cellIndex >= 0 && cellIndex < cellCount) {\n        var cellMetadata = this._cellMetadata[cellIndex];\n        scrollLeft = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.x,\n          cellSize: cellMetadata.width,\n          containerSize: width,\n          currentOffset: scrollLeft,\n          targetIndex: cellIndex\n        });\n        scrollTop = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.y,\n          cellSize: cellMetadata.height,\n          containerSize: height,\n          currentOffset: scrollTop,\n          targetIndex: cellIndex\n        });\n      }\n\n      return {\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      };\n    }\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return {\n        height: this._height,\n        width: this._width\n      };\n    }\n  }, {\n    key: \"cellRenderers\",\n    value: function cellRenderers(_ref2) {\n      var _this2 = this;\n\n      var height = _ref2.height,\n          isScrolling = _ref2.isScrolling,\n          width = _ref2.width,\n          x = _ref2.x,\n          y = _ref2.y;\n      var _this$props2 = this.props,\n          cellGroupRenderer = _this$props2.cellGroupRenderer,\n          cellRenderer = _this$props2.cellRenderer; // Store for later calls to getLastRenderedIndices()\n\n      this._lastRenderedCellIndices = this._sectionManager.getCellIndices({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      });\n      return cellGroupRenderer({\n        cellCache: this._cellCache,\n        cellRenderer: cellRenderer,\n        cellSizeAndPositionGetter: function cellSizeAndPositionGetter(_ref3) {\n          var index = _ref3.index;\n          return _this2._sectionManager.getCellMetadata({\n            index: index\n          });\n        },\n        indices: this._lastRenderedCellIndices,\n        isScrolling: isScrolling\n      });\n    }\n  }, {\n    key: \"_isScrollingChange\",\n    value: function _isScrollingChange(isScrolling) {\n      if (!isScrolling) {\n        this._cellCache = [];\n      }\n    }\n  }, {\n    key: \"_setCollectionViewRef\",\n    value: function _setCollectionViewRef(ref) {\n      this._collectionView = ref;\n    }\n  }]);\n\n  return Collection;\n}(React.PureComponent);\n\n_defineProperty(Collection, \"defaultProps\", {\n  'aria-label': 'grid',\n  cellGroupRenderer: defaultCellGroupRenderer\n});\n\nexport { Collection as default };\nCollection.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Number of cells in Collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a group of cells given their indices.\n   * Should implement the following interface: ({\n   *   cellSizeAndPositionGetter:Function,\n   *   indices: Array<number>,\n   *   cellRenderer: Function\n   * }): Array<PropTypes.node>\n   */\n  cellGroupRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Responsible for rendering a cell given an row and column index.\n   * Should implement the following interface: ({ index: number, key: string, style: object }): PropTypes.element\n   */\n  cellRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback responsible for returning size and offset/position information for a given cell (index).\n   * ({ index: number }): { height: number, width: number, x: number, y: number }\n   */\n  cellSizeAndPositionGetter: PropTypes.func.isRequired,\n\n  /**\n   * Optionally override the size of the sections a Collection's cells are split into.\n   */\n  sectionSize: PropTypes.number\n} : {};\n\nfunction defaultCellGroupRenderer(_ref4) {\n  var cellCache = _ref4.cellCache,\n      cellRenderer = _ref4.cellRenderer,\n      cellSizeAndPositionGetter = _ref4.cellSizeAndPositionGetter,\n      indices = _ref4.indices,\n      isScrolling = _ref4.isScrolling;\n  return indices.map(function (index) {\n    var cellMetadata = cellSizeAndPositionGetter({\n      index: index\n    });\n    var cellRendererProps = {\n      index: index,\n      isScrolling: isScrolling,\n      key: index,\n      style: {\n        height: cellMetadata.height,\n        left: cellMetadata.x,\n        position: 'absolute',\n        top: cellMetadata.y,\n        width: cellMetadata.width\n      }\n    }; // Avoid re-creating cells while scrolling.\n    // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n    // If a scroll is in progress- cache and reuse cells.\n    // This cache will be thrown away once scrolling complets.\n\n    if (isScrolling) {\n      if (!(index in cellCache)) {\n        cellCache[index] = cellRenderer(cellRendererProps);\n      }\n\n      return cellCache[index];\n    } else {\n      return cellRenderer(cellRendererProps);\n    }\n  }).filter(function (renderedCell) {\n    return !!renderedCell;\n  });\n}\n\nimport { bpfrpt_proptype_ScrollPosition } from \"./types\";\nimport { bpfrpt_proptype_SizeInfo } from \"./types\";","import SectionManager from '../SectionManager';\nexport default function calculateSizeAndPositionData(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSizeAndPositionGetter = _ref.cellSizeAndPositionGetter,\n      sectionSize = _ref.sectionSize;\n  var cellMetadata = [];\n  var sectionManager = new SectionManager(sectionSize);\n  var height = 0;\n  var width = 0;\n\n  for (var index = 0; index < cellCount; index++) {\n    var cellMetadatum = cellSizeAndPositionGetter({\n      index: index\n    });\n\n    if (cellMetadatum.height == null || isNaN(cellMetadatum.height) || cellMetadatum.width == null || isNaN(cellMetadatum.width) || cellMetadatum.x == null || isNaN(cellMetadatum.x) || cellMetadatum.y == null || isNaN(cellMetadatum.y)) {\n      throw Error(\"Invalid metadata returned for cell \".concat(index, \":\\n        x:\").concat(cellMetadatum.x, \", y:\").concat(cellMetadatum.y, \", width:\").concat(cellMetadatum.width, \", height:\").concat(cellMetadatum.height));\n    }\n\n    height = Math.max(height, cellMetadatum.y + cellMetadatum.height);\n    width = Math.max(width, cellMetadatum.x + cellMetadatum.width);\n    cellMetadata[index] = cellMetadatum;\n    sectionManager.registerCell({\n      cellMetadatum: cellMetadatum,\n      index: index\n    });\n  }\n\n  return {\n    cellMetadata: cellMetadata,\n    height: height,\n    sectionManager: sectionManager,\n    width: width\n  };\n}","import Collection from './Collection';\nexport default Collection;\nexport { Collection };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * High-order component that auto-calculates column-widths for `Grid` cells.\n */\n\nvar ColumnSizer =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ColumnSizer, _React$PureComponent);\n\n  function ColumnSizer(props, context) {\n    var _this;\n\n    _classCallCheck(this, ColumnSizer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ColumnSizer).call(this, props, context));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ColumnSizer, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props = this.props,\n          columnMaxWidth = _this$props.columnMaxWidth,\n          columnMinWidth = _this$props.columnMinWidth,\n          columnCount = _this$props.columnCount,\n          width = _this$props.width;\n\n      if (columnMaxWidth !== prevProps.columnMaxWidth || columnMinWidth !== prevProps.columnMinWidth || columnCount !== prevProps.columnCount || width !== prevProps.width) {\n        if (this._registeredChild) {\n          this._registeredChild.recomputeGridSize();\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          columnMaxWidth = _this$props2.columnMaxWidth,\n          columnMinWidth = _this$props2.columnMinWidth,\n          columnCount = _this$props2.columnCount,\n          width = _this$props2.width;\n      var safeColumnMinWidth = columnMinWidth || 1;\n      var safeColumnMaxWidth = columnMaxWidth ? Math.min(columnMaxWidth, width) : width;\n      var columnWidth = width / columnCount;\n      columnWidth = Math.max(safeColumnMinWidth, columnWidth);\n      columnWidth = Math.min(safeColumnMaxWidth, columnWidth);\n      columnWidth = Math.floor(columnWidth);\n      var adjustedWidth = Math.min(width, columnWidth * columnCount);\n      return children({\n        adjustedWidth: adjustedWidth,\n        columnWidth: columnWidth,\n        getColumnWidth: function getColumnWidth() {\n          return columnWidth;\n        },\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(child) {\n      if (child && typeof child.recomputeGridSize !== 'function') {\n        throw Error('Unexpected child type registered; only Grid/MultiGrid children are supported.');\n      }\n\n      this._registeredChild = child;\n\n      if (this._registeredChild) {\n        this._registeredChild.recomputeGridSize();\n      }\n    }\n  }]);\n\n  return ColumnSizer;\n}(React.PureComponent);\n\nexport { ColumnSizer as default };\nColumnSizer.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized Grid.\n   * This function should implement the following signature:\n   * ({ adjustedWidth, getColumnWidth, registerChild }) => PropTypes.element\n   *\n   * The specified :getColumnWidth function should be passed to the Grid's :columnWidth property.\n   * The :registerChild should be passed to the Grid's :ref property.\n   * The :adjustedWidth property is optional; it reflects the lesser of the overall width or the width of all columns.\n   */\n  children: PropTypes.func.isRequired,\n\n  /** Optional maximum allowed column width */\n  columnMaxWidth: PropTypes.number,\n\n  /** Optional minimum allowed column width */\n  columnMinWidth: PropTypes.number,\n\n  /** Number of columns in Grid or Table child */\n  columnCount: PropTypes.number.isRequired,\n\n  /** Width of Grid or Table child */\n  width: PropTypes.number.isRequired\n} : {};","import ColumnSizer from './ColumnSizer';\nexport default ColumnSizer;\nexport { ColumnSizer };","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\n/**\n * Higher-order component that manages lazy-loading for \"infinite\" data.\n * This component decorates a virtual component and just-in-time prefetches rows as a user scrolls.\n * It is intended as a convenience component; fork it if you'd like finer-grained control over data-loading.\n */\n\nvar InfiniteLoader =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(InfiniteLoader, _React$PureComponent);\n\n  function InfiniteLoader(props, context) {\n    var _this;\n\n    _classCallCheck(this, InfiniteLoader);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InfiniteLoader).call(this, props, context));\n    _this._loadMoreRowsMemoizer = createCallbackMemoizer();\n    _this._onRowsRendered = _this._onRowsRendered.bind(_assertThisInitialized(_this));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(InfiniteLoader, [{\n    key: \"resetLoadMoreRowsCache\",\n    value: function resetLoadMoreRowsCache(autoReload) {\n      this._loadMoreRowsMemoizer = createCallbackMemoizer();\n\n      if (autoReload) {\n        this._doStuff(this._lastRenderedStartIndex, this._lastRenderedStopIndex);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return children({\n        onRowsRendered: this._onRowsRendered,\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_loadUnloadedRanges\",\n    value: function _loadUnloadedRanges(unloadedRanges) {\n      var _this2 = this;\n\n      var loadMoreRows = this.props.loadMoreRows;\n      unloadedRanges.forEach(function (unloadedRange) {\n        var promise = loadMoreRows(unloadedRange);\n\n        if (promise) {\n          promise.then(function () {\n            // Refresh the visible rows if any of them have just been loaded.\n            // Otherwise they will remain in their unloaded visual state.\n            if (isRangeVisible({\n              lastRenderedStartIndex: _this2._lastRenderedStartIndex,\n              lastRenderedStopIndex: _this2._lastRenderedStopIndex,\n              startIndex: unloadedRange.startIndex,\n              stopIndex: unloadedRange.stopIndex\n            })) {\n              if (_this2._registeredChild) {\n                forceUpdateReactVirtualizedComponent(_this2._registeredChild, _this2._lastRenderedStartIndex);\n              }\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_onRowsRendered\",\n    value: function _onRowsRendered(_ref) {\n      var startIndex = _ref.startIndex,\n          stopIndex = _ref.stopIndex;\n      this._lastRenderedStartIndex = startIndex;\n      this._lastRenderedStopIndex = stopIndex;\n\n      this._doStuff(startIndex, stopIndex);\n    }\n  }, {\n    key: \"_doStuff\",\n    value: function _doStuff(startIndex, stopIndex) {\n      var _ref2,\n          _this3 = this;\n\n      var _this$props = this.props,\n          isRowLoaded = _this$props.isRowLoaded,\n          minimumBatchSize = _this$props.minimumBatchSize,\n          rowCount = _this$props.rowCount,\n          threshold = _this$props.threshold;\n      var unloadedRanges = scanForUnloadedRanges({\n        isRowLoaded: isRowLoaded,\n        minimumBatchSize: minimumBatchSize,\n        rowCount: rowCount,\n        startIndex: Math.max(0, startIndex - threshold),\n        stopIndex: Math.min(rowCount - 1, stopIndex + threshold)\n      }); // For memoize comparison\n\n      var squashedUnloadedRanges = (_ref2 = []).concat.apply(_ref2, _toConsumableArray(unloadedRanges.map(function (_ref3) {\n        var startIndex = _ref3.startIndex,\n            stopIndex = _ref3.stopIndex;\n        return [startIndex, stopIndex];\n      })));\n\n      this._loadMoreRowsMemoizer({\n        callback: function callback() {\n          _this3._loadUnloadedRanges(unloadedRanges);\n        },\n        indices: {\n          squashedUnloadedRanges: squashedUnloadedRanges\n        }\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(registeredChild) {\n      this._registeredChild = registeredChild;\n    }\n  }]);\n\n  return InfiniteLoader;\n}(React.PureComponent);\n/**\n * Determines if the specified start/stop range is visible based on the most recently rendered range.\n */\n\n\n_defineProperty(InfiniteLoader, \"defaultProps\", {\n  minimumBatchSize: 10,\n  rowCount: 0,\n  threshold: 15\n});\n\nexport { InfiniteLoader as default };\nInfiniteLoader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized component.\n   * This function should implement the following signature:\n   * ({ onRowsRendered, registerChild }) => PropTypes.element\n   *\n   * The specified :onRowsRendered function should be passed through to the child's :onRowsRendered property.\n   * The :registerChild callback should be set as the virtualized component's :ref.\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Function responsible for tracking the loaded state of each row.\n   * It should implement the following signature: ({ index: number }): boolean\n   */\n  isRowLoaded: PropTypes.func.isRequired,\n\n  /**\n   * Callback to be invoked when more rows must be loaded.\n   * It should implement the following signature: ({ startIndex, stopIndex }): Promise\n   * The returned Promise should be resolved once row data has finished loading.\n   * It will be used to determine when to refresh the list with the newly-loaded data.\n   * This callback may be called multiple times in reaction to a single scroll event.\n   */\n  loadMoreRows: PropTypes.func.isRequired,\n\n  /**\n   * Minimum number of rows to be loaded at a time.\n   * This property can be used to batch requests to reduce HTTP requests.\n   */\n  minimumBatchSize: PropTypes.number.isRequired,\n\n  /**\n   * Number of rows in list; can be arbitrary high number if actual number is unknown.\n   */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Threshold at which to pre-fetch data.\n   * A threshold X means that data will start loading when a user scrolls within X rows.\n   * This value defaults to 15.\n   */\n  threshold: PropTypes.number.isRequired\n} : {};\nexport function isRangeVisible(_ref4) {\n  var lastRenderedStartIndex = _ref4.lastRenderedStartIndex,\n      lastRenderedStopIndex = _ref4.lastRenderedStopIndex,\n      startIndex = _ref4.startIndex,\n      stopIndex = _ref4.stopIndex;\n  return !(startIndex > lastRenderedStopIndex || stopIndex < lastRenderedStartIndex);\n}\n/**\n * Returns all of the ranges within a larger range that contain unloaded rows.\n */\n\nexport function scanForUnloadedRanges(_ref5) {\n  var isRowLoaded = _ref5.isRowLoaded,\n      minimumBatchSize = _ref5.minimumBatchSize,\n      rowCount = _ref5.rowCount,\n      startIndex = _ref5.startIndex,\n      stopIndex = _ref5.stopIndex;\n  var unloadedRanges = [];\n  var rangeStartIndex = null;\n  var rangeStopIndex = null;\n\n  for (var index = startIndex; index <= stopIndex; index++) {\n    var loaded = isRowLoaded({\n      index: index\n    });\n\n    if (!loaded) {\n      rangeStopIndex = index;\n\n      if (rangeStartIndex === null) {\n        rangeStartIndex = index;\n      }\n    } else if (rangeStopIndex !== null) {\n      unloadedRanges.push({\n        startIndex: rangeStartIndex,\n        stopIndex: rangeStopIndex\n      });\n      rangeStartIndex = rangeStopIndex = null;\n    }\n  } // If :rangeStopIndex is not null it means we haven't ran out of unloaded rows.\n  // Scan forward to try filling our :minimumBatchSize.\n\n\n  if (rangeStopIndex !== null) {\n    var potentialStopIndex = Math.min(Math.max(rangeStopIndex, rangeStartIndex + minimumBatchSize - 1), rowCount - 1);\n\n    for (var _index = rangeStopIndex + 1; _index <= potentialStopIndex; _index++) {\n      if (!isRowLoaded({\n        index: _index\n      })) {\n        rangeStopIndex = _index;\n      } else {\n        break;\n      }\n    }\n\n    unloadedRanges.push({\n      startIndex: rangeStartIndex,\n      stopIndex: rangeStopIndex\n    });\n  } // Check to see if our first range ended prematurely.\n  // In this case we should scan backwards to try filling our :minimumBatchSize.\n\n\n  if (unloadedRanges.length) {\n    var firstUnloadedRange = unloadedRanges[0];\n\n    while (firstUnloadedRange.stopIndex - firstUnloadedRange.startIndex + 1 < minimumBatchSize && firstUnloadedRange.startIndex > 0) {\n      var _index2 = firstUnloadedRange.startIndex - 1;\n\n      if (!isRowLoaded({\n        index: _index2\n      })) {\n        firstUnloadedRange.startIndex = _index2;\n      } else {\n        break;\n      }\n    }\n  }\n\n  return unloadedRanges;\n}\n/**\n * Since RV components use shallowCompare we need to force a render (even though props haven't changed).\n * However InfiniteLoader may wrap a Grid or it may wrap a Table or List.\n * In the first case the built-in React forceUpdate() method is sufficient to force a re-render,\n * But in the latter cases we need to use the RV-specific forceUpdateGrid() method.\n * Else the inner Grid will not be re-rendered and visuals may be stale.\n *\n * Additionally, while a Grid is scrolling the cells can be cached,\n * So it's important to invalidate that cache by recalculating sizes\n * before forcing a rerender.\n */\n\nexport function forceUpdateReactVirtualizedComponent(component) {\n  var currentIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var recomputeSize = typeof component.recomputeGridSize === 'function' ? component.recomputeGridSize : component.recomputeRowHeights;\n\n  if (recomputeSize) {\n    recomputeSize.call(component, currentIndex);\n  } else {\n    component.forceUpdate();\n  }\n}","import InfiniteLoader from './InfiniteLoader';\nexport default InfiniteLoader;\nexport { InfiniteLoader };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport * as React from 'react';\nimport clsx from 'clsx';\n/**\n * It is inefficient to create and manage a large list of DOM elements within a scrolling container\n * if only a few of those elements are visible. The primary purpose of this component is to improve\n * performance by only rendering the DOM nodes that a user is able to see based on their current\n * scroll position.\n *\n * This component renders a virtualized list of elements with either fixed or dynamic heights.\n */\n\nvar List = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(List, _React$PureComponent);\n\n  function List() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, List);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(List)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"Grid\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRenderer\", function (_ref) {\n      var parent = _ref.parent,\n          rowIndex = _ref.rowIndex,\n          style = _ref.style,\n          isScrolling = _ref.isScrolling,\n          isVisible = _ref.isVisible,\n          key = _ref.key;\n      var rowRenderer = _this.props.rowRenderer; // TRICKY The style object is sometimes cached by Grid.\n      // This prevents new style objects from bypassing shallowCompare().\n      // However as of React 16, style props are auto-frozen (at least in dev mode)\n      // Check to make sure we can still modify the style before proceeding.\n      // https://github.com/facebook/react/commit/977357765b44af8ff0cfea327866861073095c12#commitcomment-20648713\n\n      var widthDescriptor = Object.getOwnPropertyDescriptor(style, 'width');\n\n      if (widthDescriptor && widthDescriptor.writable) {\n        // By default, List cells should be 100% width.\n        // This prevents them from flowing under a scrollbar (if present).\n        style.width = '100%';\n      }\n\n      return rowRenderer({\n        index: rowIndex,\n        style: style,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (ref) {\n      _this.Grid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (_ref2) {\n      var clientHeight = _ref2.clientHeight,\n          scrollHeight = _ref2.scrollHeight,\n          scrollTop = _ref2.scrollTop;\n      var onScroll = _this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref3) {\n      var rowOverscanStartIndex = _ref3.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref3.rowOverscanStopIndex,\n          rowStartIndex = _ref3.rowStartIndex,\n          rowStopIndex = _ref3.rowStopIndex;\n      var onRowsRendered = _this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref4) {\n      var alignment = _ref4.alignment,\n          index = _ref4.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index,\n          columnIndex: 0\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref6 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref6$columnIndex = _ref6.columnIndex,\n          columnIndex = _ref6$columnIndex === void 0 ? 0 : _ref6$columnIndex,\n          _ref6$rowIndex = _ref6.rowIndex,\n          rowIndex = _ref6$rowIndex === void 0 ? 0 : _ref6$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index,\n          columnIndex: 0\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          scrollToIndex = _this$props.scrollToIndex,\n          width = _this$props.width;\n      var classNames = clsx('ReactVirtualized__List', className);\n      return React.createElement(Grid, _extends({}, this.props, {\n        autoContainerWidth: true,\n        cellRenderer: this._cellRenderer,\n        className: classNames,\n        columnWidth: width,\n        columnCount: 1,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        scrollToRow: scrollToIndex\n      }));\n    }\n  }]);\n\n  return List;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /** Optional CSS class name */\n  \"className\": PropTypes.string,\n\n  /**\n   * Used to estimate the total height of a List before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Height constraint for list (determines how many actual rows are rendered) */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional renderer to be used in place of rows when rowCount is 0 */\n  \"noRowsRenderer\": function noRowsRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Callback invoked with information about the slice of rows that were just rendered.  */\n  \"onRowsRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed row height (number) or a function that returns the height of a row given its index.  */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a row given an index; ({ index: number }): node */\n  \"rowRenderer\": function rowRenderer() {\n    return (typeof bpfrpt_proptype_RowRenderer === \"function\" ? bpfrpt_proptype_RowRenderer.isRequired ? bpfrpt_proptype_RowRenderer.isRequired : bpfrpt_proptype_RowRenderer : PropTypes.shape(bpfrpt_proptype_RowRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in list. */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** See Grid#scrollToAlignment */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToIndex\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of list */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(List, \"defaultProps\", {\n  autoHeight: false,\n  estimatedRowSize: 30,\n  onScroll: function onScroll() {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {},\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { List as default };\nimport { bpfrpt_proptype_NoContentRenderer } from \"../Grid\";\nimport { bpfrpt_proptype_Alignment } from \"../Grid\";\nimport { bpfrpt_proptype_CellSize } from \"../Grid\";\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"../Grid\";\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_CellRendererParams } from \"../Grid\";\nimport { bpfrpt_proptype_Scroll as bpfrpt_proptype_GridScroll } from \"../Grid\";\nimport { bpfrpt_proptype_RowRenderer } from \"./types\";\nimport { bpfrpt_proptype_RenderedRows } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport PropTypes from \"prop-types\";","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/binary-search-bounds\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nfunction _GEA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x >= y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GEP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) >= 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _GTA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x > y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GTP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) > 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LTA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x < y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LTP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) < 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LEA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x <= y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LEP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) <= 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _EQA(a, l, h, y) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x === y) {\n      return m;\n    } else if (x <= y) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction _EQP(a, l, h, y, c) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n    var p = c(x, y);\n\n    if (p === 0) {\n      return m;\n    } else if (p <= 0) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction dispatchBsearchEQ(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _EQP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _EQA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nexport default {\n  ge: dispatchBsearchGE,\n  gt: dispatchBsearchGT,\n  lt: dispatchBsearchLT,\n  le: dispatchBsearchLE,\n  eq: dispatchBsearchEQ\n};","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/interval-tree-1d\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax in an upstream dependency.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nimport bounds from './binarySearchBounds';\nvar NOT_FOUND = 0;\nvar SUCCESS = 1;\nvar EMPTY = 2;\n\nfunction IntervalTreeNode(mid, left, right, leftPoints, rightPoints) {\n  this.mid = mid;\n  this.left = left;\n  this.right = right;\n  this.leftPoints = leftPoints;\n  this.rightPoints = rightPoints;\n  this.count = (left ? left.count : 0) + (right ? right.count : 0) + leftPoints.length;\n}\n\nvar proto = IntervalTreeNode.prototype;\n\nfunction copy(a, b) {\n  a.mid = b.mid;\n  a.left = b.left;\n  a.right = b.right;\n  a.leftPoints = b.leftPoints;\n  a.rightPoints = b.rightPoints;\n  a.count = b.count;\n}\n\nfunction rebuild(node, intervals) {\n  var ntree = createIntervalTree(intervals);\n  node.mid = ntree.mid;\n  node.left = ntree.left;\n  node.right = ntree.right;\n  node.leftPoints = ntree.leftPoints;\n  node.rightPoints = ntree.rightPoints;\n  node.count = ntree.count;\n}\n\nfunction rebuildWithInterval(node, interval) {\n  var intervals = node.intervals([]);\n  intervals.push(interval);\n  rebuild(node, intervals);\n}\n\nfunction rebuildWithoutInterval(node, interval) {\n  var intervals = node.intervals([]);\n  var idx = intervals.indexOf(interval);\n\n  if (idx < 0) {\n    return NOT_FOUND;\n  }\n\n  intervals.splice(idx, 1);\n  rebuild(node, intervals);\n  return SUCCESS;\n}\n\nproto.intervals = function (result) {\n  result.push.apply(result, this.leftPoints);\n\n  if (this.left) {\n    this.left.intervals(result);\n  }\n\n  if (this.right) {\n    this.right.intervals(result);\n  }\n\n  return result;\n};\n\nproto.insert = function (interval) {\n  var weight = this.count - this.leftPoints.length;\n  this.count += 1;\n\n  if (interval[1] < this.mid) {\n    if (this.left) {\n      if (4 * (this.left.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.left.insert(interval);\n      }\n    } else {\n      this.left = createIntervalTree([interval]);\n    }\n  } else if (interval[0] > this.mid) {\n    if (this.right) {\n      if (4 * (this.right.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.right.insert(interval);\n      }\n    } else {\n      this.right = createIntervalTree([interval]);\n    }\n  } else {\n    var l = bounds.ge(this.leftPoints, interval, compareBegin);\n    var r = bounds.ge(this.rightPoints, interval, compareEnd);\n    this.leftPoints.splice(l, 0, interval);\n    this.rightPoints.splice(r, 0, interval);\n  }\n};\n\nproto.remove = function (interval) {\n  var weight = this.count - this.leftPoints;\n\n  if (interval[1] < this.mid) {\n    if (!this.left) {\n      return NOT_FOUND;\n    }\n\n    var rw = this.right ? this.right.count : 0;\n\n    if (4 * rw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.left.remove(interval);\n\n    if (r === EMPTY) {\n      this.left = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else if (interval[0] > this.mid) {\n    if (!this.right) {\n      return NOT_FOUND;\n    }\n\n    var lw = this.left ? this.left.count : 0;\n\n    if (4 * lw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.right.remove(interval);\n\n    if (r === EMPTY) {\n      this.right = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else {\n    if (this.count === 1) {\n      if (this.leftPoints[0] === interval) {\n        return EMPTY;\n      } else {\n        return NOT_FOUND;\n      }\n    }\n\n    if (this.leftPoints.length === 1 && this.leftPoints[0] === interval) {\n      if (this.left && this.right) {\n        var p = this;\n        var n = this.left;\n\n        while (n.right) {\n          p = n;\n          n = n.right;\n        }\n\n        if (p === this) {\n          n.right = this.right;\n        } else {\n          var l = this.left;\n          var r = this.right;\n          p.count -= n.count;\n          p.right = n.left;\n          n.left = l;\n          n.right = r;\n        }\n\n        copy(this, n);\n        this.count = (this.left ? this.left.count : 0) + (this.right ? this.right.count : 0) + this.leftPoints.length;\n      } else if (this.left) {\n        copy(this, this.left);\n      } else {\n        copy(this, this.right);\n      }\n\n      return SUCCESS;\n    }\n\n    for (var l = bounds.ge(this.leftPoints, interval, compareBegin); l < this.leftPoints.length; ++l) {\n      if (this.leftPoints[l][0] !== interval[0]) {\n        break;\n      }\n\n      if (this.leftPoints[l] === interval) {\n        this.count -= 1;\n        this.leftPoints.splice(l, 1);\n\n        for (var r = bounds.ge(this.rightPoints, interval, compareEnd); r < this.rightPoints.length; ++r) {\n          if (this.rightPoints[r][1] !== interval[1]) {\n            break;\n          } else if (this.rightPoints[r] === interval) {\n            this.rightPoints.splice(r, 1);\n            return SUCCESS;\n          }\n        }\n      }\n    }\n\n    return NOT_FOUND;\n  }\n};\n\nfunction reportLeftRange(arr, hi, cb) {\n  for (var i = 0; i < arr.length && arr[i][0] <= hi; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRightRange(arr, lo, cb) {\n  for (var i = arr.length - 1; i >= 0 && arr[i][1] >= lo; --i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRange(arr, cb) {\n  for (var i = 0; i < arr.length; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nproto.queryPoint = function (x, cb) {\n  if (x < this.mid) {\n    if (this.left) {\n      var r = this.left.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportLeftRange(this.leftPoints, x, cb);\n  } else if (x > this.mid) {\n    if (this.right) {\n      var r = this.right.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportRightRange(this.rightPoints, x, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nproto.queryInterval = function (lo, hi, cb) {\n  if (lo < this.mid && this.left) {\n    var r = this.left.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi > this.mid && this.right) {\n    var r = this.right.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi < this.mid) {\n    return reportLeftRange(this.leftPoints, hi, cb);\n  } else if (lo > this.mid) {\n    return reportRightRange(this.rightPoints, lo, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\nfunction compareBegin(a, b) {\n  var d = a[0] - b[0];\n\n  if (d) {\n    return d;\n  }\n\n  return a[1] - b[1];\n}\n\nfunction compareEnd(a, b) {\n  var d = a[1] - b[1];\n\n  if (d) {\n    return d;\n  }\n\n  return a[0] - b[0];\n}\n\nfunction createIntervalTree(intervals) {\n  if (intervals.length === 0) {\n    return null;\n  }\n\n  var pts = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    pts.push(intervals[i][0], intervals[i][1]);\n  }\n\n  pts.sort(compareNumbers);\n  var mid = pts[pts.length >> 1];\n  var leftIntervals = [];\n  var rightIntervals = [];\n  var centerIntervals = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    var s = intervals[i];\n\n    if (s[1] < mid) {\n      leftIntervals.push(s);\n    } else if (mid < s[0]) {\n      rightIntervals.push(s);\n    } else {\n      centerIntervals.push(s);\n    }\n  } //Split center intervals\n\n\n  var leftPoints = centerIntervals;\n  var rightPoints = centerIntervals.slice();\n  leftPoints.sort(compareBegin);\n  rightPoints.sort(compareEnd);\n  return new IntervalTreeNode(mid, createIntervalTree(leftIntervals), createIntervalTree(rightIntervals), leftPoints, rightPoints);\n} //User friendly wrapper that makes it possible to support empty trees\n\n\nfunction IntervalTree(root) {\n  this.root = root;\n}\n\nvar tproto = IntervalTree.prototype;\n\ntproto.insert = function (interval) {\n  if (this.root) {\n    this.root.insert(interval);\n  } else {\n    this.root = new IntervalTreeNode(interval[0], null, null, [interval], [interval]);\n  }\n};\n\ntproto.remove = function (interval) {\n  if (this.root) {\n    var r = this.root.remove(interval);\n\n    if (r === EMPTY) {\n      this.root = null;\n    }\n\n    return r !== NOT_FOUND;\n  }\n\n  return false;\n};\n\ntproto.queryPoint = function (p, cb) {\n  if (this.root) {\n    return this.root.queryPoint(p, cb);\n  }\n};\n\ntproto.queryInterval = function (lo, hi, cb) {\n  if (lo <= hi && this.root) {\n    return this.root.queryInterval(lo, hi, cb);\n  }\n};\n\nObject.defineProperty(tproto, 'count', {\n  get: function get() {\n    if (this.root) {\n      return this.root.count;\n    }\n\n    return 0;\n  }\n});\nObject.defineProperty(tproto, 'intervals', {\n  get: function get() {\n    if (this.root) {\n      return this.root.intervals([]);\n    }\n\n    return [];\n  }\n});\nexport default function createWrapper(intervals) {\n  if (!intervals || intervals.length === 0) {\n    return new IntervalTree(null);\n  }\n\n  return new IntervalTree(createIntervalTree(intervals));\n}","import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport createIntervalTree from '../vendor/intervalTree';\n\n// Position cache requirements:\n//   O(log(n)) lookup of cells to render for a given viewport size\n//   O(1) lookup of shortest measured column (so we know when to enter phase 1)\nvar PositionCache =\n/*#__PURE__*/\nfunction () {\n  function PositionCache() {\n    _classCallCheck(this, PositionCache);\n\n    _defineProperty(this, \"_columnSizeMap\", {});\n\n    _defineProperty(this, \"_intervalTree\", createIntervalTree());\n\n    _defineProperty(this, \"_leftMap\", {});\n  }\n\n  _createClass(PositionCache, [{\n    key: \"estimateTotalHeight\",\n    value: function estimateTotalHeight(cellCount, columnCount, defaultCellHeight) {\n      var unmeasuredCellCount = cellCount - this.count;\n      return this.tallestColumnSize + Math.ceil(unmeasuredCellCount / columnCount) * defaultCellHeight;\n    } // Render all cells visible within the viewport range defined.\n\n  }, {\n    key: \"range\",\n    value: function range(scrollTop, clientHeight, renderCallback) {\n      var _this = this;\n\n      this._intervalTree.queryInterval(scrollTop, scrollTop + clientHeight, function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 3),\n            top = _ref2[0],\n            _ = _ref2[1],\n            index = _ref2[2];\n\n        return renderCallback(index, _this._leftMap[index], top);\n      });\n    }\n  }, {\n    key: \"setPosition\",\n    value: function setPosition(index, left, top, height) {\n      this._intervalTree.insert([top, top + height, index]);\n\n      this._leftMap[index] = left;\n      var columnSizeMap = this._columnSizeMap;\n      var columnHeight = columnSizeMap[left];\n\n      if (columnHeight === undefined) {\n        columnSizeMap[left] = top + height;\n      } else {\n        columnSizeMap[left] = Math.max(columnHeight, top + height);\n      }\n    }\n  }, {\n    key: \"count\",\n    get: function get() {\n      return this._intervalTree.count;\n    }\n  }, {\n    key: \"shortestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = size === 0 ? height : Math.min(size, height);\n      }\n\n      return size;\n    }\n  }, {\n    key: \"tallestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = Math.max(size, height);\n      }\n\n      return size;\n    }\n  }]);\n\n  return PositionCache;\n}();\n\nexport { PositionCache as default };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport PositionCache from './PositionCache';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\nvar emptyObject = {};\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * This component efficiently displays arbitrarily positioned cells using windowing techniques.\n * Cell position is determined by an injected `cellPositioner` property.\n * Windowing is vertical; this component does not support horizontal scrolling.\n *\n * Rendering occurs in two phases:\n * 1) First pass uses estimated cell sizes (provided by the cache) to determine how many cells to measure in a batch.\n *    Batch size is chosen using a fast, naive layout algorithm that stacks images in order until the viewport has been filled.\n *    After measurement is complete (componentDidMount or componentDidUpdate) this component evaluates positioned cells\n *    in order to determine if another measurement pass is required (eg if actual cell sizes were less than estimated sizes).\n *    All measurements are permanently cached (keyed by `keyMapper`) for performance purposes.\n * 2) Second pass uses the external `cellPositioner` to layout cells.\n *    At this time the positioner has access to cached size measurements for all cells.\n *    The positions it returns are cached by Masonry for fast access later.\n *    Phase one is repeated if the user scrolls beyond the current layout's bounds.\n *    If the layout is invalidated due to eg a resize, cached positions can be cleared using `recomputeCellPositions()`.\n *\n * Animation constraints:\n *   Simple animations are supported (eg translate/slide into place on initial reveal).\n *   More complex animations are not (eg flying from one position to another on resize).\n *\n * Layout constraints:\n *   This component supports multi-column layout.\n *   The height of each item may vary.\n *   The width of each item must not exceed the width of the column it is \"in\".\n *   The left position of all items within a column must align.\n *   (Items may not span multiple columns.)\n */\n\nvar Masonry = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Masonry, _React$PureComponent);\n\n  function Masonry() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Masonry);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Masonry)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStartIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionCache\", new PositionCache());\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingCallback\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      var height = _this.props.height;\n      var eventScrollTop = event.currentTarget.scrollTop; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollTop = Math.min(Math.max(0, _this._getEstimatedTotalHeight() - height), eventScrollTop); // On iOS, we can arrive at negative offsets by swiping past the start or end.\n      // Avoid re-rendering in this case as it can cause problems; see #532 for more.\n\n      if (eventScrollTop !== scrollTop) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._debounceResetIsScrolling(); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n\n      if (_this.state.scrollTop !== scrollTop) {\n        _this.setState({\n          isScrolling: true,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Masonry, [{\n    key: \"clearCellPositions\",\n    value: function clearCellPositions() {\n      this._positionCache = new PositionCache();\n      this.forceUpdate();\n    } // HACK This method signature was intended for Grid\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref) {\n      var index = _ref.rowIndex;\n\n      if (this._invalidateOnUpdateStartIndex === null) {\n        this._invalidateOnUpdateStartIndex = index;\n        this._invalidateOnUpdateStopIndex = index;\n      } else {\n        this._invalidateOnUpdateStartIndex = Math.min(this._invalidateOnUpdateStartIndex, index);\n        this._invalidateOnUpdateStopIndex = Math.max(this._invalidateOnUpdateStopIndex, index);\n      }\n    }\n  }, {\n    key: \"recomputeCellPositions\",\n    value: function recomputeCellPositions() {\n      var stopIndex = this._positionCache.count - 1;\n      this._positionCache = new PositionCache();\n\n      this._populatePositionCache(0, stopIndex);\n\n      this.forceUpdate();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n\n      if (this.props.scrollTop !== prevProps.scrollTop) {\n        this._debounceResetIsScrolling();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          cellCount = _this$props.cellCount,\n          cellMeasurerCache = _this$props.cellMeasurerCache,\n          cellRenderer = _this$props.cellRenderer,\n          className = _this$props.className,\n          height = _this$props.height,\n          id = _this$props.id,\n          keyMapper = _this$props.keyMapper,\n          overscanByPixels = _this$props.overscanByPixels,\n          role = _this$props.role,\n          style = _this$props.style,\n          tabIndex = _this$props.tabIndex,\n          width = _this$props.width,\n          rowDirection = _this$props.rowDirection;\n      var _this$state = this.state,\n          isScrolling = _this$state.isScrolling,\n          scrollTop = _this$state.scrollTop;\n      var children = [];\n\n      var estimateTotalHeight = this._getEstimatedTotalHeight();\n\n      var shortestColumnSize = this._positionCache.shortestColumnSize;\n      var measuredCellCount = this._positionCache.count;\n      var startIndex = 0;\n      var stopIndex;\n\n      this._positionCache.range(Math.max(0, scrollTop - overscanByPixels), height + overscanByPixels * 2, function (index, left, top) {\n        var _style;\n\n        if (typeof stopIndex === 'undefined') {\n          startIndex = index;\n          stopIndex = index;\n        } else {\n          startIndex = Math.min(startIndex, index);\n          stopIndex = Math.max(stopIndex, index);\n        }\n\n        children.push(cellRenderer({\n          index: index,\n          isScrolling: isScrolling,\n          key: keyMapper(index),\n          parent: _this2,\n          style: (_style = {\n            height: cellMeasurerCache.getHeight(index)\n          }, _defineProperty(_style, rowDirection === 'ltr' ? 'left' : 'right', left), _defineProperty(_style, \"position\", 'absolute'), _defineProperty(_style, \"top\", top), _defineProperty(_style, \"width\", cellMeasurerCache.getWidth(index)), _style)\n        }));\n      }); // We need to measure additional cells for this layout\n\n\n      if (shortestColumnSize < scrollTop + height + overscanByPixels && measuredCellCount < cellCount) {\n        var batchSize = Math.min(cellCount - measuredCellCount, Math.ceil((scrollTop + height + overscanByPixels - shortestColumnSize) / cellMeasurerCache.defaultHeight * width / cellMeasurerCache.defaultWidth));\n\n        for (var _index = measuredCellCount; _index < measuredCellCount + batchSize; _index++) {\n          stopIndex = _index;\n          children.push(cellRenderer({\n            index: _index,\n            isScrolling: isScrolling,\n            key: keyMapper(_index),\n            parent: this,\n            style: {\n              width: cellMeasurerCache.getWidth(_index)\n            }\n          }));\n        }\n      }\n\n      this._startIndex = startIndex;\n      this._stopIndex = stopIndex;\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Masonry', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({\n          boxSizing: 'border-box',\n          direction: 'ltr',\n          height: autoHeight ? 'auto' : height,\n          overflowX: 'hidden',\n          overflowY: estimateTotalHeight < height ? 'hidden' : 'auto',\n          position: 'relative',\n          width: width,\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform'\n        }, style),\n        tabIndex: tabIndex\n      }, React.createElement(\"div\", {\n        className: \"ReactVirtualized__Masonry__innerScrollContainer\",\n        style: {\n          width: '100%',\n          height: estimateTotalHeight,\n          maxWidth: '100%',\n          maxHeight: estimateTotalHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }\n      }, children));\n    }\n  }, {\n    key: \"_checkInvalidateOnUpdate\",\n    value: function _checkInvalidateOnUpdate() {\n      if (typeof this._invalidateOnUpdateStartIndex === 'number') {\n        var startIndex = this._invalidateOnUpdateStartIndex;\n        var stopIndex = this._invalidateOnUpdateStopIndex;\n        this._invalidateOnUpdateStartIndex = null;\n        this._invalidateOnUpdateStopIndex = null; // Query external layout logic for position of newly-measured cells\n\n        this._populatePositionCache(startIndex, stopIndex);\n\n        this.forceUpdate();\n      }\n    }\n  }, {\n    key: \"_debounceResetIsScrolling\",\n    value: function _debounceResetIsScrolling() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n\n      this._debounceResetIsScrollingId = requestAnimationTimeout(this._debounceResetIsScrollingCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_getEstimatedTotalHeight\",\n    value: function _getEstimatedTotalHeight() {\n      var _this$props2 = this.props,\n          cellCount = _this$props2.cellCount,\n          cellMeasurerCache = _this$props2.cellMeasurerCache,\n          width = _this$props2.width;\n      var estimatedColumnCount = Math.max(1, Math.floor(width / cellMeasurerCache.defaultWidth));\n      return this._positionCache.estimateTotalHeight(cellCount, estimatedColumnCount, cellMeasurerCache.defaultHeight);\n    }\n  }, {\n    key: \"_invokeOnScrollCallback\",\n    value: function _invokeOnScrollCallback() {\n      var _this$props3 = this.props,\n          height = _this$props3.height,\n          onScroll = _this$props3.onScroll;\n      var scrollTop = this.state.scrollTop;\n\n      if (this._onScrollMemoized !== scrollTop) {\n        onScroll({\n          clientHeight: height,\n          scrollHeight: this._getEstimatedTotalHeight(),\n          scrollTop: scrollTop\n        });\n        this._onScrollMemoized = scrollTop;\n      }\n    }\n  }, {\n    key: \"_invokeOnCellsRenderedCallback\",\n    value: function _invokeOnCellsRenderedCallback() {\n      if (this._startIndexMemoized !== this._startIndex || this._stopIndexMemoized !== this._stopIndex) {\n        var onCellsRendered = this.props.onCellsRendered;\n        onCellsRendered({\n          startIndex: this._startIndex,\n          stopIndex: this._stopIndex\n        });\n        this._startIndexMemoized = this._startIndex;\n        this._stopIndexMemoized = this._stopIndex;\n      }\n    }\n  }, {\n    key: \"_populatePositionCache\",\n    value: function _populatePositionCache(startIndex, stopIndex) {\n      var _this$props4 = this.props,\n          cellMeasurerCache = _this$props4.cellMeasurerCache,\n          cellPositioner = _this$props4.cellPositioner;\n\n      for (var _index2 = startIndex; _index2 <= stopIndex; _index2++) {\n        var _cellPositioner = cellPositioner(_index2),\n            left = _cellPositioner.left,\n            top = _cellPositioner.top;\n\n        this._positionCache.setPosition(_index2, left, top, cellMeasurerCache.getHeight(_index2));\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollTop !== undefined && prevState.scrollTop !== nextProps.scrollTop) {\n        return {\n          isScrolling: true,\n          scrollTop: nextProps.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Masonry;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"autoHeight\": PropTypes.bool.isRequired,\n  \"cellCount\": PropTypes.number.isRequired,\n  \"cellMeasurerCache\": function cellMeasurerCache() {\n    return (typeof CellMeasurerCache === \"function\" ? PropTypes.instanceOf(CellMeasurerCache).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellPositioner\": function cellPositioner() {\n    return (typeof Positioner === \"function\" ? PropTypes.instanceOf(Positioner).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof CellRenderer === \"function\" ? PropTypes.instanceOf(CellRenderer).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"className\": PropTypes.string,\n  \"height\": PropTypes.number.isRequired,\n  \"id\": PropTypes.string,\n  \"keyMapper\": function keyMapper() {\n    return (typeof KeyMapper === \"function\" ? PropTypes.instanceOf(KeyMapper).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"onCellsRendered\": function onCellsRendered() {\n    return (typeof OnCellsRenderedCallback === \"function\" ? PropTypes.instanceOf(OnCellsRenderedCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"onScroll\": function onScroll() {\n    return (typeof OnScrollCallback === \"function\" ? PropTypes.instanceOf(OnScrollCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"overscanByPixels\": PropTypes.number.isRequired,\n  \"role\": PropTypes.string.isRequired,\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n  \"style\": function style(props, propName, componentName) {\n    if (!Object.prototype.hasOwnProperty.call(props, propName)) {\n      throw new Error(\"Prop `\".concat(propName, \"` has type 'any' or 'mixed', but was not provided to `\").concat(componentName, \"`. Pass undefined or any other value.\"));\n    }\n  },\n  \"tabIndex\": PropTypes.number.isRequired,\n  \"width\": PropTypes.number.isRequired,\n  \"rowDirection\": PropTypes.string.isRequired,\n  \"scrollTop\": PropTypes.number\n}), _temp);\n\n_defineProperty(Masonry, \"defaultProps\", {\n  autoHeight: false,\n  keyMapper: identity,\n  onCellsRendered: noop,\n  onScroll: noop,\n  overscanByPixels: 20,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  style: emptyObject,\n  tabIndex: 0,\n  rowDirection: 'ltr'\n});\n\nfunction identity(value) {\n  return value;\n}\n\nfunction noop() {}\n\nvar bpfrpt_proptype_CellMeasurerCache = process.env.NODE_ENV === 'production' ? null : {\n  \"defaultHeight\": PropTypes.number.isRequired,\n  \"defaultWidth\": PropTypes.number.isRequired,\n  \"getHeight\": PropTypes.func.isRequired,\n  \"getWidth\": PropTypes.func.isRequired\n};\npolyfill(Masonry);\nexport default Masonry;\nvar bpfrpt_proptype_Positioner = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_CellMeasurerCache };\nexport { bpfrpt_proptype_Positioner };","import createCellPositioner from './createCellPositioner';\nimport Masonry from './Masonry';\nexport default Masonry;\nexport { createCellPositioner, Masonry };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { CellMeasurerCache } from '../CellMeasurer';\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCacheDecorator =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCacheDecorator() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCacheDecorator);\n\n    _defineProperty(this, \"_cellMeasurerCache\", void 0);\n\n    _defineProperty(this, \"_columnIndexOffset\", void 0);\n\n    _defineProperty(this, \"_rowIndexOffset\", void 0);\n\n    _defineProperty(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      _this._cellMeasurerCache.columnWidth({\n        index: index + _this._columnIndexOffset\n      });\n    });\n\n    _defineProperty(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      _this._cellMeasurerCache.rowHeight({\n        index: index + _this._rowIndexOffset\n      });\n    });\n\n    var cellMeasurerCache = params.cellMeasurerCache,\n        _params$columnIndexOf = params.columnIndexOffset,\n        columnIndexOffset = _params$columnIndexOf === void 0 ? 0 : _params$columnIndexOf,\n        _params$rowIndexOffse = params.rowIndexOffset,\n        rowIndexOffset = _params$rowIndexOffse === void 0 ? 0 : _params$rowIndexOffse;\n    this._cellMeasurerCache = cellMeasurerCache;\n    this._columnIndexOffset = columnIndexOffset;\n    this._rowIndexOffset = rowIndexOffset;\n  }\n\n  _createClass(CellMeasurerCacheDecorator, [{\n    key: \"clear\",\n    value: function clear(rowIndex, columnIndex) {\n      this._cellMeasurerCache.clear(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellMeasurerCache.clearAll();\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._cellMeasurerCache.hasFixedHeight();\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._cellMeasurerCache.hasFixedWidth();\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getHeight(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getWidth(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.has(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      this._cellMeasurerCache.set(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset, width, height);\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCacheDecorator;\n}();\n\nexport { CellMeasurerCacheDecorator as default };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport CellMeasurerCacheDecorator from './CellMeasurerCacheDecorator';\nimport Grid from '../Grid';\nvar SCROLLBAR_SIZE_BUFFER = 20;\n/**\n * Renders 1, 2, or 4 Grids depending on configuration.\n * A main (body) Grid will always be rendered.\n * Optionally, 1-2 Grids for sticky header rows will also be rendered.\n * If no sticky columns, only 1 sticky header Grid will be rendered.\n * If sticky columns, 2 sticky header Grids will be rendered.\n */\n\nvar MultiGrid =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(MultiGrid, _React$PureComponent);\n\n  function MultiGrid(props, context) {\n    var _this;\n\n    _classCallCheck(this, MultiGrid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MultiGrid).call(this, props, context));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollbarSize: 0,\n      showHorizontalScrollbar: false,\n      showVerticalScrollbar: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomLeftGridRef\", function (ref) {\n      _this._bottomLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomRightGridRef\", function (ref) {\n      _this._bottomRightGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomLeftGrid\", function (_ref) {\n      var rowIndex = _ref.rowIndex,\n          rest = _objectWithoutProperties(_ref, [\"rowIndex\"]);\n\n      var _this$props = _this.props,\n          cellRenderer = _this$props.cellRenderer,\n          fixedRowCount = _this$props.fixedRowCount,\n          rowCount = _this$props.rowCount;\n\n      if (rowIndex === rowCount - fixedRowCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            height: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          parent: _assertThisInitialized(_this),\n          rowIndex: rowIndex + fixedRowCount\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomRightGrid\", function (_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex,\n          rest = _objectWithoutProperties(_ref2, [\"columnIndex\", \"rowIndex\"]);\n\n      var _this$props2 = _this.props,\n          cellRenderer = _this$props2.cellRenderer,\n          fixedColumnCount = _this$props2.fixedColumnCount,\n          fixedRowCount = _this$props2.fixedRowCount;\n      return cellRenderer(_objectSpread({}, rest, {\n        columnIndex: columnIndex + fixedColumnCount,\n        parent: _assertThisInitialized(_this),\n        rowIndex: rowIndex + fixedRowCount\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererTopRightGrid\", function (_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rest = _objectWithoutProperties(_ref3, [\"columnIndex\"]);\n\n      var _this$props3 = _this.props,\n          cellRenderer = _this$props3.cellRenderer,\n          columnCount = _this$props3.columnCount,\n          fixedColumnCount = _this$props3.fixedColumnCount;\n\n      if (columnIndex === columnCount - fixedColumnCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            width: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          columnIndex: columnIndex + fixedColumnCount,\n          parent: _assertThisInitialized(_this)\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnWidthRightGrid\", function (_ref4) {\n      var index = _ref4.index;\n      var _this$props4 = _this.props,\n          columnCount = _this$props4.columnCount,\n          fixedColumnCount = _this$props4.fixedColumnCount,\n          columnWidth = _this$props4.columnWidth;\n      var _this$state = _this.state,\n          scrollbarSize = _this$state.scrollbarSize,\n          showHorizontalScrollbar = _this$state.showHorizontalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showHorizontalScrollbar && index === columnCount - fixedColumnCount) {\n        return scrollbarSize;\n      }\n\n      return typeof columnWidth === 'function' ? columnWidth({\n        index: index + fixedColumnCount\n      }) : columnWidth;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft,\n          scrollTop = scrollInfo.scrollTop;\n\n      _this.setState({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      var onScroll = _this.props.onScroll;\n\n      if (onScroll) {\n        onScroll(scrollInfo);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollbarPresenceChange\", function (_ref5) {\n      var horizontal = _ref5.horizontal,\n          size = _ref5.size,\n          vertical = _ref5.vertical;\n      var _this$state2 = _this.state,\n          showHorizontalScrollbar = _this$state2.showHorizontalScrollbar,\n          showVerticalScrollbar = _this$state2.showVerticalScrollbar;\n\n      if (horizontal !== showHorizontalScrollbar || vertical !== showVerticalScrollbar) {\n        _this.setState({\n          scrollbarSize: size,\n          showHorizontalScrollbar: horizontal,\n          showVerticalScrollbar: vertical\n        });\n\n        var onScrollbarPresenceChange = _this.props.onScrollbarPresenceChange;\n\n        if (typeof onScrollbarPresenceChange === 'function') {\n          onScrollbarPresenceChange({\n            horizontal: horizontal,\n            size: size,\n            vertical: vertical\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollLeft\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft;\n\n      _this._onScroll({\n        scrollLeft: scrollLeft,\n        scrollTop: _this.state.scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollTop\", function (scrollInfo) {\n      var scrollTop = scrollInfo.scrollTop;\n\n      _this._onScroll({\n        scrollTop: scrollTop,\n        scrollLeft: _this.state.scrollLeft\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowHeightBottomGrid\", function (_ref6) {\n      var index = _ref6.index;\n      var _this$props5 = _this.props,\n          fixedRowCount = _this$props5.fixedRowCount,\n          rowCount = _this$props5.rowCount,\n          rowHeight = _this$props5.rowHeight;\n      var _this$state3 = _this.state,\n          scrollbarSize = _this$state3.scrollbarSize,\n          showVerticalScrollbar = _this$state3.showVerticalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showVerticalScrollbar && index === rowCount - fixedRowCount) {\n        return scrollbarSize;\n      }\n\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: index + fixedRowCount\n      }) : rowHeight;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topLeftGridRef\", function (ref) {\n      _this._topLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topRightGridRef\", function (ref) {\n      _this._topRightGrid = ref;\n    });\n\n    var deferredMeasurementCache = props.deferredMeasurementCache,\n        _fixedColumnCount = props.fixedColumnCount,\n        _fixedRowCount = props.fixedRowCount;\n\n    _this._maybeCalculateCachedStyles(true);\n\n    if (deferredMeasurementCache) {\n      _this._deferredMeasurementCacheBottomLeftGrid = _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: 0,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheBottomRightGrid = _fixedColumnCount > 0 || _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheTopRightGrid = _fixedColumnCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: 0\n      }) : deferredMeasurementCache;\n    }\n\n    return _this;\n  }\n\n  _createClass(MultiGrid, [{\n    key: \"forceUpdateGrids\",\n    value: function forceUpdateGrids() {\n      this._bottomLeftGrid && this._bottomLeftGrid.forceUpdate();\n      this._bottomRightGrid && this._bottomRightGrid.forceUpdate();\n      this._topLeftGrid && this._topLeftGrid.forceUpdate();\n      this._topRightGrid && this._topRightGrid.forceUpdate();\n    }\n    /** See Grid#invalidateCellSizeAfterRender */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender() {\n      var _ref7 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref7$columnIndex = _ref7.columnIndex,\n          columnIndex = _ref7$columnIndex === void 0 ? 0 : _ref7$columnIndex,\n          _ref7$rowIndex = _ref7.rowIndex,\n          rowIndex = _ref7$rowIndex === void 0 ? 0 : _ref7$rowIndex;\n\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      this._bottomLeftGrid && this._bottomLeftGrid.measureAllCells();\n      this._bottomRightGrid && this._bottomRightGrid.measureAllCells();\n      this._topLeftGrid && this._topLeftGrid.measureAllCells();\n      this._topRightGrid && this._topRightGrid.measureAllCells();\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref8 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref8$columnIndex = _ref8.columnIndex,\n          columnIndex = _ref8$columnIndex === void 0 ? 0 : _ref8$columnIndex,\n          _ref8$rowIndex = _ref8.rowIndex,\n          rowIndex = _ref8$rowIndex === void 0 ? 0 : _ref8$rowIndex;\n\n      var _this$props6 = this.props,\n          fixedColumnCount = _this$props6.fixedColumnCount,\n          fixedRowCount = _this$props6.fixedRowCount;\n      var adjustedColumnIndex = Math.max(0, columnIndex - fixedColumnCount);\n      var adjustedRowIndex = Math.max(0, rowIndex - fixedRowCount);\n      this._bottomLeftGrid && this._bottomLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._bottomRightGrid && this._bottomRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._topLeftGrid && this._topLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: rowIndex\n      });\n      this._topRightGrid && this._topRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: rowIndex\n      });\n      this._leftGridWidth = null;\n      this._topGridHeight = null;\n\n      this._maybeCalculateCachedStyles(true);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props7 = this.props,\n          scrollLeft = _this$props7.scrollLeft,\n          scrollTop = _this$props7.scrollTop;\n\n      if (scrollLeft > 0 || scrollTop > 0) {\n        var newState = {};\n\n        if (scrollLeft > 0) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop > 0) {\n          newState.scrollTop = scrollTop;\n        }\n\n        this.setState(newState);\n      }\n\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props8 = this.props,\n          onScroll = _this$props8.onScroll,\n          onSectionRendered = _this$props8.onSectionRendered,\n          onScrollbarPresenceChange = _this$props8.onScrollbarPresenceChange,\n          scrollLeftProp = _this$props8.scrollLeft,\n          scrollToColumn = _this$props8.scrollToColumn,\n          scrollTopProp = _this$props8.scrollTop,\n          scrollToRow = _this$props8.scrollToRow,\n          rest = _objectWithoutProperties(_this$props8, [\"onScroll\", \"onSectionRendered\", \"onScrollbarPresenceChange\", \"scrollLeft\", \"scrollToColumn\", \"scrollTop\", \"scrollToRow\"]);\n\n      this._prepareForRender(); // Don't render any of our Grids if there are no cells.\n      // This mirrors what Grid does,\n      // And prevents us from recording inaccurage measurements when used with CellMeasurer.\n\n\n      if (this.props.width === 0 || this.props.height === 0) {\n        return null;\n      } // scrollTop and scrollLeft props are explicitly filtered out and ignored\n\n\n      var _this$state4 = this.state,\n          scrollLeft = _this$state4.scrollLeft,\n          scrollTop = _this$state4.scrollTop;\n      return React.createElement(\"div\", {\n        style: this._containerOuterStyle\n      }, React.createElement(\"div\", {\n        style: this._containerTopStyle\n      }, this._renderTopLeftGrid(rest), this._renderTopRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollLeft: scrollLeft\n      }))), React.createElement(\"div\", {\n        style: this._containerBottomStyle\n      }, this._renderBottomLeftGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollTop: scrollTop\n      })), this._renderBottomRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        onSectionRendered: onSectionRendered,\n        scrollLeft: scrollLeft,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow,\n        scrollTop: scrollTop\n      }))));\n    }\n  }, {\n    key: \"_getBottomGridHeight\",\n    value: function _getBottomGridHeight(props) {\n      var height = props.height;\n\n      var topGridHeight = this._getTopGridHeight(props);\n\n      return height - topGridHeight;\n    }\n  }, {\n    key: \"_getLeftGridWidth\",\n    value: function _getLeftGridWidth(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          columnWidth = props.columnWidth;\n\n      if (this._leftGridWidth == null) {\n        if (typeof columnWidth === 'function') {\n          var leftGridWidth = 0;\n\n          for (var index = 0; index < fixedColumnCount; index++) {\n            leftGridWidth += columnWidth({\n              index: index\n            });\n          }\n\n          this._leftGridWidth = leftGridWidth;\n        } else {\n          this._leftGridWidth = columnWidth * fixedColumnCount;\n        }\n      }\n\n      return this._leftGridWidth;\n    }\n  }, {\n    key: \"_getRightGridWidth\",\n    value: function _getRightGridWidth(props) {\n      var width = props.width;\n\n      var leftGridWidth = this._getLeftGridWidth(props);\n\n      return width - leftGridWidth;\n    }\n  }, {\n    key: \"_getTopGridHeight\",\n    value: function _getTopGridHeight(props) {\n      var fixedRowCount = props.fixedRowCount,\n          rowHeight = props.rowHeight;\n\n      if (this._topGridHeight == null) {\n        if (typeof rowHeight === 'function') {\n          var topGridHeight = 0;\n\n          for (var index = 0; index < fixedRowCount; index++) {\n            topGridHeight += rowHeight({\n              index: index\n            });\n          }\n\n          this._topGridHeight = topGridHeight;\n        } else {\n          this._topGridHeight = rowHeight * fixedRowCount;\n        }\n      }\n\n      return this._topGridHeight;\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n        this.forceUpdate();\n      }\n    }\n    /**\n     * Avoid recreating inline styles each render; this bypasses Grid's shallowCompare.\n     * This method recalculates styles only when specific props change.\n     */\n\n  }, {\n    key: \"_maybeCalculateCachedStyles\",\n    value: function _maybeCalculateCachedStyles(resetAll) {\n      var _this$props9 = this.props,\n          columnWidth = _this$props9.columnWidth,\n          enableFixedColumnScroll = _this$props9.enableFixedColumnScroll,\n          enableFixedRowScroll = _this$props9.enableFixedRowScroll,\n          height = _this$props9.height,\n          fixedColumnCount = _this$props9.fixedColumnCount,\n          fixedRowCount = _this$props9.fixedRowCount,\n          rowHeight = _this$props9.rowHeight,\n          style = _this$props9.style,\n          styleBottomLeftGrid = _this$props9.styleBottomLeftGrid,\n          styleBottomRightGrid = _this$props9.styleBottomRightGrid,\n          styleTopLeftGrid = _this$props9.styleTopLeftGrid,\n          styleTopRightGrid = _this$props9.styleTopRightGrid,\n          width = _this$props9.width;\n      var sizeChange = resetAll || height !== this._lastRenderedHeight || width !== this._lastRenderedWidth;\n      var leftSizeChange = resetAll || columnWidth !== this._lastRenderedColumnWidth || fixedColumnCount !== this._lastRenderedFixedColumnCount;\n      var topSizeChange = resetAll || fixedRowCount !== this._lastRenderedFixedRowCount || rowHeight !== this._lastRenderedRowHeight;\n\n      if (resetAll || sizeChange || style !== this._lastRenderedStyle) {\n        this._containerOuterStyle = _objectSpread({\n          height: height,\n          overflow: 'visible',\n          // Let :focus outline show through\n          width: width\n        }, style);\n      }\n\n      if (resetAll || sizeChange || topSizeChange) {\n        this._containerTopStyle = {\n          height: this._getTopGridHeight(this.props),\n          position: 'relative',\n          width: width\n        };\n        this._containerBottomStyle = {\n          height: height - this._getTopGridHeight(this.props),\n          overflow: 'visible',\n          // Let :focus outline show through\n          position: 'relative',\n          width: width\n        };\n      }\n\n      if (resetAll || styleBottomLeftGrid !== this._lastRenderedStyleBottomLeftGrid) {\n        this._bottomLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: enableFixedColumnScroll ? 'auto' : 'hidden',\n          position: 'absolute'\n        }, styleBottomLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleBottomRightGrid !== this._lastRenderedStyleBottomRightGrid) {\n        this._bottomRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          position: 'absolute'\n        }, styleBottomRightGrid);\n      }\n\n      if (resetAll || styleTopLeftGrid !== this._lastRenderedStyleTopLeftGrid) {\n        this._topLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleTopRightGrid !== this._lastRenderedStyleTopRightGrid) {\n        this._topRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          overflowX: enableFixedRowScroll ? 'auto' : 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopRightGrid);\n      }\n\n      this._lastRenderedColumnWidth = columnWidth;\n      this._lastRenderedFixedColumnCount = fixedColumnCount;\n      this._lastRenderedFixedRowCount = fixedRowCount;\n      this._lastRenderedHeight = height;\n      this._lastRenderedRowHeight = rowHeight;\n      this._lastRenderedStyle = style;\n      this._lastRenderedStyleBottomLeftGrid = styleBottomLeftGrid;\n      this._lastRenderedStyleBottomRightGrid = styleBottomRightGrid;\n      this._lastRenderedStyleTopLeftGrid = styleTopLeftGrid;\n      this._lastRenderedStyleTopRightGrid = styleTopRightGrid;\n      this._lastRenderedWidth = width;\n    }\n  }, {\n    key: \"_prepareForRender\",\n    value: function _prepareForRender() {\n      if (this._lastRenderedColumnWidth !== this.props.columnWidth || this._lastRenderedFixedColumnCount !== this.props.fixedColumnCount) {\n        this._leftGridWidth = null;\n      }\n\n      if (this._lastRenderedFixedRowCount !== this.props.fixedRowCount || this._lastRenderedRowHeight !== this.props.rowHeight) {\n        this._topGridHeight = null;\n      }\n\n      this._maybeCalculateCachedStyles();\n\n      this._lastRenderedColumnWidth = this.props.columnWidth;\n      this._lastRenderedFixedColumnCount = this.props.fixedColumnCount;\n      this._lastRenderedFixedRowCount = this.props.fixedRowCount;\n      this._lastRenderedRowHeight = this.props.rowHeight;\n    }\n  }, {\n    key: \"_renderBottomLeftGrid\",\n    value: function _renderBottomLeftGrid(props) {\n      var enableFixedColumnScroll = props.enableFixedColumnScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          hideBottomLeftGridScrollbar = props.hideBottomLeftGridScrollbar;\n      var showVerticalScrollbar = this.state.showVerticalScrollbar;\n\n      if (!fixedColumnCount) {\n        return null;\n      }\n\n      var additionalRowCount = showVerticalScrollbar ? 1 : 0,\n          height = this._getBottomGridHeight(props),\n          width = this._getLeftGridWidth(props),\n          scrollbarSize = this.state.showVerticalScrollbar ? this.state.scrollbarSize : 0,\n          gridWidth = hideBottomLeftGridScrollbar ? width + scrollbarSize : width;\n\n      var bottomLeftGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomLeftGrid,\n        className: this.props.classNameBottomLeftGrid,\n        columnCount: fixedColumnCount,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomLeftGrid,\n        height: height,\n        onScroll: enableFixedColumnScroll ? this._onScrollTop : undefined,\n        ref: this._bottomLeftGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount) + additionalRowCount,\n        rowHeight: this._rowHeightBottomGrid,\n        style: this._bottomLeftGridStyle,\n        tabIndex: null,\n        width: gridWidth\n      }));\n\n      if (hideBottomLeftGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"BottomLeftGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._bottomLeftGridStyle, {\n            height: height,\n            width: width,\n            overflowY: 'hidden'\n          })\n        }, bottomLeftGrid);\n      }\n\n      return bottomLeftGrid;\n    }\n  }, {\n    key: \"_renderBottomRightGrid\",\n    value: function _renderBottomRightGrid(props) {\n      var columnCount = props.columnCount,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          scrollToColumn = props.scrollToColumn,\n          scrollToRow = props.scrollToRow;\n      return React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomRightGrid,\n        className: this.props.classNameBottomRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount),\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomRightGrid,\n        height: this._getBottomGridHeight(props),\n        onScroll: this._onScroll,\n        onScrollbarPresenceChange: this._onScrollbarPresenceChange,\n        ref: this._bottomRightGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount),\n        rowHeight: this._rowHeightBottomGrid,\n        scrollToColumn: scrollToColumn - fixedColumnCount,\n        scrollToRow: scrollToRow - fixedRowCount,\n        style: this._bottomRightGridStyle,\n        width: this._getRightGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopLeftGrid\",\n    value: function _renderTopLeftGrid(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount;\n\n      if (!fixedColumnCount || !fixedRowCount) {\n        return null;\n      }\n\n      return React.createElement(Grid, _extends({}, props, {\n        className: this.props.classNameTopLeftGrid,\n        columnCount: fixedColumnCount,\n        height: this._getTopGridHeight(props),\n        ref: this._topLeftGridRef,\n        rowCount: fixedRowCount,\n        style: this._topLeftGridStyle,\n        tabIndex: null,\n        width: this._getLeftGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopRightGrid\",\n    value: function _renderTopRightGrid(props) {\n      var columnCount = props.columnCount,\n          enableFixedRowScroll = props.enableFixedRowScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          scrollLeft = props.scrollLeft,\n          hideTopRightGridScrollbar = props.hideTopRightGridScrollbar;\n      var _this$state5 = this.state,\n          showHorizontalScrollbar = _this$state5.showHorizontalScrollbar,\n          scrollbarSize = _this$state5.scrollbarSize;\n\n      if (!fixedRowCount) {\n        return null;\n      }\n\n      var additionalColumnCount = showHorizontalScrollbar ? 1 : 0,\n          height = this._getTopGridHeight(props),\n          width = this._getRightGridWidth(props),\n          additionalHeight = showHorizontalScrollbar ? scrollbarSize : 0;\n\n      var gridHeight = height,\n          style = this._topRightGridStyle;\n\n      if (hideTopRightGridScrollbar) {\n        gridHeight = height + additionalHeight;\n        style = _objectSpread({}, this._topRightGridStyle, {\n          left: 0\n        });\n      }\n\n      var topRightGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererTopRightGrid,\n        className: this.props.classNameTopRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount) + additionalColumnCount,\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheTopRightGrid,\n        height: gridHeight,\n        onScroll: enableFixedRowScroll ? this._onScrollLeft : undefined,\n        ref: this._topRightGridRef,\n        rowCount: fixedRowCount,\n        scrollLeft: scrollLeft,\n        style: style,\n        tabIndex: null,\n        width: width\n      }));\n\n      if (hideTopRightGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"TopRightGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._topRightGridStyle, {\n            height: height,\n            width: width,\n            overflowX: 'hidden'\n          })\n        }, topRightGrid);\n      }\n\n      return topRightGrid;\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null && nextProps.scrollLeft >= 0 ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null && nextProps.scrollTop >= 0 ? nextProps.scrollTop : prevState.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return MultiGrid;\n}(React.PureComponent);\n\n_defineProperty(MultiGrid, \"defaultProps\", {\n  classNameBottomLeftGrid: '',\n  classNameBottomRightGrid: '',\n  classNameTopLeftGrid: '',\n  classNameTopRightGrid: '',\n  enableFixedColumnScroll: false,\n  enableFixedRowScroll: false,\n  fixedColumnCount: 0,\n  fixedRowCount: 0,\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  styleBottomLeftGrid: {},\n  styleBottomRightGrid: {},\n  styleTopLeftGrid: {},\n  styleTopRightGrid: {},\n  hideTopRightGridScrollbar: false,\n  hideBottomLeftGridScrollbar: false\n});\n\nMultiGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  classNameBottomLeftGrid: PropTypes.string.isRequired,\n  classNameBottomRightGrid: PropTypes.string.isRequired,\n  classNameTopLeftGrid: PropTypes.string.isRequired,\n  classNameTopRightGrid: PropTypes.string.isRequired,\n  enableFixedColumnScroll: PropTypes.bool.isRequired,\n  enableFixedRowScroll: PropTypes.bool.isRequired,\n  fixedColumnCount: PropTypes.number.isRequired,\n  fixedRowCount: PropTypes.number.isRequired,\n  onScrollbarPresenceChange: PropTypes.func,\n  style: PropTypes.object.isRequired,\n  styleBottomLeftGrid: PropTypes.object.isRequired,\n  styleBottomRightGrid: PropTypes.object.isRequired,\n  styleTopLeftGrid: PropTypes.object.isRequired,\n  styleTopRightGrid: PropTypes.object.isRequired,\n  hideTopRightGridScrollbar: PropTypes.bool,\n  hideBottomLeftGridScrollbar: PropTypes.bool\n} : {};\npolyfill(MultiGrid);\nexport default MultiGrid;","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * HOC that simplifies the process of synchronizing scrolling between two or more virtualized components.\n */\n\nvar ScrollSync =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ScrollSync, _React$PureComponent);\n\n  function ScrollSync(props, context) {\n    var _this;\n\n    _classCallCheck(this, ScrollSync);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ScrollSync).call(this, props, context));\n    _this.state = {\n      clientHeight: 0,\n      clientWidth: 0,\n      scrollHeight: 0,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollWidth: 0\n    };\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ScrollSync, [{\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state = this.state,\n          clientHeight = _this$state.clientHeight,\n          clientWidth = _this$state.clientWidth,\n          scrollHeight = _this$state.scrollHeight,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop,\n          scrollWidth = _this$state.scrollWidth;\n      return children({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        onScroll: this._onScroll,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref) {\n      var clientHeight = _ref.clientHeight,\n          clientWidth = _ref.clientWidth,\n          scrollHeight = _ref.scrollHeight,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          scrollWidth = _ref.scrollWidth;\n      this.setState({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }]);\n\n  return ScrollSync;\n}(React.PureComponent);\n\nexport { ScrollSync as default };\nScrollSync.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering 2 or more virtualized components.\n   * This function should implement the following signature:\n   * ({ onScroll, scrollLeft, scrollTop }) => PropTypes.element\n   */\n  children: PropTypes.func.isRequired\n} : {};","import * as React from 'react';\nexport default function defaultHeaderRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      style = _ref.style;\n  return React.createElement(\"div\", {\n    className: className,\n    role: \"row\",\n    style: style\n  }, columns);\n}\ndefaultHeaderRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRowRendererParams;\nimport { bpfrpt_proptype_HeaderRowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","var SortDirection = {\n  /**\n   * Sort items in ascending order.\n   * This means arranging from the lowest value to the highest (e.g. a-z, 0-9).\n   */\n  ASC: 'ASC',\n\n  /**\n   * Sort items in descending order.\n   * This means arranging from the highest value to the lowest (e.g. z-a, 9-0).\n   */\n  DESC: 'DESC'\n};\nexport default SortDirection;","import clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport SortDirection from './SortDirection';\n/**\n * Displayed beside a header to indicate that a Table is currently sorted by this column.\n */\n\nexport default function SortIndicator(_ref) {\n  var sortDirection = _ref.sortDirection;\n  var classNames = clsx('ReactVirtualized__Table__sortableHeaderIcon', {\n    'ReactVirtualized__Table__sortableHeaderIcon--ASC': sortDirection === SortDirection.ASC,\n    'ReactVirtualized__Table__sortableHeaderIcon--DESC': sortDirection === SortDirection.DESC\n  });\n  return React.createElement(\"svg\", {\n    className: classNames,\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 24 24\"\n  }, sortDirection === SortDirection.ASC ? React.createElement(\"path\", {\n    d: \"M7 14l5-5 5 5z\"\n  }) : React.createElement(\"path\", {\n    d: \"M7 10l5 5 5-5z\"\n  }), React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  }));\n}\nSortIndicator.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC])\n} : {};","import * as React from 'react';\nimport SortIndicator from './SortIndicator';\n\n/**\n * Default table header renderer.\n */\nexport default function defaultHeaderRenderer(_ref) {\n  var dataKey = _ref.dataKey,\n      label = _ref.label,\n      sortBy = _ref.sortBy,\n      sortDirection = _ref.sortDirection;\n  var showSortIndicator = sortBy === dataKey;\n  var children = [React.createElement(\"span\", {\n    className: \"ReactVirtualized__Table__headerTruncatedText\",\n    key: \"label\",\n    title: typeof label === 'string' ? label : null\n  }, label)];\n\n  if (showSortIndicator) {\n    children.push(React.createElement(SortIndicator, {\n      key: \"SortIndicator\",\n      sortDirection: sortDirection\n    }));\n  }\n\n  return children;\n}\ndefaultHeaderRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRendererParams;\nimport { bpfrpt_proptype_HeaderRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\n\n/**\n * Default row renderer for Table.\n */\nexport default function defaultRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      index = _ref.index,\n      key = _ref.key,\n      onRowClick = _ref.onRowClick,\n      onRowDoubleClick = _ref.onRowDoubleClick,\n      onRowMouseOut = _ref.onRowMouseOut,\n      onRowMouseOver = _ref.onRowMouseOver,\n      onRowRightClick = _ref.onRowRightClick,\n      rowData = _ref.rowData,\n      style = _ref.style;\n  var a11yProps = {\n    'aria-rowindex': index + 1\n  };\n\n  if (onRowClick || onRowDoubleClick || onRowMouseOut || onRowMouseOver || onRowRightClick) {\n    a11yProps['aria-label'] = 'row';\n    a11yProps.tabIndex = 0;\n\n    if (onRowClick) {\n      a11yProps.onClick = function (event) {\n        return onRowClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowDoubleClick) {\n      a11yProps.onDoubleClick = function (event) {\n        return onRowDoubleClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOut) {\n      a11yProps.onMouseOut = function (event) {\n        return onRowMouseOut({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOver) {\n      a11yProps.onMouseOver = function (event) {\n        return onRowMouseOver({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowRightClick) {\n      a11yProps.onContextMenu = function (event) {\n        return onRowRightClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n  }\n\n  return React.createElement(\"div\", _extends({}, a11yProps, {\n    className: className,\n    key: key,\n    role: \"row\",\n    style: style\n  }), columns);\n}\ndefaultRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_RowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_RowRendererParams;\nimport { bpfrpt_proptype_RowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport SortDirection from './SortDirection';\n/**\n * Describes the header and cell contents of a table column.\n */\n\nvar Column =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Column, _React$Component);\n\n  function Column() {\n    _classCallCheck(this, Column);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Column).apply(this, arguments));\n  }\n\n  return Column;\n}(React.Component);\n\n_defineProperty(Column, \"defaultProps\", {\n  cellDataGetter: defaultCellDataGetter,\n  cellRenderer: defaultCellRenderer,\n  defaultSortDirection: SortDirection.ASC,\n  flexGrow: 0,\n  flexShrink: 1,\n  headerRenderer: defaultHeaderRenderer,\n  style: {}\n});\n\nexport { Column as default };\nColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Optional aria-label value to set on the column header */\n  'aria-label': PropTypes.string,\n\n  /**\n   * Callback responsible for returning a cell's data, given its :dataKey\n   * ({ columnData: any, dataKey: string, rowData: any }): any\n   */\n  cellDataGetter: PropTypes.func,\n\n  /**\n   * Callback responsible for rendering a cell's contents.\n   * ({ cellData: any, columnData: any, dataKey: string, rowData: any, rowIndex: number }): node\n   */\n  cellRenderer: PropTypes.func,\n\n  /** Optional CSS class to apply to cell */\n  className: PropTypes.string,\n\n  /** Optional additional data passed to this column's :cellDataGetter */\n  columnData: PropTypes.object,\n\n  /** Uniquely identifies the row-data attribute corresponding to this cell */\n  dataKey: PropTypes.any.isRequired,\n\n  /** Optional direction to be used when clicked the first time */\n  defaultSortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** If sort is enabled for the table at large, disable it for this column */\n  disableSort: PropTypes.bool,\n\n  /** Flex grow style; defaults to 0 */\n  flexGrow: PropTypes.number,\n\n  /** Flex shrink style; defaults to 1 */\n  flexShrink: PropTypes.number,\n\n  /** Optional CSS class to apply to this column's header */\n  headerClassName: PropTypes.string,\n\n  /**\n   * Optional callback responsible for rendering a column header contents.\n   * ({ columnData: object, dataKey: string, disableSort: boolean, label: node, sortBy: string, sortDirection: string }): PropTypes.node\n   */\n  headerRenderer: PropTypes.func.isRequired,\n\n  /** Optional inline style to apply to this column's header */\n  headerStyle: PropTypes.object,\n\n  /** Optional id to set on the column header */\n  id: PropTypes.string,\n\n  /** Header label for this column */\n  label: PropTypes.node,\n\n  /** Maximum width of column; this property will only be used if :flexGrow is > 0. */\n  maxWidth: PropTypes.number,\n\n  /** Minimum width of column. */\n  minWidth: PropTypes.number,\n\n  /** Optional inline style to apply to cell */\n  style: PropTypes.object,\n\n  /** Flex basis (width) for this column; This value can grow or shrink based on :flexGrow and :flexShrink properties. */\n  width: PropTypes.number.isRequired\n} : {};","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport Column from './Column';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer';\nimport SortDirection from './SortDirection';\n/**\n * Table component with fixed headers and virtualized rows for improved performance with large data sets.\n * This component expects explicit width, height, and padding parameters.\n */\n\nvar Table =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Table, _React$PureComponent);\n\n  function Table(props) {\n    var _this;\n\n    _classCallCheck(this, Table);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Table).call(this, props));\n    _this.state = {\n      scrollbarWidth: 0\n    };\n    _this._createColumn = _this._createColumn.bind(_assertThisInitialized(_this));\n    _this._createRow = _this._createRow.bind(_assertThisInitialized(_this));\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    _this._onSectionRendered = _this._onSectionRendered.bind(_assertThisInitialized(_this));\n    _this._setRef = _this._setRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Table, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref) {\n      var alignment = _ref.alignment,\n          index = _ref.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref3$columnIndex = _ref3.columnIndex,\n          columnIndex = _ref3$columnIndex === void 0 ? 0 : _ref3$columnIndex,\n          _ref3$rowIndex = _ref3.rowIndex,\n          rowIndex = _ref3$rowIndex === void 0 ? 0 : _ref3$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"getScrollbarWidth\",\n    value: function getScrollbarWidth() {\n      if (this.Grid) {\n        var _Grid = findDOMNode(this.Grid);\n\n        var clientWidth = _Grid.clientWidth || 0;\n        var offsetWidth = _Grid.offsetWidth || 0;\n        return offsetWidth - clientWidth;\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          children = _this$props.children,\n          className = _this$props.className,\n          disableHeader = _this$props.disableHeader,\n          gridClassName = _this$props.gridClassName,\n          gridStyle = _this$props.gridStyle,\n          headerHeight = _this$props.headerHeight,\n          headerRowRenderer = _this$props.headerRowRenderer,\n          height = _this$props.height,\n          id = _this$props.id,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          rowClassName = _this$props.rowClassName,\n          rowStyle = _this$props.rowStyle,\n          scrollToIndex = _this$props.scrollToIndex,\n          style = _this$props.style,\n          width = _this$props.width;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var availableRowsHeight = disableHeader ? height : height - headerHeight;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: -1\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: -1\n      }) : rowStyle; // Precompute and cache column styles before rendering rows and columns to speed things up\n\n      this._cachedColumnStyles = [];\n      React.Children.toArray(children).forEach(function (column, index) {\n        var flexStyles = _this2._getFlexStyleForColumn(column, column.props.style);\n\n        _this2._cachedColumnStyles[index] = _objectSpread({\n          overflow: 'hidden'\n        }, flexStyles);\n      }); // Note that we specify :rowCount, :scrollbarWidth, :sortBy, and :sortDirection as properties on Grid even though these have nothing to do with Grid.\n      // This is done because Grid is a pure component and won't update unless its properties or state has changed.\n      // Any property that should trigger a re-render of Grid then is specified here to avoid a stale display.\n\n      return React.createElement(\"div\", {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-labelledby\": this.props['aria-labelledby'],\n        \"aria-colcount\": React.Children.toArray(children).length,\n        \"aria-rowcount\": this.props.rowCount,\n        className: clsx('ReactVirtualized__Table', className),\n        id: id,\n        role: \"grid\",\n        style: style\n      }, !disableHeader && headerRowRenderer({\n        className: clsx('ReactVirtualized__Table__headerRow', rowClass),\n        columns: this._getHeaderColumns(),\n        style: _objectSpread({\n          height: headerHeight,\n          overflow: 'hidden',\n          paddingRight: scrollbarWidth,\n          width: width\n        }, rowStyleObject)\n      }), React.createElement(Grid, _extends({}, this.props, {\n        \"aria-readonly\": null,\n        autoContainerWidth: true,\n        className: clsx('ReactVirtualized__Table__Grid', gridClassName),\n        cellRenderer: this._createRow,\n        columnWidth: width,\n        columnCount: 1,\n        height: availableRowsHeight,\n        id: undefined,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        role: \"rowgroup\",\n        scrollbarWidth: scrollbarWidth,\n        scrollToRow: scrollToIndex,\n        style: _objectSpread({}, gridStyle, {\n          overflowX: 'hidden'\n        })\n      })));\n    }\n  }, {\n    key: \"_createColumn\",\n    value: function _createColumn(_ref4) {\n      var column = _ref4.column,\n          columnIndex = _ref4.columnIndex,\n          isScrolling = _ref4.isScrolling,\n          parent = _ref4.parent,\n          rowData = _ref4.rowData,\n          rowIndex = _ref4.rowIndex;\n      var onColumnClick = this.props.onColumnClick;\n      var _column$props = column.props,\n          cellDataGetter = _column$props.cellDataGetter,\n          cellRenderer = _column$props.cellRenderer,\n          className = _column$props.className,\n          columnData = _column$props.columnData,\n          dataKey = _column$props.dataKey,\n          id = _column$props.id;\n      var cellData = cellDataGetter({\n        columnData: columnData,\n        dataKey: dataKey,\n        rowData: rowData\n      });\n      var renderedCell = cellRenderer({\n        cellData: cellData,\n        columnData: columnData,\n        columnIndex: columnIndex,\n        dataKey: dataKey,\n        isScrolling: isScrolling,\n        parent: parent,\n        rowData: rowData,\n        rowIndex: rowIndex\n      });\n\n      var onClick = function onClick(event) {\n        onColumnClick && onColumnClick({\n          columnData: columnData,\n          dataKey: dataKey,\n          event: event\n        });\n      };\n\n      var style = this._cachedColumnStyles[columnIndex];\n      var title = typeof renderedCell === 'string' ? renderedCell : null; // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n      return React.createElement(\"div\", {\n        \"aria-colindex\": columnIndex + 1,\n        \"aria-describedby\": id,\n        className: clsx('ReactVirtualized__Table__rowColumn', className),\n        key: 'Row' + rowIndex + '-' + 'Col' + columnIndex,\n        onClick: onClick,\n        role: \"gridcell\",\n        style: style,\n        title: title\n      }, renderedCell);\n    }\n  }, {\n    key: \"_createHeader\",\n    value: function _createHeader(_ref5) {\n      var column = _ref5.column,\n          index = _ref5.index;\n      var _this$props2 = this.props,\n          headerClassName = _this$props2.headerClassName,\n          headerStyle = _this$props2.headerStyle,\n          onHeaderClick = _this$props2.onHeaderClick,\n          sort = _this$props2.sort,\n          sortBy = _this$props2.sortBy,\n          sortDirection = _this$props2.sortDirection;\n      var _column$props2 = column.props,\n          columnData = _column$props2.columnData,\n          dataKey = _column$props2.dataKey,\n          defaultSortDirection = _column$props2.defaultSortDirection,\n          disableSort = _column$props2.disableSort,\n          headerRenderer = _column$props2.headerRenderer,\n          id = _column$props2.id,\n          label = _column$props2.label;\n      var sortEnabled = !disableSort && sort;\n      var classNames = clsx('ReactVirtualized__Table__headerColumn', headerClassName, column.props.headerClassName, {\n        ReactVirtualized__Table__sortableHeaderColumn: sortEnabled\n      });\n\n      var style = this._getFlexStyleForColumn(column, _objectSpread({}, headerStyle, {}, column.props.headerStyle));\n\n      var renderedHeader = headerRenderer({\n        columnData: columnData,\n        dataKey: dataKey,\n        disableSort: disableSort,\n        label: label,\n        sortBy: sortBy,\n        sortDirection: sortDirection\n      });\n      var headerOnClick, headerOnKeyDown, headerTabIndex, headerAriaSort, headerAriaLabel;\n\n      if (sortEnabled || onHeaderClick) {\n        // If this is a sortable header, clicking it should update the table data's sorting.\n        var isFirstTimeSort = sortBy !== dataKey; // If this is the firstTime sort of this column, use the column default sort order.\n        // Otherwise, invert the direction of the sort.\n\n        var newSortDirection = isFirstTimeSort ? defaultSortDirection : sortDirection === SortDirection.DESC ? SortDirection.ASC : SortDirection.DESC;\n\n        var onClick = function onClick(event) {\n          sortEnabled && sort({\n            defaultSortDirection: defaultSortDirection,\n            event: event,\n            sortBy: dataKey,\n            sortDirection: newSortDirection\n          });\n          onHeaderClick && onHeaderClick({\n            columnData: columnData,\n            dataKey: dataKey,\n            event: event\n          });\n        };\n\n        var onKeyDown = function onKeyDown(event) {\n          if (event.key === 'Enter' || event.key === ' ') {\n            onClick(event);\n          }\n        };\n\n        headerAriaLabel = column.props['aria-label'] || label || dataKey;\n        headerAriaSort = 'none';\n        headerTabIndex = 0;\n        headerOnClick = onClick;\n        headerOnKeyDown = onKeyDown;\n      }\n\n      if (sortBy === dataKey) {\n        headerAriaSort = sortDirection === SortDirection.ASC ? 'ascending' : 'descending';\n      } // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n\n      return React.createElement(\"div\", {\n        \"aria-label\": headerAriaLabel,\n        \"aria-sort\": headerAriaSort,\n        className: classNames,\n        id: id,\n        key: 'Header-Col' + index,\n        onClick: headerOnClick,\n        onKeyDown: headerOnKeyDown,\n        role: \"columnheader\",\n        style: style,\n        tabIndex: headerTabIndex\n      }, renderedHeader);\n    }\n  }, {\n    key: \"_createRow\",\n    value: function _createRow(_ref6) {\n      var _this3 = this;\n\n      var index = _ref6.rowIndex,\n          isScrolling = _ref6.isScrolling,\n          key = _ref6.key,\n          parent = _ref6.parent,\n          style = _ref6.style;\n      var _this$props3 = this.props,\n          children = _this$props3.children,\n          onRowClick = _this$props3.onRowClick,\n          onRowDoubleClick = _this$props3.onRowDoubleClick,\n          onRowRightClick = _this$props3.onRowRightClick,\n          onRowMouseOver = _this$props3.onRowMouseOver,\n          onRowMouseOut = _this$props3.onRowMouseOut,\n          rowClassName = _this$props3.rowClassName,\n          rowGetter = _this$props3.rowGetter,\n          rowRenderer = _this$props3.rowRenderer,\n          rowStyle = _this$props3.rowStyle;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: index\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: index\n      }) : rowStyle;\n      var rowData = rowGetter({\n        index: index\n      });\n      var columns = React.Children.toArray(children).map(function (column, columnIndex) {\n        return _this3._createColumn({\n          column: column,\n          columnIndex: columnIndex,\n          isScrolling: isScrolling,\n          parent: parent,\n          rowData: rowData,\n          rowIndex: index,\n          scrollbarWidth: scrollbarWidth\n        });\n      });\n      var className = clsx('ReactVirtualized__Table__row', rowClass);\n\n      var flattenedStyle = _objectSpread({}, style, {\n        height: this._getRowHeight(index),\n        overflow: 'hidden',\n        paddingRight: scrollbarWidth\n      }, rowStyleObject);\n\n      return rowRenderer({\n        className: className,\n        columns: columns,\n        index: index,\n        isScrolling: isScrolling,\n        key: key,\n        onRowClick: onRowClick,\n        onRowDoubleClick: onRowDoubleClick,\n        onRowRightClick: onRowRightClick,\n        onRowMouseOver: onRowMouseOver,\n        onRowMouseOut: onRowMouseOut,\n        rowData: rowData,\n        style: flattenedStyle\n      });\n    }\n    /**\n     * Determines the flex-shrink, flex-grow, and width values for a cell (header or column).\n     */\n\n  }, {\n    key: \"_getFlexStyleForColumn\",\n    value: function _getFlexStyleForColumn(column) {\n      var customStyle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var flexValue = \"\".concat(column.props.flexGrow, \" \").concat(column.props.flexShrink, \" \").concat(column.props.width, \"px\");\n\n      var style = _objectSpread({}, customStyle, {\n        flex: flexValue,\n        msFlex: flexValue,\n        WebkitFlex: flexValue\n      });\n\n      if (column.props.maxWidth) {\n        style.maxWidth = column.props.maxWidth;\n      }\n\n      if (column.props.minWidth) {\n        style.minWidth = column.props.minWidth;\n      }\n\n      return style;\n    }\n  }, {\n    key: \"_getHeaderColumns\",\n    value: function _getHeaderColumns() {\n      var _this4 = this;\n\n      var _this$props4 = this.props,\n          children = _this$props4.children,\n          disableHeader = _this$props4.disableHeader;\n      var items = disableHeader ? [] : React.Children.toArray(children);\n      return items.map(function (column, index) {\n        return _this4._createHeader({\n          column: column,\n          index: index\n        });\n      });\n    }\n  }, {\n    key: \"_getRowHeight\",\n    value: function _getRowHeight(rowIndex) {\n      var rowHeight = this.props.rowHeight;\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: rowIndex\n      }) : rowHeight;\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref7) {\n      var clientHeight = _ref7.clientHeight,\n          scrollHeight = _ref7.scrollHeight,\n          scrollTop = _ref7.scrollTop;\n      var onScroll = this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    }\n  }, {\n    key: \"_onSectionRendered\",\n    value: function _onSectionRendered(_ref8) {\n      var rowOverscanStartIndex = _ref8.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref8.rowOverscanStopIndex,\n          rowStartIndex = _ref8.rowStartIndex,\n          rowStopIndex = _ref8.rowStopIndex;\n      var onRowsRendered = this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    }\n  }, {\n    key: \"_setRef\",\n    value: function _setRef(ref) {\n      this.Grid = ref;\n    }\n  }, {\n    key: \"_setScrollbarWidth\",\n    value: function _setScrollbarWidth() {\n      var scrollbarWidth = this.getScrollbarWidth();\n      this.setState({\n        scrollbarWidth: scrollbarWidth\n      });\n    }\n  }]);\n\n  return Table;\n}(React.PureComponent);\n\n_defineProperty(Table, \"defaultProps\", {\n  disableHeader: false,\n  estimatedRowSize: 30,\n  headerHeight: 0,\n  headerStyle: {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  rowRenderer: defaultRowRenderer,\n  headerRowRenderer: defaultHeaderRowRenderer,\n  rowStyle: {},\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { Table as default };\nTable.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** This is just set on the grid top element. */\n  'aria-label': PropTypes.string,\n\n  /** This is just set on the grid top element. */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /** One or more Columns describing the data displayed in this row */\n  children: function children(props) {\n    var children = React.Children.toArray(props.children);\n\n    for (var i = 0; i < children.length; i++) {\n      var childType = children[i].type;\n\n      if (childType !== Column && !(childType.prototype instanceof Column)) {\n        return new Error('Table only accepts children of type Column');\n      }\n    }\n  },\n\n  /** Optional CSS class name */\n  className: PropTypes.string,\n\n  /** Disable rendering the header at all */\n  disableHeader: PropTypes.bool,\n\n  /**\n   * Used to estimate the total height of a Table before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  estimatedRowSize: PropTypes.number.isRequired,\n\n  /** Optional custom CSS class name to attach to inner Grid element. */\n  gridClassName: PropTypes.string,\n\n  /** Optional inline style to attach to inner Grid element. */\n  gridStyle: PropTypes.object,\n\n  /** Optional CSS class to apply to all column headers */\n  headerClassName: PropTypes.string,\n\n  /** Fixed height of header row */\n  headerHeight: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: any[],\n   *   style: any\n   * }): PropTypes.node\n   */\n  headerRowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table header columns. */\n  headerStyle: PropTypes.object,\n\n  /** Fixed/available height for out DOM element */\n  height: PropTypes.number.isRequired,\n\n  /** Optional id */\n  id: PropTypes.string,\n\n  /** Optional renderer to be used in place of table body rows when rowCount is 0 */\n  noRowsRenderer: PropTypes.func,\n\n  /**\n   * Optional callback when a column is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onColumnClick: PropTypes.func,\n\n  /**\n   * Optional callback when a column's header is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onHeaderClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user double-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowDoubleClick: PropTypes.func,\n\n  /**\n   * Callback invoked when the mouse leaves a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOut: PropTypes.func,\n\n  /**\n   * Callback invoked when a user moves the mouse over a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOver: PropTypes.func,\n\n  /**\n   * Callback invoked when a user right-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowRightClick: PropTypes.func,\n\n  /**\n   * Callback invoked with information about the slice of rows that were just rendered.\n   * ({ startIndex, stopIndex }): void\n   */\n  onRowsRendered: PropTypes.func,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, scrollHeight, scrollTop }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  overscanIndicesGetter: PropTypes.func.isRequired,\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  overscanRowCount: PropTypes.number.isRequired,\n\n  /**\n   * Optional CSS class to apply to all table rows (including the header row).\n   * This property can be a CSS class name (string) or a function that returns a class name.\n   * If a function is provided its signature should be: ({ index: number }): string\n   */\n  rowClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n\n  /**\n   * Callback responsible for returning a data row given an index.\n   * ({ index: number }): any\n   */\n  rowGetter: PropTypes.func.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * ({ index: number }): number\n   */\n  rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n\n  /** Number of rows in table. */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: Array,\n   *   index: number,\n   *   isScrolling: boolean,\n   *   onRowClick: ?Function,\n   *   onRowDoubleClick: ?Function,\n   *   onRowMouseOver: ?Function,\n   *   onRowMouseOut: ?Function,\n   *   rowData: any,\n   *   style: any\n   * }): PropTypes.node\n   */\n  rowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table rows. */\n  rowStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n\n  /** See Grid#scrollToAlignment */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  scrollToIndex: PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Sort function to be called if a sortable header is clicked.\n   * Should implement the following interface: ({\n   *   defaultSortDirection: 'ASC' | 'DESC',\n   *   event: MouseEvent,\n   *   sortBy: string,\n   *   sortDirection: SortDirection\n   * }): void\n   */\n  sort: PropTypes.func,\n\n  /** Table data is currently sorted by this :dataKey (if it is sorted at all) */\n  sortBy: PropTypes.string,\n\n  /** Table data is currently sorted in this direction (if it is sorted at all) */\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** Optional inline style */\n  style: PropTypes.object,\n\n  /** Tab index for focus */\n  tabIndex: PropTypes.number,\n\n  /** Width of list */\n  width: PropTypes.number.isRequired\n} : {};\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";","/**\n * Default accessor for returning a cell value for a given attribute.\n * This function expects to operate on either a vanilla Object or an Immutable Map.\n * You should override the column's cellDataGetter if your data is some other type of object.\n */\nexport default function defaultCellDataGetter(_ref) {\n  var dataKey = _ref.dataKey,\n      rowData = _ref.rowData;\n\n  if (typeof rowData.get === 'function') {\n    return rowData.get(dataKey);\n  } else {\n    return rowData[dataKey];\n  }\n}\nimport { bpfrpt_proptype_CellDataGetterParams } from \"./types\";","/**\n * Default cell renderer that displays an attribute as a simple string\n * You should override the column's cellRenderer if your data is some other type of object.\n */\nexport default function defaultCellRenderer(_ref) {\n  var cellData = _ref.cellData;\n\n  if (cellData == null) {\n    return '';\n  } else {\n    return String(cellData);\n  }\n}\nimport { bpfrpt_proptype_CellRendererParams } from \"./types\";","import createMultiSort from './createMultiSort';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer.js';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport Column from './Column';\nimport SortDirection from './SortDirection';\nimport SortIndicator from './SortIndicator';\nimport Table from './Table';\nexport default Table;\nexport { createMultiSort, defaultCellDataGetter, defaultCellRenderer, defaultHeaderRowRenderer, defaultHeaderRenderer, defaultRowRenderer, Column, SortDirection, SortIndicator, Table };","import { requestAnimationTimeout, cancelAnimationTimeout } from '../../utils/requestAnimationTimeout';\nvar mountedInstances = [];\nvar originalBodyPointerEvents = null;\nvar disablePointerEventsTimeoutId = null;\n\nfunction enablePointerEventsIfDisabled() {\n  if (disablePointerEventsTimeoutId) {\n    disablePointerEventsTimeoutId = null;\n\n    if (document.body && originalBodyPointerEvents != null) {\n      document.body.style.pointerEvents = originalBodyPointerEvents;\n    }\n\n    originalBodyPointerEvents = null;\n  }\n}\n\nfunction enablePointerEventsAfterDelayCallback() {\n  enablePointerEventsIfDisabled();\n  mountedInstances.forEach(function (instance) {\n    return instance.__resetIsScrolling();\n  });\n}\n\nfunction enablePointerEventsAfterDelay() {\n  if (disablePointerEventsTimeoutId) {\n    cancelAnimationTimeout(disablePointerEventsTimeoutId);\n  }\n\n  var maximumTimeout = 0;\n  mountedInstances.forEach(function (instance) {\n    maximumTimeout = Math.max(maximumTimeout, instance.props.scrollingResetTimeInterval);\n  });\n  disablePointerEventsTimeoutId = requestAnimationTimeout(enablePointerEventsAfterDelayCallback, maximumTimeout);\n}\n\nfunction onScrollWindow(event) {\n  if (event.currentTarget === window && originalBodyPointerEvents == null && document.body) {\n    originalBodyPointerEvents = document.body.style.pointerEvents;\n    document.body.style.pointerEvents = 'none';\n  }\n\n  enablePointerEventsAfterDelay();\n  mountedInstances.forEach(function (instance) {\n    if (instance.props.scrollElement === event.currentTarget) {\n      instance.__handleWindowScrollEvent();\n    }\n  });\n}\n\nexport function registerScrollListener(component, element) {\n  if (!mountedInstances.some(function (instance) {\n    return instance.props.scrollElement === element;\n  })) {\n    element.addEventListener('scroll', onScrollWindow);\n  }\n\n  mountedInstances.push(component);\n}\nexport function unregisterScrollListener(component, element) {\n  mountedInstances = mountedInstances.filter(function (instance) {\n    return instance !== component;\n  });\n\n  if (!mountedInstances.length) {\n    element.removeEventListener('scroll', onScrollWindow);\n\n    if (disablePointerEventsTimeoutId) {\n      cancelAnimationTimeout(disablePointerEventsTimeoutId);\n      enablePointerEventsIfDisabled();\n    }\n  }\n}\nimport { bpfrpt_proptype_WindowScroller } from \"../WindowScroller.js\";","/**\n * Gets the dimensions of the element, accounting for API differences between\n * `window` and other DOM elements.\n */\n// TODO Move this into WindowScroller and import from there\nvar isWindow = function isWindow(element) {\n  return element === window;\n};\n\nvar getBoundingBox = function getBoundingBox(element) {\n  return element.getBoundingClientRect();\n};\n\nexport function getDimensions(scrollElement, props) {\n  if (!scrollElement) {\n    return {\n      height: props.serverHeight,\n      width: props.serverWidth\n    };\n  } else if (isWindow(scrollElement)) {\n    var _window = window,\n        innerHeight = _window.innerHeight,\n        innerWidth = _window.innerWidth;\n    return {\n      height: typeof innerHeight === 'number' ? innerHeight : 0,\n      width: typeof innerWidth === 'number' ? innerWidth : 0\n    };\n  } else {\n    return getBoundingBox(scrollElement);\n  }\n}\n/**\n * Gets the vertical and horizontal position of an element within its scroll container.\n * Elements that have been “scrolled past” return negative values.\n * Handles edge-case where a user is navigating back (history) from an already-scrolled page.\n * In this case the body’s top or left position will be a negative number and this element’s top or left will be increased (by that amount).\n */\n\nexport function getPositionOffset(element, container) {\n  if (isWindow(container) && document.documentElement) {\n    var containerElement = document.documentElement;\n    var elementRect = getBoundingBox(element);\n    var containerRect = getBoundingBox(containerElement);\n    return {\n      top: elementRect.top - containerRect.top,\n      left: elementRect.left - containerRect.left\n    };\n  } else {\n    var scrollOffset = getScrollOffset(container);\n\n    var _elementRect = getBoundingBox(element);\n\n    var _containerRect = getBoundingBox(container);\n\n    return {\n      top: _elementRect.top + scrollOffset.top - _containerRect.top,\n      left: _elementRect.left + scrollOffset.left - _containerRect.left\n    };\n  }\n}\n/**\n * Gets the vertical and horizontal scroll amount of the element, accounting for IE compatibility\n * and API differences between `window` and other DOM elements.\n */\n\nexport function getScrollOffset(element) {\n  if (isWindow(element) && document.documentElement) {\n    return {\n      top: 'scrollY' in window ? window.scrollY : document.documentElement.scrollTop,\n      left: 'scrollX' in window ? window.scrollX : document.documentElement.scrollLeft\n    };\n  } else {\n    return {\n      top: element.scrollTop,\n      left: element.scrollLeft\n    };\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { registerScrollListener, unregisterScrollListener } from './utils/onScroll';\nimport { getDimensions, getPositionOffset, getScrollOffset } from './utils/dimensions';\nimport createDetectElementResize from '../vendor/detectElementResize';\n\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\nexport var IS_SCROLLING_TIMEOUT = 150;\n\nvar getWindow = function getWindow() {\n  return typeof window !== 'undefined' ? window : undefined;\n};\n\nvar WindowScroller = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(WindowScroller, _React$PureComponent);\n\n  function WindowScroller() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, WindowScroller);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(WindowScroller)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", getWindow());\n\n    _defineProperty(_assertThisInitialized(_this), \"_isMounted\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromTop\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromLeft\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", _objectSpread({}, getDimensions(_this.props.scrollElement, _this.props), {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    }));\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('WindowScroller registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onChildScroll\", function (_ref) {\n      var scrollTop = _ref.scrollTop;\n\n      if (_this.state.scrollTop === scrollTop) {\n        return;\n      }\n\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        if (typeof scrollElement.scrollTo === 'function') {\n          scrollElement.scrollTo(0, scrollTop + _this._positionFromTop);\n        } else {\n          scrollElement.scrollTop = scrollTop + _this._positionFromTop;\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerResizeListener\", function (element) {\n      if (element === window) {\n        window.addEventListener('resize', _this._onResize, false);\n      } else {\n        _this._detectElementResize.addResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_unregisterResizeListener\", function (element) {\n      if (element === window) {\n        window.removeEventListener('resize', _this._onResize, false);\n      } else if (element) {\n        _this._detectElementResize.removeResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__handleWindowScrollEvent\", function () {\n      if (!_this._isMounted) {\n        return;\n      }\n\n      var onScroll = _this.props.onScroll;\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        var scrollOffset = getScrollOffset(scrollElement);\n        var scrollLeft = Math.max(0, scrollOffset.left - _this._positionFromLeft);\n        var scrollTop = Math.max(0, scrollOffset.top - _this._positionFromTop);\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        onScroll({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__resetIsScrolling\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(WindowScroller, [{\n    key: \"updatePosition\",\n    value: function updatePosition() {\n      var scrollElement = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.scrollElement;\n      var onResize = this.props.onResize;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width;\n      var thisNode = this._child || ReactDOM.findDOMNode(this);\n\n      if (thisNode instanceof Element && scrollElement) {\n        var offset = getPositionOffset(thisNode, scrollElement);\n        this._positionFromTop = offset.top;\n        this._positionFromLeft = offset.left;\n      }\n\n      var dimensions = getDimensions(scrollElement, this.props);\n\n      if (height !== dimensions.height || width !== dimensions.width) {\n        this.setState({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n        onResize({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var scrollElement = this.props.scrollElement;\n      this._detectElementResize = createDetectElementResize();\n      this.updatePosition(scrollElement);\n\n      if (scrollElement) {\n        registerScrollListener(this, scrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n\n      this._isMounted = true;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var scrollElement = this.props.scrollElement;\n      var prevScrollElement = prevProps.scrollElement;\n\n      if (prevScrollElement !== scrollElement && prevScrollElement != null && scrollElement != null) {\n        this.updatePosition(scrollElement);\n        unregisterScrollListener(this, prevScrollElement);\n        registerScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(prevScrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var scrollElement = this.props.scrollElement;\n\n      if (scrollElement) {\n        unregisterScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(scrollElement);\n      }\n\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state2 = this.state,\n          isScrolling = _this$state2.isScrolling,\n          scrollTop = _this$state2.scrollTop,\n          scrollLeft = _this$state2.scrollLeft,\n          height = _this$state2.height,\n          width = _this$state2.width;\n      return children({\n        onChildScroll: this._onChildScroll,\n        registerChild: this._registerChild,\n        height: height,\n        isScrolling: isScrolling,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        width: width\n      });\n    }\n  }]);\n\n  return WindowScroller;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /**\n   * Function responsible for rendering children.\n   * This function should implement the following signature:\n   * ({ height, isScrolling, scrollLeft, scrollTop, width }) => PropTypes.element\n   */\n  \"children\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-resize: ({ height, width }) */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-scroll: ({ scrollLeft, scrollTop }) */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** Element to attach scroll event listeners. Defaults to window. */\n  \"scrollElement\": PropTypes.oneOfType([PropTypes.any, function () {\n    return (typeof Element === \"function\" ? PropTypes.instanceOf(Element) : PropTypes.any).apply(this, arguments);\n  }]),\n\n  /**\n   * Wait this amount of time after the last scroll event before resetting child `pointer-events`.\n   */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Height used for server-side rendering */\n  \"serverHeight\": PropTypes.number.isRequired,\n\n  /** Width used for server-side rendering */\n  \"serverWidth\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(WindowScroller, \"defaultProps\", {\n  onResize: function onResize() {},\n  onScroll: function onScroll() {},\n  scrollingResetTimeInterval: IS_SCROLLING_TIMEOUT,\n  scrollElement: getWindow(),\n  serverHeight: 0,\n  serverWidth: 0\n});\n\nexport { WindowScroller as default };\nimport PropTypes from \"prop-types\";","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport useTheme from '../styles/useTheme';\nimport IconButton from '../IconButton';\n/**\n * @ignore - internal component.\n */\n\nvar _ref = /*#__PURE__*/React.createElement(KeyboardArrowRight, null);\n\nvar _ref2 = /*#__PURE__*/React.createElement(KeyboardArrowLeft, null);\n\nvar _ref3 = /*#__PURE__*/React.createElement(KeyboardArrowLeft, null);\n\nvar _ref4 = /*#__PURE__*/React.createElement(KeyboardArrowRight, null);\n\nvar TablePaginationActions = /*#__PURE__*/React.forwardRef(function TablePaginationActions(props, ref) {\n  var backIconButtonProps = props.backIconButtonProps,\n      count = props.count,\n      nextIconButtonProps = props.nextIconButtonProps,\n      onChangePage = props.onChangePage,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      other = _objectWithoutProperties(props, [\"backIconButtonProps\", \"count\", \"nextIconButtonProps\", \"onChangePage\", \"page\", \"rowsPerPage\"]);\n\n  var theme = useTheme();\n\n  var handleBackButtonClick = function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  };\n\n  var handleNextButtonClick = function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(IconButton, _extends({\n    onClick: handleBackButtonClick,\n    disabled: page === 0,\n    color: \"inherit\"\n  }, backIconButtonProps), theme.direction === 'rtl' ? _ref : _ref2), /*#__PURE__*/React.createElement(IconButton, _extends({\n    onClick: handleNextButtonClick,\n    disabled: count !== -1 ? page >= Math.ceil(count / rowsPerPage) - 1 : false,\n    color: \"inherit\"\n  }, nextIconButtonProps), theme.direction === 'rtl' ? _ref3 : _ref4));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePaginationActions.propTypes = {\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) element.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onChangePage: PropTypes.func.isRequired,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: PropTypes.number.isRequired,\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired\n} : void 0;\nexport default TablePaginationActions;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@material-ui/utils';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport InputBase from '../InputBase';\nimport MenuItem from '../MenuItem';\nimport Select from '../Select';\nimport TableCell from '../TableCell';\nimport Toolbar from '../Toolbar';\nimport Typography from '../Typography';\nimport TablePaginationActions from './TablePaginationActions';\nimport useId from '../utils/unstable_useId';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.primary,\n      fontSize: theme.typography.pxToRem(14),\n      overflow: 'auto',\n      // Increase the specificity to override TableCell.\n      '&:last-child': {\n        padding: 0\n      }\n    },\n\n    /* Styles applied to the Toolbar component. */\n    toolbar: {\n      minHeight: 52,\n      paddingRight: 2\n    },\n\n    /* Styles applied to the spacer element. */\n    spacer: {\n      flex: '1 1 100%'\n    },\n\n    /* Styles applied to the caption Typography components if `variant=\"caption\"`. */\n    caption: {\n      flexShrink: 0\n    },\n    // TODO v5: `.selectRoot` should be merged with `.input`\n\n    /* Styles applied to the Select component root element. */\n    selectRoot: {\n      marginRight: 32,\n      marginLeft: 8\n    },\n\n    /* Styles applied to the Select component `select` class. */\n    select: {\n      paddingLeft: 8,\n      paddingRight: 24,\n      textAlign: 'right',\n      textAlignLast: 'right' // Align <select> on Chrome.\n\n    },\n    // TODO v5: remove\n\n    /* Styles applied to the Select component `icon` class. */\n    selectIcon: {},\n\n    /* Styles applied to the `InputBase` component. */\n    input: {\n      color: 'inherit',\n      fontSize: 'inherit',\n      flexShrink: 0\n    },\n\n    /* Styles applied to the MenuItem component. */\n    menuItem: {},\n\n    /* Styles applied to the internal `TablePaginationActions` component. */\n    actions: {\n      flexShrink: 0,\n      marginLeft: 20\n    }\n  };\n};\n\nvar defaultLabelDisplayedRows = function defaultLabelDisplayedRows(_ref) {\n  var from = _ref.from,\n      to = _ref.to,\n      count = _ref.count;\n  return \"\".concat(from, \"-\").concat(to, \" of \").concat(count !== -1 ? count : \"more than \".concat(to));\n};\n\nvar defaultRowsPerPageOptions = [10, 25, 50, 100];\n/**\n * A `TableCell` based component for placing inside `TableFooter` for pagination.\n */\n\nvar TablePagination = /*#__PURE__*/React.forwardRef(function TablePagination(props, ref) {\n  var _props$ActionsCompone = props.ActionsComponent,\n      ActionsComponent = _props$ActionsCompone === void 0 ? TablePaginationActions : _props$ActionsCompone,\n      backIconButtonProps = props.backIconButtonProps,\n      _props$backIconButton = props.backIconButtonText,\n      backIconButtonText = _props$backIconButton === void 0 ? 'Previous page' : _props$backIconButton,\n      classes = props.classes,\n      className = props.className,\n      colSpanProp = props.colSpan,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? TableCell : _props$component,\n      count = props.count,\n      _props$labelDisplayed = props.labelDisplayedRows,\n      labelDisplayedRows = _props$labelDisplayed === void 0 ? defaultLabelDisplayedRows : _props$labelDisplayed,\n      _props$labelRowsPerPa = props.labelRowsPerPage,\n      labelRowsPerPage = _props$labelRowsPerPa === void 0 ? 'Rows per page:' : _props$labelRowsPerPa,\n      nextIconButtonProps = props.nextIconButtonProps,\n      _props$nextIconButton = props.nextIconButtonText,\n      nextIconButtonText = _props$nextIconButton === void 0 ? 'Next page' : _props$nextIconButton,\n      onChangePage = props.onChangePage,\n      onChangeRowsPerPage = props.onChangeRowsPerPage,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      _props$rowsPerPageOpt = props.rowsPerPageOptions,\n      rowsPerPageOptions = _props$rowsPerPageOpt === void 0 ? defaultRowsPerPageOptions : _props$rowsPerPageOpt,\n      _props$SelectProps = props.SelectProps,\n      SelectProps = _props$SelectProps === void 0 ? {} : _props$SelectProps,\n      other = _objectWithoutProperties(props, [\"ActionsComponent\", \"backIconButtonProps\", \"backIconButtonText\", \"classes\", \"className\", \"colSpan\", \"component\", \"count\", \"labelDisplayedRows\", \"labelRowsPerPage\", \"nextIconButtonProps\", \"nextIconButtonText\", \"onChangePage\", \"onChangeRowsPerPage\", \"page\", \"rowsPerPage\", \"rowsPerPageOptions\", \"SelectProps\"]);\n\n  var colSpan;\n\n  if (Component === TableCell || Component === 'td') {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n\n  var selectId = useId();\n  var labelId = useId();\n  var MenuItemComponent = SelectProps.native ? 'option' : MenuItem;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    colSpan: colSpan,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(Toolbar, {\n    className: classes.toolbar\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.spacer\n  }), rowsPerPageOptions.length > 1 && /*#__PURE__*/React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"body2\",\n    className: classes.caption,\n    id: labelId\n  }, labelRowsPerPage), rowsPerPageOptions.length > 1 && /*#__PURE__*/React.createElement(Select, _extends({\n    classes: {\n      select: classes.select,\n      icon: classes.selectIcon\n    },\n    input: /*#__PURE__*/React.createElement(InputBase, {\n      className: clsx(classes.input, classes.selectRoot)\n    }),\n    value: rowsPerPage,\n    onChange: onChangeRowsPerPage,\n    id: selectId,\n    labelId: labelId\n  }, SelectProps), rowsPerPageOptions.map(function (rowsPerPageOption) {\n    return /*#__PURE__*/React.createElement(MenuItemComponent, {\n      className: classes.menuItem,\n      key: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption,\n      value: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption\n    }, rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption);\n  })), /*#__PURE__*/React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"body2\",\n    className: classes.caption\n  }, labelDisplayedRows({\n    from: count === 0 ? 0 : page * rowsPerPage + 1,\n    to: count !== -1 ? Math.min(count, (page + 1) * rowsPerPage) : (page + 1) * rowsPerPage,\n    count: count === -1 ? -1 : count,\n    page: page\n  })), /*#__PURE__*/React.createElement(ActionsComponent, {\n    className: classes.actions,\n    backIconButtonProps: _extends({\n      title: backIconButtonText,\n      'aria-label': backIconButtonText\n    }, backIconButtonProps),\n    count: count,\n    nextIconButtonProps: _extends({\n      title: nextIconButtonText,\n      'aria-label': nextIconButtonText\n    }, nextIconButtonProps),\n    onChangePage: onChangePage,\n    page: page,\n    rowsPerPage: rowsPerPage\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePagination.propTypes = {\n  /**\n   * The component used for displaying the actions.\n   * Either a string to use a HTML element or a component.\n   */\n  ActionsComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) component.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * Text label for the back arrow icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  backIconButtonText: PropTypes.string,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * The total number of rows.\n   *\n   * To enable server side pagination for an unknown number of items, provide -1.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`\n   * object.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  labelDisplayedRows: PropTypes.func,\n\n  /**\n   * Customize the rows per page label.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  labelRowsPerPage: PropTypes.node,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Text label for the next arrow icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  nextIconButtonText: PropTypes.string,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onChangePage: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onChangeRowsPerPage: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(PropTypes.number.isRequired, function (props) {\n    var count = props.count,\n        page = props.page,\n        rowsPerPage = props.rowsPerPage;\n\n    if (count === -1) {\n      return null;\n    }\n\n    var newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n\n    if (page < 0 || page > newLastPage) {\n      return new Error('Material-UI: The page prop of a TablePagination is out of range ' + \"(0 to \".concat(newLastPage, \", but page is \").concat(page, \").\"));\n    }\n\n    return null;\n  }),\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired,\n\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   */\n  rowsPerPageOptions: PropTypes.array,\n\n  /**\n   * Props applied to the rows per page [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTablePagination'\n})(TablePagination);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport ArrowDownwardIcon from '../internal/svg-icons/ArrowDownward';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      cursor: 'pointer',\n      display: 'inline-flex',\n      justifyContent: 'flex-start',\n      flexDirection: 'inherit',\n      alignItems: 'center',\n      '&:focus': {\n        color: theme.palette.text.secondary\n      },\n      '&:hover': {\n        color: theme.palette.text.secondary,\n        '& $icon': {\n          opacity: 0.5\n        }\n      },\n      '&$active': {\n        color: theme.palette.text.primary,\n        // && instead of & is a workaround for https://github.com/cssinjs/jss/issues/1045\n        '&& $icon': {\n          opacity: 1,\n          color: theme.palette.text.secondary\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the root element if `active={true}`. */\n    active: {},\n\n    /* Styles applied to the icon component. */\n    icon: {\n      fontSize: 18,\n      marginRight: 4,\n      marginLeft: 4,\n      opacity: 0,\n      transition: theme.transitions.create(['opacity', 'transform'], {\n        duration: theme.transitions.duration.shorter\n      }),\n      userSelect: 'none'\n    },\n\n    /* Styles applied to the icon component if `direction=\"desc\"`. */\n    iconDirectionDesc: {\n      transform: 'rotate(0deg)'\n    },\n\n    /* Styles applied to the icon component if `direction=\"asc\"`. */\n    iconDirectionAsc: {\n      transform: 'rotate(180deg)'\n    }\n  };\n};\n/**\n * A button based label for placing inside `TableCell` for column sorting.\n */\n\nvar TableSortLabel = /*#__PURE__*/React.forwardRef(function TableSortLabel(props, ref) {\n  var _props$active = props.active,\n      active = _props$active === void 0 ? false : _props$active,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'asc' : _props$direction,\n      _props$hideSortIcon = props.hideSortIcon,\n      hideSortIcon = _props$hideSortIcon === void 0 ? false : _props$hideSortIcon,\n      _props$IconComponent = props.IconComponent,\n      IconComponent = _props$IconComponent === void 0 ? ArrowDownwardIcon : _props$IconComponent,\n      other = _objectWithoutProperties(props, [\"active\", \"children\", \"classes\", \"className\", \"direction\", \"hideSortIcon\", \"IconComponent\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className, active && classes.active),\n    component: \"span\",\n    disableRipple: true,\n    ref: ref\n  }, other), children, hideSortIcon && !active ? null : /*#__PURE__*/React.createElement(IconComponent, {\n    className: clsx(classes.icon, classes[\"iconDirection\".concat(capitalize(direction))])\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableSortLabel.propTypes = {\n  /**\n   * If `true`, the label will have the active styling (should be true for the sorted column).\n   */\n  active: PropTypes.bool,\n\n  /**\n   * Label contents, the arrow will be appended automatically.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The current sort direction.\n   */\n  direction: PropTypes.oneOf(['asc', 'desc']),\n\n  /**\n   * Hide sort icon when active is false.\n   */\n  hideSortIcon: PropTypes.bool,\n\n  /**\n   * Sort icon to use.\n   */\n  IconComponent: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableSortLabel'\n})(TableSortLabel);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport TableContext from './TableContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'table',\n      width: '100%',\n      borderCollapse: 'collapse',\n      borderSpacing: 0,\n      '& caption': _extends({}, theme.typography.body2, {\n        padding: theme.spacing(2),\n        color: theme.palette.text.secondary,\n        textAlign: 'left',\n        captionSide: 'bottom'\n      })\n    },\n\n    /* Styles applied to the root element if `stickyHeader={true}`. */\n    stickyHeader: {\n      borderCollapse: 'separate'\n    }\n  };\n};\nvar defaultComponent = 'table';\nvar Table = /*#__PURE__*/React.forwardRef(function Table(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      _props$padding = props.padding,\n      padding = _props$padding === void 0 ? 'default' : _props$padding,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$stickyHeader = props.stickyHeader,\n      stickyHeader = _props$stickyHeader === void 0 ? false : _props$stickyHeader,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"padding\", \"size\", \"stickyHeader\"]);\n\n  var table = React.useMemo(function () {\n    return {\n      padding: padding,\n      size: size,\n      stickyHeader: stickyHeader\n    };\n  }, [padding, size, stickyHeader]);\n  return /*#__PURE__*/React.createElement(TableContext.Provider, {\n    value: table\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    role: Component === defaultComponent ? null : 'table',\n    ref: ref,\n    className: clsx(classes.root, className, stickyHeader && classes.stickyHeader)\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Table.propTypes = {\n  /**\n   * The content of the table, normally `TableHead` and `TableBody`.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Allows TableCells to inherit padding of the Table.\n   */\n  padding: PropTypes.oneOf(['default', 'checkbox', 'none']),\n\n  /**\n   * Allows TableCells to inherit size of the Table.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * Set the header sticky.\n   *\n   * ⚠️ It doesn't work with IE 11.\n   */\n  stickyHeader: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTable'\n})(Table);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table-footer-group'\n  }\n};\nvar tablelvl2 = {\n  variant: 'footer'\n};\nvar defaultComponent = 'tfoot';\nvar TableFooter = /*#__PURE__*/React.forwardRef(function TableFooter(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Tablelvl2Context.Provider, {\n    value: tablelvl2\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: Component === defaultComponent ? null : 'rowgroup'\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableFooter.propTypes = {\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableFooter'\n})(TableFooter);","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import { deepmerge } from '@material-ui/utils';\nimport createMuiTheme from './createMuiTheme';\nexport default function createMuiStrictModeTheme(options) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  return createMuiTheme.apply(void 0, [deepmerge({\n    unstable_strictMode: true\n  }, options)].concat(args));\n}","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nexport function isUnitless(value) {\n  return String(parseFloat(value)).length === String(value).length;\n} // Ported from Compass\n// https://github.com/Compass/compass/blob/master/core/stylesheets/compass/typography/_units.scss\n// Emulate the sass function \"unit\"\n\nexport function getUnit(input) {\n  return String(input).match(/[\\d.\\-+]*\\s*(.*)/)[1] || '';\n} // Emulate the sass function \"unitless\"\n\nexport function toUnitless(length) {\n  return parseFloat(length);\n} // Convert any CSS <length> or <percentage> value to any another.\n// From https://github.com/KyleAMathews/convert-css-length\n\nexport function convertLength(baseFontSize) {\n  return function (length, toUnit) {\n    var fromUnit = getUnit(length); // Optimize for cases where `from` and `to` units are accidentally the same.\n\n    if (fromUnit === toUnit) {\n      return length;\n    } // Convert input length to pixels.\n\n\n    var pxLength = toUnitless(length);\n\n    if (fromUnit !== 'px') {\n      if (fromUnit === 'em') {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n      } else if (fromUnit === 'rem') {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n        return length;\n      }\n    } // Convert length in pixels to the output unit\n\n\n    var outputLength = pxLength;\n\n    if (toUnit !== 'px') {\n      if (toUnit === 'em') {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else if (toUnit === 'rem') {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else {\n        return length;\n      }\n    }\n\n    return parseFloat(outputLength.toFixed(5)) + toUnit;\n  };\n}\nexport function alignProperty(_ref) {\n  var size = _ref.size,\n      grid = _ref.grid;\n  var sizeBelow = size - size % grid;\n  var sizeAbove = sizeBelow + grid;\n  return size - sizeBelow < sizeAbove - size ? sizeBelow : sizeAbove;\n} // fontGrid finds a minimal grid (in rem) for the fontSize values so that the\n// lineHeight falls under a x pixels grid, 4px in the case of Material Design,\n// without changing the relative line height\n\nexport function fontGrid(_ref2) {\n  var lineHeight = _ref2.lineHeight,\n      pixels = _ref2.pixels,\n      htmlFontSize = _ref2.htmlFontSize;\n  return pixels / (lineHeight * htmlFontSize);\n}\n/**\n * generate a responsive version of a given CSS property\n * @example\n * responsiveProperty({\n *   cssProperty: 'fontSize',\n *   min: 15,\n *   max: 20,\n *   unit: 'px',\n *   breakpoints: [300, 600],\n * })\n *\n * // this returns\n *\n * {\n *   fontSize: '15px',\n *   '@media (min-width:300px)': {\n *     fontSize: '17.5px',\n *   },\n *   '@media (min-width:600px)': {\n *     fontSize: '20px',\n *   },\n * }\n *\n * @param {Object} params\n * @param {string} params.cssProperty - The CSS property to be made responsive\n * @param {number} params.min - The smallest value of the CSS property\n * @param {number} params.max - The largest value of the CSS property\n * @param {string} [params.unit] - The unit to be used for the CSS property\n * @param {Array.number} [params.breakpoints]  - An array of breakpoints\n * @param {number} [params.alignStep] - Round scaled value to fall under this grid\n * @returns {Object} responsive styles for {params.cssProperty}\n */\n\nexport function responsiveProperty(_ref3) {\n  var cssProperty = _ref3.cssProperty,\n      min = _ref3.min,\n      max = _ref3.max,\n      _ref3$unit = _ref3.unit,\n      unit = _ref3$unit === void 0 ? 'rem' : _ref3$unit,\n      _ref3$breakpoints = _ref3.breakpoints,\n      breakpoints = _ref3$breakpoints === void 0 ? [600, 960, 1280] : _ref3$breakpoints,\n      _ref3$transform = _ref3.transform,\n      transform = _ref3$transform === void 0 ? null : _ref3$transform;\n\n  var output = _defineProperty({}, cssProperty, \"\".concat(min).concat(unit));\n\n  var factor = (max - min) / breakpoints[breakpoints.length - 1];\n  breakpoints.forEach(function (breakpoint) {\n    var value = min + factor * breakpoint;\n\n    if (transform !== null) {\n      value = transform(value);\n    }\n\n    output[\"@media (min-width:\".concat(breakpoint, \"px)\")] = _defineProperty({}, cssProperty, \"\".concat(Math.round(value * 10000) / 10000).concat(unit));\n  });\n  return output;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@material-ui/utils\";\nimport { isUnitless, convertLength, responsiveProperty, alignProperty, fontGrid } from './cssUtils';\nexport default function responsiveFontSizes(themeInput) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$breakpoints = options.breakpoints,\n      breakpoints = _options$breakpoints === void 0 ? ['sm', 'md', 'lg'] : _options$breakpoints,\n      _options$disableAlign = options.disableAlign,\n      disableAlign = _options$disableAlign === void 0 ? false : _options$disableAlign,\n      _options$factor = options.factor,\n      factor = _options$factor === void 0 ? 2 : _options$factor,\n      _options$variants = options.variants,\n      variants = _options$variants === void 0 ? ['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline'] : _options$variants;\n\n  var theme = _extends({}, themeInput);\n\n  theme.typography = _extends({}, theme.typography);\n  var typography = theme.typography; // Convert between css lengths e.g. em->px or px->rem\n  // Set the baseFontSize for your project. Defaults to 16px (also the browser default).\n\n  var convert = convertLength(typography.htmlFontSize);\n  var breakpointValues = breakpoints.map(function (x) {\n    return theme.breakpoints.values[x];\n  });\n  variants.forEach(function (variant) {\n    var style = typography[variant];\n    var remFontSize = parseFloat(convert(style.fontSize, 'rem'));\n\n    if (remFontSize <= 1) {\n      return;\n    }\n\n    var maxFontSize = remFontSize;\n    var minFontSize = 1 + (maxFontSize - 1) / factor;\n    var lineHeight = style.lineHeight;\n\n    if (!isUnitless(lineHeight) && !disableAlign) {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? \"Material-UI: Unsupported non-unitless line height with grid alignment.\\nUse unitless line heights instead.\" : _formatMuiErrorMessage(6));\n    }\n\n    if (!isUnitless(lineHeight)) {\n      // make it unitless\n      lineHeight = parseFloat(convert(lineHeight, 'rem')) / parseFloat(remFontSize);\n    }\n\n    var transform = null;\n\n    if (!disableAlign) {\n      transform = function transform(value) {\n        return alignProperty({\n          size: value,\n          grid: fontGrid({\n            pixels: 4,\n            lineHeight: lineHeight,\n            htmlFontSize: typography.htmlFontSize\n          })\n        });\n      };\n    }\n\n    typography[variant] = _extends({}, style, responsiveProperty({\n      cssProperty: 'fontSize',\n      min: minFontSize,\n      max: maxFontSize,\n      unit: 'rem',\n      breakpoints: breakpointValues,\n      transform: transform\n    }));\n  });\n  return theme;\n}","import { withThemeCreator } from '@material-ui/styles';\nimport defaultTheme from './defaultTheme';\nvar withTheme = withThemeCreator({\n  defaultTheme: defaultTheme\n});\nexport default withTheme;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","var _typeof = require(\"../helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bpfrpt_proptype_VisibleCellRange = exports.bpfrpt_proptype_Alignment = exports.bpfrpt_proptype_OverscanIndicesGetter = exports.bpfrpt_proptype_OverscanIndices = exports.bpfrpt_proptype_OverscanIndicesGetterParams = exports.bpfrpt_proptype_RenderedSection = exports.bpfrpt_proptype_ScrollbarPresenceChange = exports.bpfrpt_proptype_Scroll = exports.bpfrpt_proptype_NoContentRenderer = exports.bpfrpt_proptype_CellSize = exports.bpfrpt_proptype_CellSizeGetter = exports.bpfrpt_proptype_CellRangeRenderer = exports.bpfrpt_proptype_CellRangeRendererParams = exports.bpfrpt_proptype_StyleCache = exports.bpfrpt_proptype_CellCache = exports.bpfrpt_proptype_CellRenderer = exports.bpfrpt_proptype_CellRendererParams = exports.bpfrpt_proptype_CellPosition = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _ScalingCellSizeAndPositionManager = _interopRequireDefault(require(\"./utils/ScalingCellSizeAndPositionManager\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar bpfrpt_proptype_CellPosition = process.env.NODE_ENV === 'production' ? null : {\n  \"columnIndex\": _propTypes[\"default\"].number.isRequired,\n  \"rowIndex\": _propTypes[\"default\"].number.isRequired\n};\nexports.bpfrpt_proptype_CellPosition = bpfrpt_proptype_CellPosition;\nvar bpfrpt_proptype_CellRendererParams = process.env.NODE_ENV === 'production' ? null : {\n  \"columnIndex\": _propTypes[\"default\"].number.isRequired,\n  \"isScrolling\": _propTypes[\"default\"].bool.isRequired,\n  \"isVisible\": _propTypes[\"default\"].bool.isRequired,\n  \"key\": _propTypes[\"default\"].string.isRequired,\n  \"parent\": _propTypes[\"default\"].object.isRequired,\n  \"rowIndex\": _propTypes[\"default\"].number.isRequired,\n  \"style\": _propTypes[\"default\"].object.isRequired\n};\nexports.bpfrpt_proptype_CellRendererParams = bpfrpt_proptype_CellRendererParams;\nvar bpfrpt_proptype_CellRenderer = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].func;\nexports.bpfrpt_proptype_CellRenderer = bpfrpt_proptype_CellRenderer;\nvar bpfrpt_proptype_CellCache = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].objectOf(_propTypes[\"default\"].node.isRequired);\nexports.bpfrpt_proptype_CellCache = bpfrpt_proptype_CellCache;\nvar bpfrpt_proptype_StyleCache = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].objectOf(_propTypes[\"default\"].object.isRequired);\nexports.bpfrpt_proptype_StyleCache = bpfrpt_proptype_StyleCache;\nvar bpfrpt_proptype_CellRangeRendererParams = process.env.NODE_ENV === 'production' ? null : {\n  \"cellCache\": _propTypes[\"default\"].objectOf(_propTypes[\"default\"].node.isRequired).isRequired,\n  \"cellRenderer\": _propTypes[\"default\"].func.isRequired,\n  \"columnSizeAndPositionManager\": function columnSizeAndPositionManager() {\n    return (typeof _ScalingCellSizeAndPositionManager[\"default\"] === \"function\" ? _propTypes[\"default\"].instanceOf(_ScalingCellSizeAndPositionManager[\"default\"]).isRequired : _propTypes[\"default\"].any.isRequired).apply(this, arguments);\n  },\n  \"columnStartIndex\": _propTypes[\"default\"].number.isRequired,\n  \"columnStopIndex\": _propTypes[\"default\"].number.isRequired,\n  \"deferredMeasurementCache\": _propTypes[\"default\"].object,\n  \"horizontalOffsetAdjustment\": _propTypes[\"default\"].number.isRequired,\n  \"isScrolling\": _propTypes[\"default\"].bool.isRequired,\n  \"isScrollingOptOut\": _propTypes[\"default\"].bool.isRequired,\n  \"parent\": _propTypes[\"default\"].object.isRequired,\n  \"rowSizeAndPositionManager\": function rowSizeAndPositionManager() {\n    return (typeof _ScalingCellSizeAndPositionManager[\"default\"] === \"function\" ? _propTypes[\"default\"].instanceOf(_ScalingCellSizeAndPositionManager[\"default\"]).isRequired : _propTypes[\"default\"].any.isRequired).apply(this, arguments);\n  },\n  \"rowStartIndex\": _propTypes[\"default\"].number.isRequired,\n  \"rowStopIndex\": _propTypes[\"default\"].number.isRequired,\n  \"scrollLeft\": _propTypes[\"default\"].number.isRequired,\n  \"scrollTop\": _propTypes[\"default\"].number.isRequired,\n  \"styleCache\": _propTypes[\"default\"].objectOf(_propTypes[\"default\"].object.isRequired).isRequired,\n  \"verticalOffsetAdjustment\": _propTypes[\"default\"].number.isRequired,\n  \"visibleColumnIndices\": _propTypes[\"default\"].object.isRequired,\n  \"visibleRowIndices\": _propTypes[\"default\"].object.isRequired\n};\nexports.bpfrpt_proptype_CellRangeRendererParams = bpfrpt_proptype_CellRangeRendererParams;\nvar bpfrpt_proptype_CellRangeRenderer = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].func;\nexports.bpfrpt_proptype_CellRangeRenderer = bpfrpt_proptype_CellRangeRenderer;\nvar bpfrpt_proptype_CellSizeGetter = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].func;\nexports.bpfrpt_proptype_CellSizeGetter = bpfrpt_proptype_CellSizeGetter;\nvar bpfrpt_proptype_CellSize = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].func, _propTypes[\"default\"].number]);\nexports.bpfrpt_proptype_CellSize = bpfrpt_proptype_CellSize;\nvar bpfrpt_proptype_NoContentRenderer = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].func;\nexports.bpfrpt_proptype_NoContentRenderer = bpfrpt_proptype_NoContentRenderer;\nvar bpfrpt_proptype_Scroll = process.env.NODE_ENV === 'production' ? null : {\n  \"clientHeight\": _propTypes[\"default\"].number.isRequired,\n  \"clientWidth\": _propTypes[\"default\"].number.isRequired,\n  \"scrollHeight\": _propTypes[\"default\"].number.isRequired,\n  \"scrollLeft\": _propTypes[\"default\"].number.isRequired,\n  \"scrollTop\": _propTypes[\"default\"].number.isRequired,\n  \"scrollWidth\": _propTypes[\"default\"].number.isRequired\n};\nexports.bpfrpt_proptype_Scroll = bpfrpt_proptype_Scroll;\nvar bpfrpt_proptype_ScrollbarPresenceChange = process.env.NODE_ENV === 'production' ? null : {\n  \"horizontal\": _propTypes[\"default\"].bool.isRequired,\n  \"vertical\": _propTypes[\"default\"].bool.isRequired,\n  \"size\": _propTypes[\"default\"].number.isRequired\n};\nexports.bpfrpt_proptype_ScrollbarPresenceChange = bpfrpt_proptype_ScrollbarPresenceChange;\nvar bpfrpt_proptype_RenderedSection = process.env.NODE_ENV === 'production' ? null : {\n  \"columnOverscanStartIndex\": _propTypes[\"default\"].number.isRequired,\n  \"columnOverscanStopIndex\": _propTypes[\"default\"].number.isRequired,\n  \"columnStartIndex\": _propTypes[\"default\"].number.isRequired,\n  \"columnStopIndex\": _propTypes[\"default\"].number.isRequired,\n  \"rowOverscanStartIndex\": _propTypes[\"default\"].number.isRequired,\n  \"rowOverscanStopIndex\": _propTypes[\"default\"].number.isRequired,\n  \"rowStartIndex\": _propTypes[\"default\"].number.isRequired,\n  \"rowStopIndex\": _propTypes[\"default\"].number.isRequired\n};\nexports.bpfrpt_proptype_RenderedSection = bpfrpt_proptype_RenderedSection;\nvar bpfrpt_proptype_OverscanIndicesGetterParams = process.env.NODE_ENV === 'production' ? null : {\n  // One of SCROLL_DIRECTION_HORIZONTAL or SCROLL_DIRECTION_VERTICAL\n  \"direction\": _propTypes[\"default\"].oneOf([\"horizontal\", \"vertical\"]).isRequired,\n  // One of SCROLL_DIRECTION_BACKWARD or SCROLL_DIRECTION_FORWARD\n  \"scrollDirection\": _propTypes[\"default\"].oneOf([-1, 1]).isRequired,\n  // Number of rows or columns in the current axis\n  \"cellCount\": _propTypes[\"default\"].number.isRequired,\n  // Maximum number of cells to over-render in either direction\n  \"overscanCellsCount\": _propTypes[\"default\"].number.isRequired,\n  // Begin of range of visible cells\n  \"startIndex\": _propTypes[\"default\"].number.isRequired,\n  // End of range of visible cells\n  \"stopIndex\": _propTypes[\"default\"].number.isRequired\n};\nexports.bpfrpt_proptype_OverscanIndicesGetterParams = bpfrpt_proptype_OverscanIndicesGetterParams;\nvar bpfrpt_proptype_OverscanIndices = process.env.NODE_ENV === 'production' ? null : {\n  \"overscanStartIndex\": _propTypes[\"default\"].number.isRequired,\n  \"overscanStopIndex\": _propTypes[\"default\"].number.isRequired\n};\nexports.bpfrpt_proptype_OverscanIndices = bpfrpt_proptype_OverscanIndices;\nvar bpfrpt_proptype_OverscanIndicesGetter = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].func;\nexports.bpfrpt_proptype_OverscanIndicesGetter = bpfrpt_proptype_OverscanIndicesGetter;\nvar bpfrpt_proptype_Alignment = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].oneOf([\"auto\", \"end\", \"start\", \"center\"]);\nexports.bpfrpt_proptype_Alignment = bpfrpt_proptype_Alignment;\nvar bpfrpt_proptype_VisibleCellRange = process.env.NODE_ENV === 'production' ? null : {\n  \"start\": _propTypes[\"default\"].number,\n  \"stop\": _propTypes[\"default\"].number\n};\nexports.bpfrpt_proptype_VisibleCellRange = bpfrpt_proptype_VisibleCellRange;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nfunction componentWillMount() {\n  // Call this.constructor.gDSFP to support sub-classes.\n  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);\n  if (state !== null && state !== undefined) {\n    this.setState(state);\n  }\n}\n\nfunction componentWillReceiveProps(nextProps) {\n  // Call this.constructor.gDSFP to support sub-classes.\n  // Use the setState() updater to ensure state isn't stale in certain edge cases.\n  function updater(prevState) {\n    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);\n    return state !== null && state !== undefined ? state : null;\n  }\n  // Binding \"this\" is important for shallow renderer support.\n  this.setState(updater.bind(this));\n}\n\nfunction componentWillUpdate(nextProps, nextState) {\n  try {\n    var prevProps = this.props;\n    var prevState = this.state;\n    this.props = nextProps;\n    this.state = nextState;\n    this.__reactInternalSnapshotFlag = true;\n    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(\n      prevProps,\n      prevState\n    );\n  } finally {\n    this.props = prevProps;\n    this.state = prevState;\n  }\n}\n\n// React may warn about cWM/cWRP/cWU methods being deprecated.\n// Add a flag to suppress these warnings for this special case.\ncomponentWillMount.__suppressDeprecationWarning = true;\ncomponentWillReceiveProps.__suppressDeprecationWarning = true;\ncomponentWillUpdate.__suppressDeprecationWarning = true;\n\nfunction polyfill(Component) {\n  var prototype = Component.prototype;\n\n  if (!prototype || !prototype.isReactComponent) {\n    throw new Error('Can only polyfill class components');\n  }\n\n  if (\n    typeof Component.getDerivedStateFromProps !== 'function' &&\n    typeof prototype.getSnapshotBeforeUpdate !== 'function'\n  ) {\n    return Component;\n  }\n\n  // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n  // Error if any of these lifecycles are present,\n  // Because they would work differently between older and newer (16.3+) versions of React.\n  var foundWillMountName = null;\n  var foundWillReceivePropsName = null;\n  var foundWillUpdateName = null;\n  if (typeof prototype.componentWillMount === 'function') {\n    foundWillMountName = 'componentWillMount';\n  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {\n    foundWillMountName = 'UNSAFE_componentWillMount';\n  }\n  if (typeof prototype.componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'componentWillReceiveProps';\n  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n  }\n  if (typeof prototype.componentWillUpdate === 'function') {\n    foundWillUpdateName = 'componentWillUpdate';\n  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {\n    foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n  }\n  if (\n    foundWillMountName !== null ||\n    foundWillReceivePropsName !== null ||\n    foundWillUpdateName !== null\n  ) {\n    var componentName = Component.displayName || Component.name;\n    var newApiName =\n      typeof Component.getDerivedStateFromProps === 'function'\n        ? 'getDerivedStateFromProps()'\n        : 'getSnapshotBeforeUpdate()';\n\n    throw Error(\n      'Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' +\n        componentName +\n        ' uses ' +\n        newApiName +\n        ' but also contains the following legacy lifecycles:' +\n        (foundWillMountName !== null ? '\\n  ' + foundWillMountName : '') +\n        (foundWillReceivePropsName !== null\n          ? '\\n  ' + foundWillReceivePropsName\n          : '') +\n        (foundWillUpdateName !== null ? '\\n  ' + foundWillUpdateName : '') +\n        '\\n\\nThe above lifecycles should be removed. Learn more about this warning here:\\n' +\n        'https://fb.me/react-async-component-lifecycle-hooks'\n    );\n  }\n\n  // React <= 16.2 does not support static getDerivedStateFromProps.\n  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.\n  // Newer versions of React will ignore these lifecycles if gDSFP exists.\n  if (typeof Component.getDerivedStateFromProps === 'function') {\n    prototype.componentWillMount = componentWillMount;\n    prototype.componentWillReceiveProps = componentWillReceiveProps;\n  }\n\n  // React <= 16.2 does not support getSnapshotBeforeUpdate.\n  // As a workaround, use cWU to invoke the new lifecycle.\n  // Newer versions of React will ignore that lifecycle if gSBU exists.\n  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {\n    if (typeof prototype.componentDidUpdate !== 'function') {\n      throw new Error(\n        'Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype'\n      );\n    }\n\n    prototype.componentWillUpdate = componentWillUpdate;\n\n    var componentDidUpdate = prototype.componentDidUpdate;\n\n    prototype.componentDidUpdate = function componentDidUpdatePolyfill(\n      prevProps,\n      prevState,\n      maybeSnapshot\n    ) {\n      // 16.3+ will not execute our will-update method;\n      // It will pass a snapshot value to did-update though.\n      // Older versions will require our polyfilled will-update value.\n      // We need to handle both cases, but can't just check for the presence of \"maybeSnapshot\",\n      // Because for <= 15.x versions this might be a \"prevContext\" object.\n      // We also can't just check \"__reactInternalSnapshot\",\n      // Because get-snapshot might return a falsy value.\n      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.\n      var snapshot = this.__reactInternalSnapshotFlag\n        ? this.__reactInternalSnapshot\n        : maybeSnapshot;\n\n      componentDidUpdate.call(this, prevProps, prevState, snapshot);\n    };\n  }\n\n  return Component;\n}\n\nexport { polyfill };\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _CellSizeAndPositionManager = _interopRequireDefault(require(\"./CellSizeAndPositionManager\"));\n\nvar _maxElementSize = require(\"./maxElementSize.js\");\n\nvar _types = require(\"../types\");\n\n/**\n * Extends CellSizeAndPositionManager and adds scaling behavior for lists that are too large to fit within a browser's native limits.\n */\nvar ScalingCellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  function ScalingCellSizeAndPositionManager(_ref) {\n    var _ref$maxScrollSize = _ref.maxScrollSize,\n        maxScrollSize = _ref$maxScrollSize === void 0 ? (0, _maxElementSize.getMaxElementSize)() : _ref$maxScrollSize,\n        params = (0, _objectWithoutProperties2[\"default\"])(_ref, [\"maxScrollSize\"]);\n    (0, _classCallCheck2[\"default\"])(this, ScalingCellSizeAndPositionManager);\n    (0, _defineProperty2[\"default\"])(this, \"_cellSizeAndPositionManager\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_maxScrollSize\", void 0);\n    // Favor composition over inheritance to simplify IE10 support\n    this._cellSizeAndPositionManager = new _CellSizeAndPositionManager[\"default\"](params);\n    this._maxScrollSize = maxScrollSize;\n  }\n\n  (0, _createClass2[\"default\"])(ScalingCellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return this._cellSizeAndPositionManager.getTotalSize() > this._maxScrollSize;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(params) {\n      this._cellSizeAndPositionManager.configure(params);\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellSizeAndPositionManager.getCellCount();\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._cellSizeAndPositionManager.getEstimatedCellSize();\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._cellSizeAndPositionManager.getLastMeasuredIndex();\n    }\n    /**\n     * Number of pixels a cell at the given position (offset) should be shifted in order to fit within the scaled container.\n     * The offset passed to this function is scaled (safe) as well.\n     */\n\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment(_ref2) {\n      var containerSize = _ref2.containerSize,\n          offset = _ref2.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      var offsetPercentage = this._getOffsetPercentage({\n        containerSize: containerSize,\n        offset: offset,\n        totalSize: safeTotalSize\n      });\n\n      return Math.round(offsetPercentage * (safeTotalSize - totalSize));\n    }\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfCell(index);\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfLastMeasuredCell();\n    }\n    /** See CellSizeAndPositionManager#getTotalSize */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return Math.min(this._maxScrollSize, this._cellSizeAndPositionManager.getTotalSize());\n    }\n    /** See CellSizeAndPositionManager#getUpdatedOffsetForIndex */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n      currentOffset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: currentOffset\n      });\n\n      var offset = this._cellSizeAndPositionManager.getUpdatedOffsetForIndex({\n        align: align,\n        containerSize: containerSize,\n        currentOffset: currentOffset,\n        targetIndex: targetIndex\n      });\n\n      return this._offsetToSafeOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n    /** See CellSizeAndPositionManager#getVisibleCellRange */\n\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(_ref4) {\n      var containerSize = _ref4.containerSize,\n          offset = _ref4.offset;\n      offset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n      return this._cellSizeAndPositionManager.getVisibleCellRange({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._cellSizeAndPositionManager.resetCell(index);\n    }\n  }, {\n    key: \"_getOffsetPercentage\",\n    value: function _getOffsetPercentage(_ref5) {\n      var containerSize = _ref5.containerSize,\n          offset = _ref5.offset,\n          totalSize = _ref5.totalSize;\n      return totalSize <= containerSize ? 0 : offset / (totalSize - containerSize);\n    }\n  }, {\n    key: \"_offsetToSafeOffset\",\n    value: function _offsetToSafeOffset(_ref6) {\n      var containerSize = _ref6.containerSize,\n          offset = _ref6.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: totalSize\n        });\n\n        return Math.round(offsetPercentage * (safeTotalSize - containerSize));\n      }\n    }\n  }, {\n    key: \"_safeOffsetToOffset\",\n    value: function _safeOffsetToOffset(_ref7) {\n      var containerSize = _ref7.containerSize,\n          offset = _ref7.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: safeTotalSize\n        });\n\n        return Math.round(offsetPercentage * (totalSize - containerSize));\n      }\n    }\n  }]);\n  return ScalingCellSizeAndPositionManager;\n}();\n\nexports[\"default\"] = ScalingCellSizeAndPositionManager;","export default !!(typeof window !== 'undefined' && window.document && window.document.createElement);","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bpfrpt_proptype_CellMeasureCache = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar bpfrpt_proptype_CellMeasureCache = process.env.NODE_ENV === 'production' ? null : {\n  \"hasFixedWidth\": _propTypes[\"default\"].func.isRequired,\n  \"hasFixedHeight\": _propTypes[\"default\"].func.isRequired,\n  \"has\": _propTypes[\"default\"].func.isRequired,\n  \"set\": _propTypes[\"default\"].func.isRequired,\n  \"getHeight\": _propTypes[\"default\"].func.isRequired,\n  \"getWidth\": _propTypes[\"default\"].func.isRequired\n};\nexports.bpfrpt_proptype_CellMeasureCache = bpfrpt_proptype_CellMeasureCache;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = defaultOverscanIndicesGetter;\nexports.SCROLL_DIRECTION_VERTICAL = exports.SCROLL_DIRECTION_HORIZONTAL = exports.SCROLL_DIRECTION_FORWARD = exports.SCROLL_DIRECTION_BACKWARD = void 0;\n\nvar _types = require(\"./types\");\n\nvar SCROLL_DIRECTION_BACKWARD = -1;\nexports.SCROLL_DIRECTION_BACKWARD = SCROLL_DIRECTION_BACKWARD;\nvar SCROLL_DIRECTION_FORWARD = 1;\nexports.SCROLL_DIRECTION_FORWARD = SCROLL_DIRECTION_FORWARD;\nvar SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexports.SCROLL_DIRECTION_HORIZONTAL = SCROLL_DIRECTION_HORIZONTAL;\nvar SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexports.SCROLL_DIRECTION_VERTICAL = SCROLL_DIRECTION_VERTICAL;\n\nfunction defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex)\n    };\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = defaultCellRangeRenderer;\n\nvar _types = require(\"./types\");\n\n/**\n * Default implementation of cellRangeRenderer used by Grid.\n * This renderer supports cell-caching while the user is scrolling.\n */\nfunction defaultCellRangeRenderer(_ref) {\n  var cellCache = _ref.cellCache,\n      cellRenderer = _ref.cellRenderer,\n      columnSizeAndPositionManager = _ref.columnSizeAndPositionManager,\n      columnStartIndex = _ref.columnStartIndex,\n      columnStopIndex = _ref.columnStopIndex,\n      deferredMeasurementCache = _ref.deferredMeasurementCache,\n      horizontalOffsetAdjustment = _ref.horizontalOffsetAdjustment,\n      isScrolling = _ref.isScrolling,\n      isScrollingOptOut = _ref.isScrollingOptOut,\n      parent = _ref.parent,\n      rowSizeAndPositionManager = _ref.rowSizeAndPositionManager,\n      rowStartIndex = _ref.rowStartIndex,\n      rowStopIndex = _ref.rowStopIndex,\n      styleCache = _ref.styleCache,\n      verticalOffsetAdjustment = _ref.verticalOffsetAdjustment,\n      visibleColumnIndices = _ref.visibleColumnIndices,\n      visibleRowIndices = _ref.visibleRowIndices;\n  var renderedCells = []; // Browsers have native size limits for elements (eg Chrome 33M pixels, IE 1.5M pixes).\n  // User cannot scroll beyond these size limitations.\n  // In order to work around this, ScalingCellSizeAndPositionManager compresses offsets.\n  // We should never cache styles for compressed offsets though as this can lead to bugs.\n  // See issue #576 for more.\n\n  var areOffsetsAdjusted = columnSizeAndPositionManager.areOffsetsAdjusted() || rowSizeAndPositionManager.areOffsetsAdjusted();\n  var canCacheStyle = !isScrolling && !areOffsetsAdjusted;\n\n  for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n    var rowDatum = rowSizeAndPositionManager.getSizeAndPositionOfCell(rowIndex);\n\n    for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n      var columnDatum = columnSizeAndPositionManager.getSizeAndPositionOfCell(columnIndex);\n      var isVisible = columnIndex >= visibleColumnIndices.start && columnIndex <= visibleColumnIndices.stop && rowIndex >= visibleRowIndices.start && rowIndex <= visibleRowIndices.stop;\n      var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n      var style = void 0; // Cache style objects so shallow-compare doesn't re-render unnecessarily.\n\n      if (canCacheStyle && styleCache[key]) {\n        style = styleCache[key];\n      } else {\n        // In deferred mode, cells will be initially rendered before we know their size.\n        // Don't interfere with CellMeasurer's measurements by setting an invalid size.\n        if (deferredMeasurementCache && !deferredMeasurementCache.has(rowIndex, columnIndex)) {\n          // Position not-yet-measured cells at top/left 0,0,\n          // And give them width/height of 'auto' so they can grow larger than the parent Grid if necessary.\n          // Positioning them further to the right/bottom influences their measured size.\n          style = {\n            height: 'auto',\n            left: 0,\n            position: 'absolute',\n            top: 0,\n            width: 'auto'\n          };\n        } else {\n          style = {\n            height: rowDatum.size,\n            left: columnDatum.offset + horizontalOffsetAdjustment,\n            position: 'absolute',\n            top: rowDatum.offset + verticalOffsetAdjustment,\n            width: columnDatum.size\n          };\n          styleCache[key] = style;\n        }\n      }\n\n      var cellRendererParams = {\n        columnIndex: columnIndex,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent,\n        rowIndex: rowIndex,\n        style: style\n      };\n      var renderedCell = void 0; // Avoid re-creating cells while scrolling.\n      // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n      // If a scroll is in progress- cache and reuse cells.\n      // This cache will be thrown away once scrolling completes.\n      // However if we are scaling scroll positions and sizes, we should also avoid caching.\n      // This is because the offset changes slightly as scroll position changes and caching leads to stale values.\n      // For more info refer to issue #395\n      //\n      // If isScrollingOptOut is specified, we always cache cells.\n      // For more info refer to issue #1028\n\n      if ((isScrollingOptOut || isScrolling) && !horizontalOffsetAdjustment && !verticalOffsetAdjustment) {\n        if (!cellCache[key]) {\n          cellCache[key] = cellRenderer(cellRendererParams);\n        }\n\n        renderedCell = cellCache[key]; // If the user is no longer scrolling, don't cache cells.\n        // This makes dynamic cell content difficult for users and would also lead to a heavier memory footprint.\n      } else {\n        renderedCell = cellRenderer(cellRendererParams);\n      }\n\n      if (renderedCell == null || renderedCell === false) {\n        continue;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        warnAboutMissingStyle(parent, renderedCell);\n      }\n\n      renderedCells.push(renderedCell);\n    }\n  }\n\n  return renderedCells;\n}\n\nfunction warnAboutMissingStyle(parent, renderedCell) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (renderedCell) {\n      // If the direct child is a CellMeasurer, then we should check its child\n      // See issue #611\n      if (renderedCell.type && renderedCell.type.__internalCellMeasurerFlag) {\n        renderedCell = renderedCell.props.children;\n      }\n\n      if (renderedCell && renderedCell.props && renderedCell.props.style === undefined && parent.__warnedAboutMissingStyle !== true) {\n        parent.__warnedAboutMissingStyle = true;\n        console.warn('Rendered cell should include style property for positioning.');\n      }\n    }\n  }\n}","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar TableContext = /*#__PURE__*/React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  TableContext.displayName = 'TableContext';\n}\n\nexport default TableContext;","export { default } from './TableCell';","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport { darken, fade, lighten } from '../styles/colorManipulator';\nimport TableContext from '../Table/TableContext';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body2, {\n      display: 'table-cell',\n      verticalAlign: 'inherit',\n      // Workaround for a rendering bug with spanned columns in Chrome 62.0.\n      // Removes the alpha (sets it to 1), and lightens or darkens the theme color.\n      borderBottom: \"1px solid\\n    \".concat(theme.palette.type === 'light' ? lighten(fade(theme.palette.divider, 1), 0.88) : darken(fade(theme.palette.divider, 1), 0.68)),\n      textAlign: 'left',\n      padding: 16\n    }),\n\n    /* Styles applied to the root element if `variant=\"head\"` or `context.table.head`. */\n    head: {\n      color: theme.palette.text.primary,\n      lineHeight: theme.typography.pxToRem(24),\n      fontWeight: theme.typography.fontWeightMedium\n    },\n\n    /* Styles applied to the root element if `variant=\"body\"` or `context.table.body`. */\n    body: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `variant=\"footer\"` or `context.table.footer`. */\n    footer: {\n      color: theme.palette.text.secondary,\n      lineHeight: theme.typography.pxToRem(21),\n      fontSize: theme.typography.pxToRem(12)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      padding: '6px 24px 6px 16px',\n      '&:last-child': {\n        paddingRight: 16\n      },\n      '&$paddingCheckbox': {\n        width: 24,\n        // prevent the checkbox column from growing\n        padding: '0 12px 0 16px',\n        '&:last-child': {\n          paddingLeft: 12,\n          paddingRight: 16\n        },\n        '& > *': {\n          padding: 0\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `padding=\"checkbox\"`. */\n    paddingCheckbox: {\n      width: 48,\n      // prevent the checkbox column from growing\n      padding: '0 0 0 4px',\n      '&:last-child': {\n        paddingLeft: 0,\n        paddingRight: 4\n      }\n    },\n\n    /* Styles applied to the root element if `padding=\"none\"`. */\n    paddingNone: {\n      padding: 0,\n      '&:last-child': {\n        padding: 0\n      }\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right',\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `context.table.stickyHeader={true}`. */\n    stickyHeader: {\n      position: 'sticky',\n      top: 0,\n      left: 0,\n      zIndex: 2,\n      backgroundColor: theme.palette.background.default\n    }\n  };\n};\n/**\n * The component renders a `<th>` element when the parent context is a header\n * or otherwise a `<td>` element.\n */\n\nvar TableCell = /*#__PURE__*/React.forwardRef(function TableCell(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      component = props.component,\n      paddingProp = props.padding,\n      scopeProp = props.scope,\n      sizeProp = props.size,\n      sortDirection = props.sortDirection,\n      variantProp = props.variant,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"component\", \"padding\", \"scope\", \"size\", \"sortDirection\", \"variant\"]);\n\n  var table = React.useContext(TableContext);\n  var tablelvl2 = React.useContext(Tablelvl2Context);\n  var isHeadCell = tablelvl2 && tablelvl2.variant === 'head';\n  var role;\n  var Component;\n\n  if (component) {\n    Component = component;\n    role = isHeadCell ? 'columnheader' : 'cell';\n  } else {\n    Component = isHeadCell ? 'th' : 'td';\n  }\n\n  var scope = scopeProp;\n\n  if (!scope && isHeadCell) {\n    scope = 'col';\n  }\n\n  var padding = paddingProp || (table && table.padding ? table.padding : 'default');\n  var size = sizeProp || (table && table.size ? table.size : 'medium');\n  var variant = variantProp || tablelvl2 && tablelvl2.variant;\n  var ariaSort = null;\n\n  if (sortDirection) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, classes[variant], className, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], padding !== 'default' && classes[\"padding\".concat(capitalize(padding))], size !== 'medium' && classes[\"size\".concat(capitalize(size))], variant === 'head' && table && table.stickyHeader && classes.stickyHeader),\n    \"aria-sort\": ariaSort,\n    role: role,\n    scope: scope\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Set the text-align on the table cell content.\n   *\n   * Monetary or generally number fields **should be right aligned** as that allows\n   * you to add them up quickly in your head without having to worry about decimals.\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n\n  /**\n   * The table cell contents.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Sets the padding applied to the cell.\n   * By default, the Table parent component set the value (`default`).\n   */\n  padding: PropTypes.oneOf(['checkbox', 'default', 'none']),\n\n  /**\n   * Set scope attribute.\n   */\n  scope: PropTypes.string,\n\n  /**\n   * Specify the size of the cell.\n   * By default, the Table parent component set the value (`medium`).\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * Set aria-sort direction.\n   */\n  sortDirection: PropTypes.oneOf(['asc', 'desc', false]),\n\n  /**\n   * Specify the cell type.\n   * By default, the TableHead, TableBody or TableFooter parent component set the value.\n   */\n  variant: PropTypes.oneOf(['body', 'footer', 'head'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableCell'\n})(TableCell);","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar Tablelvl2Context = /*#__PURE__*/React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  Tablelvl2Context.displayName = 'Tablelvl2Context';\n}\n\nexport default Tablelvl2Context;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function get() {\n    return _AutoSizer[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"AutoSizer\", {\n  enumerable: true,\n  get: function get() {\n    return _AutoSizer[\"default\"];\n  }\n});\n\nvar _AutoSizer = _interopRequireDefault(require(\"./AutoSizer\"));","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React from 'react';\n\nvar Component = function (_React$Component) {\n  _inherits(Component, _React$Component);\n\n  function Component() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Component);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _initialiseProps.call(_this), _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  Component.prototype.getArgs = function getArgs() {\n    var state = this.state,\n        props = this.props,\n        setState = this._setState,\n        forceUpdate = this._forceUpdate;\n\n    return {\n      state: state,\n      props: props,\n      setState: setState,\n      forceUpdate: forceUpdate\n    };\n  };\n\n  Component.prototype.componentDidMount = function componentDidMount() {\n    if (this.props.didMount) this.props.didMount(this.getArgs());\n  };\n\n  Component.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState) {\n    if (this.props.shouldUpdate) return this.props.shouldUpdate({\n      props: this.props,\n      state: this.state,\n      nextProps: nextProps,\n      nextState: nextState\n    });else return true;\n  };\n\n  Component.prototype.componentWillUnmount = function componentWillUnmount() {\n    if (this.props.willUnmount) this.props.willUnmount({\n      state: this.state,\n      props: this.props\n    });\n  };\n\n  Component.prototype.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n    if (this.props.didUpdate) this.props.didUpdate(Object.assign(this.getArgs(), {\n      prevProps: prevProps,\n      prevState: prevState\n    }));\n  };\n\n  Component.prototype.render = function render() {\n    var _props = this.props,\n        children = _props.children,\n        render = _props.render;\n\n    return children ? typeof children === 'function' ? children(this.getArgs()) : children : render ? render(this.getArgs()) : null;\n  };\n\n  return Component;\n}(React.Component);\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this2 = this;\n\n  this.state = this.props.initialState;\n\n  this._setState = function () {\n    return _this2.setState.apply(_this2, arguments);\n  };\n\n  this._forceUpdate = function () {\n    return _this2.forceUpdate.apply(_this2, arguments);\n  };\n};\n\nexport default Component;","/**\n * Detect Element Resize.\n * https://github.com/sdecima/javascript-detect-element-resize\n * Sebastian Decima\n *\n * Forked from version 0.5.3; includes the following modifications:\n * 1) Guard against unsafe 'window' and 'document' references (to support SSR).\n * 2) Defer initialization code via a top-level function wrapper (to support SSR).\n * 3) Avoid unnecessary reflows by not measuring size for scroll events bubbling from children.\n * 4) Add nonce for style element.\n * 5) Added support for injecting custom window object\n **/\nexport default function createDetectElementResize(nonce, hostWindow) {\n  // Check `document` and `window` in case of server-side rendering\n  var _window;\n\n  if (typeof hostWindow !== 'undefined') {\n    _window = hostWindow;\n  } else if (typeof window !== 'undefined') {\n    _window = window;\n  } else if (typeof self !== 'undefined') {\n    _window = self;\n  } else {\n    _window = global;\n  }\n\n  var attachEvent = typeof _window.document !== 'undefined' && _window.document.attachEvent;\n\n  if (!attachEvent) {\n    var requestFrame = function () {\n      var raf = _window.requestAnimationFrame || _window.mozRequestAnimationFrame || _window.webkitRequestAnimationFrame || function (fn) {\n        return _window.setTimeout(fn, 20);\n      };\n\n      return function (fn) {\n        return raf(fn);\n      };\n    }();\n\n    var cancelFrame = function () {\n      var cancel = _window.cancelAnimationFrame || _window.mozCancelAnimationFrame || _window.webkitCancelAnimationFrame || _window.clearTimeout;\n      return function (id) {\n        return cancel(id);\n      };\n    }();\n\n    var resetTriggers = function resetTriggers(element) {\n      var triggers = element.__resizeTriggers__,\n          expand = triggers.firstElementChild,\n          contract = triggers.lastElementChild,\n          expandChild = expand.firstElementChild;\n      contract.scrollLeft = contract.scrollWidth;\n      contract.scrollTop = contract.scrollHeight;\n      expandChild.style.width = expand.offsetWidth + 1 + 'px';\n      expandChild.style.height = expand.offsetHeight + 1 + 'px';\n      expand.scrollLeft = expand.scrollWidth;\n      expand.scrollTop = expand.scrollHeight;\n    };\n\n    var checkTriggers = function checkTriggers(element) {\n      return element.offsetWidth != element.__resizeLast__.width || element.offsetHeight != element.__resizeLast__.height;\n    };\n\n    var scrollListener = function scrollListener(e) {\n      // Don't measure (which forces) reflow for scrolls that happen inside of children!\n      if (e.target.className && typeof e.target.className.indexOf === 'function' && e.target.className.indexOf('contract-trigger') < 0 && e.target.className.indexOf('expand-trigger') < 0) {\n        return;\n      }\n\n      var element = this;\n      resetTriggers(this);\n\n      if (this.__resizeRAF__) {\n        cancelFrame(this.__resizeRAF__);\n      }\n\n      this.__resizeRAF__ = requestFrame(function () {\n        if (checkTriggers(element)) {\n          element.__resizeLast__.width = element.offsetWidth;\n          element.__resizeLast__.height = element.offsetHeight;\n\n          element.__resizeListeners__.forEach(function (fn) {\n            fn.call(element, e);\n          });\n        }\n      });\n    };\n    /* Detect CSS Animations support to detect element display/re-attach */\n\n\n    var animation = false,\n        keyframeprefix = '',\n        animationstartevent = 'animationstart',\n        domPrefixes = 'Webkit Moz O ms'.split(' '),\n        startEvents = 'webkitAnimationStart animationstart oAnimationStart MSAnimationStart'.split(' '),\n        pfx = '';\n    {\n      var elm = _window.document.createElement('fakeelement');\n\n      if (elm.style.animationName !== undefined) {\n        animation = true;\n      }\n\n      if (animation === false) {\n        for (var i = 0; i < domPrefixes.length; i++) {\n          if (elm.style[domPrefixes[i] + 'AnimationName'] !== undefined) {\n            pfx = domPrefixes[i];\n            keyframeprefix = '-' + pfx.toLowerCase() + '-';\n            animationstartevent = startEvents[i];\n            animation = true;\n            break;\n          }\n        }\n      }\n    }\n    var animationName = 'resizeanim';\n    var animationKeyframes = '@' + keyframeprefix + 'keyframes ' + animationName + ' { from { opacity: 0; } to { opacity: 0; } } ';\n    var animationStyle = keyframeprefix + 'animation: 1ms ' + animationName + '; ';\n  }\n\n  var createStyles = function createStyles(doc) {\n    if (!doc.getElementById('detectElementResize')) {\n      //opacity:0 works around a chrome bug https://code.google.com/p/chromium/issues/detail?id=286360\n      var css = (animationKeyframes ? animationKeyframes : '') + '.resize-triggers { ' + (animationStyle ? animationStyle : '') + 'visibility: hidden; opacity: 0; } ' + '.resize-triggers, .resize-triggers > div, .contract-trigger:before { content: \" \"; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; z-index: -1; } .resize-triggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',\n          head = doc.head || doc.getElementsByTagName('head')[0],\n          style = doc.createElement('style');\n      style.id = 'detectElementResize';\n      style.type = 'text/css';\n\n      if (nonce != null) {\n        style.setAttribute('nonce', nonce);\n      }\n\n      if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n      } else {\n        style.appendChild(doc.createTextNode(css));\n      }\n\n      head.appendChild(style);\n    }\n  };\n\n  var addResizeListener = function addResizeListener(element, fn) {\n    if (attachEvent) {\n      element.attachEvent('onresize', fn);\n    } else {\n      if (!element.__resizeTriggers__) {\n        var doc = element.ownerDocument;\n\n        var elementStyle = _window.getComputedStyle(element);\n\n        if (elementStyle && elementStyle.position == 'static') {\n          element.style.position = 'relative';\n        }\n\n        createStyles(doc);\n        element.__resizeLast__ = {};\n        element.__resizeListeners__ = [];\n        (element.__resizeTriggers__ = doc.createElement('div')).className = 'resize-triggers';\n        element.__resizeTriggers__.innerHTML = '<div class=\"expand-trigger\"><div></div></div>' + '<div class=\"contract-trigger\"></div>';\n        element.appendChild(element.__resizeTriggers__);\n        resetTriggers(element);\n        element.addEventListener('scroll', scrollListener, true);\n        /* Listen for a css animation to detect element display/re-attach */\n\n        if (animationstartevent) {\n          element.__resizeTriggers__.__animationListener__ = function animationListener(e) {\n            if (e.animationName == animationName) {\n              resetTriggers(element);\n            }\n          };\n\n          element.__resizeTriggers__.addEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n        }\n      }\n\n      element.__resizeListeners__.push(fn);\n    }\n  };\n\n  var removeResizeListener = function removeResizeListener(element, fn) {\n    if (attachEvent) {\n      element.detachEvent('onresize', fn);\n    } else {\n      element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n\n      if (!element.__resizeListeners__.length) {\n        element.removeEventListener('scroll', scrollListener, true);\n\n        if (element.__resizeTriggers__.__animationListener__) {\n          element.__resizeTriggers__.removeEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n\n          element.__resizeTriggers__.__animationListener__ = null;\n        }\n\n        try {\n          element.__resizeTriggers__ = !element.removeChild(element.__resizeTriggers__);\n        } catch (e) {// Preact compat; see developit/preact-compat/issues/228\n        }\n      }\n    }\n  };\n\n  return {\n    addResizeListener: addResizeListener,\n    removeResizeListener: removeResizeListener\n  };\n}","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nexports.default = MuiTable;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _MultiGrid = require('react-virtualized/dist/commonjs/MultiGrid');\n\nvar _MultiGrid2 = _interopRequireDefault(_MultiGrid);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _Table = require('@material-ui/core/Table');\n\nvar _Table2 = _interopRequireDefault(_Table);\n\nvar _TableCell = require('@material-ui/core/TableCell');\n\nvar _TableCell2 = _interopRequireDefault(_TableCell);\n\nvar _TableFooter = require('@material-ui/core/TableFooter');\n\nvar _TableFooter2 = _interopRequireDefault(_TableFooter);\n\nvar _TablePagination = require('@material-ui/core/TablePagination');\n\nvar _TablePagination2 = _interopRequireDefault(_TablePagination);\n\nvar _TableSortLabel = require('@material-ui/core/TableSortLabel');\n\nvar _TableSortLabel2 = _interopRequireDefault(_TableSortLabel);\n\nvar _styles = require('@material-ui/core/styles');\n\nvar _reactDraggable = require('react-draggable');\n\nvar _reactDraggable2 = _interopRequireDefault(_reactDraggable);\n\nvar _utils = require('./utils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar FOOTER_BORDER_HEIGHT = 1;\n\nvar useStyles = (0, _styles.makeStyles)(function (theme) {\n  return {\n    table: {\n      boxSizing: 'border-box',\n\n      '& .topLeftGrid': {\n        backgroundColor: theme.palette.grey[theme.palette.type === 'dark' ? 800 : 200],\n        borderBottom: '2px solid ' + theme.palette.divider,\n        borderRight: '2px solid ' + theme.palette.divider,\n        color: theme.palette.text.secondary,\n        fontSize: theme.typography.pxToRem(12),\n\n        // Hide scrollbars on Chrome/Safari/IE\n        '&::-webkit-scrollbar': {\n          display: 'none'\n        },\n        '-ms-overflow-style': 'none'\n      },\n\n      '& .topRightGrid': {\n        backgroundColor: theme.palette.grey[theme.palette.type === 'dark' ? 800 : 200],\n        borderBottom: '2px solid ' + theme.palette.divider,\n        color: theme.palette.text.secondary,\n        fontSize: theme.typography.pxToRem(12),\n\n        // Hide scrollbars on Chrome/Safari/IE\n        '&::-webkit-scrollbar': {\n          display: 'none'\n        },\n        '-ms-overflow-style': 'none'\n      },\n\n      '& .bottomLeftGrid': {\n        backgroundColor: theme.palette.grey[theme.palette.type === 'dark' ? 800 : 200],\n        borderRight: '2px solid ' + theme.palette.divider,\n        color: theme.palette.text.secondary,\n        fontSize: theme.typography.pxToRem(13),\n\n        // Hide scrollbars on Chrome/Safari/IE\n        '&::-webkit-scrollbar': {\n          display: 'none'\n        },\n        '-ms-overflow-style': 'none'\n      },\n\n      '& .bottomRightGrid': {\n        color: theme.palette.text.primary,\n        fontSize: theme.typography.pxToRem(13),\n        outline: 'none' // See: https://github.com/bvaughn/react-virtualized/issues/381\n      }\n    },\n    cell: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    cellClickable: {\n      cursor: 'pointer'\n    },\n    cellSelected: {\n      backgroundColor: theme.palette.grey[theme.palette.type === 'dark' ? 900 : 100]\n    },\n    cellHovered: {\n      backgroundColor: theme.palette.grey[theme.palette.type === 'dark' ? 800 : 200]\n    },\n    cellDisabled: {\n      opacity: 0.5\n    },\n    cellContents: {\n      width: '100%',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      textOverflow: 'ellipsis'\n    },\n    cellHeader: {\n      fontSize: theme.typography.pxToRem(12),\n      fontWeight: theme.typography.fontWeightMedium,\n      color: theme.palette.text.secondary\n    },\n    cellInLastColumn: {\n      paddingRight: theme.spacing(3)\n    },\n    cellInLastRow: {\n      borderBottom: 'none'\n    },\n    footer: {\n      borderTop: FOOTER_BORDER_HEIGHT + 'px solid ' + theme.palette.divider\n    },\n    dragHandle: {\n      flex: '0 0 16px',\n      zIndex: 2,\n      cursor: 'col-resize',\n      color: '#0085ff'\n    },\n    DragHandleActive: {\n      color: '#0b6fcc',\n      zIndex: 3\n    },\n    DragHandleIcon: {\n      flex: '0 0 12px',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  };\n});\n\nvar calculateWidths = function calculateWidths(_ref) {\n  var resizable = _ref.resizable,\n      Columns = _ref.columns;\n\n  var widths = [];\n  if (resizable) {\n    var initialWidth = 1;\n    var columns = [];\n    Columns.forEach(function (c) {\n      if (c.width) {\n        widths[c.name] = 0.1;\n        initialWidth = initialWidth - 0.1;\n      } else {\n        columns.push(c);\n      }\n    });\n    columns.forEach(function (c) {\n      widths[c.name] = initialWidth / columns.length;\n    });\n  }\n  return widths;\n};\n\nvar useCellRenderer = function useCellRenderer(_ref2) {\n  var recomputeGridSize = _ref2.recomputeGridSize,\n      columns = _ref2.columns,\n      width = _ref2.width,\n      includeHeaders = _ref2.includeHeaders,\n      data = _ref2.data,\n      columnWidth = _ref2.columnWidth,\n      isCellHovered = _ref2.isCellHovered,\n      isCellSelected = _ref2.isCellSelected,\n      isCellDisabled = _ref2.isCellDisabled,\n      classes = _ref2.classes,\n      orderBy = _ref2.orderBy,\n      orderDirection = _ref2.orderDirection,\n      onHeaderClick = _ref2.onHeaderClick,\n      onCellClick = _ref2.onCellClick,\n      onCellDoubleClick = _ref2.onCellDoubleClick,\n      onCellContextMenu = _ref2.onCellContextMenu,\n      resizable = _ref2.resizable,\n      defaultCellProps = _ref2.cellProps;\n\n  var _React$useState = _react2.default.useState({\n    hoveredColumn: null,\n    hoveredRowData: null\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      _React$useState2$ = _React$useState2[0],\n      hoveredColumn = _React$useState2$.hoveredColumn,\n      hoveredRowData = _React$useState2$.hoveredRowData,\n      setHovered = _React$useState2[1];\n\n  var _React$useState3 = _react2.default.useState(calculateWidths({ resizable: resizable, columns: columns })),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      widths = _React$useState4[0],\n      setWidths = _React$useState4[1];\n\n  _react2.default.useEffect(function () {\n    recomputeGridSize();\n  }, [recomputeGridSize, hoveredColumn, hoveredRowData, widths]);\n\n  var resizableColumnWidths = _react2.default.useCallback(function (index, columns, tableWidth) {\n    return widths[columns[index].name] * tableWidth;\n  }, [widths]);\n\n  var getColumnWidth = _react2.default.useCallback(function (_ref3) {\n    var index = _ref3.index;\n    return typeof columnWidth === 'function' ? columnWidth({ index: index, columns: columns, width: width }) : resizable ? resizableColumnWidths(index, columns, width) : (0, _utils.calcColumnWidth)(index, columns, width);\n  }, [columnWidth, resizable, columns, width, resizableColumnWidths]);\n\n  var resizeRow = _react2.default.useCallback(function (_ref4) {\n    var dataKey = _ref4.dataKey,\n        deltaX = _ref4.deltaX;\n    return setWidths(function (prev) {\n      var _extends2;\n\n      var delta = deltaX / width;\n      var index = columns.findIndex(function (c) {\n        return c.name === dataKey;\n      });\n      var nextDataKey = columns[index + 1].name;\n      return _extends({}, prev, (_extends2 = {}, _defineProperty(_extends2, dataKey, prev[dataKey] + delta), _defineProperty(_extends2, nextDataKey, prev[nextDataKey] - delta), _extends2));\n    });\n  }, [setWidths, columns, width]);\n\n  var handleDrag = _react2.default.useCallback(function (dataKey) {\n    return function (event, _ref5) {\n      var deltaX = _ref5.deltaX;\n      return resizeRow({\n        dataKey: dataKey,\n        deltaX: deltaX\n      });\n    };\n  }, [resizeRow]);\n\n  var handleMouse = _react2.default.useCallback(function (hoveredColumn, hoveredRowData) {\n    return function (e) {\n      return setHovered({\n        hoveredColumn: hoveredColumn,\n        hoveredRowData: hoveredRowData\n      });\n    };\n  }, [setHovered]);\n\n  var cellRenderer = function cellRenderer(_ref6) {\n    var _classNames;\n\n    var columnIndex = _ref6.columnIndex,\n        rowIndex = _ref6.rowIndex,\n        key = _ref6.key,\n        style = _ref6.style;\n\n    var column = columns[columnIndex];\n    var isHeader = includeHeaders && rowIndex === 0;\n    var headerOffset = includeHeaders ? 1 : 0;\n    var rowData = data && data[rowIndex - headerOffset] || {};\n\n    var isSelected = isCellSelected && isCellSelected(column, rowData);\n    var isDisabled = isCellDisabled && isCellDisabled(column, rowData);\n\n    var isHovered = hoveredColumn && hoveredRowData && isCellHovered && isCellHovered(column, rowData, hoveredColumn, hoveredRowData);\n\n    var resolveCellProps = function resolveCellProps(cellProps) {\n      return typeof cellProps === 'function' ? cellProps(column, rowData, hoveredColumn, hoveredRowData) : cellProps;\n    };\n    // TODO: Deep merge (do not override all defaultCellProps styles if column.cellProps.styles defined?)\n\n    var _resolveCellProps$res = _extends({}, resolveCellProps(defaultCellProps), resolveCellProps(column.cellProps)),\n        cellStyle = _resolveCellProps$res.style,\n        cellProps = _objectWithoutProperties(_resolveCellProps$res, ['style']);\n\n    var contents = _react2.default.createElement(\n      'div',\n      { className: classes.cellContents },\n      _react2.default.createElement(\n        'span',\n        { style: { flex: 'auto' } },\n        isHeader ? column.header != null ? column.header : column.name : column.cell ? column.cell(rowData) : rowData[column.name]\n      ),\n      _react2.default.createElement(\n        'span',\n        { style: { float: 'right' } },\n        isHeader && resizable && columnIndex < columns.length - 1 && _react2.default.createElement(\n          _reactDraggable2.default,\n          {\n            axis: 'x',\n            defaultClassName: classes.dragHandle,\n            defaultClassNameDragging: classes.DragHandleActive,\n            onDrag: handleDrag(column.name),\n            position: { x: 0 }\n          },\n          _react2.default.createElement(\n            'span',\n            { className: classes.DragHandleIcon },\n            '\\u22EE'\n          )\n        )\n      )\n    );\n\n    var hasCellClick = !isHeader && onCellClick;\n    var hasCellDoubleClick = !isHeader && onCellDoubleClick;\n    var hasCellContextMenu = !isHeader && onCellContextMenu;\n    var isClickable = hasCellClick || hasCellDoubleClick || hasCellContextMenu || column.onClick;\n\n    var className = (0, _classnames2.default)(classes.cell, (_classNames = {}, _defineProperty(_classNames, classes.cellClickable, isClickable), _defineProperty(_classNames, classes.cellHovered, isHovered), _defineProperty(_classNames, classes.cellSelected, isSelected), _defineProperty(_classNames, classes.cellDisabled, isDisabled), _defineProperty(_classNames, classes.cellHeader, isHeader), _defineProperty(_classNames, classes.cellInLastColumn, columnIndex === columns.length - 1), _defineProperty(_classNames, classes.cellInLastRow, !isHeader && rowIndex === (data ? data.length : 0)), _classNames));\n\n    return _react2.default.createElement(\n      _TableCell2.default,\n      _extends({\n        component: 'div',\n        className: className,\n        key: key,\n        onMouseEnter: handleMouse(column, rowData),\n        onMouseLeave: handleMouse(null, null),\n        style: _extends({}, style, cellStyle)\n      }, hasCellClick && {\n        onClick: function onClick(event) {\n          return onCellClick(event, { column: column, rowData: rowData, data: data });\n        }\n      }, hasCellDoubleClick && {\n        onDoubleClick: function onDoubleClick(event) {\n          return onCellDoubleClick(event, { column: column, rowData: rowData, data: data });\n        }\n      }, hasCellContextMenu && {\n        onContextMenu: function onContextMenu(event) {\n          return onCellContextMenu(event, { column: column, rowData: rowData, data: data });\n        }\n      }, cellProps),\n      isHeader && column.onHeaderClick !== false && (column.onHeaderClick || onHeaderClick) ? _react2.default.createElement(\n        _TableSortLabel2.default,\n        {\n          active: orderBy && (orderBy === column.name || orderBy === column.orderBy) && rowIndex === 0,\n          style: { width: 'inherit' } // fix text overflowing\n          , direction: orderDirection,\n          onClick: function onClick(event) {\n            return column.onHeaderClick ? column.onHeaderClick(event, { column: column }) : onHeaderClick(event, { column: column });\n          }\n        },\n        contents\n      ) : isHeader && column.resizable ? _react2.default.createElement(\n        _react2.default.Fragment,\n        null,\n        contents,\n        _react2.default.createElement(\n          _reactDraggable2.default,\n          {\n            axis: 'x',\n            defaultClassName: 'DragHandle',\n            defaultClassNameDragging: 'DragHandleActive',\n            onDrag: handleDrag(column.name),\n            position: { x: 0 }\n          },\n          _react2.default.createElement(\n            'span',\n            { className: 'DragHandleIcon' },\n            '\\u22EE'\n          )\n        )\n      ) : contents\n    );\n  };\n\n  return { cellRenderer: cellRenderer, columnWidth: getColumnWidth };\n};\n\nfunction MuiTable(_ref7) {\n  var data = _ref7.data,\n      columns = _ref7.columns,\n      width = _ref7.width,\n      height = _ref7.height,\n      _ref7$maxHeight = _ref7.maxHeight,\n      maxHeight = _ref7$maxHeight === undefined ? null : _ref7$maxHeight,\n      pagination = _ref7.pagination,\n      fitHeightToRows = _ref7.fitHeightToRows,\n      _ref7$fixedRowCount = _ref7.fixedRowCount,\n      fixedRowCount = _ref7$fixedRowCount === undefined ? 0 : _ref7$fixedRowCount,\n      _ref7$fixedColumnCoun = _ref7.fixedColumnCount,\n      fixedColumnCount = _ref7$fixedColumnCoun === undefined ? 0 : _ref7$fixedColumnCoun,\n      _ref7$rowHeight = _ref7.rowHeight,\n      rowHeight = _ref7$rowHeight === undefined ? 48 : _ref7$rowHeight,\n      style = _ref7.style,\n      columnWidth = _ref7.columnWidth,\n      _ref7$includeHeaders = _ref7.includeHeaders,\n      includeHeaders = _ref7$includeHeaders === undefined ? false : _ref7$includeHeaders,\n      isCellHovered = _ref7.isCellHovered,\n      isCellSelected = _ref7.isCellSelected,\n      isCellDisabled = _ref7.isCellDisabled,\n      Classes = _ref7.classes,\n      orderBy = _ref7.orderBy,\n      orderDirection = _ref7.orderDirection,\n      onHeaderClick = _ref7.onHeaderClick,\n      onCellClick = _ref7.onCellClick,\n      onCellDoubleClick = _ref7.onCellDoubleClick,\n      onCellContextMenu = _ref7.onCellContextMenu,\n      resizable = _ref7.resizable,\n      cellProps = _ref7.cellProps,\n      other = _objectWithoutProperties(_ref7, ['data', 'columns', 'width', 'height', 'maxHeight', 'pagination', 'fitHeightToRows', 'fixedRowCount', 'fixedColumnCount', 'rowHeight', 'style', 'columnWidth', 'includeHeaders', 'isCellHovered', 'isCellSelected', 'isCellDisabled', 'classes', 'orderBy', 'orderDirection', 'onHeaderClick', 'onCellClick', 'onCellDoubleClick', 'onCellContextMenu', 'resizable', 'cellProps']);\n\n  var classes = useStyles({ classes: Classes });\n  var theme = (0, _styles.useTheme)();\n\n  var multiGrid = _react2.default.useRef(null);\n\n  var recomputeGridSize = _react2.default.useCallback(function () {\n    return multiGrid.current && multiGrid.current.recomputeGridSize();\n  }, [multiGrid]);\n\n  _react2.default.useEffect(function () {\n    recomputeGridSize();\n  }, [columns, data, height, width, recomputeGridSize]);\n\n  var calculatedHeight = 0;\n  if (height) {\n    calculatedHeight = height; // fixed height\n  } else if (pagination && pagination.rowsPerPage && !fitHeightToRows) {\n    var rowCount = pagination.rowsPerPage + (fixedRowCount ? fixedRowCount : includeHeaders ? 1 : 0);\n    calculatedHeight = rowCount * rowHeight;\n  } else if (Array.isArray(data)) {\n    var _rowCount = data.length + (fixedRowCount ? fixedRowCount : includeHeaders ? 1 : 0);\n    calculatedHeight = _rowCount * rowHeight;\n  }\n\n  var paginationHeight = theme.mixins.toolbar.minHeight + FOOTER_BORDER_HEIGHT;\n\n  var calculatedHeightWithFooter = calculatedHeight + (pagination ? paginationHeight : 0);\n  var containerHeight = maxHeight != null ? Math.min(calculatedHeightWithFooter, maxHeight) : calculatedHeightWithFooter;\n  var multiGridHeight = containerHeight - (pagination ? paginationHeight : 0);\n\n  return _react2.default.createElement(\n    _Table2.default,\n    _extends({\n      component: 'div',\n      style: _extends({ width: width, height: containerHeight }, style),\n      className: classes.table\n    }, other),\n    _react2.default.createElement(_MultiGrid2.default, _extends({}, useCellRenderer({\n      recomputeGridSize: recomputeGridSize,\n      data: data,\n      columns: columns,\n      width: width,\n      classes: classes,\n      includeHeaders: includeHeaders,\n      columnWidth: columnWidth,\n      isCellHovered: isCellHovered,\n      isCellSelected: isCellSelected,\n      isCellDisabled: isCellDisabled,\n      orderBy: orderBy,\n      orderDirection: orderDirection,\n      onHeaderClick: onHeaderClick,\n      onCellClick: onCellClick,\n      onCellDoubleClick: onCellDoubleClick,\n      onCellContextMenu: onCellContextMenu,\n      resizable: resizable,\n      cellProps: cellProps\n    }), {\n      ref: multiGrid,\n      width: width,\n      columnCount: Array.isArray(columns) ? columns.length : 0,\n      fixedColumnCount: fixedColumnCount,\n      enableFixedColumnScroll: fixedColumnCount > 0,\n      height: multiGridHeight,\n      rowHeight: rowHeight,\n      rowCount: Array.isArray(data) ? data.length + (includeHeaders ? 1 : 0) : 0,\n      fixedRowCount: fixedRowCount,\n      enableFixedRowScroll: fixedRowCount > 0\n      // TODO: Read these from `classes` without classes.table inheritance?  How to pass props.classes down to override?\n      , classNameTopLeftGrid: 'topLeftGrid',\n      classNameTopRightGrid: 'topRightGrid',\n      classNameBottomLeftGrid: 'bottomLeftGrid',\n      classNameBottomRightGrid: 'bottomRightGrid'\n    })),\n    pagination && _react2.default.createElement(\n      _TableFooter2.default,\n      { component: 'div', className: classes.footer },\n      _react2.default.createElement(_TablePagination2.default, _extends({ component: 'div' }, pagination))\n    )\n  );\n}\n\nMuiTable.propTypes = {\n  data: _propTypes2.default.array,\n  columns: _propTypes2.default.array,\n  width: _propTypes2.default.number,\n  height: _propTypes2.default.number,\n  maxHeight: _propTypes2.default.number,\n  pagination: _propTypes2.default.object,\n  fitHeightToRows: _propTypes2.default.bool,\n  fixedRowCount: _propTypes2.default.number,\n  fixedColumnCount: _propTypes2.default.number,\n  rowHeight: _propTypes2.default.number,\n  columnWidth: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.func]),\n  includeHeaders: _propTypes2.default.bool,\n  orderBy: _propTypes2.default.string,\n  orderDirection: _propTypes2.default.string,\n  onHeaderClick: _propTypes2.default.func,\n  onCellClick: _propTypes2.default.func,\n  onCellDoubleClick: _propTypes2.default.func,\n  onCellContextMenu: _propTypes2.default.func,\n  noPointer: _propTypes2.default.bool,\n  isCellHovered: _propTypes2.default.func,\n  isCellSelected: _propTypes2.default.func,\n  isCellDisabled: _propTypes2.default.func,\n  classes: _propTypes2.default.object,\n  cellProps: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.func]),\n  style: _propTypes2.default.object\n};","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"MultiGrid\", {\n  enumerable: true,\n  get: function get() {\n    return _MultiGrid[\"default\"];\n  }\n});\nexports[\"default\"] = void 0;\n\nvar _MultiGrid = _interopRequireDefault(require(\"./MultiGrid\"));\n\nvar _default = _MultiGrid[\"default\"];\nexports[\"default\"] = _default;","\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactLifecyclesCompat = require(\"react-lifecycles-compat\");\n\nvar _CellMeasurerCacheDecorator = _interopRequireDefault(require(\"./CellMeasurerCacheDecorator\"));\n\nvar _Grid = _interopRequireDefault(require(\"../Grid\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar SCROLLBAR_SIZE_BUFFER = 20;\n/**\n * Renders 1, 2, or 4 Grids depending on configuration.\n * A main (body) Grid will always be rendered.\n * Optionally, 1-2 Grids for sticky header rows will also be rendered.\n * If no sticky columns, only 1 sticky header Grid will be rendered.\n * If sticky columns, 2 sticky header Grids will be rendered.\n */\n\nvar MultiGrid =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  (0, _inherits2[\"default\"])(MultiGrid, _React$PureComponent);\n\n  function MultiGrid(props, context) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, MultiGrid);\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(MultiGrid).call(this, props, context));\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"state\", {\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollbarSize: 0,\n      showHorizontalScrollbar: false,\n      showVerticalScrollbar: false\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_deferredInvalidateColumnIndex\", null);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_deferredInvalidateRowIndex\", null);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_bottomLeftGridRef\", function (ref) {\n      _this._bottomLeftGrid = ref;\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_bottomRightGridRef\", function (ref) {\n      _this._bottomRightGrid = ref;\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_cellRendererBottomLeftGrid\", function (_ref) {\n      var rowIndex = _ref.rowIndex,\n          rest = (0, _objectWithoutProperties2[\"default\"])(_ref, [\"rowIndex\"]);\n      var _this$props = _this.props,\n          cellRenderer = _this$props.cellRenderer,\n          fixedRowCount = _this$props.fixedRowCount,\n          rowCount = _this$props.rowCount;\n\n      if (rowIndex === rowCount - fixedRowCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            height: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          parent: (0, _assertThisInitialized2[\"default\"])(_this),\n          rowIndex: rowIndex + fixedRowCount\n        }));\n      }\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_cellRendererBottomRightGrid\", function (_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex,\n          rest = (0, _objectWithoutProperties2[\"default\"])(_ref2, [\"columnIndex\", \"rowIndex\"]);\n      var _this$props2 = _this.props,\n          cellRenderer = _this$props2.cellRenderer,\n          fixedColumnCount = _this$props2.fixedColumnCount,\n          fixedRowCount = _this$props2.fixedRowCount;\n      return cellRenderer(_objectSpread({}, rest, {\n        columnIndex: columnIndex + fixedColumnCount,\n        parent: (0, _assertThisInitialized2[\"default\"])(_this),\n        rowIndex: rowIndex + fixedRowCount\n      }));\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_cellRendererTopRightGrid\", function (_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rest = (0, _objectWithoutProperties2[\"default\"])(_ref3, [\"columnIndex\"]);\n      var _this$props3 = _this.props,\n          cellRenderer = _this$props3.cellRenderer,\n          columnCount = _this$props3.columnCount,\n          fixedColumnCount = _this$props3.fixedColumnCount;\n\n      if (columnIndex === columnCount - fixedColumnCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            width: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          columnIndex: columnIndex + fixedColumnCount,\n          parent: (0, _assertThisInitialized2[\"default\"])(_this)\n        }));\n      }\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_columnWidthRightGrid\", function (_ref4) {\n      var index = _ref4.index;\n      var _this$props4 = _this.props,\n          columnCount = _this$props4.columnCount,\n          fixedColumnCount = _this$props4.fixedColumnCount,\n          columnWidth = _this$props4.columnWidth;\n      var _this$state = _this.state,\n          scrollbarSize = _this$state.scrollbarSize,\n          showHorizontalScrollbar = _this$state.showHorizontalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showHorizontalScrollbar && index === columnCount - fixedColumnCount) {\n        return scrollbarSize;\n      }\n\n      return typeof columnWidth === 'function' ? columnWidth({\n        index: index + fixedColumnCount\n      }) : columnWidth;\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onScroll\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft,\n          scrollTop = scrollInfo.scrollTop;\n\n      _this.setState({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      var onScroll = _this.props.onScroll;\n\n      if (onScroll) {\n        onScroll(scrollInfo);\n      }\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onScrollbarPresenceChange\", function (_ref5) {\n      var horizontal = _ref5.horizontal,\n          size = _ref5.size,\n          vertical = _ref5.vertical;\n      var _this$state2 = _this.state,\n          showHorizontalScrollbar = _this$state2.showHorizontalScrollbar,\n          showVerticalScrollbar = _this$state2.showVerticalScrollbar;\n\n      if (horizontal !== showHorizontalScrollbar || vertical !== showVerticalScrollbar) {\n        _this.setState({\n          scrollbarSize: size,\n          showHorizontalScrollbar: horizontal,\n          showVerticalScrollbar: vertical\n        });\n\n        var onScrollbarPresenceChange = _this.props.onScrollbarPresenceChange;\n\n        if (typeof onScrollbarPresenceChange === 'function') {\n          onScrollbarPresenceChange({\n            horizontal: horizontal,\n            size: size,\n            vertical: vertical\n          });\n        }\n      }\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onScrollLeft\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft;\n\n      _this._onScroll({\n        scrollLeft: scrollLeft,\n        scrollTop: _this.state.scrollTop\n      });\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onScrollTop\", function (scrollInfo) {\n      var scrollTop = scrollInfo.scrollTop;\n\n      _this._onScroll({\n        scrollTop: scrollTop,\n        scrollLeft: _this.state.scrollLeft\n      });\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_rowHeightBottomGrid\", function (_ref6) {\n      var index = _ref6.index;\n      var _this$props5 = _this.props,\n          fixedRowCount = _this$props5.fixedRowCount,\n          rowCount = _this$props5.rowCount,\n          rowHeight = _this$props5.rowHeight;\n      var _this$state3 = _this.state,\n          scrollbarSize = _this$state3.scrollbarSize,\n          showVerticalScrollbar = _this$state3.showVerticalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showVerticalScrollbar && index === rowCount - fixedRowCount) {\n        return scrollbarSize;\n      }\n\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: index + fixedRowCount\n      }) : rowHeight;\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_topLeftGridRef\", function (ref) {\n      _this._topLeftGrid = ref;\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_topRightGridRef\", function (ref) {\n      _this._topRightGrid = ref;\n    });\n    var deferredMeasurementCache = props.deferredMeasurementCache,\n        _fixedColumnCount = props.fixedColumnCount,\n        _fixedRowCount = props.fixedRowCount;\n\n    _this._maybeCalculateCachedStyles(true);\n\n    if (deferredMeasurementCache) {\n      _this._deferredMeasurementCacheBottomLeftGrid = _fixedRowCount > 0 ? new _CellMeasurerCacheDecorator[\"default\"]({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: 0,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheBottomRightGrid = _fixedColumnCount > 0 || _fixedRowCount > 0 ? new _CellMeasurerCacheDecorator[\"default\"]({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheTopRightGrid = _fixedColumnCount > 0 ? new _CellMeasurerCacheDecorator[\"default\"]({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: 0\n      }) : deferredMeasurementCache;\n    }\n\n    return _this;\n  }\n\n  (0, _createClass2[\"default\"])(MultiGrid, [{\n    key: \"forceUpdateGrids\",\n    value: function forceUpdateGrids() {\n      this._bottomLeftGrid && this._bottomLeftGrid.forceUpdate();\n      this._bottomRightGrid && this._bottomRightGrid.forceUpdate();\n      this._topLeftGrid && this._topLeftGrid.forceUpdate();\n      this._topRightGrid && this._topRightGrid.forceUpdate();\n    }\n    /** See Grid#invalidateCellSizeAfterRender */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender() {\n      var _ref7 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref7$columnIndex = _ref7.columnIndex,\n          columnIndex = _ref7$columnIndex === void 0 ? 0 : _ref7$columnIndex,\n          _ref7$rowIndex = _ref7.rowIndex,\n          rowIndex = _ref7$rowIndex === void 0 ? 0 : _ref7$rowIndex;\n\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      this._bottomLeftGrid && this._bottomLeftGrid.measureAllCells();\n      this._bottomRightGrid && this._bottomRightGrid.measureAllCells();\n      this._topLeftGrid && this._topLeftGrid.measureAllCells();\n      this._topRightGrid && this._topRightGrid.measureAllCells();\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref8 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref8$columnIndex = _ref8.columnIndex,\n          columnIndex = _ref8$columnIndex === void 0 ? 0 : _ref8$columnIndex,\n          _ref8$rowIndex = _ref8.rowIndex,\n          rowIndex = _ref8$rowIndex === void 0 ? 0 : _ref8$rowIndex;\n\n      var _this$props6 = this.props,\n          fixedColumnCount = _this$props6.fixedColumnCount,\n          fixedRowCount = _this$props6.fixedRowCount;\n      var adjustedColumnIndex = Math.max(0, columnIndex - fixedColumnCount);\n      var adjustedRowIndex = Math.max(0, rowIndex - fixedRowCount);\n      this._bottomLeftGrid && this._bottomLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._bottomRightGrid && this._bottomRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._topLeftGrid && this._topLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: rowIndex\n      });\n      this._topRightGrid && this._topRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: rowIndex\n      });\n      this._leftGridWidth = null;\n      this._topGridHeight = null;\n\n      this._maybeCalculateCachedStyles(true);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props7 = this.props,\n          scrollLeft = _this$props7.scrollLeft,\n          scrollTop = _this$props7.scrollTop;\n\n      if (scrollLeft > 0 || scrollTop > 0) {\n        var newState = {};\n\n        if (scrollLeft > 0) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop > 0) {\n          newState.scrollTop = scrollTop;\n        }\n\n        this.setState(newState);\n      }\n\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props8 = this.props,\n          onScroll = _this$props8.onScroll,\n          onSectionRendered = _this$props8.onSectionRendered,\n          onScrollbarPresenceChange = _this$props8.onScrollbarPresenceChange,\n          scrollLeftProp = _this$props8.scrollLeft,\n          scrollToColumn = _this$props8.scrollToColumn,\n          scrollTopProp = _this$props8.scrollTop,\n          scrollToRow = _this$props8.scrollToRow,\n          rest = (0, _objectWithoutProperties2[\"default\"])(_this$props8, [\"onScroll\", \"onSectionRendered\", \"onScrollbarPresenceChange\", \"scrollLeft\", \"scrollToColumn\", \"scrollTop\", \"scrollToRow\"]);\n\n      this._prepareForRender(); // Don't render any of our Grids if there are no cells.\n      // This mirrors what Grid does,\n      // And prevents us from recording inaccurage measurements when used with CellMeasurer.\n\n\n      if (this.props.width === 0 || this.props.height === 0) {\n        return null;\n      } // scrollTop and scrollLeft props are explicitly filtered out and ignored\n\n\n      var _this$state4 = this.state,\n          scrollLeft = _this$state4.scrollLeft,\n          scrollTop = _this$state4.scrollTop;\n      return React.createElement(\"div\", {\n        style: this._containerOuterStyle\n      }, React.createElement(\"div\", {\n        style: this._containerTopStyle\n      }, this._renderTopLeftGrid(rest), this._renderTopRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollLeft: scrollLeft\n      }))), React.createElement(\"div\", {\n        style: this._containerBottomStyle\n      }, this._renderBottomLeftGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollTop: scrollTop\n      })), this._renderBottomRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        onSectionRendered: onSectionRendered,\n        scrollLeft: scrollLeft,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow,\n        scrollTop: scrollTop\n      }))));\n    }\n  }, {\n    key: \"_getBottomGridHeight\",\n    value: function _getBottomGridHeight(props) {\n      var height = props.height;\n\n      var topGridHeight = this._getTopGridHeight(props);\n\n      return height - topGridHeight;\n    }\n  }, {\n    key: \"_getLeftGridWidth\",\n    value: function _getLeftGridWidth(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          columnWidth = props.columnWidth;\n\n      if (this._leftGridWidth == null) {\n        if (typeof columnWidth === 'function') {\n          var leftGridWidth = 0;\n\n          for (var index = 0; index < fixedColumnCount; index++) {\n            leftGridWidth += columnWidth({\n              index: index\n            });\n          }\n\n          this._leftGridWidth = leftGridWidth;\n        } else {\n          this._leftGridWidth = columnWidth * fixedColumnCount;\n        }\n      }\n\n      return this._leftGridWidth;\n    }\n  }, {\n    key: \"_getRightGridWidth\",\n    value: function _getRightGridWidth(props) {\n      var width = props.width;\n\n      var leftGridWidth = this._getLeftGridWidth(props);\n\n      return width - leftGridWidth;\n    }\n  }, {\n    key: \"_getTopGridHeight\",\n    value: function _getTopGridHeight(props) {\n      var fixedRowCount = props.fixedRowCount,\n          rowHeight = props.rowHeight;\n\n      if (this._topGridHeight == null) {\n        if (typeof rowHeight === 'function') {\n          var topGridHeight = 0;\n\n          for (var index = 0; index < fixedRowCount; index++) {\n            topGridHeight += rowHeight({\n              index: index\n            });\n          }\n\n          this._topGridHeight = topGridHeight;\n        } else {\n          this._topGridHeight = rowHeight * fixedRowCount;\n        }\n      }\n\n      return this._topGridHeight;\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n        this.forceUpdate();\n      }\n    }\n    /**\n     * Avoid recreating inline styles each render; this bypasses Grid's shallowCompare.\n     * This method recalculates styles only when specific props change.\n     */\n\n  }, {\n    key: \"_maybeCalculateCachedStyles\",\n    value: function _maybeCalculateCachedStyles(resetAll) {\n      var _this$props9 = this.props,\n          columnWidth = _this$props9.columnWidth,\n          enableFixedColumnScroll = _this$props9.enableFixedColumnScroll,\n          enableFixedRowScroll = _this$props9.enableFixedRowScroll,\n          height = _this$props9.height,\n          fixedColumnCount = _this$props9.fixedColumnCount,\n          fixedRowCount = _this$props9.fixedRowCount,\n          rowHeight = _this$props9.rowHeight,\n          style = _this$props9.style,\n          styleBottomLeftGrid = _this$props9.styleBottomLeftGrid,\n          styleBottomRightGrid = _this$props9.styleBottomRightGrid,\n          styleTopLeftGrid = _this$props9.styleTopLeftGrid,\n          styleTopRightGrid = _this$props9.styleTopRightGrid,\n          width = _this$props9.width;\n      var sizeChange = resetAll || height !== this._lastRenderedHeight || width !== this._lastRenderedWidth;\n      var leftSizeChange = resetAll || columnWidth !== this._lastRenderedColumnWidth || fixedColumnCount !== this._lastRenderedFixedColumnCount;\n      var topSizeChange = resetAll || fixedRowCount !== this._lastRenderedFixedRowCount || rowHeight !== this._lastRenderedRowHeight;\n\n      if (resetAll || sizeChange || style !== this._lastRenderedStyle) {\n        this._containerOuterStyle = _objectSpread({\n          height: height,\n          overflow: 'visible',\n          // Let :focus outline show through\n          width: width\n        }, style);\n      }\n\n      if (resetAll || sizeChange || topSizeChange) {\n        this._containerTopStyle = {\n          height: this._getTopGridHeight(this.props),\n          position: 'relative',\n          width: width\n        };\n        this._containerBottomStyle = {\n          height: height - this._getTopGridHeight(this.props),\n          overflow: 'visible',\n          // Let :focus outline show through\n          position: 'relative',\n          width: width\n        };\n      }\n\n      if (resetAll || styleBottomLeftGrid !== this._lastRenderedStyleBottomLeftGrid) {\n        this._bottomLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: enableFixedColumnScroll ? 'auto' : 'hidden',\n          position: 'absolute'\n        }, styleBottomLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleBottomRightGrid !== this._lastRenderedStyleBottomRightGrid) {\n        this._bottomRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          position: 'absolute'\n        }, styleBottomRightGrid);\n      }\n\n      if (resetAll || styleTopLeftGrid !== this._lastRenderedStyleTopLeftGrid) {\n        this._topLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleTopRightGrid !== this._lastRenderedStyleTopRightGrid) {\n        this._topRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          overflowX: enableFixedRowScroll ? 'auto' : 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopRightGrid);\n      }\n\n      this._lastRenderedColumnWidth = columnWidth;\n      this._lastRenderedFixedColumnCount = fixedColumnCount;\n      this._lastRenderedFixedRowCount = fixedRowCount;\n      this._lastRenderedHeight = height;\n      this._lastRenderedRowHeight = rowHeight;\n      this._lastRenderedStyle = style;\n      this._lastRenderedStyleBottomLeftGrid = styleBottomLeftGrid;\n      this._lastRenderedStyleBottomRightGrid = styleBottomRightGrid;\n      this._lastRenderedStyleTopLeftGrid = styleTopLeftGrid;\n      this._lastRenderedStyleTopRightGrid = styleTopRightGrid;\n      this._lastRenderedWidth = width;\n    }\n  }, {\n    key: \"_prepareForRender\",\n    value: function _prepareForRender() {\n      if (this._lastRenderedColumnWidth !== this.props.columnWidth || this._lastRenderedFixedColumnCount !== this.props.fixedColumnCount) {\n        this._leftGridWidth = null;\n      }\n\n      if (this._lastRenderedFixedRowCount !== this.props.fixedRowCount || this._lastRenderedRowHeight !== this.props.rowHeight) {\n        this._topGridHeight = null;\n      }\n\n      this._maybeCalculateCachedStyles();\n\n      this._lastRenderedColumnWidth = this.props.columnWidth;\n      this._lastRenderedFixedColumnCount = this.props.fixedColumnCount;\n      this._lastRenderedFixedRowCount = this.props.fixedRowCount;\n      this._lastRenderedRowHeight = this.props.rowHeight;\n    }\n  }, {\n    key: \"_renderBottomLeftGrid\",\n    value: function _renderBottomLeftGrid(props) {\n      var enableFixedColumnScroll = props.enableFixedColumnScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          hideBottomLeftGridScrollbar = props.hideBottomLeftGridScrollbar;\n      var showVerticalScrollbar = this.state.showVerticalScrollbar;\n\n      if (!fixedColumnCount) {\n        return null;\n      }\n\n      var additionalRowCount = showVerticalScrollbar ? 1 : 0,\n          height = this._getBottomGridHeight(props),\n          width = this._getLeftGridWidth(props),\n          scrollbarSize = this.state.showVerticalScrollbar ? this.state.scrollbarSize : 0,\n          gridWidth = hideBottomLeftGridScrollbar ? width + scrollbarSize : width;\n\n      var bottomLeftGrid = React.createElement(_Grid[\"default\"], (0, _extends2[\"default\"])({}, props, {\n        cellRenderer: this._cellRendererBottomLeftGrid,\n        className: this.props.classNameBottomLeftGrid,\n        columnCount: fixedColumnCount,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomLeftGrid,\n        height: height,\n        onScroll: enableFixedColumnScroll ? this._onScrollTop : undefined,\n        ref: this._bottomLeftGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount) + additionalRowCount,\n        rowHeight: this._rowHeightBottomGrid,\n        style: this._bottomLeftGridStyle,\n        tabIndex: null,\n        width: gridWidth\n      }));\n\n      if (hideBottomLeftGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"BottomLeftGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._bottomLeftGridStyle, {\n            height: height,\n            width: width,\n            overflowY: 'hidden'\n          })\n        }, bottomLeftGrid);\n      }\n\n      return bottomLeftGrid;\n    }\n  }, {\n    key: \"_renderBottomRightGrid\",\n    value: function _renderBottomRightGrid(props) {\n      var columnCount = props.columnCount,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          scrollToColumn = props.scrollToColumn,\n          scrollToRow = props.scrollToRow;\n      return React.createElement(_Grid[\"default\"], (0, _extends2[\"default\"])({}, props, {\n        cellRenderer: this._cellRendererBottomRightGrid,\n        className: this.props.classNameBottomRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount),\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomRightGrid,\n        height: this._getBottomGridHeight(props),\n        onScroll: this._onScroll,\n        onScrollbarPresenceChange: this._onScrollbarPresenceChange,\n        ref: this._bottomRightGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount),\n        rowHeight: this._rowHeightBottomGrid,\n        scrollToColumn: scrollToColumn - fixedColumnCount,\n        scrollToRow: scrollToRow - fixedRowCount,\n        style: this._bottomRightGridStyle,\n        width: this._getRightGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopLeftGrid\",\n    value: function _renderTopLeftGrid(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount;\n\n      if (!fixedColumnCount || !fixedRowCount) {\n        return null;\n      }\n\n      return React.createElement(_Grid[\"default\"], (0, _extends2[\"default\"])({}, props, {\n        className: this.props.classNameTopLeftGrid,\n        columnCount: fixedColumnCount,\n        height: this._getTopGridHeight(props),\n        ref: this._topLeftGridRef,\n        rowCount: fixedRowCount,\n        style: this._topLeftGridStyle,\n        tabIndex: null,\n        width: this._getLeftGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopRightGrid\",\n    value: function _renderTopRightGrid(props) {\n      var columnCount = props.columnCount,\n          enableFixedRowScroll = props.enableFixedRowScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          scrollLeft = props.scrollLeft,\n          hideTopRightGridScrollbar = props.hideTopRightGridScrollbar;\n      var _this$state5 = this.state,\n          showHorizontalScrollbar = _this$state5.showHorizontalScrollbar,\n          scrollbarSize = _this$state5.scrollbarSize;\n\n      if (!fixedRowCount) {\n        return null;\n      }\n\n      var additionalColumnCount = showHorizontalScrollbar ? 1 : 0,\n          height = this._getTopGridHeight(props),\n          width = this._getRightGridWidth(props),\n          additionalHeight = showHorizontalScrollbar ? scrollbarSize : 0;\n\n      var gridHeight = height,\n          style = this._topRightGridStyle;\n\n      if (hideTopRightGridScrollbar) {\n        gridHeight = height + additionalHeight;\n        style = _objectSpread({}, this._topRightGridStyle, {\n          left: 0\n        });\n      }\n\n      var topRightGrid = React.createElement(_Grid[\"default\"], (0, _extends2[\"default\"])({}, props, {\n        cellRenderer: this._cellRendererTopRightGrid,\n        className: this.props.classNameTopRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount) + additionalColumnCount,\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheTopRightGrid,\n        height: gridHeight,\n        onScroll: enableFixedRowScroll ? this._onScrollLeft : undefined,\n        ref: this._topRightGridRef,\n        rowCount: fixedRowCount,\n        scrollLeft: scrollLeft,\n        style: style,\n        tabIndex: null,\n        width: width\n      }));\n\n      if (hideTopRightGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"TopRightGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._topRightGridStyle, {\n            height: height,\n            width: width,\n            overflowX: 'hidden'\n          })\n        }, topRightGrid);\n      }\n\n      return topRightGrid;\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null && nextProps.scrollLeft >= 0 ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null && nextProps.scrollTop >= 0 ? nextProps.scrollTop : prevState.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n  return MultiGrid;\n}(React.PureComponent);\n\n(0, _defineProperty2[\"default\"])(MultiGrid, \"defaultProps\", {\n  classNameBottomLeftGrid: '',\n  classNameBottomRightGrid: '',\n  classNameTopLeftGrid: '',\n  classNameTopRightGrid: '',\n  enableFixedColumnScroll: false,\n  enableFixedRowScroll: false,\n  fixedColumnCount: 0,\n  fixedRowCount: 0,\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  styleBottomLeftGrid: {},\n  styleBottomRightGrid: {},\n  styleTopLeftGrid: {},\n  styleTopRightGrid: {},\n  hideTopRightGridScrollbar: false,\n  hideBottomLeftGridScrollbar: false\n});\nMultiGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  classNameBottomLeftGrid: _propTypes[\"default\"].string.isRequired,\n  classNameBottomRightGrid: _propTypes[\"default\"].string.isRequired,\n  classNameTopLeftGrid: _propTypes[\"default\"].string.isRequired,\n  classNameTopRightGrid: _propTypes[\"default\"].string.isRequired,\n  enableFixedColumnScroll: _propTypes[\"default\"].bool.isRequired,\n  enableFixedRowScroll: _propTypes[\"default\"].bool.isRequired,\n  fixedColumnCount: _propTypes[\"default\"].number.isRequired,\n  fixedRowCount: _propTypes[\"default\"].number.isRequired,\n  onScrollbarPresenceChange: _propTypes[\"default\"].func,\n  style: _propTypes[\"default\"].object.isRequired,\n  styleBottomLeftGrid: _propTypes[\"default\"].object.isRequired,\n  styleBottomRightGrid: _propTypes[\"default\"].object.isRequired,\n  styleTopLeftGrid: _propTypes[\"default\"].object.isRequired,\n  styleTopRightGrid: _propTypes[\"default\"].object.isRequired,\n  hideTopRightGridScrollbar: _propTypes[\"default\"].bool,\n  hideBottomLeftGridScrollbar: _propTypes[\"default\"].bool\n} : {};\n(0, _reactLifecyclesCompat.polyfill)(MultiGrid);\nvar _default = MultiGrid;\nexports[\"default\"] = _default;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _CellMeasurer = require(\"../CellMeasurer\");\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCacheDecorator =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCacheDecorator() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    (0, _classCallCheck2[\"default\"])(this, CellMeasurerCacheDecorator);\n    (0, _defineProperty2[\"default\"])(this, \"_cellMeasurerCache\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_columnIndexOffset\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_rowIndexOffset\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      _this._cellMeasurerCache.columnWidth({\n        index: index + _this._columnIndexOffset\n      });\n    });\n    (0, _defineProperty2[\"default\"])(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      _this._cellMeasurerCache.rowHeight({\n        index: index + _this._rowIndexOffset\n      });\n    });\n    var cellMeasurerCache = params.cellMeasurerCache,\n        _params$columnIndexOf = params.columnIndexOffset,\n        columnIndexOffset = _params$columnIndexOf === void 0 ? 0 : _params$columnIndexOf,\n        _params$rowIndexOffse = params.rowIndexOffset,\n        rowIndexOffset = _params$rowIndexOffse === void 0 ? 0 : _params$rowIndexOffse;\n    this._cellMeasurerCache = cellMeasurerCache;\n    this._columnIndexOffset = columnIndexOffset;\n    this._rowIndexOffset = rowIndexOffset;\n  }\n\n  (0, _createClass2[\"default\"])(CellMeasurerCacheDecorator, [{\n    key: \"clear\",\n    value: function clear(rowIndex, columnIndex) {\n      this._cellMeasurerCache.clear(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellMeasurerCache.clearAll();\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._cellMeasurerCache.hasFixedHeight();\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._cellMeasurerCache.hasFixedWidth();\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getHeight(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getWidth(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.has(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      this._cellMeasurerCache.set(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset, width, height);\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultWidth;\n    }\n  }]);\n  return CellMeasurerCacheDecorator;\n}();\n\nexports[\"default\"] = CellMeasurerCacheDecorator;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"CellMeasurer\", {\n  enumerable: true,\n  get: function get() {\n    return _CellMeasurer[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"CellMeasurerCache\", {\n  enumerable: true,\n  get: function get() {\n    return _CellMeasurerCache[\"default\"];\n  }\n});\nexports[\"default\"] = void 0;\n\nvar _CellMeasurer = _interopRequireDefault(require(\"./CellMeasurer\"));\n\nvar _CellMeasurerCache = _interopRequireDefault(require(\"./CellMeasurerCache\"));\n\nvar _default = _CellMeasurer[\"default\"];\nexports[\"default\"] = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf3 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactDom = require(\"react-dom\");\n\nvar _types = require(\"./types\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _class, _temp;\n\n/**\n * Wraps a cell and measures its rendered content.\n * Measurements are stored in a per-cell cache.\n * Cached-content is not be re-measured.\n */\nvar CellMeasurer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  (0, _inherits2[\"default\"])(CellMeasurer, _React$PureComponent);\n\n  function CellMeasurer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, CellMeasurer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3[\"default\"])(CellMeasurer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_child\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_measure\", function () {\n      var _this$props = _this.props,\n          cache = _this$props.cache,\n          _this$props$columnInd = _this$props.columnIndex,\n          columnIndex = _this$props$columnInd === void 0 ? 0 : _this$props$columnInd,\n          parent = _this$props.parent,\n          _this$props$rowIndex = _this$props.rowIndex,\n          rowIndex = _this$props$rowIndex === void 0 ? _this.props.index || 0 : _this$props$rowIndex;\n\n      var _this$_getCellMeasure = _this._getCellMeasurements(),\n          height = _this$_getCellMeasure.height,\n          width = _this$_getCellMeasure.width;\n\n      if (height !== cache.getHeight(rowIndex, columnIndex) || width !== cache.getWidth(rowIndex, columnIndex)) {\n        cache.set(rowIndex, columnIndex, width, height);\n\n        if (parent && typeof parent.recomputeGridSize === 'function') {\n          parent.recomputeGridSize({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('CellMeasurer registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      if (element) {\n        _this._maybeMeasureCell();\n      }\n    });\n    return _this;\n  }\n\n  (0, _createClass2[\"default\"])(CellMeasurer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return typeof children === 'function' ? children({\n        measure: this._measure,\n        registerChild: this._registerChild\n      }) : children;\n    }\n  }, {\n    key: \"_getCellMeasurements\",\n    value: function _getCellMeasurements() {\n      var cache = this.props.cache;\n      var node = this._child || (0, _reactDom.findDOMNode)(this); // TODO Check for a bad combination of fixedWidth and missing numeric width or vice versa with height\n\n      if (node && node.ownerDocument && node.ownerDocument.defaultView && node instanceof node.ownerDocument.defaultView.HTMLElement) {\n        var styleWidth = node.style.width;\n        var styleHeight = node.style.height; // If we are re-measuring a cell that has already been measured,\n        // It will have a hard-coded width/height from the previous measurement.\n        // The fact that we are measuring indicates this measurement is probably stale,\n        // So explicitly clear it out (eg set to \"auto\") so we can recalculate.\n        // See issue #593 for more info.\n        // Even if we are measuring initially- if we're inside of a MultiGrid component,\n        // Explicitly clear width/height before measuring to avoid being tainted by another Grid.\n        // eg top/left Grid renders before bottom/right Grid\n        // Since the CellMeasurerCache is shared between them this taints derived cell size values.\n\n        if (!cache.hasFixedWidth()) {\n          node.style.width = 'auto';\n        }\n\n        if (!cache.hasFixedHeight()) {\n          node.style.height = 'auto';\n        }\n\n        var height = Math.ceil(node.offsetHeight);\n        var width = Math.ceil(node.offsetWidth); // Reset after measuring to avoid breaking styles; see #660\n\n        if (styleWidth) {\n          node.style.width = styleWidth;\n        }\n\n        if (styleHeight) {\n          node.style.height = styleHeight;\n        }\n\n        return {\n          height: height,\n          width: width\n        };\n      } else {\n        return {\n          height: 0,\n          width: 0\n        };\n      }\n    }\n  }, {\n    key: \"_maybeMeasureCell\",\n    value: function _maybeMeasureCell() {\n      var _this$props2 = this.props,\n          cache = _this$props2.cache,\n          _this$props2$columnIn = _this$props2.columnIndex,\n          columnIndex = _this$props2$columnIn === void 0 ? 0 : _this$props2$columnIn,\n          parent = _this$props2.parent,\n          _this$props2$rowIndex = _this$props2.rowIndex,\n          rowIndex = _this$props2$rowIndex === void 0 ? this.props.index || 0 : _this$props2$rowIndex;\n\n      if (!cache.has(rowIndex, columnIndex)) {\n        var _this$_getCellMeasure2 = this._getCellMeasurements(),\n            height = _this$_getCellMeasure2.height,\n            width = _this$_getCellMeasure2.width;\n\n        cache.set(rowIndex, columnIndex, width, height); // If size has changed, let Grid know to re-render.\n\n        if (parent && typeof parent.invalidateCellSizeAfterRender === 'function') {\n          parent.invalidateCellSizeAfterRender({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    }\n  }]);\n  return CellMeasurer;\n}(React.PureComponent), (0, _defineProperty2[\"default\"])(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"cache\": function cache() {\n    return (typeof _types.bpfrpt_proptype_CellMeasureCache === \"function\" ? _types.bpfrpt_proptype_CellMeasureCache.isRequired ? _types.bpfrpt_proptype_CellMeasureCache.isRequired : _types.bpfrpt_proptype_CellMeasureCache : _propTypes[\"default\"].shape(_types.bpfrpt_proptype_CellMeasureCache).isRequired).apply(this, arguments);\n  },\n  \"children\": _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].func, _propTypes[\"default\"].node]).isRequired,\n  \"columnIndex\": _propTypes[\"default\"].number,\n  \"index\": _propTypes[\"default\"].number,\n  \"parent\": _propTypes[\"default\"].shape({\n    invalidateCellSizeAfterRender: _propTypes[\"default\"].func,\n    recomputeGridSize: _propTypes[\"default\"].func\n  }).isRequired,\n  \"rowIndex\": _propTypes[\"default\"].number\n}), _temp); // Used for DEV mode warning check\n\nexports[\"default\"] = CellMeasurer;\n(0, _defineProperty2[\"default\"])(CellMeasurer, \"__internalCellMeasurerFlag\", false);\n\nif (process.env.NODE_ENV !== 'production') {\n  CellMeasurer.__internalCellMeasurerFlag = true;\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.DEFAULT_WIDTH = exports.DEFAULT_HEIGHT = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _types = require(\"./types\");\n\nvar DEFAULT_HEIGHT = 30;\nexports.DEFAULT_HEIGHT = DEFAULT_HEIGHT;\nvar DEFAULT_WIDTH = 100; // Enables more intelligent mapping of a given column and row index to an item ID.\n// This prevents a cell cache from being invalidated when its parent collection is modified.\n\nexports.DEFAULT_WIDTH = DEFAULT_WIDTH;\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCache =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCache() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    (0, _classCallCheck2[\"default\"])(this, CellMeasurerCache);\n    (0, _defineProperty2[\"default\"])(this, \"_cellHeightCache\", {});\n    (0, _defineProperty2[\"default\"])(this, \"_cellWidthCache\", {});\n    (0, _defineProperty2[\"default\"])(this, \"_columnWidthCache\", {});\n    (0, _defineProperty2[\"default\"])(this, \"_rowHeightCache\", {});\n    (0, _defineProperty2[\"default\"])(this, \"_defaultHeight\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_defaultWidth\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_minHeight\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_minWidth\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_keyMapper\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_hasFixedHeight\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_hasFixedWidth\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_columnCount\", 0);\n    (0, _defineProperty2[\"default\"])(this, \"_rowCount\", 0);\n    (0, _defineProperty2[\"default\"])(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      var key = _this._keyMapper(0, index);\n\n      return _this._columnWidthCache[key] !== undefined ? _this._columnWidthCache[key] : _this._defaultWidth;\n    });\n    (0, _defineProperty2[\"default\"])(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      var key = _this._keyMapper(index, 0);\n\n      return _this._rowHeightCache[key] !== undefined ? _this._rowHeightCache[key] : _this._defaultHeight;\n    });\n    var defaultHeight = params.defaultHeight,\n        defaultWidth = params.defaultWidth,\n        fixedHeight = params.fixedHeight,\n        fixedWidth = params.fixedWidth,\n        keyMapper = params.keyMapper,\n        minHeight = params.minHeight,\n        minWidth = params.minWidth;\n    this._hasFixedHeight = fixedHeight === true;\n    this._hasFixedWidth = fixedWidth === true;\n    this._minHeight = minHeight || 0;\n    this._minWidth = minWidth || 0;\n    this._keyMapper = keyMapper || defaultKeyMapper;\n    this._defaultHeight = Math.max(this._minHeight, typeof defaultHeight === 'number' ? defaultHeight : DEFAULT_HEIGHT);\n    this._defaultWidth = Math.max(this._minWidth, typeof defaultWidth === 'number' ? defaultWidth : DEFAULT_WIDTH);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (this._hasFixedHeight === false && this._hasFixedWidth === false) {\n        console.warn(\"CellMeasurerCache should only measure a cell's width or height. \" + 'You have configured CellMeasurerCache to measure both. ' + 'This will result in poor performance.');\n      }\n\n      if (this._hasFixedHeight === false && this._defaultHeight === 0) {\n        console.warn('Fixed height CellMeasurerCache should specify a :defaultHeight greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n\n      if (this._hasFixedWidth === false && this._defaultWidth === 0) {\n        console.warn('Fixed width CellMeasurerCache should specify a :defaultWidth greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n    }\n  }\n\n  (0, _createClass2[\"default\"])(CellMeasurerCache, [{\n    key: \"clear\",\n    value: function clear(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      delete this._cellHeightCache[key];\n      delete this._cellWidthCache[key];\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellHeightCache = {};\n      this._cellWidthCache = {};\n      this._columnWidthCache = {};\n      this._rowHeightCache = {};\n      this._rowCount = 0;\n      this._columnCount = 0;\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._hasFixedHeight;\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._hasFixedWidth;\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedHeight) {\n        return this._defaultHeight;\n      } else {\n        var _key = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellHeightCache[_key] !== undefined ? Math.max(this._minHeight, this._cellHeightCache[_key]) : this._defaultHeight;\n      }\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedWidth) {\n        return this._defaultWidth;\n      } else {\n        var _key2 = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellWidthCache[_key2] !== undefined ? Math.max(this._minWidth, this._cellWidthCache[_key2]) : this._defaultWidth;\n      }\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      return this._cellHeightCache[key] !== undefined;\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      if (columnIndex >= this._columnCount) {\n        this._columnCount = columnIndex + 1;\n      }\n\n      if (rowIndex >= this._rowCount) {\n        this._rowCount = rowIndex + 1;\n      } // Size is cached per cell so we don't have to re-measure if cells are re-ordered.\n\n\n      this._cellHeightCache[key] = height;\n      this._cellWidthCache[key] = width;\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"_updateCachedColumnAndRowSizes\",\n    value: function _updateCachedColumnAndRowSizes(rowIndex, columnIndex) {\n      // :columnWidth and :rowHeight are derived based on all cells in a column/row.\n      // Pre-cache these derived values for faster lookup later.\n      // Reads are expected to occur more frequently than writes in this case.\n      // Only update non-fixed dimensions though to avoid doing unnecessary work.\n      if (!this._hasFixedWidth) {\n        var columnWidth = 0;\n\n        for (var i = 0; i < this._rowCount; i++) {\n          columnWidth = Math.max(columnWidth, this.getWidth(i, columnIndex));\n        }\n\n        var columnKey = this._keyMapper(0, columnIndex);\n\n        this._columnWidthCache[columnKey] = columnWidth;\n      }\n\n      if (!this._hasFixedHeight) {\n        var rowHeight = 0;\n\n        for (var _i = 0; _i < this._columnCount; _i++) {\n          rowHeight = Math.max(rowHeight, this.getHeight(rowIndex, _i));\n        }\n\n        var rowKey = this._keyMapper(rowIndex, 0);\n\n        this._rowHeightCache[rowKey] = rowHeight;\n      }\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._defaultWidth;\n    }\n  }]);\n  return CellMeasurerCache;\n}();\n\nexports[\"default\"] = CellMeasurerCache;\n\nfunction defaultKeyMapper(rowIndex, columnIndex) {\n  return \"\".concat(rowIndex, \"-\").concat(columnIndex);\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function get() {\n    return _Grid[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"Grid\", {\n  enumerable: true,\n  get: function get() {\n    return _Grid[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"accessibilityOverscanIndicesGetter\", {\n  enumerable: true,\n  get: function get() {\n    return _accessibilityOverscanIndicesGetter[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"defaultCellRangeRenderer\", {\n  enumerable: true,\n  get: function get() {\n    return _defaultCellRangeRenderer[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"defaultOverscanIndicesGetter\", {\n  enumerable: true,\n  get: function get() {\n    return _defaultOverscanIndicesGetter[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"bpfrpt_proptype_NoContentRenderer\", {\n  enumerable: true,\n  get: function get() {\n    return _types.bpfrpt_proptype_NoContentRenderer;\n  }\n});\nObject.defineProperty(exports, \"bpfrpt_proptype_Alignment\", {\n  enumerable: true,\n  get: function get() {\n    return _types.bpfrpt_proptype_Alignment;\n  }\n});\nObject.defineProperty(exports, \"bpfrpt_proptype_CellPosition\", {\n  enumerable: true,\n  get: function get() {\n    return _types.bpfrpt_proptype_CellPosition;\n  }\n});\nObject.defineProperty(exports, \"bpfrpt_proptype_CellSize\", {\n  enumerable: true,\n  get: function get() {\n    return _types.bpfrpt_proptype_CellSize;\n  }\n});\nObject.defineProperty(exports, \"bpfrpt_proptype_OverscanIndicesGetter\", {\n  enumerable: true,\n  get: function get() {\n    return _types.bpfrpt_proptype_OverscanIndicesGetter;\n  }\n});\nObject.defineProperty(exports, \"bpfrpt_proptype_RenderedSection\", {\n  enumerable: true,\n  get: function get() {\n    return _types.bpfrpt_proptype_RenderedSection;\n  }\n});\nObject.defineProperty(exports, \"bpfrpt_proptype_CellRendererParams\", {\n  enumerable: true,\n  get: function get() {\n    return _types.bpfrpt_proptype_CellRendererParams;\n  }\n});\nObject.defineProperty(exports, \"bpfrpt_proptype_Scroll\", {\n  enumerable: true,\n  get: function get() {\n    return _types.bpfrpt_proptype_Scroll;\n  }\n});\n\nvar _Grid = _interopRequireDefault(require(\"./Grid\"));\n\nvar _accessibilityOverscanIndicesGetter = _interopRequireDefault(require(\"./accessibilityOverscanIndicesGetter\"));\n\nvar _defaultCellRangeRenderer = _interopRequireDefault(require(\"./defaultCellRangeRenderer\"));\n\nvar _defaultOverscanIndicesGetter = _interopRequireDefault(require(\"./defaultOverscanIndicesGetter\"));\n\nvar _types = require(\"./types\");"],"sourceRoot":""}