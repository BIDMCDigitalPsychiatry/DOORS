{"version":3,"sources":["../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/nonIterableRest.js","../node_modules/react-virtualized/dist/es/Grid/utils/calculateSizeAndPositionDataAndUpdateScrollOffset.js","../node_modules/react-virtualized/dist/es/Grid/utils/CellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/es/Grid/utils/maxElementSize.js","../node_modules/react-virtualized/dist/es/Grid/utils/ScalingCellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/es/utils/createCallbackMemoizer.js","../node_modules/react-virtualized/dist/es/Grid/utils/updateScrollIndexHelper.js","../node_modules/react-virtualized/dist/es/utils/animationFrame.js","../node_modules/react-virtualized/dist/es/Grid/Grid.js","../node_modules/react-virtualized/dist/es/utils/requestAnimationTimeout.js","../node_modules/react-virtualized/dist/es/Grid/defaultOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/es/Grid/defaultCellRangeRenderer.js","../node_modules/react-virtualized/dist/es/Grid/accessibilityOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/es/ArrowKeyStepper/types.js","../node_modules/react-virtualized/dist/es/ArrowKeyStepper/ArrowKeyStepper.js","../node_modules/react-virtualized/dist/es/AutoSizer/AutoSizer.js","../node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurer.js","../node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurerCache.js","../node_modules/react-virtualized/dist/es/Collection/CollectionView.js","../node_modules/react-virtualized/dist/es/Collection/Section.js","../node_modules/react-virtualized/dist/es/Collection/SectionManager.js","../node_modules/react-virtualized/dist/es/utils/getUpdatedOffsetForIndex.js","../node_modules/react-virtualized/dist/es/Collection/Collection.js","../node_modules/react-virtualized/dist/es/Collection/utils/calculateSizeAndPositionData.js","../node_modules/react-virtualized/dist/es/Collection/index.js","../node_modules/react-virtualized/dist/es/ColumnSizer/ColumnSizer.js","../node_modules/react-virtualized/dist/es/ColumnSizer/index.js","../node_modules/react-virtualized/dist/es/InfiniteLoader/InfiniteLoader.js","../node_modules/react-virtualized/dist/es/InfiniteLoader/index.js","../node_modules/react-virtualized/dist/es/List/List.js","../node_modules/react-virtualized/dist/es/vendor/binarySearchBounds.js","../node_modules/react-virtualized/dist/es/vendor/intervalTree.js","../node_modules/react-virtualized/dist/es/Masonry/PositionCache.js","../node_modules/react-virtualized/dist/es/Masonry/Masonry.js","../node_modules/react-virtualized/dist/es/Masonry/index.js","../node_modules/react-virtualized/dist/es/MultiGrid/CellMeasurerCacheDecorator.js","../node_modules/react-virtualized/dist/es/MultiGrid/MultiGrid.js","../node_modules/react-virtualized/dist/es/ScrollSync/ScrollSync.js","../node_modules/react-virtualized/dist/es/Table/defaultHeaderRowRenderer.js","../node_modules/react-virtualized/dist/es/Table/SortDirection.js","../node_modules/react-virtualized/dist/es/Table/SortIndicator.js","../node_modules/react-virtualized/dist/es/Table/defaultHeaderRenderer.js","../node_modules/react-virtualized/dist/es/Table/defaultRowRenderer.js","../node_modules/react-virtualized/dist/es/Table/Column.js","../node_modules/react-virtualized/dist/es/Table/Table.js","../node_modules/react-virtualized/dist/es/Table/defaultCellDataGetter.js","../node_modules/react-virtualized/dist/es/Table/defaultCellRenderer.js","../node_modules/react-virtualized/dist/es/Table/index.js","../node_modules/react-virtualized/dist/es/WindowScroller/utils/onScroll.js","../node_modules/react-virtualized/dist/es/WindowScroller/utils/dimensions.js","../node_modules/react-virtualized/dist/es/WindowScroller/WindowScroller.js","../node_modules/@material-ui/core/esm/TablePagination/TablePaginationActions.js","../node_modules/@material-ui/core/esm/TablePagination/TablePagination.js","../node_modules/@material-ui/core/esm/internal/svg-icons/ArrowDownward.js","../node_modules/@material-ui/core/esm/TableSortLabel/TableSortLabel.js","../node_modules/@material-ui/core/esm/Table/Table.js","../node_modules/@material-ui/core/esm/TableFooter/TableFooter.js","../node_modules/@material-ui/icons/esm/CheckBox.js","../node_modules/@material-ui/icons/esm/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/styles/createMuiStrictModeTheme.js","../node_modules/@material-ui/core/esm/styles/cssUtils.js","../node_modules/@material-ui/core/esm/styles/responsiveFontSizes.js","../node_modules/@material-ui/core/esm/styles/withTheme.js","../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/createClass.js","../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/inherits.js","../node_modules/react-virtualized/dist/commonjs/Grid/types.js","../node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js","../node_modules/react-virtualized/dist/commonjs/Grid/utils/ScalingCellSizeAndPositionManager.js","../node_modules/dom-helpers/esm/canUseDOM.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/react-virtualized/dist/commonjs/CellMeasurer/types.js","../node_modules/react-virtualized/dist/commonjs/Grid/defaultOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/commonjs/Grid/defaultCellRangeRenderer.js","../node_modules/@material-ui/core/esm/Table/TableContext.js","../node_modules/@material-ui/core/esm/TableCell/index.js","../node_modules/@material-ui/core/esm/TableCell/TableCell.js","../node_modules/@material-ui/core/esm/Table/Tablelvl2Context.js","../node_modules/react-virtualized/dist/commonjs/AutoSizer/index.js","../node_modules/@reactions/component/es/index.js","../node_modules/react-virtualized/dist/es/vendor/detectElementResize.js","../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../node_modules/mui-virtualized-table/dist/index.js","../node_modules/react-virtualized/dist/commonjs/MultiGrid/index.js","../node_modules/react-virtualized/dist/commonjs/MultiGrid/MultiGrid.js","../node_modules/@babel/runtime/helpers/setPrototypeOf.js","../node_modules/react-virtualized/dist/commonjs/MultiGrid/CellMeasurerCacheDecorator.js","../node_modules/react-virtualized/dist/commonjs/CellMeasurer/index.js","../node_modules/react-virtualized/dist/commonjs/CellMeasurer/CellMeasurer.js","../node_modules/react-virtualized/dist/commonjs/CellMeasurer/CellMeasurerCache.js","../node_modules/react-virtualized/dist/commonjs/Grid/index.js","../node_modules/react-virtualized/dist/commonjs/Grid/Grid.js","../node_modules/react-virtualized/dist/commonjs/Grid/utils/calculateSizeAndPositionDataAndUpdateScrollOffset.js","../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/commonjs/Grid/utils/maxElementSize.js","../node_modules/react-virtualized/dist/commonjs/utils/createCallbackMemoizer.js","../node_modules/react-virtualized/dist/commonjs/Grid/utils/updateScrollIndexHelper.js","../node_modules/react-virtualized/dist/commonjs/utils/requestAnimationTimeout.js","../node_modules/react-virtualized/dist/commonjs/utils/animationFrame.js","../node_modules/react-virtualized/dist/commonjs/Grid/accessibilityOverscanIndicesGetter.js","../node_modules/mui-virtualized-table/dist/utils.js","../node_modules/react-virtualized/dist/commonjs/AutoSizer/AutoSizer.js","../node_modules/react-virtualized/dist/commonjs/vendor/detectElementResize.js","../node_modules/@babel/runtime/helpers/toConsumableArray.js","../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/slicedToArray.js","../node_modules/@babel/runtime/helpers/arrayWithHoles.js"],"names":["module","exports","arr","i","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","TypeError","calculateSizeAndPositionDataAndUpdateScrollOffset","_ref","cellCount","cellSize","computeMetadataCallback","computeMetadataCallbackProps","nextCellsCount","nextCellSize","nextScrollToIndex","scrollToIndex","updateScrollOffsetForScrollToIndex","CellSizeAndPositionManager","cellSizeGetter","estimatedCellSize","_classCallCheck","this","_defineProperty","_cellSizeGetter","_cellCount","_estimatedCellSize","_createClass","key","_ref2","_lastMeasuredIndex","index","Error","concat","lastMeasuredCellSizeAndPosition","getSizeAndPositionOfLastMeasuredCell","offset","size","isNaN","_cellSizeAndPositionData","_lastBatchedIndex","_ref3","_ref3$align","align","containerSize","currentOffset","targetIndex","idealOffset","datum","getSizeAndPositionOfCell","maxOffset","minOffset","Math","max","min","totalSize","getTotalSize","params","start","_findNearestCell","stop","high","low","middle","floor","interval","_binarySearch","lastMeasuredIndex","_exponentialSearch","getMaxElementSize","window","chrome","ScalingCellSizeAndPositionManager","_ref$maxScrollSize","maxScrollSize","_objectWithoutProperties","_cellSizeAndPositionManager","_maxScrollSize","configure","getCellCount","getEstimatedCellSize","getLastMeasuredIndex","safeTotalSize","offsetPercentage","_getOffsetPercentage","round","_safeOffsetToOffset","getUpdatedOffsetForIndex","_offsetToSafeOffset","_ref4","getVisibleCellRange","resetCell","_ref5","_ref6","_ref7","createCallbackMemoizer","requireAllKeys","arguments","cachedIndices","callback","indices","keys","allInitialized","every","Array","isArray","indexChanged","some","cachedValue","join","updateScrollIndexHelper","cellSizeAndPositionManager","previousCellsCount","previousCellSize","previousScrollToAlignment","previousScrollToIndex","previousSize","scrollOffset","scrollToAlignment","sizeJustIncreasedFromZero","updateScrollIndexCallback","hasScrollToIndex","win","_class","_temp","request","self","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","cancel","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","id","clearTimeout","raf","caf","cancelAnimationTimeout","frame","requestAnimationTimeout","delay","Promise","resolve","then","Date","now","timeout","call","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","apply","_objectSpread","target","source","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","SCROLL_POSITION_CHANGE_REASONS","Grid","_React$PureComponent","props","_this","_possibleConstructorReturn","_getPrototypeOf","_assertThisInitialized","_disablePointerEventsTimeoutId","setState","isScrolling","needToResetStyleCache","onSectionRendered","_onGridRenderedMemoizer","columnOverscanStartIndex","_columnStartIndex","columnOverscanStopIndex","_columnStopIndex","columnStartIndex","_renderedColumnStartIndex","columnStopIndex","_renderedColumnStopIndex","rowOverscanStartIndex","_rowStartIndex","rowOverscanStopIndex","_rowStopIndex","rowStartIndex","_renderedRowStartIndex","rowStopIndex","_renderedRowStopIndex","ref","_scrollingContainer","event","handleScrollEvent","columnSizeAndPositionManager","columnCount","_wrapSizeGetter","columnWidth","_getEstimatedColumnSize","rowSizeAndPositionManager","rowCount","rowHeight","_getEstimatedRowSize","state","instanceProps","prevColumnWidth","prevRowHeight","prevColumnCount","prevRowCount","prevIsScrolling","prevScrollToColumn","scrollToColumn","prevScrollToRow","scrollToRow","scrollbarSize","scrollbarSizeMeasured","scrollDirectionHorizontal","scrollDirectionVertical","scrollLeft","scrollTop","scrollPositionChangeReason","_initialScrollTop","_getCalculatedScrollTop","_initialScrollLeft","_getCalculatedScrollLeft","_inherits","_ref$alignment","alignment","_ref$columnIndex","columnIndex","_ref$rowIndex","rowIndex","offsetProps","_ref2$scrollLeft","scrollLeftParam","_ref2$scrollTop","scrollTopParam","_debounceScrollEnded","_this$props","autoHeight","autoWidth","height","width","totalRowsHeight","totalColumnsWidth","newState","_invokeOnScrollMemoizer","_deferredInvalidateColumnIndex","_deferredInvalidateRowIndex","_this$props2","_ref4$columnIndex","_ref4$rowIndex","_this$props3","_recomputeScrollLeftFlag","_recomputeScrollTopFlag","_styleCache","_cellCache","forceUpdate","_updateScrollLeftForScrollToColumn","_updateScrollTopForScrollToRow","_this$props4","getScrollbarSize","_handleInvalidatedGridSize","prevState","stateUpdate","_getScrollToPositionStateUpdate","sizeIsBiggerThanZero","_invokeOnGridRenderedHelper","_maybeCallOnScrollbarPresenceChange","prevProps","_this2","_this$props5","_this$state","columnOrRowCountJustIncreasedFromZero","_this$props6","autoContainerWidth","className","containerProps","containerRole","containerStyle","noContentRenderer","role","style","tabIndex","_this$state2","_isScrolling","gridStyle","boxSizing","direction","position","WebkitOverflowScrolling","willChange","_resetStyleCache","_calculateChildrenToRender","verticalScrollBarSize","horizontalScrollBarSize","_horizontalScrollBarSize","_verticalScrollBarSize","_scrollbarPresenceChanged","overflowX","overflowY","childrenToDisplay","_childrenToDisplay","showNoContentRenderer","React","_extends","_setScrollingContainerRef","clsx","onScroll","_onScroll","maxWidth","maxHeight","overflow","pointerEvents","cellRenderer","cellRangeRenderer","deferredMeasurementCache","overscanColumnCount","overscanIndicesGetter","overscanRowCount","isScrollingOptOut","visibleColumnIndices","visibleRowIndices","horizontalOffsetAdjustment","getOffsetAdjustment","verticalOffsetAdjustment","overscanColumnIndices","overscanCellsCount","scrollDirection","startIndex","stopIndex","overscanRowIndices","overscanStartIndex","overscanStopIndex","hasFixedHeight","has","hasFixedWidth","cellCache","parent","styleCache","scrollingResetTimeInterval","_debounceScrollEndedCallback","recomputeGridSize","_this3","_onScrollMemoizer","_this3$props","clientHeight","clientWidth","scrollHeight","scrollWidth","hasOwnProperty","Boolean","onScrollbarPresenceChange","horizontal","vertical","_ref8","_getScrollLeftForScrollToColumnStateUpdate","_getScrollTopForScrollToRowStateUpdate","nextProps","assign","maybeStateA","maybeStateB","estimatedColumnSize","estimatedRowSize","_ref9","finalColumn","scrollBarSize","calculatedScrollLeft","finalRow","calculatedScrollTop","renderedCells","areOffsetsAdjusted","canCacheStyle","rowDatum","columnDatum","isVisible","left","top","cellRendererParams","renderedCell","polyfill","defaultOverscanIndicesGetter","ArrowKeyStepper","_getPrototypeOf2","_len","args","_key","disabled","mode","_this$_getScrollState","_getScrollState","scrollToColumnPrevious","scrollToRowPrevious","_this$_getScrollState2","preventDefault","_updateScrollState","children","_this$_getScrollState3","onKeyDown","_onKeyDown","_onSectionRendered","isControlled","onScrollToChange","AutoSizer","_React$Component","defaultHeight","defaultWidth","disableHeight","disableWidth","onResize","_parentNode","offsetHeight","offsetWidth","_window","getComputedStyle","paddingLeft","parseInt","paddingRight","paddingTop","paddingBottom","newHeight","newWidth","autoSizer","_autoSizer","nonce","parentNode","ownerDocument","defaultView","HTMLElement","_detectElementResize","createDetectElementResize","addResizeListener","_onResize","removeResizeListener","outerStyle","childParams","_setRef","CellMeasurer","cache","_this$props$columnInd","_this$props$rowIndex","_this$_getCellMeasure","_getCellMeasurements","getHeight","getWidth","set","element","Element","console","warn","_child","_maybeMeasureCell","measure","_measure","registerChild","_registerChild","node","findDOMNode","styleWidth","styleHeight","ceil","_this$props2$columnIn","_this$props2$rowIndex","_this$_getCellMeasure2","invalidateCellSizeAfterRender","CellMeasurerCache","_keyMapper","_columnWidthCache","_defaultWidth","_rowHeightCache","_defaultHeight","fixedHeight","fixedWidth","keyMapper","minHeight","minWidth","_hasFixedHeight","_hasFixedWidth","_minHeight","_minWidth","defaultKeyMapper","_cellHeightCache","_cellWidthCache","_updateCachedColumnAndRowSizes","_rowCount","_columnCount","_key2","columnKey","rowKey","get","CollectionView","cellLayoutManager","_onSectionRenderedMemoizer","getLastRenderedIndices","scrollToCell","scrollPosition","getScrollPositionForCell","cellIndex","_setScrollPosition","_enablePointerEventsAfterDelay","isScrollingChange","_scrollbarSize","_cellLayoutManager$ge","totalHeight","totalWidth","cancelable","_scrollbarSizeMeasured","_calculateSizeAndPositionDataOnNextUpdate","_updateScrollPositionForScrollToCell","_invokeOnSectionRenderedHelper","_cellLayoutManager$ge2","horizontalOverscanSize","verticalOverscanSize","_this$state3","_lastRenderedCellCount","_lastRenderedCellLayoutManager","calculateSizeAndPositionData","_cellLayoutManager$ge3","right","bottom","cellRenderers","x","y","collectionStyle","propTypes","Section","_indexMap","_indices","SectionManager","sectionSize","_sectionSize","_cellMetadata","_sections","getSections","section","getCellIndices","map","sectionXStart","sectionXStop","sectionYStart","sectionYStop","sections","sectionX","sectionY","toString","cellMetadatum","addCellIndex","_ref$align","cellOffset","Collection","context","_lastRenderedCellIndices","_isScrollingChange","bind","_setCollectionViewRef","_collectionView","recomputeCellSizesAndPositions","data","cellSizeAndPositionGetter","cellMetadata","sectionManager","registerCell","_calculateSizeAndPositionData","_sectionManager","_height","_width","cellGroupRenderer","getCellMetadata","cellRendererProps","ColumnSizer","columnMaxWidth","columnMinWidth","_registeredChild","safeColumnMinWidth","safeColumnMaxWidth","adjustedWidth","getColumnWidth","child","InfiniteLoader","_loadMoreRowsMemoizer","_onRowsRendered","autoReload","_doStuff","_lastRenderedStartIndex","_lastRenderedStopIndex","onRowsRendered","unloadedRanges","loadMoreRows","unloadedRange","promise","lastRenderedStartIndex","lastRenderedStopIndex","isRangeVisible","component","currentIndex","recomputeSize","recomputeRowHeights","forceUpdateReactVirtualizedComponent","isRowLoaded","minimumBatchSize","threshold","rangeStartIndex","rangeStopIndex","potentialStopIndex","_index","firstUnloadedRange","_index2","scanForUnloadedRanges","squashedUnloadedRanges","_toConsumableArray","_loadUnloadedRanges","registeredChild","List","rowRenderer","widthDescriptor","writable","getOffsetForCell","measureAllCells","_ref6$columnIndex","_ref6$rowIndex","scrollToPosition","noRowsRenderer","classNames","_cellRenderer","accessibilityOverscanIndicesGetter","ge","a","c","l","h","m","_GEP","_GEA","gt","_GTP","_GTA","lt","_LTP","_LTA","le","_LEP","_LEA","eq","p","_EQP","_EQA","IntervalTreeNode","mid","leftPoints","rightPoints","count","proto","prototype","copy","b","rebuild","intervals","ntree","createIntervalTree","rebuildWithInterval","rebuildWithoutInterval","idx","indexOf","splice","reportLeftRange","hi","cb","r","reportRightRange","lo","reportRange","compareNumbers","compareBegin","d","compareEnd","pts","sort","leftIntervals","rightIntervals","centerIntervals","s","slice","IntervalTree","root","result","insert","weight","bounds","remove","n","queryPoint","queryInterval","tproto","PositionCache","defaultCellHeight","unmeasuredCellCount","tallestColumnSize","renderCallback","_intervalTree","_slicedToArray","_leftMap","columnSizeMap","_columnSizeMap","columnHeight","Masonry","eventScrollTop","currentTarget","_getEstimatedTotalHeight","_debounceResetIsScrolling","_positionCache","_invalidateOnUpdateStartIndex","_invalidateOnUpdateStopIndex","_populatePositionCache","_checkInvalidateOnUpdate","_invokeOnScrollCallback","_invokeOnCellsRenderedCallback","_debounceResetIsScrollingId","cellMeasurerCache","overscanByPixels","rowDirection","estimateTotalHeight","shortestColumnSize","measuredCellCount","range","_style","batchSize","_startIndex","_stopIndex","_debounceResetIsScrollingCallback","estimatedColumnCount","_onScrollMemoized","_startIndexMemoized","_stopIndexMemoized","onCellsRendered","cellPositioner","_cellPositioner","setPosition","noop","CellMeasurerCacheDecorator","_cellMeasurerCache","_columnIndexOffset","_rowIndexOffset","_params$columnIndexOf","columnIndexOffset","_params$rowIndexOffse","rowIndexOffset","clear","clearAll","MultiGrid","showHorizontalScrollbar","showVerticalScrollbar","_bottomLeftGrid","_bottomRightGrid","rest","fixedRowCount","fixedColumnCount","scrollInfo","_topLeftGrid","_topRightGrid","_fixedColumnCount","_fixedRowCount","_maybeCalculateCachedStyles","_deferredMeasurementCacheBottomLeftGrid","_deferredMeasurementCacheBottomRightGrid","_deferredMeasurementCacheTopRightGrid","_ref7$columnIndex","_ref7$rowIndex","_ref8$columnIndex","_ref8$rowIndex","adjustedColumnIndex","adjustedRowIndex","_leftGridWidth","_topGridHeight","_this$props7","_this$props8","_prepareForRender","_this$state4","_containerOuterStyle","_containerTopStyle","_renderTopLeftGrid","_renderTopRightGrid","_containerBottomStyle","_renderBottomLeftGrid","_renderBottomRightGrid","_getTopGridHeight","leftGridWidth","_getLeftGridWidth","topGridHeight","resetAll","_this$props9","enableFixedColumnScroll","enableFixedRowScroll","styleBottomLeftGrid","styleBottomRightGrid","styleTopLeftGrid","styleTopRightGrid","sizeChange","_lastRenderedHeight","_lastRenderedWidth","leftSizeChange","_lastRenderedColumnWidth","_lastRenderedFixedColumnCount","topSizeChange","_lastRenderedFixedRowCount","_lastRenderedRowHeight","_lastRenderedStyle","_lastRenderedStyleBottomLeftGrid","_bottomLeftGridStyle","_lastRenderedStyleBottomRightGrid","_bottomRightGridStyle","_lastRenderedStyleTopLeftGrid","_topLeftGridStyle","_lastRenderedStyleTopRightGrid","_topRightGridStyle","hideBottomLeftGridScrollbar","additionalRowCount","_getBottomGridHeight","gridWidth","bottomLeftGrid","_cellRendererBottomLeftGrid","classNameBottomLeftGrid","_onScrollTop","_bottomLeftGridRef","_rowHeightBottomGrid","_cellRendererBottomRightGrid","classNameBottomRightGrid","_columnWidthRightGrid","_onScrollbarPresenceChange","_bottomRightGridRef","_getRightGridWidth","classNameTopLeftGrid","_topLeftGridRef","hideTopRightGridScrollbar","_this$state5","additionalColumnCount","additionalHeight","gridHeight","topRightGrid","_cellRendererTopRightGrid","classNameTopRightGrid","_onScrollLeft","_topRightGridRef","ScrollSync","defaultHeaderRowRenderer","columns","SortDirection","ASC","DESC","SortIndicator","sortDirection","viewBox","fill","defaultHeaderRenderer","dataKey","label","sortBy","showSortIndicator","title","defaultRowRenderer","onRowClick","onRowDoubleClick","onRowMouseOut","onRowMouseOver","onRowRightClick","rowData","a11yProps","onClick","onDoubleClick","onMouseOut","onMouseOver","onContextMenu","Column","cellDataGetter","cellData","String","defaultSortDirection","flexGrow","flexShrink","headerRenderer","Table","scrollbarWidth","_createColumn","_createRow","_ref3$columnIndex","_ref3$rowIndex","_Grid","_setScrollbarWidth","disableHeader","gridClassName","headerHeight","headerRowRenderer","rowClassName","rowStyle","availableRowsHeight","rowClass","rowStyleObject","_cachedColumnStyles","toArray","column","flexStyles","_getFlexStyleForColumn","_getHeaderColumns","onColumnClick","_column$props","columnData","headerOnClick","headerOnKeyDown","headerTabIndex","headerAriaSort","headerAriaLabel","headerClassName","headerStyle","onHeaderClick","_column$props2","disableSort","sortEnabled","ReactVirtualized__Table__sortableHeaderColumn","renderedHeader","newSortDirection","rowGetter","flattenedStyle","_getRowHeight","customStyle","flexValue","flex","msFlex","WebkitFlex","_this4","_createHeader","getScrollbarWidth","mountedInstances","originalBodyPointerEvents","disablePointerEventsTimeoutId","enablePointerEventsIfDisabled","document","body","enablePointerEventsAfterDelayCallback","instance","__resetIsScrolling","onScrollWindow","maximumTimeout","enablePointerEventsAfterDelay","scrollElement","__handleWindowScrollEvent","registerScrollListener","addEventListener","unregisterScrollListener","removeEventListener","isWindow","getBoundingBox","getBoundingClientRect","getDimensions","innerHeight","innerWidth","serverHeight","serverWidth","getPositionOffset","container","documentElement","containerElement","elementRect","containerRect","getScrollOffset","_elementRect","_containerRect","scrollY","scrollX","getWindow","WindowScroller","updatePosition","scrollTo","_positionFromTop","_isMounted","_positionFromLeft","thisNode","ReactDOM","dimensions","_registerResizeListener","prevScrollElement","_unregisterResizeListener","onChildScroll","_onChildScroll","KeyboardArrowRight","KeyboardArrowLeft","TablePaginationActions","backIconButtonProps","nextIconButtonProps","onChangePage","page","rowsPerPage","other","theme","useTheme","IconButton","color","defaultLabelDisplayedRows","from","to","defaultRowsPerPageOptions","TablePagination","colSpan","_props$ActionsCompone","ActionsComponent","_props$backIconButton","backIconButtonText","classes","colSpanProp","_props$component","Component","TableCell","_props$labelDisplayed","labelDisplayedRows","_props$labelRowsPerPa","labelRowsPerPage","_props$nextIconButton","nextIconButtonText","onChangeRowsPerPage","_props$rowsPerPageOpt","rowsPerPageOptions","_props$SelectProps","SelectProps","selectId","useId","labelId","MenuItemComponent","native","MenuItem","Toolbar","toolbar","spacer","Typography","variant","caption","Select","select","icon","selectIcon","input","InputBase","selectRoot","onChange","rowsPerPageOption","menuItem","actions","withStyles","palette","text","primary","fontSize","typography","pxToRem","padding","marginRight","marginLeft","textAlign","textAlignLast","name","createSvgIcon","TableSortLabel","_props$active","active","_props$direction","_props$hideSortIcon","hideSortIcon","_props$IconComponent","IconComponent","ArrowDownwardIcon","ButtonBase","disableRipple","capitalize","cursor","display","justifyContent","flexDirection","alignItems","secondary","opacity","transition","transitions","create","duration","shorter","userSelect","iconDirectionDesc","transform","iconDirectionAsc","_props$padding","_props$size","_props$stickyHeader","stickyHeader","table","TableContext","Provider","borderCollapse","borderSpacing","body2","spacing","captionSide","tablelvl2","TableFooter","Tablelvl2Context","createElement","createMuiStrictModeTheme","options","createMuiTheme","deepmerge","unstable_strictMode","isUnitless","parseFloat","toUnitless","convertLength","baseFontSize","toUnit","fromUnit","match","pxLength","outputLength","toFixed","alignProperty","grid","sizeBelow","sizeAbove","fontGrid","lineHeight","pixels","htmlFontSize","responsiveProperty","cssProperty","_ref3$unit","unit","_ref3$breakpoints","breakpoints","_ref3$transform","output","factor","breakpoint","responsiveFontSizes","themeInput","_options$breakpoints","_options$disableAlign","disableAlign","_options$factor","_options$variants","variants","convert","breakpointValues","values","remFontSize","maxFontSize","minFontSize","_formatMuiErrorMessage","withTheme","withThemeCreator","defaultTheme","Constructor","_defineProperties","descriptor","configurable","protoProps","staticProps","_typeof","assertThisInitialized","ReferenceError","o","setPrototypeOf","getPrototypeOf","__proto__","subClass","superClass","constructor","_interopRequireDefault","require","_interopRequireWildcard","bpfrpt_proptype_VisibleCellRange","bpfrpt_proptype_Alignment","bpfrpt_proptype_OverscanIndicesGetter","bpfrpt_proptype_OverscanIndices","bpfrpt_proptype_OverscanIndicesGetterParams","bpfrpt_proptype_RenderedSection","bpfrpt_proptype_ScrollbarPresenceChange","bpfrpt_proptype_Scroll","bpfrpt_proptype_NoContentRenderer","bpfrpt_proptype_CellSize","bpfrpt_proptype_CellSizeGetter","bpfrpt_proptype_CellRangeRenderer","bpfrpt_proptype_CellRangeRendererParams","bpfrpt_proptype_StyleCache","bpfrpt_proptype_CellCache","bpfrpt_proptype_CellRenderer","bpfrpt_proptype_CellRendererParams","bpfrpt_proptype_CellPosition","componentWillMount","getDerivedStateFromProps","componentWillReceiveProps","componentWillUpdate","nextState","__reactInternalSnapshotFlag","__reactInternalSnapshot","getSnapshotBeforeUpdate","isReactComponent","foundWillMountName","foundWillReceivePropsName","foundWillUpdateName","UNSAFE_componentWillMount","UNSAFE_componentWillReceiveProps","UNSAFE_componentWillUpdate","componentName","displayName","newApiName","componentDidUpdate","maybeSnapshot","snapshot","__suppressDeprecationWarning","_objectWithoutProperties2","_classCallCheck2","_createClass2","_defineProperty2","_CellSizeAndPositionManager","_maxElementSize","recalc","canUseDOM","scrollDiv","appendChild","removeChild","bpfrpt_proptype_CellMeasureCache","SCROLL_DIRECTION_VERTICAL","SCROLL_DIRECTION_HORIZONTAL","SCROLL_DIRECTION_FORWARD","SCROLL_DIRECTION_BACKWARD","_props$align","paddingProp","scopeProp","scope","sizeProp","variantProp","isHeadCell","ariaSort","verticalAlign","borderBottom","type","lighten","fade","divider","darken","head","fontWeight","fontWeightMedium","footer","sizeSmall","paddingCheckbox","paddingNone","alignLeft","alignCenter","alignRight","alignJustify","zIndex","backgroundColor","background","default","_AutoSizer","_initialiseProps","getArgs","_setState","_forceUpdate","componentDidMount","didMount","shouldComponentUpdate","shouldUpdate","componentWillUnmount","willUnmount","didUpdate","render","_props","initialState","hostWindow","attachEvent","global","requestFrame","fn","cancelFrame","resetTriggers","triggers","__resizeTriggers__","expand","firstElementChild","contract","lastElementChild","expandChild","scrollListener","e","__resizeRAF__","__resizeLast__","checkTriggers","__resizeListeners__","animation","keyframeprefix","animationstartevent","domPrefixes","split","startEvents","elm","animationName","toLowerCase","animationKeyframes","animationStyle","doc","elementStyle","getElementById","css","getElementsByTagName","setAttribute","styleSheet","cssText","createTextNode","createStyles","innerHTML","__animationListener__","detachEvent","len","arr2","arrayLikeToArray","minLen","test","sliceIterator","MuiTable","_react2","_propTypes2","_MultiGrid2","_classnames2","_Table2","_TableCell2","_TableFooter2","_TablePagination2","_TableSortLabel2","_styles","_reactDraggable2","_utils","obj","__esModule","useStyles","makeStyles","grey","borderRight","outline","cell","cellClickable","cellSelected","cellHovered","cellDisabled","cellContents","whiteSpace","textOverflow","cellHeader","cellInLastColumn","cellInLastRow","borderTop","FOOTER_BORDER_HEIGHT","dragHandle","DragHandleActive","DragHandleIcon","_ref7$maxHeight","pagination","fitHeightToRows","_ref7$fixedRowCount","_ref7$fixedColumnCoun","_ref7$rowHeight","_ref7$includeHeaders","includeHeaders","isCellHovered","isCellSelected","isCellDisabled","Classes","orderBy","orderDirection","onCellClick","onCellDoubleClick","onCellContextMenu","resizable","cellProps","multiGrid","useRef","useCallback","current","useEffect","calculatedHeight","paginationHeight","mixins","calculatedHeightWithFooter","containerHeight","multiGridHeight","defaultCellProps","_React$useState","useState","hoveredColumn","hoveredRowData","_React$useState2","_React$useState2$","setHovered","_React$useState3","Columns","widths","initialWidth","calculateWidths","_React$useState4","setWidths","resizableColumnWidths","tableWidth","calcColumnWidth","resizeRow","deltaX","prev","_extends2","delta","findIndex","nextDataKey","handleDrag","handleMouse","_classNames","isHeader","isSelected","isDisabled","isHovered","resolveCellProps","_resolveCellProps$res","cellStyle","contents","header","float","axis","defaultClassName","defaultClassNameDragging","onDrag","hasCellClick","hasCellDoubleClick","hasCellContextMenu","isClickable","onMouseEnter","onMouseLeave","Fragment","useCellRenderer","array","number","bool","oneOfType","func","string","noPointer","_MultiGrid","_default","_possibleConstructorReturn2","_assertThisInitialized2","_inherits2","_reactLifecyclesCompat","_CellMeasurerCacheDecorator","PureComponent","_setPrototypeOf","_CellMeasurer","_CellMeasurerCache","_getPrototypeOf3","_reactDom","DEFAULT_WIDTH","DEFAULT_HEIGHT","_accessibilityOverscanIndicesGetter","_defaultCellRangeRenderer","_defaultOverscanIndicesGetter","_types","DEFAULT_SCROLLING_RESET_TIME_INTERVAL","_clsx","_calculateSizeAndPositionDataAndUpdateScrollOffset","_ScalingCellSizeAndPositionManager","_createCallbackMemoizer","_updateScrollIndexHelper","_requestAnimationTimeout","sizeHasChanged","bpfrpt_proptype_AnimationTimeoutId","_animationFrame","getDeterministicColumnWidth","percentageBasedWidth","percentAsString","percentToFixedWidth","totalAllocatedWidth","reduce","variableWidthColumns","initialDistributedWidthPerColumn","activeMinWidthColumns","allocatedMinWidth","remainingWidth","pfx","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","iter","arrayWithHoles","iterableToArrayLimit","nonIterableRest"],"mappings":"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","file":"static/js/3.af0dcfb6.chunk.js","sourcesContent":["function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;","/**\n * Helper method that determines when to recalculate row or column metadata.\n */\nexport default function calculateSizeAndPositionDataAndUpdateScrollOffset(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSize = _ref.cellSize,\n      computeMetadataCallback = _ref.computeMetadataCallback,\n      computeMetadataCallbackProps = _ref.computeMetadataCallbackProps,\n      nextCellsCount = _ref.nextCellsCount,\n      nextCellSize = _ref.nextCellSize,\n      nextScrollToIndex = _ref.nextScrollToIndex,\n      scrollToIndex = _ref.scrollToIndex,\n      updateScrollOffsetForScrollToIndex = _ref.updateScrollOffsetForScrollToIndex;\n\n  // Don't compare cell sizes if they are functions because inline functions would cause infinite loops.\n  // In that event users should use the manual recompute methods to inform of changes.\n  if (cellCount !== nextCellsCount || (typeof cellSize === 'number' || typeof nextCellSize === 'number') && cellSize !== nextCellSize) {\n    computeMetadataCallback(computeMetadataCallbackProps); // Updated cell metadata may have hidden the previous scrolled-to item.\n    // In this case we should also update the scrollTop to ensure it stays visible.\n\n    if (scrollToIndex >= 0 && scrollToIndex === nextScrollToIndex) {\n      updateScrollOffsetForScrollToIndex();\n    }\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\n/**\n * Just-in-time calculates and caches size and position information for a collection of cells.\n */\nvar CellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  // Cache of size and position data for cells, mapped by cell index.\n  // Note that invalid values may exist in this map so only rely on cells up to this._lastMeasuredIndex\n  // Measurements for cells up to this index can be trusted; cells afterward should be estimated.\n  // Used in deferred mode to track which cells have been queued for measurement.\n  function CellSizeAndPositionManager(_ref) {\n    var cellCount = _ref.cellCount,\n        cellSizeGetter = _ref.cellSizeGetter,\n        estimatedCellSize = _ref.estimatedCellSize;\n\n    _classCallCheck(this, CellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionData\", {});\n\n    _defineProperty(this, \"_lastMeasuredIndex\", -1);\n\n    _defineProperty(this, \"_lastBatchedIndex\", -1);\n\n    _defineProperty(this, \"_cellCount\", void 0);\n\n    _defineProperty(this, \"_cellSizeGetter\", void 0);\n\n    _defineProperty(this, \"_estimatedCellSize\", void 0);\n\n    this._cellSizeGetter = cellSizeGetter;\n    this._cellCount = cellCount;\n    this._estimatedCellSize = estimatedCellSize;\n  }\n\n  _createClass(CellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return false;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(_ref2) {\n      var cellCount = _ref2.cellCount,\n          estimatedCellSize = _ref2.estimatedCellSize,\n          cellSizeGetter = _ref2.cellSizeGetter;\n      this._cellCount = cellCount;\n      this._estimatedCellSize = estimatedCellSize;\n      this._cellSizeGetter = cellSizeGetter;\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellCount;\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._estimatedCellSize;\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._lastMeasuredIndex;\n    }\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment() {\n      return 0;\n    }\n    /**\n     * This method returns the size and position for the cell at the specified index.\n     * It just-in-time calculates (or used cached values) for cells leading up to the index.\n     */\n\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      if (index < 0 || index >= this._cellCount) {\n        throw Error(\"Requested index \".concat(index, \" is outside of range 0..\").concat(this._cellCount));\n      }\n\n      if (index > this._lastMeasuredIndex) {\n        var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n        var offset = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n\n        for (var i = this._lastMeasuredIndex + 1; i <= index; i++) {\n          var size = this._cellSizeGetter({\n            index: i\n          }); // undefined or NaN probably means a logic error in the size getter.\n          // null means we're using CellMeasurer and haven't yet measured a given index.\n\n\n          if (size === undefined || isNaN(size)) {\n            throw Error(\"Invalid size returned for cell \".concat(i, \" of value \").concat(size));\n          } else if (size === null) {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: 0\n            };\n            this._lastBatchedIndex = index;\n          } else {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: size\n            };\n            offset += size;\n            this._lastMeasuredIndex = index;\n          }\n        }\n      }\n\n      return this._cellSizeAndPositionData[index];\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._lastMeasuredIndex >= 0 ? this._cellSizeAndPositionData[this._lastMeasuredIndex] : {\n        offset: 0,\n        size: 0\n      };\n    }\n    /**\n     * Total size of all cells being measured.\n     * This value will be completely estimated initially.\n     * As cells are measured, the estimate will be updated.\n     */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var totalSizeOfMeasuredCells = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n      var numUnmeasuredCells = this._cellCount - this._lastMeasuredIndex - 1;\n      var totalSizeOfUnmeasuredCells = numUnmeasuredCells * this._estimatedCellSize;\n      return totalSizeOfMeasuredCells + totalSizeOfUnmeasuredCells;\n    }\n    /**\n     * Determines a new offset that ensures a certain cell is visible, given the current offset.\n     * If the cell is already visible then the current offset will be returned.\n     * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n     *\n     * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n     * @param containerSize Size (width or height) of the container viewport\n     * @param currentOffset Container's current (x or y) offset\n     * @param totalSize Total size (width or height) of all cells\n     * @return Offset to use to ensure the specified cell is visible\n     */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n\n      if (containerSize <= 0) {\n        return 0;\n      }\n\n      var datum = this.getSizeAndPositionOfCell(targetIndex);\n      var maxOffset = datum.offset;\n      var minOffset = maxOffset - containerSize + datum.size;\n      var idealOffset;\n\n      switch (align) {\n        case 'start':\n          idealOffset = maxOffset;\n          break;\n\n        case 'end':\n          idealOffset = minOffset;\n          break;\n\n        case 'center':\n          idealOffset = maxOffset - (containerSize - datum.size) / 2;\n          break;\n\n        default:\n          idealOffset = Math.max(minOffset, Math.min(maxOffset, currentOffset));\n          break;\n      }\n\n      var totalSize = this.getTotalSize();\n      return Math.max(0, Math.min(totalSize - containerSize, idealOffset));\n    }\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(params) {\n      var containerSize = params.containerSize,\n          offset = params.offset;\n      var totalSize = this.getTotalSize();\n\n      if (totalSize === 0) {\n        return {};\n      }\n\n      var maxOffset = offset + containerSize;\n\n      var start = this._findNearestCell(offset);\n\n      var datum = this.getSizeAndPositionOfCell(start);\n      offset = datum.offset + datum.size;\n      var stop = start;\n\n      while (offset < maxOffset && stop < this._cellCount - 1) {\n        stop++;\n        offset += this.getSizeAndPositionOfCell(stop).size;\n      }\n\n      return {\n        start: start,\n        stop: stop\n      };\n    }\n    /**\n     * Clear all cached values for cells after the specified index.\n     * This method should be called for any cell that has changed its size.\n     * It will not immediately perform any calculations; they'll be performed the next time getSizeAndPositionOfCell() is called.\n     */\n\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._lastMeasuredIndex = Math.min(this._lastMeasuredIndex, index - 1);\n    }\n  }, {\n    key: \"_binarySearch\",\n    value: function _binarySearch(high, low, offset) {\n      while (low <= high) {\n        var middle = low + Math.floor((high - low) / 2);\n        var currentOffset = this.getSizeAndPositionOfCell(middle).offset;\n\n        if (currentOffset === offset) {\n          return middle;\n        } else if (currentOffset < offset) {\n          low = middle + 1;\n        } else if (currentOffset > offset) {\n          high = middle - 1;\n        }\n      }\n\n      if (low > 0) {\n        return low - 1;\n      } else {\n        return 0;\n      }\n    }\n  }, {\n    key: \"_exponentialSearch\",\n    value: function _exponentialSearch(index, offset) {\n      var interval = 1;\n\n      while (index < this._cellCount && this.getSizeAndPositionOfCell(index).offset < offset) {\n        index += interval;\n        interval *= 2;\n      }\n\n      return this._binarySearch(Math.min(index, this._cellCount - 1), Math.floor(index / 2), offset);\n    }\n    /**\n     * Searches for the cell (index) nearest the specified offset.\n     *\n     * If no exact match is found the next lowest cell index will be returned.\n     * This allows partially visible cells (with offsets just before/above the fold) to be visible.\n     */\n\n  }, {\n    key: \"_findNearestCell\",\n    value: function _findNearestCell(offset) {\n      if (isNaN(offset)) {\n        throw Error(\"Invalid offset \".concat(offset, \" specified\"));\n      } // Our search algorithms find the nearest match at or below the specified offset.\n      // So make sure the offset is at least 0 or no match will be found.\n\n\n      offset = Math.max(0, offset);\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var lastMeasuredIndex = Math.max(0, this._lastMeasuredIndex);\n\n      if (lastMeasuredCellSizeAndPosition.offset >= offset) {\n        // If we've already measured cells within this range just use a binary search as it's faster.\n        return this._binarySearch(lastMeasuredIndex, 0, offset);\n      } else {\n        // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n        // The exponential search avoids pre-computing sizes for the full set of cells as a binary search would.\n        // The overall complexity for this approach is O(log n).\n        return this._exponentialSearch(lastMeasuredIndex, offset);\n      }\n    }\n  }]);\n\n  return CellSizeAndPositionManager;\n}();\n\nexport { CellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","var DEFAULT_MAX_ELEMENT_SIZE = 1500000;\nvar CHROME_MAX_ELEMENT_SIZE = 1.67771e7;\n\nvar isBrowser = function isBrowser() {\n  return typeof window !== 'undefined';\n};\n\nvar isChrome = function isChrome() {\n  return !!window.chrome;\n};\n\nexport var getMaxElementSize = function getMaxElementSize() {\n  if (isBrowser()) {\n    if (isChrome()) {\n      return CHROME_MAX_ELEMENT_SIZE;\n    }\n  }\n\n  return DEFAULT_MAX_ELEMENT_SIZE;\n};","import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport CellSizeAndPositionManager from './CellSizeAndPositionManager';\nimport { getMaxElementSize } from './maxElementSize.js';\n\n/**\n * Extends CellSizeAndPositionManager and adds scaling behavior for lists that are too large to fit within a browser's native limits.\n */\nvar ScalingCellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  function ScalingCellSizeAndPositionManager(_ref) {\n    var _ref$maxScrollSize = _ref.maxScrollSize,\n        maxScrollSize = _ref$maxScrollSize === void 0 ? getMaxElementSize() : _ref$maxScrollSize,\n        params = _objectWithoutProperties(_ref, [\"maxScrollSize\"]);\n\n    _classCallCheck(this, ScalingCellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionManager\", void 0);\n\n    _defineProperty(this, \"_maxScrollSize\", void 0);\n\n    // Favor composition over inheritance to simplify IE10 support\n    this._cellSizeAndPositionManager = new CellSizeAndPositionManager(params);\n    this._maxScrollSize = maxScrollSize;\n  }\n\n  _createClass(ScalingCellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return this._cellSizeAndPositionManager.getTotalSize() > this._maxScrollSize;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(params) {\n      this._cellSizeAndPositionManager.configure(params);\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellSizeAndPositionManager.getCellCount();\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._cellSizeAndPositionManager.getEstimatedCellSize();\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._cellSizeAndPositionManager.getLastMeasuredIndex();\n    }\n    /**\n     * Number of pixels a cell at the given position (offset) should be shifted in order to fit within the scaled container.\n     * The offset passed to this function is scaled (safe) as well.\n     */\n\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment(_ref2) {\n      var containerSize = _ref2.containerSize,\n          offset = _ref2.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      var offsetPercentage = this._getOffsetPercentage({\n        containerSize: containerSize,\n        offset: offset,\n        totalSize: safeTotalSize\n      });\n\n      return Math.round(offsetPercentage * (safeTotalSize - totalSize));\n    }\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfCell(index);\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfLastMeasuredCell();\n    }\n    /** See CellSizeAndPositionManager#getTotalSize */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return Math.min(this._maxScrollSize, this._cellSizeAndPositionManager.getTotalSize());\n    }\n    /** See CellSizeAndPositionManager#getUpdatedOffsetForIndex */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n      currentOffset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: currentOffset\n      });\n\n      var offset = this._cellSizeAndPositionManager.getUpdatedOffsetForIndex({\n        align: align,\n        containerSize: containerSize,\n        currentOffset: currentOffset,\n        targetIndex: targetIndex\n      });\n\n      return this._offsetToSafeOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n    /** See CellSizeAndPositionManager#getVisibleCellRange */\n\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(_ref4) {\n      var containerSize = _ref4.containerSize,\n          offset = _ref4.offset;\n      offset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n      return this._cellSizeAndPositionManager.getVisibleCellRange({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._cellSizeAndPositionManager.resetCell(index);\n    }\n  }, {\n    key: \"_getOffsetPercentage\",\n    value: function _getOffsetPercentage(_ref5) {\n      var containerSize = _ref5.containerSize,\n          offset = _ref5.offset,\n          totalSize = _ref5.totalSize;\n      return totalSize <= containerSize ? 0 : offset / (totalSize - containerSize);\n    }\n  }, {\n    key: \"_offsetToSafeOffset\",\n    value: function _offsetToSafeOffset(_ref6) {\n      var containerSize = _ref6.containerSize,\n          offset = _ref6.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: totalSize\n        });\n\n        return Math.round(offsetPercentage * (safeTotalSize - containerSize));\n      }\n    }\n  }, {\n    key: \"_safeOffsetToOffset\",\n    value: function _safeOffsetToOffset(_ref7) {\n      var containerSize = _ref7.containerSize,\n          offset = _ref7.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: safeTotalSize\n        });\n\n        return Math.round(offsetPercentage * (totalSize - containerSize));\n      }\n    }\n  }]);\n\n  return ScalingCellSizeAndPositionManager;\n}();\n\nexport { ScalingCellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","/**\n * Helper utility that updates the specified callback whenever any of the specified indices have changed.\n */\nexport default function createCallbackMemoizer() {\n  var requireAllKeys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  var cachedIndices = {};\n  return function (_ref) {\n    var callback = _ref.callback,\n        indices = _ref.indices;\n    var keys = Object.keys(indices);\n    var allInitialized = !requireAllKeys || keys.every(function (key) {\n      var value = indices[key];\n      return Array.isArray(value) ? value.length > 0 : value >= 0;\n    });\n    var indexChanged = keys.length !== Object.keys(cachedIndices).length || keys.some(function (key) {\n      var cachedValue = cachedIndices[key];\n      var value = indices[key];\n      return Array.isArray(value) ? cachedValue.join(',') !== value.join(',') : cachedValue !== value;\n    });\n    cachedIndices = indices;\n\n    if (allInitialized && indexChanged) {\n      callback(indices);\n    }\n  };\n}","import ScalingCellSizeAndPositionManager from './ScalingCellSizeAndPositionManager.js';\n/**\n * Helper function that determines when to update scroll offsets to ensure that a scroll-to-index remains visible.\n * This function also ensures that the scroll ofset isn't past the last column/row of cells.\n */\n\nexport default function updateScrollIndexHelper(_ref) {\n  var cellSize = _ref.cellSize,\n      cellSizeAndPositionManager = _ref.cellSizeAndPositionManager,\n      previousCellsCount = _ref.previousCellsCount,\n      previousCellSize = _ref.previousCellSize,\n      previousScrollToAlignment = _ref.previousScrollToAlignment,\n      previousScrollToIndex = _ref.previousScrollToIndex,\n      previousSize = _ref.previousSize,\n      scrollOffset = _ref.scrollOffset,\n      scrollToAlignment = _ref.scrollToAlignment,\n      scrollToIndex = _ref.scrollToIndex,\n      size = _ref.size,\n      sizeJustIncreasedFromZero = _ref.sizeJustIncreasedFromZero,\n      updateScrollIndexCallback = _ref.updateScrollIndexCallback;\n  var cellCount = cellSizeAndPositionManager.getCellCount();\n  var hasScrollToIndex = scrollToIndex >= 0 && scrollToIndex < cellCount;\n  var sizeHasChanged = size !== previousSize || sizeJustIncreasedFromZero || !previousCellSize || typeof cellSize === 'number' && cellSize !== previousCellSize; // If we have a new scroll target OR if height/row-height has changed,\n  // We should ensure that the scroll target is visible.\n\n  if (hasScrollToIndex && (sizeHasChanged || scrollToAlignment !== previousScrollToAlignment || scrollToIndex !== previousScrollToIndex)) {\n    updateScrollIndexCallback(scrollToIndex); // If we don't have a selected item but list size or number of children have decreased,\n    // Make sure we aren't scrolled too far past the current content.\n  } else if (!hasScrollToIndex && cellCount > 0 && (size < previousSize || cellCount < previousCellsCount)) {\n    // We need to ensure that the current scroll offset is still within the collection's range.\n    // To do this, we don't need to measure everything; CellMeasurer would perform poorly.\n    // Just check to make sure we're still okay.\n    // Only adjust the scroll position if we've scrolled below the last set of rows.\n    if (scrollOffset > cellSizeAndPositionManager.getTotalSize() - size) {\n      updateScrollIndexCallback(cellCount - 1);\n    }\n  }\n}\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSize } from \"../types\";","// Properly handle server-side rendering.\nvar win;\n\nif (typeof window !== 'undefined') {\n  win = window;\n} else if (typeof self !== 'undefined') {\n  win = self;\n} else {\n  win = {};\n} // requestAnimationFrame() shim by Paul Irish\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\nvar request = win.requestAnimationFrame || win.webkitRequestAnimationFrame || win.mozRequestAnimationFrame || win.oRequestAnimationFrame || win.msRequestAnimationFrame || function (callback) {\n  return win.setTimeout(callback, 1000 / 60);\n};\n\nvar cancel = win.cancelAnimationFrame || win.webkitCancelAnimationFrame || win.mozCancelAnimationFrame || win.oCancelAnimationFrame || win.msCancelAnimationFrame || function (id) {\n  win.clearTimeout(id);\n};\n\nexport var raf = request;\nexport var caf = cancel;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport calculateSizeAndPositionDataAndUpdateScrollOffset from './utils/calculateSizeAndPositionDataAndUpdateScrollOffset';\nimport ScalingCellSizeAndPositionManager from './utils/ScalingCellSizeAndPositionManager';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport defaultOverscanIndicesGetter, { SCROLL_DIRECTION_BACKWARD, SCROLL_DIRECTION_FORWARD } from './defaultOverscanIndicesGetter';\nimport updateScrollIndexHelper from './utils/updateScrollIndexHelper';\nimport defaultCellRangeRenderer from './defaultCellRangeRenderer';\nimport scrollbarSize from 'dom-helpers/scrollbarSize';\nimport { polyfill } from 'react-lifecycles-compat';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n\nvar renderNull = function renderNull() {\n  return null;\n};\n\n/**\n * Renders tabular data with virtualization along the vertical and horizontal axes.\n * Row heights and column widths must be known ahead of time and specified as properties.\n */\nvar Grid = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Grid, _React$PureComponent);\n\n  // Invokes onSectionRendered callback only when start/stop row or column indices change\n  function Grid(props) {\n    var _this;\n\n    _classCallCheck(this, Grid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Grid).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"_onGridRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollLeftFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollTopFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_horizontalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_verticalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollbarPresenceChanged\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollingContainer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_childrenToDisplay\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollTop\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollLeft\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_disablePointerEventsTimeoutId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_styleCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceScrollEndedCallback\", function () {\n      _this._disablePointerEventsTimeoutId = null; // isScrolling is used to determine if we reset styleCache\n\n      _this.setState({\n        isScrolling: false,\n        needToResetStyleCache: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnGridRenderedHelper\", function () {\n      var onSectionRendered = _this.props.onSectionRendered;\n\n      _this._onGridRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          columnOverscanStartIndex: _this._columnStartIndex,\n          columnOverscanStopIndex: _this._columnStopIndex,\n          columnStartIndex: _this._renderedColumnStartIndex,\n          columnStopIndex: _this._renderedColumnStopIndex,\n          rowOverscanStartIndex: _this._rowStartIndex,\n          rowOverscanStopIndex: _this._rowStopIndex,\n          rowStartIndex: _this._renderedRowStartIndex,\n          rowStopIndex: _this._renderedRowStopIndex\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target === _this._scrollingContainer) {\n        _this.handleScrollEvent(event.target);\n      }\n    });\n\n    var columnSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.columnCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.columnWidth)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedColumnSize(props)\n    });\n    var rowSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.rowCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.rowHeight)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedRowSize(props)\n    });\n    _this.state = {\n      instanceProps: {\n        columnSizeAndPositionManager: columnSizeAndPositionManager,\n        rowSizeAndPositionManager: rowSizeAndPositionManager,\n        prevColumnWidth: props.columnWidth,\n        prevRowHeight: props.rowHeight,\n        prevColumnCount: props.columnCount,\n        prevRowCount: props.rowCount,\n        prevIsScrolling: props.isScrolling === true,\n        prevScrollToColumn: props.scrollToColumn,\n        prevScrollToRow: props.scrollToRow,\n        scrollbarSize: 0,\n        scrollbarSizeMeasured: false\n      },\n      isScrolling: false,\n      scrollDirectionHorizontal: SCROLL_DIRECTION_FORWARD,\n      scrollDirectionVertical: SCROLL_DIRECTION_FORWARD,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollPositionChangeReason: null,\n      needToResetStyleCache: false\n    };\n\n    if (props.scrollToRow > 0) {\n      _this._initialScrollTop = _this._getCalculatedScrollTop(props, _this.state);\n    }\n\n    if (props.scrollToColumn > 0) {\n      _this._initialScrollLeft = _this._getCalculatedScrollLeft(props, _this.state);\n    }\n\n    return _this;\n  }\n  /**\n   * Gets offsets for a given cell and alignment.\n   */\n\n\n  _createClass(Grid, [{\n    key: \"getOffsetForCell\",\n    value: function getOffsetForCell() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$alignment = _ref.alignment,\n          alignment = _ref$alignment === void 0 ? this.props.scrollToAlignment : _ref$alignment,\n          _ref$columnIndex = _ref.columnIndex,\n          columnIndex = _ref$columnIndex === void 0 ? this.props.scrollToColumn : _ref$columnIndex,\n          _ref$rowIndex = _ref.rowIndex,\n          rowIndex = _ref$rowIndex === void 0 ? this.props.scrollToRow : _ref$rowIndex;\n\n      var offsetProps = _objectSpread({}, this.props, {\n        scrollToAlignment: alignment,\n        scrollToColumn: columnIndex,\n        scrollToRow: rowIndex\n      });\n\n      return {\n        scrollLeft: this._getCalculatedScrollLeft(offsetProps),\n        scrollTop: this._getCalculatedScrollTop(offsetProps)\n      };\n    }\n    /**\n     * Gets estimated total rows' height.\n     */\n\n  }, {\n    key: \"getTotalRowsHeight\",\n    value: function getTotalRowsHeight() {\n      return this.state.instanceProps.rowSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * Gets estimated total columns' width.\n     */\n\n  }, {\n    key: \"getTotalColumnsWidth\",\n    value: function getTotalColumnsWidth() {\n      return this.state.instanceProps.columnSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * This method handles a scroll event originating from an external scroll control.\n     * It's an advanced method and should probably not be used unless you're implementing a custom scroll-bar solution.\n     */\n\n  }, {\n    key: \"handleScrollEvent\",\n    value: function handleScrollEvent(_ref2) {\n      var _ref2$scrollLeft = _ref2.scrollLeft,\n          scrollLeftParam = _ref2$scrollLeft === void 0 ? 0 : _ref2$scrollLeft,\n          _ref2$scrollTop = _ref2.scrollTop,\n          scrollTopParam = _ref2$scrollTop === void 0 ? 0 : _ref2$scrollTop;\n\n      // On iOS, we can arrive at negative offsets by swiping past the start.\n      // To prevent flicker here, we make playing in the negative offset zone cause nothing to happen.\n      if (scrollTopParam < 0) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      this._debounceScrollEnded();\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          autoWidth = _this$props.autoWidth,\n          height = _this$props.height,\n          width = _this$props.width;\n      var instanceProps = this.state.instanceProps; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollbarSize = instanceProps.scrollbarSize;\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var scrollLeft = Math.min(Math.max(0, totalColumnsWidth - width + scrollbarSize), scrollLeftParam);\n      var scrollTop = Math.min(Math.max(0, totalRowsHeight - height + scrollbarSize), scrollTopParam); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (this.state.scrollLeft !== scrollLeft || this.state.scrollTop !== scrollTop) {\n        // Track scrolling direction so we can more efficiently overscan rows to reduce empty space around the edges while scrolling.\n        // Don't change direction for an axis unless scroll offset has changed.\n        var scrollDirectionHorizontal = scrollLeft !== this.state.scrollLeft ? scrollLeft > this.state.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionHorizontal;\n        var scrollDirectionVertical = scrollTop !== this.state.scrollTop ? scrollTop > this.state.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionVertical;\n        var newState = {\n          isScrolling: true,\n          scrollDirectionHorizontal: scrollDirectionHorizontal,\n          scrollDirectionVertical: scrollDirectionVertical,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.OBSERVED\n        };\n\n        if (!autoHeight) {\n          newState.scrollTop = scrollTop;\n        }\n\n        if (!autoWidth) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        newState.needToResetStyleCache = false;\n        this.setState(newState);\n      }\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalColumnsWidth: totalColumnsWidth,\n        totalRowsHeight: totalRowsHeight\n      });\n    }\n    /**\n     * Invalidate Grid size and recompute visible cells.\n     * This is a deferred wrapper for recomputeGridSize().\n     * It sets a flag to be evaluated on cDM/cDU to avoid unnecessary renders.\n     * This method is intended for advanced use-cases like CellMeasurer.\n     */\n    // @TODO (bvaughn) Add automated test coverage for this.\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rowIndex = _ref3.rowIndex;\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /**\n     * Pre-measure all columns and rows in a Grid.\n     * Typically cells are only measured as needed and estimated sizes are used for cells that have not yet been measured.\n     * This method ensures that the next call to getTotalSize() returns an exact size (as opposed to just an estimated one).\n     */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      var _this$props2 = this.props,\n          columnCount = _this$props2.columnCount,\n          rowCount = _this$props2.rowCount;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.getSizeAndPositionOfCell(columnCount - 1);\n      instanceProps.rowSizeAndPositionManager.getSizeAndPositionOfCell(rowCount - 1);\n    }\n    /**\n     * Forced recompute of row heights and column widths.\n     * This function should be called if dynamic column or row sizes have changed but nothing else has.\n     * Since Grid only receives :columnCount and :rowCount it has no way of detecting when the underlying data changes.\n     */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref4$columnIndex = _ref4.columnIndex,\n          columnIndex = _ref4$columnIndex === void 0 ? 0 : _ref4$columnIndex,\n          _ref4$rowIndex = _ref4.rowIndex,\n          rowIndex = _ref4$rowIndex === void 0 ? 0 : _ref4$rowIndex;\n\n      var _this$props3 = this.props,\n          scrollToColumn = _this$props3.scrollToColumn,\n          scrollToRow = _this$props3.scrollToRow;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.resetCell(columnIndex);\n      instanceProps.rowSizeAndPositionManager.resetCell(rowIndex); // Cell sizes may be determined by a function property.\n      // In this case the cDU handler can't know if they changed.\n      // Store this flag to let the next cDU pass know it needs to recompute the scroll offset.\n\n      this._recomputeScrollLeftFlag = scrollToColumn >= 0 && (this.state.scrollDirectionHorizontal === SCROLL_DIRECTION_FORWARD ? columnIndex <= scrollToColumn : columnIndex >= scrollToColumn);\n      this._recomputeScrollTopFlag = scrollToRow >= 0 && (this.state.scrollDirectionVertical === SCROLL_DIRECTION_FORWARD ? rowIndex <= scrollToRow : rowIndex >= scrollToRow); // Clear cell cache in case we are scrolling;\n      // Invalid row heights likely mean invalid cached content as well.\n\n      this._styleCache = {};\n      this._cellCache = {};\n      this.forceUpdate();\n    }\n    /**\n     * Ensure column and row are visible.\n     */\n\n  }, {\n    key: \"scrollToCell\",\n    value: function scrollToCell(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n      var columnCount = this.props.columnCount;\n      var props = this.props; // Don't adjust scroll offset for single-column grids (eg List, Table).\n      // This can cause a funky scroll offset because of the vertical scrollbar width.\n\n      if (columnCount > 1 && columnIndex !== undefined) {\n        this._updateScrollLeftForScrollToColumn(_objectSpread({}, props, {\n          scrollToColumn: columnIndex\n        }));\n      }\n\n      if (rowIndex !== undefined) {\n        this._updateScrollTopForScrollToRow(_objectSpread({}, props, {\n          scrollToRow: rowIndex\n        }));\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          getScrollbarSize = _this$props4.getScrollbarSize,\n          height = _this$props4.height,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToColumn = _this$props4.scrollToColumn,\n          scrollTop = _this$props4.scrollTop,\n          scrollToRow = _this$props4.scrollToRow,\n          width = _this$props4.width;\n      var instanceProps = this.state.instanceProps; // Reset initial offsets to be ignored in browser\n\n      this._initialScrollTop = 0;\n      this._initialScrollLeft = 0; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n\n      if (!instanceProps.scrollbarSizeMeasured) {\n        this.setState(function (prevState) {\n          var stateUpdate = _objectSpread({}, prevState, {\n            needToResetStyleCache: false\n          });\n\n          stateUpdate.instanceProps.scrollbarSize = getScrollbarSize();\n          stateUpdate.instanceProps.scrollbarSizeMeasured = true;\n          return stateUpdate;\n        });\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 || typeof scrollTop === 'number' && scrollTop >= 0) {\n        var stateUpdate = Grid._getScrollToPositionStateUpdate({\n          prevState: this.state,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        if (stateUpdate) {\n          stateUpdate.needToResetStyleCache = false;\n          this.setState(stateUpdate);\n        }\n      } // refs don't work in `react-test-renderer`\n\n\n      if (this._scrollingContainer) {\n        // setting the ref's scrollLeft and scrollTop.\n        // Somehow in MultiGrid the main grid doesn't trigger a update on mount.\n        if (this._scrollingContainer.scrollLeft !== this.state.scrollLeft) {\n          this._scrollingContainer.scrollLeft = this.state.scrollLeft;\n        }\n\n        if (this._scrollingContainer.scrollTop !== this.state.scrollTop) {\n          this._scrollingContainer.scrollTop = this.state.scrollTop;\n        }\n      } // Don't update scroll offset if the size is 0; we don't render any cells in this case.\n      // Setting a state may cause us to later thing we've updated the offce when we haven't.\n\n\n      var sizeIsBiggerThanZero = height > 0 && width > 0;\n\n      if (scrollToColumn >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollLeftForScrollToColumn();\n      }\n\n      if (scrollToRow >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollTopForScrollToRow();\n      } // Update onRowsRendered callback\n\n\n      this._invokeOnGridRenderedHelper(); // Initialize onScroll callback\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalColumnsWidth: instanceProps.columnSizeAndPositionManager.getTotalSize(),\n        totalRowsHeight: instanceProps.rowSizeAndPositionManager.getTotalSize()\n      });\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) New scroll-to-cell props have been set\n     */\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      var _this$props5 = this.props,\n          autoHeight = _this$props5.autoHeight,\n          autoWidth = _this$props5.autoWidth,\n          columnCount = _this$props5.columnCount,\n          height = _this$props5.height,\n          rowCount = _this$props5.rowCount,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToColumn = _this$props5.scrollToColumn,\n          scrollToRow = _this$props5.scrollToRow,\n          width = _this$props5.width;\n      var _this$state = this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollPositionChangeReason = _this$state.scrollPositionChangeReason,\n          scrollTop = _this$state.scrollTop,\n          instanceProps = _this$state.instanceProps; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // Handle edge case where column or row count has only just increased over 0.\n      // In this case we may have to restore a previously-specified scroll offset.\n      // For more info see bvaughn/react-virtualized/issues/218\n\n\n      var columnOrRowCountJustIncreasedFromZero = columnCount > 0 && prevProps.columnCount === 0 || rowCount > 0 && prevProps.rowCount === 0; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        // @TRICKY :autoHeight and :autoWidth properties instructs Grid to leave :scrollTop and :scrollLeft management to an external HOC (eg WindowScroller).\n        // In this case we should avoid checking scrollingContainer.scrollTop and scrollingContainer.scrollLeft since it forces layout/flow.\n        if (!autoWidth && scrollLeft >= 0 && (scrollLeft !== this._scrollingContainer.scrollLeft || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (!autoHeight && scrollTop >= 0 && (scrollTop !== this._scrollingContainer.scrollTop || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Special case where the previous size was 0:\n      // In this case we don't show any windowed cells at all.\n      // So we should always recalculate offset afterwards.\n\n\n      var sizeJustIncreasedFromZero = (prevProps.width === 0 || prevProps.height === 0) && height > 0 && width > 0; // Update scroll offsets if the current :scrollToColumn or :scrollToRow values requires it\n      // @TODO Do we also need this check or can the one in componentWillUpdate() suffice?\n\n      if (this._recomputeScrollLeftFlag) {\n        this._recomputeScrollLeftFlag = false;\n\n        this._updateScrollLeftForScrollToColumn(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          previousCellsCount: prevProps.columnCount,\n          previousCellSize: prevProps.columnWidth,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToColumn,\n          previousSize: prevProps.width,\n          scrollOffset: scrollLeft,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToColumn,\n          size: width,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollLeftForScrollToColumn(_this2.props);\n          }\n        });\n      }\n\n      if (this._recomputeScrollTopFlag) {\n        this._recomputeScrollTopFlag = false;\n\n        this._updateScrollTopForScrollToRow(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          previousCellsCount: prevProps.rowCount,\n          previousCellSize: prevProps.rowHeight,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToRow,\n          previousSize: prevProps.height,\n          scrollOffset: scrollTop,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToRow,\n          size: height,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollTopForScrollToRow(_this2.props);\n          }\n        });\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnGridRenderedHelper(); // Changes to :scrollLeft or :scrollTop should also notify :onScroll listeners\n\n\n      if (scrollLeft !== prevState.scrollLeft || scrollTop !== prevState.scrollTop) {\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n\n        this._invokeOnScrollMemoizer({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          totalColumnsWidth: totalColumnsWidth,\n          totalRowsHeight: totalRowsHeight\n        });\n      }\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n    /**\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoContainerWidth = _this$props6.autoContainerWidth,\n          autoHeight = _this$props6.autoHeight,\n          autoWidth = _this$props6.autoWidth,\n          className = _this$props6.className,\n          containerProps = _this$props6.containerProps,\n          containerRole = _this$props6.containerRole,\n          containerStyle = _this$props6.containerStyle,\n          height = _this$props6.height,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          role = _this$props6.role,\n          style = _this$props6.style,\n          tabIndex = _this$props6.tabIndex,\n          width = _this$props6.width;\n      var _this$state2 = this.state,\n          instanceProps = _this$state2.instanceProps,\n          needToResetStyleCache = _this$state2.needToResetStyleCache;\n\n      var isScrolling = this._isScrolling();\n\n      var gridStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        width: autoWidth ? 'auto' : width,\n        WebkitOverflowScrolling: 'touch',\n        willChange: 'transform'\n      };\n\n      if (needToResetStyleCache) {\n        this._styleCache = {};\n      } // calculate _styleCache here\n      // if state.isScrolling (not from _isScrolling) then reset\n\n\n      if (!this.state.isScrolling) {\n        this._resetStyleCache();\n      } // calculate children to render here\n\n\n      this._calculateChildrenToRender(this.props, this.state);\n\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize(); // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n      var horizontalScrollBarSize = totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n\n      if (horizontalScrollBarSize !== this._horizontalScrollBarSize || verticalScrollBarSize !== this._verticalScrollBarSize) {\n        this._horizontalScrollBarSize = horizontalScrollBarSize;\n        this._verticalScrollBarSize = verticalScrollBarSize;\n        this._scrollbarPresenceChanged = true;\n      } // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n\n      gridStyle.overflowX = totalColumnsWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      gridStyle.overflowY = totalRowsHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      var childrenToDisplay = this._childrenToDisplay;\n      var showNoContentRenderer = childrenToDisplay.length === 0 && height > 0 && width > 0;\n      return React.createElement(\"div\", _extends({\n        ref: this._setScrollingContainerRef\n      }, containerProps, {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-readonly\": this.props['aria-readonly'],\n        className: clsx('ReactVirtualized__Grid', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({}, gridStyle, {}, style),\n        tabIndex: tabIndex\n      }), childrenToDisplay.length > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Grid__innerScrollContainer\",\n        role: containerRole,\n        style: _objectSpread({\n          width: autoContainerWidth ? 'auto' : totalColumnsWidth,\n          height: totalRowsHeight,\n          maxWidth: totalColumnsWidth,\n          maxHeight: totalRowsHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }, containerStyle)\n      }, childrenToDisplay), showNoContentRenderer && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n  }, {\n    key: \"_calculateChildrenToRender\",\n    value: function _calculateChildrenToRender() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      var cellRenderer = props.cellRenderer,\n          cellRangeRenderer = props.cellRangeRenderer,\n          columnCount = props.columnCount,\n          deferredMeasurementCache = props.deferredMeasurementCache,\n          height = props.height,\n          overscanColumnCount = props.overscanColumnCount,\n          overscanIndicesGetter = props.overscanIndicesGetter,\n          overscanRowCount = props.overscanRowCount,\n          rowCount = props.rowCount,\n          width = props.width,\n          isScrollingOptOut = props.isScrollingOptOut;\n      var scrollDirectionHorizontal = state.scrollDirectionHorizontal,\n          scrollDirectionVertical = state.scrollDirectionVertical,\n          instanceProps = state.instanceProps;\n      var scrollTop = this._initialScrollTop > 0 ? this._initialScrollTop : state.scrollTop;\n      var scrollLeft = this._initialScrollLeft > 0 ? this._initialScrollLeft : state.scrollLeft;\n\n      var isScrolling = this._isScrolling(props, state);\n\n      this._childrenToDisplay = []; // Render only enough columns and rows to cover the visible area of the grid.\n\n      if (height > 0 && width > 0) {\n        var visibleColumnIndices = instanceProps.columnSizeAndPositionManager.getVisibleCellRange({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var visibleRowIndices = instanceProps.rowSizeAndPositionManager.getVisibleCellRange({\n          containerSize: height,\n          offset: scrollTop\n        });\n        var horizontalOffsetAdjustment = instanceProps.columnSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var verticalOffsetAdjustment = instanceProps.rowSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: height,\n          offset: scrollTop\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        this._renderedColumnStartIndex = visibleColumnIndices.start;\n        this._renderedColumnStopIndex = visibleColumnIndices.stop;\n        this._renderedRowStartIndex = visibleRowIndices.start;\n        this._renderedRowStopIndex = visibleRowIndices.stop;\n        var overscanColumnIndices = overscanIndicesGetter({\n          direction: 'horizontal',\n          cellCount: columnCount,\n          overscanCellsCount: overscanColumnCount,\n          scrollDirection: scrollDirectionHorizontal,\n          startIndex: typeof visibleColumnIndices.start === 'number' ? visibleColumnIndices.start : 0,\n          stopIndex: typeof visibleColumnIndices.stop === 'number' ? visibleColumnIndices.stop : -1\n        });\n        var overscanRowIndices = overscanIndicesGetter({\n          direction: 'vertical',\n          cellCount: rowCount,\n          overscanCellsCount: overscanRowCount,\n          scrollDirection: scrollDirectionVertical,\n          startIndex: typeof visibleRowIndices.start === 'number' ? visibleRowIndices.start : 0,\n          stopIndex: typeof visibleRowIndices.stop === 'number' ? visibleRowIndices.stop : -1\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        var columnStartIndex = overscanColumnIndices.overscanStartIndex;\n        var columnStopIndex = overscanColumnIndices.overscanStopIndex;\n        var rowStartIndex = overscanRowIndices.overscanStartIndex;\n        var rowStopIndex = overscanRowIndices.overscanStopIndex; // Advanced use-cases (eg CellMeasurer) require batched measurements to determine accurate sizes.\n\n        if (deferredMeasurementCache) {\n          // If rows have a dynamic height, scan the rows we are about to render.\n          // If any have not yet been measured, then we need to render all columns initially,\n          // Because the height of the row is equal to the tallest cell within that row,\n          // (And so we can't know the height without measuring all column-cells first).\n          if (!deferredMeasurementCache.hasFixedHeight()) {\n            for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n              if (!deferredMeasurementCache.has(rowIndex, 0)) {\n                columnStartIndex = 0;\n                columnStopIndex = columnCount - 1;\n                break;\n              }\n            }\n          } // If columns have a dynamic width, scan the columns we are about to render.\n          // If any have not yet been measured, then we need to render all rows initially,\n          // Because the width of the column is equal to the widest cell within that column,\n          // (And so we can't know the width without measuring all row-cells first).\n\n\n          if (!deferredMeasurementCache.hasFixedWidth()) {\n            for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n              if (!deferredMeasurementCache.has(0, columnIndex)) {\n                rowStartIndex = 0;\n                rowStopIndex = rowCount - 1;\n                break;\n              }\n            }\n          }\n        }\n\n        this._childrenToDisplay = cellRangeRenderer({\n          cellCache: this._cellCache,\n          cellRenderer: cellRenderer,\n          columnSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          columnStartIndex: columnStartIndex,\n          columnStopIndex: columnStopIndex,\n          deferredMeasurementCache: deferredMeasurementCache,\n          horizontalOffsetAdjustment: horizontalOffsetAdjustment,\n          isScrolling: isScrolling,\n          isScrollingOptOut: isScrollingOptOut,\n          parent: this,\n          rowSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          rowStartIndex: rowStartIndex,\n          rowStopIndex: rowStopIndex,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          styleCache: this._styleCache,\n          verticalOffsetAdjustment: verticalOffsetAdjustment,\n          visibleColumnIndices: visibleColumnIndices,\n          visibleRowIndices: visibleRowIndices\n        }); // update the indices\n\n        this._columnStartIndex = columnStartIndex;\n        this._columnStopIndex = columnStopIndex;\n        this._rowStartIndex = rowStartIndex;\n        this._rowStopIndex = rowStopIndex;\n      }\n    }\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Grid.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_debounceScrollEnded\",\n    value: function _debounceScrollEnded() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = requestAnimationTimeout(this._debounceScrollEndedCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n\n    /**\n     * Check for batched CellMeasurer size invalidations.\n     * This will occur the first time one or more previously unmeasured cells are rendered.\n     */\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number' && typeof this._deferredInvalidateRowIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n      }\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref6) {\n      var _this3 = this;\n\n      var scrollLeft = _ref6.scrollLeft,\n          scrollTop = _ref6.scrollTop,\n          totalColumnsWidth = _ref6.totalColumnsWidth,\n          totalRowsHeight = _ref6.totalRowsHeight;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref7) {\n          var scrollLeft = _ref7.scrollLeft,\n              scrollTop = _ref7.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalRowsHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalColumnsWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_isScrolling\",\n    value: function _isScrolling() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      // If isScrolling is defined in props, use it to override the value in state\n      // This is a performance optimization for WindowScroller + Grid\n      return Object.hasOwnProperty.call(props, 'isScrolling') ? Boolean(props.isScrolling) : Boolean(state.isScrolling);\n    }\n  }, {\n    key: \"_maybeCallOnScrollbarPresenceChange\",\n    value: function _maybeCallOnScrollbarPresenceChange() {\n      if (this._scrollbarPresenceChanged) {\n        var onScrollbarPresenceChange = this.props.onScrollbarPresenceChange;\n        this._scrollbarPresenceChanged = false;\n        onScrollbarPresenceChange({\n          horizontal: this._horizontalScrollBarSize > 0,\n          size: this.state.instanceProps.scrollbarSize,\n          vertical: this._verticalScrollBarSize > 0\n        });\n      }\n    }\n  }, {\n    key: \"scrollToPosition\",\n\n    /**\n     * Scroll to the specified offset(s).\n     * Useful for animating position changes.\n     */\n    value: function scrollToPosition(_ref8) {\n      var scrollLeft = _ref8.scrollLeft,\n          scrollTop = _ref8.scrollTop;\n\n      var stateUpdate = Grid._getScrollToPositionStateUpdate({\n        prevState: this.state,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollLeft(props, state);\n    }\n  }, {\n    key: \"_updateScrollLeftForScrollToColumn\",\n    value: function _updateScrollLeftForScrollToColumn() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollLeftForScrollToColumnStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollTop(props, state);\n    }\n  }, {\n    key: \"_resetStyleCache\",\n    value: function _resetStyleCache() {\n      var styleCache = this._styleCache;\n      var cellCache = this._cellCache;\n      var isScrollingOptOut = this.props.isScrollingOptOut; // Reset cell and style caches once scrolling stops.\n      // This makes Grid simpler to use (since cells commonly change).\n      // And it keeps the caches from growing too large.\n      // Performance is most sensitive when a user is scrolling.\n      // Don't clear visible cells from cellCache if isScrollingOptOut is specified.\n      // This keeps the cellCache to a resonable size.\n\n      this._cellCache = {};\n      this._styleCache = {}; // Copy over the visible cell styles so avoid unnecessary re-render.\n\n      for (var rowIndex = this._rowStartIndex; rowIndex <= this._rowStopIndex; rowIndex++) {\n        for (var columnIndex = this._columnStartIndex; columnIndex <= this._columnStopIndex; columnIndex++) {\n          var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n          this._styleCache[key] = styleCache[key];\n\n          if (isScrollingOptOut) {\n            this._cellCache[key] = cellCache[key];\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_updateScrollTopForScrollToRow\",\n    value: function _updateScrollTopForScrollToRow() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollTopForScrollToRowStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var newState = {};\n\n      if (nextProps.columnCount === 0 && prevState.scrollLeft !== 0 || nextProps.rowCount === 0 && prevState.scrollTop !== 0) {\n        newState.scrollLeft = 0;\n        newState.scrollTop = 0; // only use scroll{Left,Top} from props if scrollTo{Column,Row} isn't specified\n        // scrollTo{Column,Row} should override scroll{Left,Top}\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft && nextProps.scrollToColumn < 0 || nextProps.scrollTop !== prevState.scrollTop && nextProps.scrollToRow < 0) {\n        Object.assign(newState, Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: nextProps.scrollLeft,\n          scrollTop: nextProps.scrollTop\n        }));\n      }\n\n      var instanceProps = prevState.instanceProps; // Initially we should not clearStyleCache\n\n      newState.needToResetStyleCache = false;\n\n      if (nextProps.columnWidth !== instanceProps.prevColumnWidth || nextProps.rowHeight !== instanceProps.prevRowHeight) {\n        // Reset cache. set it to {} in render\n        newState.needToResetStyleCache = true;\n      }\n\n      instanceProps.columnSizeAndPositionManager.configure({\n        cellCount: nextProps.columnCount,\n        estimatedCellSize: Grid._getEstimatedColumnSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.columnWidth)\n      });\n      instanceProps.rowSizeAndPositionManager.configure({\n        cellCount: nextProps.rowCount,\n        estimatedCellSize: Grid._getEstimatedRowSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.rowHeight)\n      });\n\n      if (instanceProps.prevColumnCount === 0 || instanceProps.prevRowCount === 0) {\n        instanceProps.prevColumnCount = 0;\n        instanceProps.prevRowCount = 0;\n      } // If scrolling is controlled outside this component, clear cache when scrolling stops\n\n\n      if (nextProps.autoHeight && nextProps.isScrolling === false && instanceProps.prevIsScrolling === true) {\n        Object.assign(newState, {\n          isScrolling: false\n        });\n      }\n\n      var maybeStateA;\n      var maybeStateB;\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevColumnCount,\n        cellSize: typeof instanceProps.prevColumnWidth === 'number' ? instanceProps.prevColumnWidth : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.columnSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.columnCount,\n        nextCellSize: typeof nextProps.columnWidth === 'number' ? nextProps.columnWidth : null,\n        nextScrollToIndex: nextProps.scrollToColumn,\n        scrollToIndex: instanceProps.prevScrollToColumn,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateA = Grid._getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState);\n        }\n      });\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevRowCount,\n        cellSize: typeof instanceProps.prevRowHeight === 'number' ? instanceProps.prevRowHeight : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.rowSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.rowCount,\n        nextCellSize: typeof nextProps.rowHeight === 'number' ? nextProps.rowHeight : null,\n        nextScrollToIndex: nextProps.scrollToRow,\n        scrollToIndex: instanceProps.prevScrollToRow,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateB = Grid._getScrollTopForScrollToRowStateUpdate(nextProps, prevState);\n        }\n      });\n      instanceProps.prevColumnCount = nextProps.columnCount;\n      instanceProps.prevColumnWidth = nextProps.columnWidth;\n      instanceProps.prevIsScrolling = nextProps.isScrolling === true;\n      instanceProps.prevRowCount = nextProps.rowCount;\n      instanceProps.prevRowHeight = nextProps.rowHeight;\n      instanceProps.prevScrollToColumn = nextProps.scrollToColumn;\n      instanceProps.prevScrollToRow = nextProps.scrollToRow; // getting scrollBarSize (moved from componentWillMount)\n\n      instanceProps.scrollbarSize = nextProps.getScrollbarSize();\n\n      if (instanceProps.scrollbarSize === undefined) {\n        instanceProps.scrollbarSizeMeasured = false;\n        instanceProps.scrollbarSize = 0;\n      } else {\n        instanceProps.scrollbarSizeMeasured = true;\n      }\n\n      newState.instanceProps = instanceProps;\n      return _objectSpread({}, newState, {}, maybeStateA, {}, maybeStateB);\n    }\n  }, {\n    key: \"_getEstimatedColumnSize\",\n    value: function _getEstimatedColumnSize(props) {\n      return typeof props.columnWidth === 'number' ? props.columnWidth : props.estimatedColumnSize;\n    }\n  }, {\n    key: \"_getEstimatedRowSize\",\n    value: function _getEstimatedRowSize(props) {\n      return typeof props.rowHeight === 'number' ? props.rowHeight : props.estimatedRowSize;\n    }\n  }, {\n    key: \"_getScrollToPositionStateUpdate\",\n\n    /**\n     * Get the updated state after scrolling to\n     * scrollLeft and scrollTop\n     */\n    value: function _getScrollToPositionStateUpdate(_ref9) {\n      var prevState = _ref9.prevState,\n          scrollLeft = _ref9.scrollLeft,\n          scrollTop = _ref9.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0) {\n        newState.scrollDirectionHorizontal = scrollLeft > prevState.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (typeof scrollTop === 'number' && scrollTop >= 0) {\n        newState.scrollDirectionVertical = scrollTop > prevState.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollTop = scrollTop;\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft || typeof scrollTop === 'number' && scrollTop >= 0 && scrollTop !== prevState.scrollTop) {\n        return newState;\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_wrapSizeGetter\",\n    value: function _wrapSizeGetter(value) {\n      return typeof value === 'function' ? value : function () {\n        return value;\n      };\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft(nextProps, prevState) {\n      var columnCount = nextProps.columnCount,\n          height = nextProps.height,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToColumn = nextProps.scrollToColumn,\n          width = nextProps.width;\n      var scrollLeft = prevState.scrollLeft,\n          instanceProps = prevState.instanceProps;\n\n      if (columnCount > 0) {\n        var finalColumn = columnCount - 1;\n        var targetIndex = scrollToColumn < 0 ? finalColumn : Math.min(finalColumn, scrollToColumn);\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n        return instanceProps.columnSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: width - scrollBarSize,\n          currentOffset: scrollLeft,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollLeftForScrollToColumnStateUpdate\",\n    value: function _getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState) {\n      var scrollLeft = prevState.scrollLeft;\n\n      var calculatedScrollLeft = Grid._getCalculatedScrollLeft(nextProps, prevState);\n\n      if (typeof calculatedScrollLeft === 'number' && calculatedScrollLeft >= 0 && scrollLeft !== calculatedScrollLeft) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: calculatedScrollLeft,\n          scrollTop: -1\n        });\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop(nextProps, prevState) {\n      var height = nextProps.height,\n          rowCount = nextProps.rowCount,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToRow = nextProps.scrollToRow,\n          width = nextProps.width;\n      var scrollTop = prevState.scrollTop,\n          instanceProps = prevState.instanceProps;\n\n      if (rowCount > 0) {\n        var finalRow = rowCount - 1;\n        var targetIndex = scrollToRow < 0 ? finalRow : Math.min(finalRow, scrollToRow);\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n        return instanceProps.rowSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: height - scrollBarSize,\n          currentOffset: scrollTop,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollTopForScrollToRowStateUpdate\",\n    value: function _getScrollTopForScrollToRowStateUpdate(nextProps, prevState) {\n      var scrollTop = prevState.scrollTop;\n\n      var calculatedScrollTop = Grid._getCalculatedScrollTop(nextProps, prevState);\n\n      if (typeof calculatedScrollTop === 'number' && calculatedScrollTop >= 0 && scrollTop !== calculatedScrollTop) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: -1,\n          scrollTop: calculatedScrollTop\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return Grid;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string.isRequired,\n  \"aria-readonly\": PropTypes.bool,\n\n  /**\n   * Set the width of the inner scrollable container to 'auto'.\n   * This is useful for single-column Grids to ensure that the column doesn't extend below a vertical scrollbar.\n   */\n  \"autoContainerWidth\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed width from the scrollingContainer so that the total width of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoWidth\": PropTypes.bool.isRequired,\n\n  /** Responsible for rendering a cell given an row and column index.  */\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof bpfrpt_proptype_CellRenderer === \"function\" ? bpfrpt_proptype_CellRenderer.isRequired ? bpfrpt_proptype_CellRenderer.isRequired : bpfrpt_proptype_CellRenderer : PropTypes.shape(bpfrpt_proptype_CellRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a group of cells given their index ranges.  */\n  \"cellRangeRenderer\": function cellRangeRenderer() {\n    return (typeof bpfrpt_proptype_CellRangeRenderer === \"function\" ? bpfrpt_proptype_CellRangeRenderer.isRequired ? bpfrpt_proptype_CellRangeRenderer.isRequired : bpfrpt_proptype_CellRangeRenderer : PropTypes.shape(bpfrpt_proptype_CellRangeRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Optional custom CSS class name to attach to root Grid element.  */\n  \"className\": PropTypes.string,\n\n  /** Number of columns in grid.  */\n  \"columnCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed column width (number) or a function that returns the width of a column given its index.  */\n  \"columnWidth\": function columnWidth() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Unfiltered props for the Grid container. */\n  \"containerProps\": PropTypes.object,\n\n  /** ARIA role for the cell-container.  */\n  \"containerRole\": PropTypes.string.isRequired,\n\n  /** Optional inline style applied to inner cell-container */\n  \"containerStyle\": PropTypes.object.isRequired,\n\n  /**\n   * If CellMeasurer is used to measure this Grid's children, this should be a pointer to its CellMeasurerCache.\n   * A shared CellMeasurerCache reference enables Grid and CellMeasurer to share measurement data.\n   */\n  \"deferredMeasurementCache\": PropTypes.object,\n\n  /**\n   * Used to estimate the total width of a Grid before all of its columns have actually been measured.\n   * The estimated total width is adjusted as columns are rendered.\n   */\n  \"estimatedColumnSize\": PropTypes.number.isRequired,\n\n  /**\n   * Used to estimate the total height of a Grid before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Exposed for testing purposes only.  */\n  \"getScrollbarSize\": PropTypes.func.isRequired,\n\n  /** Height of Grid; this property determines the number of visible (vs virtualized) rows.  */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional custom id to attach to root Grid element.  */\n  \"id\": PropTypes.string,\n\n  /**\n   * Override internal is-scrolling state tracking.\n   * This property is primarily intended for use with the WindowScroller component.\n   */\n  \"isScrolling\": PropTypes.bool,\n\n  /**\n   * Opt-out of isScrolling param passed to cellRangeRenderer.\n   * To avoid the extra render when scroll stops.\n   */\n  \"isScrollingOptOut\": PropTypes.bool.isRequired,\n\n  /** Optional renderer to be used in place of rows when either :rowCount or :columnCount is 0.  */\n  \"noContentRenderer\": function noContentRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /**\n   * Called whenever a horizontal or vertical scrollbar is added or removed.\n   * This prop is not intended for end-user use;\n   * It is used by MultiGrid to support fixed-row/fixed-column scroll syncing.\n   */\n  \"onScrollbarPresenceChange\": PropTypes.func.isRequired,\n\n  /** Callback invoked with information about the section of the Grid that was just rendered.  */\n  \"onSectionRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Number of columns to render before/after the visible section of the grid.\n   * These columns can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanColumnCount\": PropTypes.number.isRequired,\n\n  /**\n   * Calculates the number of cells to overscan before and after a specified range.\n   * This function ensures that overscanning doesn't exceed the available cells.\n   */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible section of the grid.\n   * These rows can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** ARIA role for the grid element.  */\n  \"role\": PropTypes.string.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * Should implement the following interface: ({ index: number }): number\n   */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in grid.  */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** Wait this amount of time after the last scroll event before resetting Grid `pointer-events`. */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Horizontal offset. */\n  \"scrollLeft\": PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Column index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToColumn\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToRow\": PropTypes.number.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of Grid; this property determines the number of visible (vs virtualized) columns.  */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(Grid, \"defaultProps\", {\n  'aria-label': 'grid',\n  'aria-readonly': true,\n  autoContainerWidth: false,\n  autoHeight: false,\n  autoWidth: false,\n  cellRangeRenderer: defaultCellRangeRenderer,\n  containerRole: 'rowgroup',\n  containerStyle: {},\n  estimatedColumnSize: 100,\n  estimatedRowSize: 30,\n  getScrollbarSize: scrollbarSize,\n  noContentRenderer: renderNull,\n  onScroll: function onScroll() {},\n  onScrollbarPresenceChange: function onScrollbarPresenceChange() {},\n  onSectionRendered: function onSectionRendered() {},\n  overscanColumnCount: 0,\n  overscanIndicesGetter: defaultOverscanIndicesGetter,\n  overscanRowCount: 10,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  scrollToAlignment: 'auto',\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  tabIndex: 0,\n  isScrollingOptOut: false\n});\n\npolyfill(Grid);\nexport default Grid;\nimport { bpfrpt_proptype_CellRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellRangeRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellPosition } from \"./types\";\nimport { bpfrpt_proptype_CellSize } from \"./types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"./types\";\nimport { bpfrpt_proptype_NoContentRenderer } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport { bpfrpt_proptype_ScrollbarPresenceChange } from \"./types\";\nimport { bpfrpt_proptype_RenderedSection } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"./types\";\nimport { bpfrpt_proptype_Alignment } from \"./types\";\nimport { bpfrpt_proptype_CellCache } from \"./types\";\nimport { bpfrpt_proptype_StyleCache } from \"./types\";\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";","import { caf, raf } from './animationFrame';\nvar bpfrpt_proptype_AnimationTimeoutId = process.env.NODE_ENV === 'production' ? null : {\n  \"id\": PropTypes.number.isRequired\n};\nexport var cancelAnimationTimeout = function cancelAnimationTimeout(frame) {\n  return caf(frame.id);\n};\n/**\n * Recursively calls requestAnimationFrame until a specified delay has been met or exceeded.\n * When the delay time has been reached the function you're timing out will be called.\n *\n * Credit: Joe Lambert (https://gist.github.com/joelambert/1002116#file-requesttimeout-js)\n */\n\nexport var requestAnimationTimeout = function requestAnimationTimeout(callback, delay) {\n  var start; // wait for end of processing current event handler, because event handler may be long\n\n  Promise.resolve().then(function () {\n    start = Date.now();\n  });\n\n  var timeout = function timeout() {\n    if (Date.now() - start >= delay) {\n      callback.call();\n    } else {\n      frame.id = raf(timeout);\n    }\n  };\n\n  var frame = {\n    id: raf(timeout)\n  };\n  return frame;\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_AnimationTimeoutId };","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","/**\n * Default implementation of cellRangeRenderer used by Grid.\n * This renderer supports cell-caching while the user is scrolling.\n */\nexport default function defaultCellRangeRenderer(_ref) {\n  var cellCache = _ref.cellCache,\n      cellRenderer = _ref.cellRenderer,\n      columnSizeAndPositionManager = _ref.columnSizeAndPositionManager,\n      columnStartIndex = _ref.columnStartIndex,\n      columnStopIndex = _ref.columnStopIndex,\n      deferredMeasurementCache = _ref.deferredMeasurementCache,\n      horizontalOffsetAdjustment = _ref.horizontalOffsetAdjustment,\n      isScrolling = _ref.isScrolling,\n      isScrollingOptOut = _ref.isScrollingOptOut,\n      parent = _ref.parent,\n      rowSizeAndPositionManager = _ref.rowSizeAndPositionManager,\n      rowStartIndex = _ref.rowStartIndex,\n      rowStopIndex = _ref.rowStopIndex,\n      styleCache = _ref.styleCache,\n      verticalOffsetAdjustment = _ref.verticalOffsetAdjustment,\n      visibleColumnIndices = _ref.visibleColumnIndices,\n      visibleRowIndices = _ref.visibleRowIndices;\n  var renderedCells = []; // Browsers have native size limits for elements (eg Chrome 33M pixels, IE 1.5M pixes).\n  // User cannot scroll beyond these size limitations.\n  // In order to work around this, ScalingCellSizeAndPositionManager compresses offsets.\n  // We should never cache styles for compressed offsets though as this can lead to bugs.\n  // See issue #576 for more.\n\n  var areOffsetsAdjusted = columnSizeAndPositionManager.areOffsetsAdjusted() || rowSizeAndPositionManager.areOffsetsAdjusted();\n  var canCacheStyle = !isScrolling && !areOffsetsAdjusted;\n\n  for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n    var rowDatum = rowSizeAndPositionManager.getSizeAndPositionOfCell(rowIndex);\n\n    for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n      var columnDatum = columnSizeAndPositionManager.getSizeAndPositionOfCell(columnIndex);\n      var isVisible = columnIndex >= visibleColumnIndices.start && columnIndex <= visibleColumnIndices.stop && rowIndex >= visibleRowIndices.start && rowIndex <= visibleRowIndices.stop;\n      var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n      var style = void 0; // Cache style objects so shallow-compare doesn't re-render unnecessarily.\n\n      if (canCacheStyle && styleCache[key]) {\n        style = styleCache[key];\n      } else {\n        // In deferred mode, cells will be initially rendered before we know their size.\n        // Don't interfere with CellMeasurer's measurements by setting an invalid size.\n        if (deferredMeasurementCache && !deferredMeasurementCache.has(rowIndex, columnIndex)) {\n          // Position not-yet-measured cells at top/left 0,0,\n          // And give them width/height of 'auto' so they can grow larger than the parent Grid if necessary.\n          // Positioning them further to the right/bottom influences their measured size.\n          style = {\n            height: 'auto',\n            left: 0,\n            position: 'absolute',\n            top: 0,\n            width: 'auto'\n          };\n        } else {\n          style = {\n            height: rowDatum.size,\n            left: columnDatum.offset + horizontalOffsetAdjustment,\n            position: 'absolute',\n            top: rowDatum.offset + verticalOffsetAdjustment,\n            width: columnDatum.size\n          };\n          styleCache[key] = style;\n        }\n      }\n\n      var cellRendererParams = {\n        columnIndex: columnIndex,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent,\n        rowIndex: rowIndex,\n        style: style\n      };\n      var renderedCell = void 0; // Avoid re-creating cells while scrolling.\n      // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n      // If a scroll is in progress- cache and reuse cells.\n      // This cache will be thrown away once scrolling completes.\n      // However if we are scaling scroll positions and sizes, we should also avoid caching.\n      // This is because the offset changes slightly as scroll position changes and caching leads to stale values.\n      // For more info refer to issue #395\n      //\n      // If isScrollingOptOut is specified, we always cache cells.\n      // For more info refer to issue #1028\n\n      if ((isScrollingOptOut || isScrolling) && !horizontalOffsetAdjustment && !verticalOffsetAdjustment) {\n        if (!cellCache[key]) {\n          cellCache[key] = cellRenderer(cellRendererParams);\n        }\n\n        renderedCell = cellCache[key]; // If the user is no longer scrolling, don't cache cells.\n        // This makes dynamic cell content difficult for users and would also lead to a heavier memory footprint.\n      } else {\n        renderedCell = cellRenderer(cellRendererParams);\n      }\n\n      if (renderedCell == null || renderedCell === false) {\n        continue;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        warnAboutMissingStyle(parent, renderedCell);\n      }\n\n      renderedCells.push(renderedCell);\n    }\n  }\n\n  return renderedCells;\n}\n\nfunction warnAboutMissingStyle(parent, renderedCell) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (renderedCell) {\n      // If the direct child is a CellMeasurer, then we should check its child\n      // See issue #611\n      if (renderedCell.type && renderedCell.type.__internalCellMeasurerFlag) {\n        renderedCell = renderedCell.props.children;\n      }\n\n      if (renderedCell && renderedCell.props && renderedCell.props.style === undefined && parent.__warnedAboutMissingStyle !== true) {\n        parent.__warnedAboutMissingStyle = true;\n        console.warn('Rendered cell should include style property for positioning.');\n      }\n    }\n  }\n}\n\nimport { bpfrpt_proptype_CellRangeRendererParams } from \"./types\";","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n  // Make sure we render at least 1 cell extra before and after (except near boundaries)\n  // This is necessary in order to support keyboard navigation (TAB/SHIFT+TAB) in some cases\n  // For more info see issues #625\n  overscanCellsCount = Math.max(1, overscanCellsCount);\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - 1),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + 1)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","var bpfrpt_proptype_ScrollIndices = process.env.NODE_ENV === 'production' ? null : {\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_ScrollIndices };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\n/**\n * This HOC decorates a virtualized component and responds to arrow-key events by scrolling one row or column at a time.\n */\n\nvar ArrowKeyStepper = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ArrowKeyStepper, _React$PureComponent);\n\n  function ArrowKeyStepper() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ArrowKeyStepper);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ArrowKeyStepper)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollToColumn: 0,\n      scrollToRow: 0,\n      instanceProps: {\n        prevScrollToColumn: 0,\n        prevScrollToRow: 0\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onKeyDown\", function (event) {\n      var _this$props = _this.props,\n          columnCount = _this$props.columnCount,\n          disabled = _this$props.disabled,\n          mode = _this$props.mode,\n          rowCount = _this$props.rowCount;\n\n      if (disabled) {\n        return;\n      }\n\n      var _this$_getScrollState = _this._getScrollState(),\n          scrollToColumnPrevious = _this$_getScrollState.scrollToColumn,\n          scrollToRowPrevious = _this$_getScrollState.scrollToRow;\n\n      var _this$_getScrollState2 = _this._getScrollState(),\n          scrollToColumn = _this$_getScrollState2.scrollToColumn,\n          scrollToRow = _this$_getScrollState2.scrollToRow; // The above cases all prevent default event event behavior.\n      // This is to keep the grid from scrolling after the snap-to update.\n\n\n      switch (event.key) {\n        case 'ArrowDown':\n          scrollToRow = mode === 'cells' ? Math.min(scrollToRow + 1, rowCount - 1) : Math.min(_this._rowStopIndex + 1, rowCount - 1);\n          break;\n\n        case 'ArrowLeft':\n          scrollToColumn = mode === 'cells' ? Math.max(scrollToColumn - 1, 0) : Math.max(_this._columnStartIndex - 1, 0);\n          break;\n\n        case 'ArrowRight':\n          scrollToColumn = mode === 'cells' ? Math.min(scrollToColumn + 1, columnCount - 1) : Math.min(_this._columnStopIndex + 1, columnCount - 1);\n          break;\n\n        case 'ArrowUp':\n          scrollToRow = mode === 'cells' ? Math.max(scrollToRow - 1, 0) : Math.max(_this._rowStartIndex - 1, 0);\n          break;\n      }\n\n      if (scrollToColumn !== scrollToColumnPrevious || scrollToRow !== scrollToRowPrevious) {\n        event.preventDefault();\n\n        _this._updateScrollState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref) {\n      var columnStartIndex = _ref.columnStartIndex,\n          columnStopIndex = _ref.columnStopIndex,\n          rowStartIndex = _ref.rowStartIndex,\n          rowStopIndex = _ref.rowStopIndex;\n      _this._columnStartIndex = columnStartIndex;\n      _this._columnStopIndex = columnStopIndex;\n      _this._rowStartIndex = rowStartIndex;\n      _this._rowStopIndex = rowStopIndex;\n    });\n\n    return _this;\n  }\n\n  _createClass(ArrowKeyStepper, [{\n    key: \"setScrollIndexes\",\n    value: function setScrollIndexes(_ref2) {\n      var scrollToColumn = _ref2.scrollToColumn,\n          scrollToRow = _ref2.scrollToRow;\n      this.setState({\n        scrollToRow: scrollToRow,\n        scrollToColumn: scrollToColumn\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          className = _this$props2.className,\n          children = _this$props2.children;\n\n      var _this$_getScrollState3 = this._getScrollState(),\n          scrollToColumn = _this$_getScrollState3.scrollToColumn,\n          scrollToRow = _this$_getScrollState3.scrollToRow;\n\n      return React.createElement(\"div\", {\n        className: className,\n        onKeyDown: this._onKeyDown\n      }, children({\n        onSectionRendered: this._onSectionRendered,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow\n      }));\n    }\n  }, {\n    key: \"_getScrollState\",\n    value: function _getScrollState() {\n      return this.props.isControlled ? this.props : this.state;\n    }\n  }, {\n    key: \"_updateScrollState\",\n    value: function _updateScrollState(_ref3) {\n      var scrollToColumn = _ref3.scrollToColumn,\n          scrollToRow = _ref3.scrollToRow;\n      var _this$props3 = this.props,\n          isControlled = _this$props3.isControlled,\n          onScrollToChange = _this$props3.onScrollToChange;\n\n      if (typeof onScrollToChange === 'function') {\n        onScrollToChange({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n\n      if (!isControlled) {\n        this.setState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.isControlled) {\n        return {};\n      }\n\n      if (nextProps.scrollToColumn !== prevState.instanceProps.prevScrollToColumn || nextProps.scrollToRow !== prevState.instanceProps.prevScrollToRow) {\n        return _objectSpread({}, prevState, {\n          scrollToColumn: nextProps.scrollToColumn,\n          scrollToRow: nextProps.scrollToRow,\n          instanceProps: {\n            prevScrollToColumn: nextProps.scrollToColumn,\n            prevScrollToRow: nextProps.scrollToRow\n          }\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return ArrowKeyStepper;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"children\": PropTypes.func.isRequired,\n  \"className\": PropTypes.string,\n  \"columnCount\": PropTypes.number.isRequired,\n  \"disabled\": PropTypes.bool.isRequired,\n  \"isControlled\": PropTypes.bool.isRequired,\n  \"mode\": PropTypes.oneOf([\"cells\", \"edges\"]).isRequired,\n  \"onScrollToChange\": PropTypes.func,\n  \"rowCount\": PropTypes.number.isRequired,\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(ArrowKeyStepper, \"defaultProps\", {\n  disabled: false,\n  isControlled: false,\n  mode: 'edges',\n  scrollToColumn: 0,\n  scrollToRow: 0\n});\n\npolyfill(ArrowKeyStepper);\nexport default ArrowKeyStepper;\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_ScrollIndices } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport createDetectElementResize from '../vendor/detectElementResize';\nvar AutoSizer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AutoSizer, _React$Component);\n\n  function AutoSizer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AutoSizer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AutoSizer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      height: _this.props.defaultHeight || 0,\n      width: _this.props.defaultWidth || 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_parentNode\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_autoSizer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      var _this$props = _this.props,\n          disableHeight = _this$props.disableHeight,\n          disableWidth = _this$props.disableWidth,\n          onResize = _this$props.onResize;\n\n      if (_this._parentNode) {\n        // Guard against AutoSizer component being removed from the DOM immediately after being added.\n        // This can result in invalid style values which can result in NaN values if we don't handle them.\n        // See issue #150 for more context.\n        var height = _this._parentNode.offsetHeight || 0;\n        var width = _this._parentNode.offsetWidth || 0;\n        var win = _this._window || window;\n        var style = win.getComputedStyle(_this._parentNode) || {};\n        var paddingLeft = parseInt(style.paddingLeft, 10) || 0;\n        var paddingRight = parseInt(style.paddingRight, 10) || 0;\n        var paddingTop = parseInt(style.paddingTop, 10) || 0;\n        var paddingBottom = parseInt(style.paddingBottom, 10) || 0;\n        var newHeight = height - paddingTop - paddingBottom;\n        var newWidth = width - paddingLeft - paddingRight;\n\n        if (!disableHeight && _this.state.height !== newHeight || !disableWidth && _this.state.width !== newWidth) {\n          _this.setState({\n            height: height - paddingTop - paddingBottom,\n            width: width - paddingLeft - paddingRight\n          });\n\n          onResize({\n            height: height,\n            width: width\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (autoSizer) {\n      _this._autoSizer = autoSizer;\n    });\n\n    return _this;\n  }\n\n  _createClass(AutoSizer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var nonce = this.props.nonce;\n\n      if (this._autoSizer && this._autoSizer.parentNode && this._autoSizer.parentNode.ownerDocument && this._autoSizer.parentNode.ownerDocument.defaultView && this._autoSizer.parentNode instanceof this._autoSizer.parentNode.ownerDocument.defaultView.HTMLElement) {\n        // Delay access of parentNode until mount.\n        // This handles edge-cases where the component has already been unmounted before its ref has been set,\n        // As well as libraries like react-lite which have a slightly different lifecycle.\n        this._parentNode = this._autoSizer.parentNode;\n        this._window = this._autoSizer.parentNode.ownerDocument.defaultView; // Defer requiring resize handler in order to support server-side rendering.\n        // See issue #41\n\n        this._detectElementResize = createDetectElementResize(nonce, this._window);\n\n        this._detectElementResize.addResizeListener(this._parentNode, this._onResize);\n\n        this._onResize();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._detectElementResize && this._parentNode) {\n        this._detectElementResize.removeResizeListener(this._parentNode, this._onResize);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          className = _this$props2.className,\n          disableHeight = _this$props2.disableHeight,\n          disableWidth = _this$props2.disableWidth,\n          style = _this$props2.style;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width; // Outer div should not force width/height since that may prevent containers from shrinking.\n      // Inner component should overflow and use calculated width/height.\n      // See issue #68 for more information.\n\n      var outerStyle = {\n        overflow: 'visible'\n      };\n      var childParams = {};\n\n      if (!disableHeight) {\n        outerStyle.height = 0;\n        childParams.height = height;\n      }\n\n      if (!disableWidth) {\n        outerStyle.width = 0;\n        childParams.width = width;\n      }\n      /**\n       * TODO: Avoid rendering children before the initial measurements have been collected.\n       * At best this would just be wasting cycles.\n       * Add this check into version 10 though as it could break too many ref callbacks in version 9.\n       * Note that if default width/height props were provided this would still work with SSR.\n      if (\n        height !== 0 &&\n        width !== 0\n      ) {\n        child = children({ height, width })\n      }\n      */\n\n\n      return React.createElement(\"div\", {\n        className: className,\n        ref: this._setRef,\n        style: _objectSpread({}, outerStyle, {}, style)\n      }, children(childParams));\n    }\n  }]);\n\n  return AutoSizer;\n}(React.Component), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /** Function responsible for rendering children.*/\n  \"children\": PropTypes.func.isRequired,\n\n  /** Optional custom CSS class name to attach to root AutoSizer element.  */\n  \"className\": PropTypes.string,\n\n  /** Default height to use for initial render; useful for SSR */\n  \"defaultHeight\": PropTypes.number,\n\n  /** Default width to use for initial render; useful for SSR */\n  \"defaultWidth\": PropTypes.number,\n\n  /** Disable dynamic :height property */\n  \"disableHeight\": PropTypes.bool.isRequired,\n\n  /** Disable dynamic :width property */\n  \"disableWidth\": PropTypes.bool.isRequired,\n\n  /** Nonce of the inlined stylesheet for Content Security Policy */\n  \"nonce\": PropTypes.string,\n\n  /** Callback to be invoked on-resize */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object\n}), _temp);\n\n_defineProperty(AutoSizer, \"defaultProps\", {\n  onResize: function onResize() {},\n  disableHeight: false,\n  disableWidth: false,\n  style: {}\n});\n\nexport { AutoSizer as default };\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\n\n/**\n * Wraps a cell and measures its rendered content.\n * Measurements are stored in a per-cell cache.\n * Cached-content is not be re-measured.\n */\nvar CellMeasurer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CellMeasurer, _React$PureComponent);\n\n  function CellMeasurer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CellMeasurer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CellMeasurer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_measure\", function () {\n      var _this$props = _this.props,\n          cache = _this$props.cache,\n          _this$props$columnInd = _this$props.columnIndex,\n          columnIndex = _this$props$columnInd === void 0 ? 0 : _this$props$columnInd,\n          parent = _this$props.parent,\n          _this$props$rowIndex = _this$props.rowIndex,\n          rowIndex = _this$props$rowIndex === void 0 ? _this.props.index || 0 : _this$props$rowIndex;\n\n      var _this$_getCellMeasure = _this._getCellMeasurements(),\n          height = _this$_getCellMeasure.height,\n          width = _this$_getCellMeasure.width;\n\n      if (height !== cache.getHeight(rowIndex, columnIndex) || width !== cache.getWidth(rowIndex, columnIndex)) {\n        cache.set(rowIndex, columnIndex, width, height);\n\n        if (parent && typeof parent.recomputeGridSize === 'function') {\n          parent.recomputeGridSize({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('CellMeasurer registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      if (element) {\n        _this._maybeMeasureCell();\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(CellMeasurer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return typeof children === 'function' ? children({\n        measure: this._measure,\n        registerChild: this._registerChild\n      }) : children;\n    }\n  }, {\n    key: \"_getCellMeasurements\",\n    value: function _getCellMeasurements() {\n      var cache = this.props.cache;\n      var node = this._child || findDOMNode(this); // TODO Check for a bad combination of fixedWidth and missing numeric width or vice versa with height\n\n      if (node && node.ownerDocument && node.ownerDocument.defaultView && node instanceof node.ownerDocument.defaultView.HTMLElement) {\n        var styleWidth = node.style.width;\n        var styleHeight = node.style.height; // If we are re-measuring a cell that has already been measured,\n        // It will have a hard-coded width/height from the previous measurement.\n        // The fact that we are measuring indicates this measurement is probably stale,\n        // So explicitly clear it out (eg set to \"auto\") so we can recalculate.\n        // See issue #593 for more info.\n        // Even if we are measuring initially- if we're inside of a MultiGrid component,\n        // Explicitly clear width/height before measuring to avoid being tainted by another Grid.\n        // eg top/left Grid renders before bottom/right Grid\n        // Since the CellMeasurerCache is shared between them this taints derived cell size values.\n\n        if (!cache.hasFixedWidth()) {\n          node.style.width = 'auto';\n        }\n\n        if (!cache.hasFixedHeight()) {\n          node.style.height = 'auto';\n        }\n\n        var height = Math.ceil(node.offsetHeight);\n        var width = Math.ceil(node.offsetWidth); // Reset after measuring to avoid breaking styles; see #660\n\n        if (styleWidth) {\n          node.style.width = styleWidth;\n        }\n\n        if (styleHeight) {\n          node.style.height = styleHeight;\n        }\n\n        return {\n          height: height,\n          width: width\n        };\n      } else {\n        return {\n          height: 0,\n          width: 0\n        };\n      }\n    }\n  }, {\n    key: \"_maybeMeasureCell\",\n    value: function _maybeMeasureCell() {\n      var _this$props2 = this.props,\n          cache = _this$props2.cache,\n          _this$props2$columnIn = _this$props2.columnIndex,\n          columnIndex = _this$props2$columnIn === void 0 ? 0 : _this$props2$columnIn,\n          parent = _this$props2.parent,\n          _this$props2$rowIndex = _this$props2.rowIndex,\n          rowIndex = _this$props2$rowIndex === void 0 ? this.props.index || 0 : _this$props2$rowIndex;\n\n      if (!cache.has(rowIndex, columnIndex)) {\n        var _this$_getCellMeasure2 = this._getCellMeasurements(),\n            height = _this$_getCellMeasure2.height,\n            width = _this$_getCellMeasure2.width;\n\n        cache.set(rowIndex, columnIndex, width, height); // If size has changed, let Grid know to re-render.\n\n        if (parent && typeof parent.invalidateCellSizeAfterRender === 'function') {\n          parent.invalidateCellSizeAfterRender({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    }\n  }]);\n\n  return CellMeasurer;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"cache\": function cache() {\n    return (typeof bpfrpt_proptype_CellMeasureCache === \"function\" ? bpfrpt_proptype_CellMeasureCache.isRequired ? bpfrpt_proptype_CellMeasureCache.isRequired : bpfrpt_proptype_CellMeasureCache : PropTypes.shape(bpfrpt_proptype_CellMeasureCache).isRequired).apply(this, arguments);\n  },\n  \"children\": PropTypes.oneOfType([PropTypes.func, PropTypes.node]).isRequired,\n  \"columnIndex\": PropTypes.number,\n  \"index\": PropTypes.number,\n  \"parent\": PropTypes.shape({\n    invalidateCellSizeAfterRender: PropTypes.func,\n    recomputeGridSize: PropTypes.func\n  }).isRequired,\n  \"rowIndex\": PropTypes.number\n}), _temp); // Used for DEV mode warning check\n\n_defineProperty(CellMeasurer, \"__internalCellMeasurerFlag\", false);\n\nexport { CellMeasurer as default };\n\nif (process.env.NODE_ENV !== 'production') {\n  CellMeasurer.__internalCellMeasurerFlag = true;\n}\n\nimport { bpfrpt_proptype_CellMeasureCache } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nexport var DEFAULT_HEIGHT = 30;\nexport var DEFAULT_WIDTH = 100; // Enables more intelligent mapping of a given column and row index to an item ID.\n// This prevents a cell cache from being invalidated when its parent collection is modified.\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCache =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCache() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCache);\n\n    _defineProperty(this, \"_cellHeightCache\", {});\n\n    _defineProperty(this, \"_cellWidthCache\", {});\n\n    _defineProperty(this, \"_columnWidthCache\", {});\n\n    _defineProperty(this, \"_rowHeightCache\", {});\n\n    _defineProperty(this, \"_defaultHeight\", void 0);\n\n    _defineProperty(this, \"_defaultWidth\", void 0);\n\n    _defineProperty(this, \"_minHeight\", void 0);\n\n    _defineProperty(this, \"_minWidth\", void 0);\n\n    _defineProperty(this, \"_keyMapper\", void 0);\n\n    _defineProperty(this, \"_hasFixedHeight\", void 0);\n\n    _defineProperty(this, \"_hasFixedWidth\", void 0);\n\n    _defineProperty(this, \"_columnCount\", 0);\n\n    _defineProperty(this, \"_rowCount\", 0);\n\n    _defineProperty(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      var key = _this._keyMapper(0, index);\n\n      return _this._columnWidthCache[key] !== undefined ? _this._columnWidthCache[key] : _this._defaultWidth;\n    });\n\n    _defineProperty(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      var key = _this._keyMapper(index, 0);\n\n      return _this._rowHeightCache[key] !== undefined ? _this._rowHeightCache[key] : _this._defaultHeight;\n    });\n\n    var defaultHeight = params.defaultHeight,\n        defaultWidth = params.defaultWidth,\n        fixedHeight = params.fixedHeight,\n        fixedWidth = params.fixedWidth,\n        keyMapper = params.keyMapper,\n        minHeight = params.minHeight,\n        minWidth = params.minWidth;\n    this._hasFixedHeight = fixedHeight === true;\n    this._hasFixedWidth = fixedWidth === true;\n    this._minHeight = minHeight || 0;\n    this._minWidth = minWidth || 0;\n    this._keyMapper = keyMapper || defaultKeyMapper;\n    this._defaultHeight = Math.max(this._minHeight, typeof defaultHeight === 'number' ? defaultHeight : DEFAULT_HEIGHT);\n    this._defaultWidth = Math.max(this._minWidth, typeof defaultWidth === 'number' ? defaultWidth : DEFAULT_WIDTH);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (this._hasFixedHeight === false && this._hasFixedWidth === false) {\n        console.warn(\"CellMeasurerCache should only measure a cell's width or height. \" + 'You have configured CellMeasurerCache to measure both. ' + 'This will result in poor performance.');\n      }\n\n      if (this._hasFixedHeight === false && this._defaultHeight === 0) {\n        console.warn('Fixed height CellMeasurerCache should specify a :defaultHeight greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n\n      if (this._hasFixedWidth === false && this._defaultWidth === 0) {\n        console.warn('Fixed width CellMeasurerCache should specify a :defaultWidth greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n    }\n  }\n\n  _createClass(CellMeasurerCache, [{\n    key: \"clear\",\n    value: function clear(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      delete this._cellHeightCache[key];\n      delete this._cellWidthCache[key];\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellHeightCache = {};\n      this._cellWidthCache = {};\n      this._columnWidthCache = {};\n      this._rowHeightCache = {};\n      this._rowCount = 0;\n      this._columnCount = 0;\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._hasFixedHeight;\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._hasFixedWidth;\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedHeight) {\n        return this._defaultHeight;\n      } else {\n        var _key = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellHeightCache[_key] !== undefined ? Math.max(this._minHeight, this._cellHeightCache[_key]) : this._defaultHeight;\n      }\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedWidth) {\n        return this._defaultWidth;\n      } else {\n        var _key2 = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellWidthCache[_key2] !== undefined ? Math.max(this._minWidth, this._cellWidthCache[_key2]) : this._defaultWidth;\n      }\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      return this._cellHeightCache[key] !== undefined;\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      if (columnIndex >= this._columnCount) {\n        this._columnCount = columnIndex + 1;\n      }\n\n      if (rowIndex >= this._rowCount) {\n        this._rowCount = rowIndex + 1;\n      } // Size is cached per cell so we don't have to re-measure if cells are re-ordered.\n\n\n      this._cellHeightCache[key] = height;\n      this._cellWidthCache[key] = width;\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"_updateCachedColumnAndRowSizes\",\n    value: function _updateCachedColumnAndRowSizes(rowIndex, columnIndex) {\n      // :columnWidth and :rowHeight are derived based on all cells in a column/row.\n      // Pre-cache these derived values for faster lookup later.\n      // Reads are expected to occur more frequently than writes in this case.\n      // Only update non-fixed dimensions though to avoid doing unnecessary work.\n      if (!this._hasFixedWidth) {\n        var columnWidth = 0;\n\n        for (var i = 0; i < this._rowCount; i++) {\n          columnWidth = Math.max(columnWidth, this.getWidth(i, columnIndex));\n        }\n\n        var columnKey = this._keyMapper(0, columnIndex);\n\n        this._columnWidthCache[columnKey] = columnWidth;\n      }\n\n      if (!this._hasFixedHeight) {\n        var rowHeight = 0;\n\n        for (var _i = 0; _i < this._columnCount; _i++) {\n          rowHeight = Math.max(rowHeight, this.getHeight(rowIndex, _i));\n        }\n\n        var rowKey = this._keyMapper(rowIndex, 0);\n\n        this._rowHeightCache[rowKey] = rowHeight;\n      }\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCache;\n}();\n\nexport { CellMeasurerCache as default };\n\nfunction defaultKeyMapper(rowIndex, columnIndex) {\n  return \"\".concat(rowIndex, \"-\").concat(columnIndex);\n}\n\nimport { bpfrpt_proptype_CellMeasureCache } from \"./types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize'; // @TODO Merge Collection and CollectionView\n\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nvar IS_SCROLLING_TIMEOUT = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n/**\n * Monitors changes in properties (eg. cellCount) and state (eg. scroll offsets) to determine when rendering needs to occur.\n * This component does not render any visible content itself; it defers to the specified :cellLayoutManager.\n */\n\nvar CollectionView =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CollectionView, _React$PureComponent);\n\n  // Invokes callbacks only when their values have changed.\n  function CollectionView() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CollectionView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CollectionView)).call.apply(_getPrototypeOf2, [this].concat(args))); // If this component is being rendered server-side, getScrollbarSize() will return undefined.\n    // We handle this case in componentDidMount()\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_calculateSizeAndPositionDataOnNextUpdate\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnSectionRenderedHelper\", function () {\n      var _this$props = _this.props,\n          cellLayoutManager = _this$props.cellLayoutManager,\n          onSectionRendered = _this$props.onSectionRendered;\n\n      _this._onSectionRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          indices: cellLayoutManager.getLastRenderedIndices()\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_updateScrollPositionForScrollToCell\", function () {\n      var _this$props2 = _this.props,\n          cellLayoutManager = _this$props2.cellLayoutManager,\n          height = _this$props2.height,\n          scrollToAlignment = _this$props2.scrollToAlignment,\n          scrollToCell = _this$props2.scrollToCell,\n          width = _this$props2.width;\n      var _this$state = _this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop;\n\n      if (scrollToCell >= 0) {\n        var scrollPosition = cellLayoutManager.getScrollPositionForCell({\n          align: scrollToAlignment,\n          cellIndex: scrollToCell,\n          height: height,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          width: width\n        });\n\n        if (scrollPosition.scrollLeft !== scrollLeft || scrollPosition.scrollTop !== scrollTop) {\n          _this._setScrollPosition(scrollPosition);\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target !== _this._scrollingContainer) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._enablePointerEventsAfterDelay(); // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scrollTop never exceeds the total height.\n\n\n      var _this$props3 = _this.props,\n          cellLayoutManager = _this$props3.cellLayoutManager,\n          height = _this$props3.height,\n          isScrollingChange = _this$props3.isScrollingChange,\n          width = _this$props3.width;\n      var scrollbarSize = _this._scrollbarSize;\n\n      var _cellLayoutManager$ge = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge.height,\n          totalWidth = _cellLayoutManager$ge.width;\n\n      var scrollLeft = Math.max(0, Math.min(totalWidth - width + scrollbarSize, event.target.scrollLeft));\n      var scrollTop = Math.max(0, Math.min(totalHeight - height + scrollbarSize, event.target.scrollTop)); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (_this.state.scrollLeft !== scrollLeft || _this.state.scrollTop !== scrollTop) {\n        // Browsers with cancelable scroll events (eg. Firefox) interrupt scrolling animations if scrollTop/scrollLeft is set.\n        // Other browsers (eg. Safari) don't scroll as well without the help under certain conditions (DOM or style changes during scrolling).\n        // All things considered, this seems to be the best current work around that I'm aware of.\n        // For more information see https://github.com/bvaughn/react-virtualized/pull/124\n        var scrollPositionChangeReason = event.cancelable ? SCROLL_POSITION_CHANGE_REASONS.OBSERVED : SCROLL_POSITION_CHANGE_REASONS.REQUESTED; // Synchronously set :isScrolling the first time (since _setNextState will reschedule its animation frame each time it's called)\n\n        if (!_this.state.isScrolling) {\n          isScrollingChange(true);\n        }\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollPositionChangeReason: scrollPositionChangeReason,\n          scrollTop: scrollTop\n        });\n      }\n\n      _this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalWidth: totalWidth,\n        totalHeight: totalHeight\n      });\n    });\n\n    _this._scrollbarSize = getScrollbarSize();\n\n    if (_this._scrollbarSize === undefined) {\n      _this._scrollbarSizeMeasured = false;\n      _this._scrollbarSize = 0;\n    } else {\n      _this._scrollbarSizeMeasured = true;\n    }\n\n    return _this;\n  }\n  /**\n   * Forced recompute of cell sizes and positions.\n   * This function should be called if cell sizes have changed but nothing else has.\n   * Since cell positions are calculated by callbacks, the collection view has no way of detecting when the underlying data has changed.\n   */\n\n\n  _createClass(CollectionView, [{\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._calculateSizeAndPositionDataOnNextUpdate = true;\n      this.forceUpdate();\n    }\n    /* ---------------------------- Component lifecycle methods ---------------------------- */\n\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          cellLayoutManager = _this$props4.cellLayoutManager,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToCell = _this$props4.scrollToCell,\n          scrollTop = _this$props4.scrollTop; // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n      if (!this._scrollbarSizeMeasured) {\n        this._scrollbarSize = getScrollbarSize();\n        this._scrollbarSizeMeasured = true;\n        this.setState({});\n      }\n\n      if (scrollToCell >= 0) {\n        this._updateScrollPositionForScrollToCell();\n      } else if (scrollLeft >= 0 || scrollTop >= 0) {\n        this._setScrollPosition({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      } // Update onSectionRendered callback.\n\n\n      this._invokeOnSectionRenderedHelper();\n\n      var _cellLayoutManager$ge2 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge2.height,\n          totalWidth = _cellLayoutManager$ge2.width; // Initialize onScroll callback.\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalHeight: totalHeight,\n        totalWidth: totalWidth\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this$props5 = this.props,\n          height = _this$props5.height,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToCell = _this$props5.scrollToCell,\n          width = _this$props5.width;\n      var _this$state2 = this.state,\n          scrollLeft = _this$state2.scrollLeft,\n          scrollPositionChangeReason = _this$state2.scrollPositionChangeReason,\n          scrollTop = _this$state2.scrollTop; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        if (scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft && scrollLeft !== this._scrollingContainer.scrollLeft) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop >= 0 && scrollTop !== prevState.scrollTop && scrollTop !== this._scrollingContainer.scrollTop) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Update scroll offsets if the current :scrollToCell values requires it\n\n\n      if (height !== prevProps.height || scrollToAlignment !== prevProps.scrollToAlignment || scrollToCell !== prevProps.scrollToCell || width !== prevProps.width) {\n        this._updateScrollPositionForScrollToCell();\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnSectionRenderedHelper();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoHeight = _this$props6.autoHeight,\n          cellCount = _this$props6.cellCount,\n          cellLayoutManager = _this$props6.cellLayoutManager,\n          className = _this$props6.className,\n          height = _this$props6.height,\n          horizontalOverscanSize = _this$props6.horizontalOverscanSize,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          style = _this$props6.style,\n          verticalOverscanSize = _this$props6.verticalOverscanSize,\n          width = _this$props6.width;\n      var _this$state3 = this.state,\n          isScrolling = _this$state3.isScrolling,\n          scrollLeft = _this$state3.scrollLeft,\n          scrollTop = _this$state3.scrollTop; // Memoization reset\n\n      if (this._lastRenderedCellCount !== cellCount || this._lastRenderedCellLayoutManager !== cellLayoutManager || this._calculateSizeAndPositionDataOnNextUpdate) {\n        this._lastRenderedCellCount = cellCount;\n        this._lastRenderedCellLayoutManager = cellLayoutManager;\n        this._calculateSizeAndPositionDataOnNextUpdate = false;\n        cellLayoutManager.calculateSizeAndPositionData();\n      }\n\n      var _cellLayoutManager$ge3 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge3.height,\n          totalWidth = _cellLayoutManager$ge3.width; // Safely expand the rendered area by the specified overscan amount\n\n\n      var left = Math.max(0, scrollLeft - horizontalOverscanSize);\n      var top = Math.max(0, scrollTop - verticalOverscanSize);\n      var right = Math.min(totalWidth, scrollLeft + width + horizontalOverscanSize);\n      var bottom = Math.min(totalHeight, scrollTop + height + verticalOverscanSize);\n      var childrenToDisplay = height > 0 && width > 0 ? cellLayoutManager.cellRenderers({\n        height: bottom - top,\n        isScrolling: isScrolling,\n        width: right - left,\n        x: left,\n        y: top\n      }) : [];\n      var collectionStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        WebkitOverflowScrolling: 'touch',\n        width: width,\n        willChange: 'transform'\n      }; // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalHeight > height ? this._scrollbarSize : 0;\n      var horizontalScrollBarSize = totalWidth > width ? this._scrollbarSize : 0; // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n      collectionStyle.overflowX = totalWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      collectionStyle.overflowY = totalHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Collection', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: \"grid\",\n        style: _objectSpread({}, collectionStyle, {}, style),\n        tabIndex: 0\n      }, cellCount > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Collection__innerScrollContainer\",\n        style: {\n          height: totalHeight,\n          maxHeight: totalHeight,\n          maxWidth: totalWidth,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          width: totalWidth\n        }\n      }, childrenToDisplay), cellCount === 0 && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Collection.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_enablePointerEventsAfterDelay\",\n    value: function _enablePointerEventsAfterDelay() {\n      var _this2 = this;\n\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = setTimeout(function () {\n        var isScrollingChange = _this2.props.isScrollingChange;\n        isScrollingChange(false);\n        _this2._disablePointerEventsTimeoutId = null;\n\n        _this2.setState({\n          isScrolling: false\n        });\n      }, IS_SCROLLING_TIMEOUT);\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref) {\n      var _this3 = this;\n\n      var scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          totalHeight = _ref.totalHeight,\n          totalWidth = _ref.totalWidth;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref2) {\n          var scrollLeft = _ref2.scrollLeft,\n              scrollTop = _ref2.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_setScrollPosition\",\n    value: function _setScrollPosition(_ref3) {\n      var scrollLeft = _ref3.scrollLeft,\n          scrollTop = _ref3.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (scrollLeft >= 0) {\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (scrollTop >= 0) {\n        newState.scrollTop = scrollTop;\n      }\n\n      if (scrollLeft >= 0 && scrollLeft !== this.state.scrollLeft || scrollTop >= 0 && scrollTop !== this.state.scrollTop) {\n        this.setState(newState);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.cellCount === 0 && (prevState.scrollLeft !== 0 || prevState.scrollTop !== 0)) {\n        return {\n          scrollLeft: 0,\n          scrollTop: 0,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null ? nextProps.scrollTop : prevState.scrollTop,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return CollectionView;\n}(React.PureComponent);\n\n_defineProperty(CollectionView, \"defaultProps\", {\n  'aria-label': 'grid',\n  horizontalOverscanSize: 0,\n  noContentRenderer: function noContentRenderer() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  onSectionRendered: function onSectionRendered() {\n    return null;\n  },\n  scrollToAlignment: 'auto',\n  scrollToCell: -1,\n  style: {},\n  verticalOverscanSize: 0\n});\n\nCollectionView.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /**\n   * Number of cells in collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Calculates cell sizes and positions and manages rendering the appropriate cells given a specified window.\n   */\n  cellLayoutManager: PropTypes.object.isRequired,\n\n  /**\n   * Optional custom CSS class name to attach to root Collection element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * Height of Collection; this property determines the number of visible (vs virtualized) rows.\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Optional custom id to attach to root Collection element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Enables the `Collection` to horiontally \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  horizontalOverscanSize: PropTypes.number.isRequired,\n  isScrollingChange: PropTypes.func,\n\n  /**\n   * Optional renderer to be used in place of rows when either :rowCount or :cellCount is 0.\n   */\n  noContentRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, clientWidth, scrollHeight, scrollLeft, scrollTop, scrollWidth }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked with information about the section of the Collection that was just rendered.\n   * This callback is passed a named :indices parameter which is an Array of the most recently rendered section indices.\n   */\n  onSectionRendered: PropTypes.func.isRequired,\n\n  /**\n   * Horizontal offset.\n   */\n  scrollLeft: PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /**\n   * Cell index to ensure visible (by forcefully scrolling if necessary).\n   */\n  scrollToCell: PropTypes.number.isRequired,\n\n  /**\n   * Vertical offset.\n   */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Optional custom inline style to attach to root Collection element.\n   */\n  style: PropTypes.object,\n\n  /**\n   * Enables the `Collection` to vertically \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  verticalOverscanSize: PropTypes.number.isRequired,\n\n  /**\n   * Width of Collection; this property determines the number of visible (vs virtualized) columns.\n   */\n  width: PropTypes.number.isRequired\n} : {};\npolyfill(CollectionView);\nexport default CollectionView;","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * A section of the Window.\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * Sections have a fixed size and contain 0 to many cells (tracked by their indices).\n */\nvar Section =\n/*#__PURE__*/\nfunction () {\n  function Section(_ref) {\n    var height = _ref.height,\n        width = _ref.width,\n        x = _ref.x,\n        y = _ref.y;\n\n    _classCallCheck(this, Section);\n\n    this.height = height;\n    this.width = width;\n    this.x = x;\n    this.y = y;\n    this._indexMap = {};\n    this._indices = [];\n  }\n  /** Add a cell to this section. */\n\n\n  _createClass(Section, [{\n    key: \"addCellIndex\",\n    value: function addCellIndex(_ref2) {\n      var index = _ref2.index;\n\n      if (!this._indexMap[index]) {\n        this._indexMap[index] = true;\n\n        this._indices.push(index);\n      }\n    }\n    /** Get all cell indices that have been added to this section. */\n\n  }, {\n    key: \"getCellIndices\",\n    value: function getCellIndices() {\n      return this._indices;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.x, \",\").concat(this.y, \" \").concat(this.width, \"x\").concat(this.height);\n    }\n  }]);\n\n  return Section;\n}();\n\nexport { Section as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * \n */\nimport Section from './Section';\nvar SECTION_SIZE = 100;\n\n/**\n * Contains 0 to many Sections.\n * Grows (and adds Sections) dynamically as cells are registered.\n * Automatically adds cells to the appropriate Section(s).\n */\nvar SectionManager =\n/*#__PURE__*/\nfunction () {\n  function SectionManager() {\n    var sectionSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SECTION_SIZE;\n\n    _classCallCheck(this, SectionManager);\n\n    this._sectionSize = sectionSize;\n    this._cellMetadata = [];\n    this._sections = {};\n  }\n  /**\n   * Gets all cell indices contained in the specified region.\n   * A region may encompass 1 or more Sections.\n   */\n\n\n  _createClass(SectionManager, [{\n    key: \"getCellIndices\",\n    value: function getCellIndices(_ref) {\n      var height = _ref.height,\n          width = _ref.width,\n          x = _ref.x,\n          y = _ref.y;\n      var indices = {};\n      this.getSections({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      }).forEach(function (section) {\n        return section.getCellIndices().forEach(function (index) {\n          indices[index] = index;\n        });\n      }); // Object keys are strings; this function returns numbers\n\n      return Object.keys(indices).map(function (index) {\n        return indices[index];\n      });\n    }\n    /** Get size and position information for the cell specified. */\n\n  }, {\n    key: \"getCellMetadata\",\n    value: function getCellMetadata(_ref2) {\n      var index = _ref2.index;\n      return this._cellMetadata[index];\n    }\n    /** Get all Sections overlapping the specified region. */\n\n  }, {\n    key: \"getSections\",\n    value: function getSections(_ref3) {\n      var height = _ref3.height,\n          width = _ref3.width,\n          x = _ref3.x,\n          y = _ref3.y;\n      var sectionXStart = Math.floor(x / this._sectionSize);\n      var sectionXStop = Math.floor((x + width - 1) / this._sectionSize);\n      var sectionYStart = Math.floor(y / this._sectionSize);\n      var sectionYStop = Math.floor((y + height - 1) / this._sectionSize);\n      var sections = [];\n\n      for (var sectionX = sectionXStart; sectionX <= sectionXStop; sectionX++) {\n        for (var sectionY = sectionYStart; sectionY <= sectionYStop; sectionY++) {\n          var key = \"\".concat(sectionX, \".\").concat(sectionY);\n\n          if (!this._sections[key]) {\n            this._sections[key] = new Section({\n              height: this._sectionSize,\n              width: this._sectionSize,\n              x: sectionX * this._sectionSize,\n              y: sectionY * this._sectionSize\n            });\n          }\n\n          sections.push(this._sections[key]);\n        }\n      }\n\n      return sections;\n    }\n    /** Total number of Sections based on the currently registered cells. */\n\n  }, {\n    key: \"getTotalSectionCount\",\n    value: function getTotalSectionCount() {\n      return Object.keys(this._sections).length;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var _this = this;\n\n      return Object.keys(this._sections).map(function (index) {\n        return _this._sections[index].toString();\n      });\n    }\n    /** Adds a cell to the appropriate Sections and registers it metadata for later retrievable. */\n\n  }, {\n    key: \"registerCell\",\n    value: function registerCell(_ref4) {\n      var cellMetadatum = _ref4.cellMetadatum,\n          index = _ref4.index;\n      this._cellMetadata[index] = cellMetadatum;\n      this.getSections(cellMetadatum).forEach(function (section) {\n        return section.addCellIndex({\n          index: index\n        });\n      });\n    }\n  }]);\n\n  return SectionManager;\n}();\n\nexport { SectionManager as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","/**\n * Determines a new offset that ensures a certain cell is visible, given the current offset.\n * If the cell is already visible then the current offset will be returned.\n * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n *\n * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n * @param cellOffset Offset (x or y) position for cell\n * @param cellSize Size (width or height) of cell\n * @param containerSize Total size (width or height) of the container\n * @param currentOffset Container's current (x or y) offset\n * @return Offset to use to ensure the specified cell is visible\n */\nexport default function getUpdatedOffsetForIndex(_ref) {\n  var _ref$align = _ref.align,\n      align = _ref$align === void 0 ? 'auto' : _ref$align,\n      cellOffset = _ref.cellOffset,\n      cellSize = _ref.cellSize,\n      containerSize = _ref.containerSize,\n      currentOffset = _ref.currentOffset;\n  var maxOffset = cellOffset;\n  var minOffset = maxOffset - containerSize + cellSize;\n\n  switch (align) {\n    case 'start':\n      return maxOffset;\n\n    case 'end':\n      return minOffset;\n\n    case 'center':\n      return maxOffset - (containerSize - cellSize) / 2;\n\n    default:\n      return Math.max(minOffset, Math.min(maxOffset, currentOffset));\n  }\n}","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport CollectionView from './CollectionView';\nimport _calculateSizeAndPositionData from './utils/calculateSizeAndPositionData';\nimport getUpdatedOffsetForIndex from '../utils/getUpdatedOffsetForIndex';\n\n/**\n * Renders scattered or non-linear data.\n * Unlike Grid, which renders checkerboard data, Collection can render arbitrarily positioned- even overlapping- data.\n */\nvar Collection =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Collection, _React$PureComponent);\n\n  function Collection(props, context) {\n    var _this;\n\n    _classCallCheck(this, Collection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Collection).call(this, props, context));\n    _this._cellMetadata = [];\n    _this._lastRenderedCellIndices = []; // Cell cache during scroll (for performance)\n\n    _this._cellCache = [];\n    _this._isScrollingChange = _this._isScrollingChange.bind(_assertThisInitialized(_this));\n    _this._setCollectionViewRef = _this._setCollectionViewRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Collection, [{\n    key: \"forceUpdate\",\n    value: function forceUpdate() {\n      if (this._collectionView !== undefined) {\n        this._collectionView.forceUpdate();\n      }\n    }\n    /** See Collection#recomputeCellSizesAndPositions */\n\n  }, {\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._cellCache = [];\n\n      this._collectionView.recomputeCellSizesAndPositions();\n    }\n    /** React lifecycle methods */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = _extends({}, this.props);\n\n      return React.createElement(CollectionView, _extends({\n        cellLayoutManager: this,\n        isScrollingChange: this._isScrollingChange,\n        ref: this._setCollectionViewRef\n      }, props));\n    }\n    /** CellLayoutManager interface */\n\n  }, {\n    key: \"calculateSizeAndPositionData\",\n    value: function calculateSizeAndPositionData() {\n      var _this$props = this.props,\n          cellCount = _this$props.cellCount,\n          cellSizeAndPositionGetter = _this$props.cellSizeAndPositionGetter,\n          sectionSize = _this$props.sectionSize;\n\n      var data = _calculateSizeAndPositionData({\n        cellCount: cellCount,\n        cellSizeAndPositionGetter: cellSizeAndPositionGetter,\n        sectionSize: sectionSize\n      });\n\n      this._cellMetadata = data.cellMetadata;\n      this._sectionManager = data.sectionManager;\n      this._height = data.height;\n      this._width = data.width;\n    }\n    /**\n     * Returns the most recently rendered set of cell indices.\n     */\n\n  }, {\n    key: \"getLastRenderedIndices\",\n    value: function getLastRenderedIndices() {\n      return this._lastRenderedCellIndices;\n    }\n    /**\n     * Calculates the minimum amount of change from the current scroll position to ensure the specified cell is (fully) visible.\n     */\n\n  }, {\n    key: \"getScrollPositionForCell\",\n    value: function getScrollPositionForCell(_ref) {\n      var align = _ref.align,\n          cellIndex = _ref.cellIndex,\n          height = _ref.height,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          width = _ref.width;\n      var cellCount = this.props.cellCount;\n\n      if (cellIndex >= 0 && cellIndex < cellCount) {\n        var cellMetadata = this._cellMetadata[cellIndex];\n        scrollLeft = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.x,\n          cellSize: cellMetadata.width,\n          containerSize: width,\n          currentOffset: scrollLeft,\n          targetIndex: cellIndex\n        });\n        scrollTop = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.y,\n          cellSize: cellMetadata.height,\n          containerSize: height,\n          currentOffset: scrollTop,\n          targetIndex: cellIndex\n        });\n      }\n\n      return {\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      };\n    }\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return {\n        height: this._height,\n        width: this._width\n      };\n    }\n  }, {\n    key: \"cellRenderers\",\n    value: function cellRenderers(_ref2) {\n      var _this2 = this;\n\n      var height = _ref2.height,\n          isScrolling = _ref2.isScrolling,\n          width = _ref2.width,\n          x = _ref2.x,\n          y = _ref2.y;\n      var _this$props2 = this.props,\n          cellGroupRenderer = _this$props2.cellGroupRenderer,\n          cellRenderer = _this$props2.cellRenderer; // Store for later calls to getLastRenderedIndices()\n\n      this._lastRenderedCellIndices = this._sectionManager.getCellIndices({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      });\n      return cellGroupRenderer({\n        cellCache: this._cellCache,\n        cellRenderer: cellRenderer,\n        cellSizeAndPositionGetter: function cellSizeAndPositionGetter(_ref3) {\n          var index = _ref3.index;\n          return _this2._sectionManager.getCellMetadata({\n            index: index\n          });\n        },\n        indices: this._lastRenderedCellIndices,\n        isScrolling: isScrolling\n      });\n    }\n  }, {\n    key: \"_isScrollingChange\",\n    value: function _isScrollingChange(isScrolling) {\n      if (!isScrolling) {\n        this._cellCache = [];\n      }\n    }\n  }, {\n    key: \"_setCollectionViewRef\",\n    value: function _setCollectionViewRef(ref) {\n      this._collectionView = ref;\n    }\n  }]);\n\n  return Collection;\n}(React.PureComponent);\n\n_defineProperty(Collection, \"defaultProps\", {\n  'aria-label': 'grid',\n  cellGroupRenderer: defaultCellGroupRenderer\n});\n\nexport { Collection as default };\nCollection.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Number of cells in Collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a group of cells given their indices.\n   * Should implement the following interface: ({\n   *   cellSizeAndPositionGetter:Function,\n   *   indices: Array<number>,\n   *   cellRenderer: Function\n   * }): Array<PropTypes.node>\n   */\n  cellGroupRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Responsible for rendering a cell given an row and column index.\n   * Should implement the following interface: ({ index: number, key: string, style: object }): PropTypes.element\n   */\n  cellRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback responsible for returning size and offset/position information for a given cell (index).\n   * ({ index: number }): { height: number, width: number, x: number, y: number }\n   */\n  cellSizeAndPositionGetter: PropTypes.func.isRequired,\n\n  /**\n   * Optionally override the size of the sections a Collection's cells are split into.\n   */\n  sectionSize: PropTypes.number\n} : {};\n\nfunction defaultCellGroupRenderer(_ref4) {\n  var cellCache = _ref4.cellCache,\n      cellRenderer = _ref4.cellRenderer,\n      cellSizeAndPositionGetter = _ref4.cellSizeAndPositionGetter,\n      indices = _ref4.indices,\n      isScrolling = _ref4.isScrolling;\n  return indices.map(function (index) {\n    var cellMetadata = cellSizeAndPositionGetter({\n      index: index\n    });\n    var cellRendererProps = {\n      index: index,\n      isScrolling: isScrolling,\n      key: index,\n      style: {\n        height: cellMetadata.height,\n        left: cellMetadata.x,\n        position: 'absolute',\n        top: cellMetadata.y,\n        width: cellMetadata.width\n      }\n    }; // Avoid re-creating cells while scrolling.\n    // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n    // If a scroll is in progress- cache and reuse cells.\n    // This cache will be thrown away once scrolling complets.\n\n    if (isScrolling) {\n      if (!(index in cellCache)) {\n        cellCache[index] = cellRenderer(cellRendererProps);\n      }\n\n      return cellCache[index];\n    } else {\n      return cellRenderer(cellRendererProps);\n    }\n  }).filter(function (renderedCell) {\n    return !!renderedCell;\n  });\n}\n\nimport { bpfrpt_proptype_ScrollPosition } from \"./types\";\nimport { bpfrpt_proptype_SizeInfo } from \"./types\";","import SectionManager from '../SectionManager';\nexport default function calculateSizeAndPositionData(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSizeAndPositionGetter = _ref.cellSizeAndPositionGetter,\n      sectionSize = _ref.sectionSize;\n  var cellMetadata = [];\n  var sectionManager = new SectionManager(sectionSize);\n  var height = 0;\n  var width = 0;\n\n  for (var index = 0; index < cellCount; index++) {\n    var cellMetadatum = cellSizeAndPositionGetter({\n      index: index\n    });\n\n    if (cellMetadatum.height == null || isNaN(cellMetadatum.height) || cellMetadatum.width == null || isNaN(cellMetadatum.width) || cellMetadatum.x == null || isNaN(cellMetadatum.x) || cellMetadatum.y == null || isNaN(cellMetadatum.y)) {\n      throw Error(\"Invalid metadata returned for cell \".concat(index, \":\\n        x:\").concat(cellMetadatum.x, \", y:\").concat(cellMetadatum.y, \", width:\").concat(cellMetadatum.width, \", height:\").concat(cellMetadatum.height));\n    }\n\n    height = Math.max(height, cellMetadatum.y + cellMetadatum.height);\n    width = Math.max(width, cellMetadatum.x + cellMetadatum.width);\n    cellMetadata[index] = cellMetadatum;\n    sectionManager.registerCell({\n      cellMetadatum: cellMetadatum,\n      index: index\n    });\n  }\n\n  return {\n    cellMetadata: cellMetadata,\n    height: height,\n    sectionManager: sectionManager,\n    width: width\n  };\n}","import Collection from './Collection';\nexport default Collection;\nexport { Collection };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * High-order component that auto-calculates column-widths for `Grid` cells.\n */\n\nvar ColumnSizer =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ColumnSizer, _React$PureComponent);\n\n  function ColumnSizer(props, context) {\n    var _this;\n\n    _classCallCheck(this, ColumnSizer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ColumnSizer).call(this, props, context));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ColumnSizer, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props = this.props,\n          columnMaxWidth = _this$props.columnMaxWidth,\n          columnMinWidth = _this$props.columnMinWidth,\n          columnCount = _this$props.columnCount,\n          width = _this$props.width;\n\n      if (columnMaxWidth !== prevProps.columnMaxWidth || columnMinWidth !== prevProps.columnMinWidth || columnCount !== prevProps.columnCount || width !== prevProps.width) {\n        if (this._registeredChild) {\n          this._registeredChild.recomputeGridSize();\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          columnMaxWidth = _this$props2.columnMaxWidth,\n          columnMinWidth = _this$props2.columnMinWidth,\n          columnCount = _this$props2.columnCount,\n          width = _this$props2.width;\n      var safeColumnMinWidth = columnMinWidth || 1;\n      var safeColumnMaxWidth = columnMaxWidth ? Math.min(columnMaxWidth, width) : width;\n      var columnWidth = width / columnCount;\n      columnWidth = Math.max(safeColumnMinWidth, columnWidth);\n      columnWidth = Math.min(safeColumnMaxWidth, columnWidth);\n      columnWidth = Math.floor(columnWidth);\n      var adjustedWidth = Math.min(width, columnWidth * columnCount);\n      return children({\n        adjustedWidth: adjustedWidth,\n        columnWidth: columnWidth,\n        getColumnWidth: function getColumnWidth() {\n          return columnWidth;\n        },\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(child) {\n      if (child && typeof child.recomputeGridSize !== 'function') {\n        throw Error('Unexpected child type registered; only Grid/MultiGrid children are supported.');\n      }\n\n      this._registeredChild = child;\n\n      if (this._registeredChild) {\n        this._registeredChild.recomputeGridSize();\n      }\n    }\n  }]);\n\n  return ColumnSizer;\n}(React.PureComponent);\n\nexport { ColumnSizer as default };\nColumnSizer.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized Grid.\n   * This function should implement the following signature:\n   * ({ adjustedWidth, getColumnWidth, registerChild }) => PropTypes.element\n   *\n   * The specified :getColumnWidth function should be passed to the Grid's :columnWidth property.\n   * The :registerChild should be passed to the Grid's :ref property.\n   * The :adjustedWidth property is optional; it reflects the lesser of the overall width or the width of all columns.\n   */\n  children: PropTypes.func.isRequired,\n\n  /** Optional maximum allowed column width */\n  columnMaxWidth: PropTypes.number,\n\n  /** Optional minimum allowed column width */\n  columnMinWidth: PropTypes.number,\n\n  /** Number of columns in Grid or Table child */\n  columnCount: PropTypes.number.isRequired,\n\n  /** Width of Grid or Table child */\n  width: PropTypes.number.isRequired\n} : {};","import ColumnSizer from './ColumnSizer';\nexport default ColumnSizer;\nexport { ColumnSizer };","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\n/**\n * Higher-order component that manages lazy-loading for \"infinite\" data.\n * This component decorates a virtual component and just-in-time prefetches rows as a user scrolls.\n * It is intended as a convenience component; fork it if you'd like finer-grained control over data-loading.\n */\n\nvar InfiniteLoader =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(InfiniteLoader, _React$PureComponent);\n\n  function InfiniteLoader(props, context) {\n    var _this;\n\n    _classCallCheck(this, InfiniteLoader);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InfiniteLoader).call(this, props, context));\n    _this._loadMoreRowsMemoizer = createCallbackMemoizer();\n    _this._onRowsRendered = _this._onRowsRendered.bind(_assertThisInitialized(_this));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(InfiniteLoader, [{\n    key: \"resetLoadMoreRowsCache\",\n    value: function resetLoadMoreRowsCache(autoReload) {\n      this._loadMoreRowsMemoizer = createCallbackMemoizer();\n\n      if (autoReload) {\n        this._doStuff(this._lastRenderedStartIndex, this._lastRenderedStopIndex);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return children({\n        onRowsRendered: this._onRowsRendered,\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_loadUnloadedRanges\",\n    value: function _loadUnloadedRanges(unloadedRanges) {\n      var _this2 = this;\n\n      var loadMoreRows = this.props.loadMoreRows;\n      unloadedRanges.forEach(function (unloadedRange) {\n        var promise = loadMoreRows(unloadedRange);\n\n        if (promise) {\n          promise.then(function () {\n            // Refresh the visible rows if any of them have just been loaded.\n            // Otherwise they will remain in their unloaded visual state.\n            if (isRangeVisible({\n              lastRenderedStartIndex: _this2._lastRenderedStartIndex,\n              lastRenderedStopIndex: _this2._lastRenderedStopIndex,\n              startIndex: unloadedRange.startIndex,\n              stopIndex: unloadedRange.stopIndex\n            })) {\n              if (_this2._registeredChild) {\n                forceUpdateReactVirtualizedComponent(_this2._registeredChild, _this2._lastRenderedStartIndex);\n              }\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_onRowsRendered\",\n    value: function _onRowsRendered(_ref) {\n      var startIndex = _ref.startIndex,\n          stopIndex = _ref.stopIndex;\n      this._lastRenderedStartIndex = startIndex;\n      this._lastRenderedStopIndex = stopIndex;\n\n      this._doStuff(startIndex, stopIndex);\n    }\n  }, {\n    key: \"_doStuff\",\n    value: function _doStuff(startIndex, stopIndex) {\n      var _ref2,\n          _this3 = this;\n\n      var _this$props = this.props,\n          isRowLoaded = _this$props.isRowLoaded,\n          minimumBatchSize = _this$props.minimumBatchSize,\n          rowCount = _this$props.rowCount,\n          threshold = _this$props.threshold;\n      var unloadedRanges = scanForUnloadedRanges({\n        isRowLoaded: isRowLoaded,\n        minimumBatchSize: minimumBatchSize,\n        rowCount: rowCount,\n        startIndex: Math.max(0, startIndex - threshold),\n        stopIndex: Math.min(rowCount - 1, stopIndex + threshold)\n      }); // For memoize comparison\n\n      var squashedUnloadedRanges = (_ref2 = []).concat.apply(_ref2, _toConsumableArray(unloadedRanges.map(function (_ref3) {\n        var startIndex = _ref3.startIndex,\n            stopIndex = _ref3.stopIndex;\n        return [startIndex, stopIndex];\n      })));\n\n      this._loadMoreRowsMemoizer({\n        callback: function callback() {\n          _this3._loadUnloadedRanges(unloadedRanges);\n        },\n        indices: {\n          squashedUnloadedRanges: squashedUnloadedRanges\n        }\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(registeredChild) {\n      this._registeredChild = registeredChild;\n    }\n  }]);\n\n  return InfiniteLoader;\n}(React.PureComponent);\n/**\n * Determines if the specified start/stop range is visible based on the most recently rendered range.\n */\n\n\n_defineProperty(InfiniteLoader, \"defaultProps\", {\n  minimumBatchSize: 10,\n  rowCount: 0,\n  threshold: 15\n});\n\nexport { InfiniteLoader as default };\nInfiniteLoader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized component.\n   * This function should implement the following signature:\n   * ({ onRowsRendered, registerChild }) => PropTypes.element\n   *\n   * The specified :onRowsRendered function should be passed through to the child's :onRowsRendered property.\n   * The :registerChild callback should be set as the virtualized component's :ref.\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Function responsible for tracking the loaded state of each row.\n   * It should implement the following signature: ({ index: number }): boolean\n   */\n  isRowLoaded: PropTypes.func.isRequired,\n\n  /**\n   * Callback to be invoked when more rows must be loaded.\n   * It should implement the following signature: ({ startIndex, stopIndex }): Promise\n   * The returned Promise should be resolved once row data has finished loading.\n   * It will be used to determine when to refresh the list with the newly-loaded data.\n   * This callback may be called multiple times in reaction to a single scroll event.\n   */\n  loadMoreRows: PropTypes.func.isRequired,\n\n  /**\n   * Minimum number of rows to be loaded at a time.\n   * This property can be used to batch requests to reduce HTTP requests.\n   */\n  minimumBatchSize: PropTypes.number.isRequired,\n\n  /**\n   * Number of rows in list; can be arbitrary high number if actual number is unknown.\n   */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Threshold at which to pre-fetch data.\n   * A threshold X means that data will start loading when a user scrolls within X rows.\n   * This value defaults to 15.\n   */\n  threshold: PropTypes.number.isRequired\n} : {};\nexport function isRangeVisible(_ref4) {\n  var lastRenderedStartIndex = _ref4.lastRenderedStartIndex,\n      lastRenderedStopIndex = _ref4.lastRenderedStopIndex,\n      startIndex = _ref4.startIndex,\n      stopIndex = _ref4.stopIndex;\n  return !(startIndex > lastRenderedStopIndex || stopIndex < lastRenderedStartIndex);\n}\n/**\n * Returns all of the ranges within a larger range that contain unloaded rows.\n */\n\nexport function scanForUnloadedRanges(_ref5) {\n  var isRowLoaded = _ref5.isRowLoaded,\n      minimumBatchSize = _ref5.minimumBatchSize,\n      rowCount = _ref5.rowCount,\n      startIndex = _ref5.startIndex,\n      stopIndex = _ref5.stopIndex;\n  var unloadedRanges = [];\n  var rangeStartIndex = null;\n  var rangeStopIndex = null;\n\n  for (var index = startIndex; index <= stopIndex; index++) {\n    var loaded = isRowLoaded({\n      index: index\n    });\n\n    if (!loaded) {\n      rangeStopIndex = index;\n\n      if (rangeStartIndex === null) {\n        rangeStartIndex = index;\n      }\n    } else if (rangeStopIndex !== null) {\n      unloadedRanges.push({\n        startIndex: rangeStartIndex,\n        stopIndex: rangeStopIndex\n      });\n      rangeStartIndex = rangeStopIndex = null;\n    }\n  } // If :rangeStopIndex is not null it means we haven't ran out of unloaded rows.\n  // Scan forward to try filling our :minimumBatchSize.\n\n\n  if (rangeStopIndex !== null) {\n    var potentialStopIndex = Math.min(Math.max(rangeStopIndex, rangeStartIndex + minimumBatchSize - 1), rowCount - 1);\n\n    for (var _index = rangeStopIndex + 1; _index <= potentialStopIndex; _index++) {\n      if (!isRowLoaded({\n        index: _index\n      })) {\n        rangeStopIndex = _index;\n      } else {\n        break;\n      }\n    }\n\n    unloadedRanges.push({\n      startIndex: rangeStartIndex,\n      stopIndex: rangeStopIndex\n    });\n  } // Check to see if our first range ended prematurely.\n  // In this case we should scan backwards to try filling our :minimumBatchSize.\n\n\n  if (unloadedRanges.length) {\n    var firstUnloadedRange = unloadedRanges[0];\n\n    while (firstUnloadedRange.stopIndex - firstUnloadedRange.startIndex + 1 < minimumBatchSize && firstUnloadedRange.startIndex > 0) {\n      var _index2 = firstUnloadedRange.startIndex - 1;\n\n      if (!isRowLoaded({\n        index: _index2\n      })) {\n        firstUnloadedRange.startIndex = _index2;\n      } else {\n        break;\n      }\n    }\n  }\n\n  return unloadedRanges;\n}\n/**\n * Since RV components use shallowCompare we need to force a render (even though props haven't changed).\n * However InfiniteLoader may wrap a Grid or it may wrap a Table or List.\n * In the first case the built-in React forceUpdate() method is sufficient to force a re-render,\n * But in the latter cases we need to use the RV-specific forceUpdateGrid() method.\n * Else the inner Grid will not be re-rendered and visuals may be stale.\n *\n * Additionally, while a Grid is scrolling the cells can be cached,\n * So it's important to invalidate that cache by recalculating sizes\n * before forcing a rerender.\n */\n\nexport function forceUpdateReactVirtualizedComponent(component) {\n  var currentIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var recomputeSize = typeof component.recomputeGridSize === 'function' ? component.recomputeGridSize : component.recomputeRowHeights;\n\n  if (recomputeSize) {\n    recomputeSize.call(component, currentIndex);\n  } else {\n    component.forceUpdate();\n  }\n}","import InfiniteLoader from './InfiniteLoader';\nexport default InfiniteLoader;\nexport { InfiniteLoader };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport * as React from 'react';\nimport clsx from 'clsx';\n/**\n * It is inefficient to create and manage a large list of DOM elements within a scrolling container\n * if only a few of those elements are visible. The primary purpose of this component is to improve\n * performance by only rendering the DOM nodes that a user is able to see based on their current\n * scroll position.\n *\n * This component renders a virtualized list of elements with either fixed or dynamic heights.\n */\n\nvar List = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(List, _React$PureComponent);\n\n  function List() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, List);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(List)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"Grid\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRenderer\", function (_ref) {\n      var parent = _ref.parent,\n          rowIndex = _ref.rowIndex,\n          style = _ref.style,\n          isScrolling = _ref.isScrolling,\n          isVisible = _ref.isVisible,\n          key = _ref.key;\n      var rowRenderer = _this.props.rowRenderer; // TRICKY The style object is sometimes cached by Grid.\n      // This prevents new style objects from bypassing shallowCompare().\n      // However as of React 16, style props are auto-frozen (at least in dev mode)\n      // Check to make sure we can still modify the style before proceeding.\n      // https://github.com/facebook/react/commit/977357765b44af8ff0cfea327866861073095c12#commitcomment-20648713\n\n      var widthDescriptor = Object.getOwnPropertyDescriptor(style, 'width');\n\n      if (widthDescriptor && widthDescriptor.writable) {\n        // By default, List cells should be 100% width.\n        // This prevents them from flowing under a scrollbar (if present).\n        style.width = '100%';\n      }\n\n      return rowRenderer({\n        index: rowIndex,\n        style: style,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (ref) {\n      _this.Grid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (_ref2) {\n      var clientHeight = _ref2.clientHeight,\n          scrollHeight = _ref2.scrollHeight,\n          scrollTop = _ref2.scrollTop;\n      var onScroll = _this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref3) {\n      var rowOverscanStartIndex = _ref3.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref3.rowOverscanStopIndex,\n          rowStartIndex = _ref3.rowStartIndex,\n          rowStopIndex = _ref3.rowStopIndex;\n      var onRowsRendered = _this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref4) {\n      var alignment = _ref4.alignment,\n          index = _ref4.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index,\n          columnIndex: 0\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref6 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref6$columnIndex = _ref6.columnIndex,\n          columnIndex = _ref6$columnIndex === void 0 ? 0 : _ref6$columnIndex,\n          _ref6$rowIndex = _ref6.rowIndex,\n          rowIndex = _ref6$rowIndex === void 0 ? 0 : _ref6$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index,\n          columnIndex: 0\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          scrollToIndex = _this$props.scrollToIndex,\n          width = _this$props.width;\n      var classNames = clsx('ReactVirtualized__List', className);\n      return React.createElement(Grid, _extends({}, this.props, {\n        autoContainerWidth: true,\n        cellRenderer: this._cellRenderer,\n        className: classNames,\n        columnWidth: width,\n        columnCount: 1,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        scrollToRow: scrollToIndex\n      }));\n    }\n  }]);\n\n  return List;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /** Optional CSS class name */\n  \"className\": PropTypes.string,\n\n  /**\n   * Used to estimate the total height of a List before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Height constraint for list (determines how many actual rows are rendered) */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional renderer to be used in place of rows when rowCount is 0 */\n  \"noRowsRenderer\": function noRowsRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Callback invoked with information about the slice of rows that were just rendered.  */\n  \"onRowsRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed row height (number) or a function that returns the height of a row given its index.  */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a row given an index; ({ index: number }): node */\n  \"rowRenderer\": function rowRenderer() {\n    return (typeof bpfrpt_proptype_RowRenderer === \"function\" ? bpfrpt_proptype_RowRenderer.isRequired ? bpfrpt_proptype_RowRenderer.isRequired : bpfrpt_proptype_RowRenderer : PropTypes.shape(bpfrpt_proptype_RowRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in list. */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** See Grid#scrollToAlignment */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToIndex\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of list */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(List, \"defaultProps\", {\n  autoHeight: false,\n  estimatedRowSize: 30,\n  onScroll: function onScroll() {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {},\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { List as default };\nimport { bpfrpt_proptype_NoContentRenderer } from \"../Grid\";\nimport { bpfrpt_proptype_Alignment } from \"../Grid\";\nimport { bpfrpt_proptype_CellSize } from \"../Grid\";\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"../Grid\";\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_CellRendererParams } from \"../Grid\";\nimport { bpfrpt_proptype_Scroll as bpfrpt_proptype_GridScroll } from \"../Grid\";\nimport { bpfrpt_proptype_RowRenderer } from \"./types\";\nimport { bpfrpt_proptype_RenderedRows } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport PropTypes from \"prop-types\";","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/binary-search-bounds\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nfunction _GEA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x >= y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GEP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) >= 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _GTA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x > y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GTP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) > 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LTA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x < y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LTP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) < 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LEA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x <= y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LEP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) <= 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _EQA(a, l, h, y) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x === y) {\n      return m;\n    } else if (x <= y) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction _EQP(a, l, h, y, c) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n    var p = c(x, y);\n\n    if (p === 0) {\n      return m;\n    } else if (p <= 0) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction dispatchBsearchEQ(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _EQP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _EQA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nexport default {\n  ge: dispatchBsearchGE,\n  gt: dispatchBsearchGT,\n  lt: dispatchBsearchLT,\n  le: dispatchBsearchLE,\n  eq: dispatchBsearchEQ\n};","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/interval-tree-1d\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax in an upstream dependency.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nimport bounds from './binarySearchBounds';\nvar NOT_FOUND = 0;\nvar SUCCESS = 1;\nvar EMPTY = 2;\n\nfunction IntervalTreeNode(mid, left, right, leftPoints, rightPoints) {\n  this.mid = mid;\n  this.left = left;\n  this.right = right;\n  this.leftPoints = leftPoints;\n  this.rightPoints = rightPoints;\n  this.count = (left ? left.count : 0) + (right ? right.count : 0) + leftPoints.length;\n}\n\nvar proto = IntervalTreeNode.prototype;\n\nfunction copy(a, b) {\n  a.mid = b.mid;\n  a.left = b.left;\n  a.right = b.right;\n  a.leftPoints = b.leftPoints;\n  a.rightPoints = b.rightPoints;\n  a.count = b.count;\n}\n\nfunction rebuild(node, intervals) {\n  var ntree = createIntervalTree(intervals);\n  node.mid = ntree.mid;\n  node.left = ntree.left;\n  node.right = ntree.right;\n  node.leftPoints = ntree.leftPoints;\n  node.rightPoints = ntree.rightPoints;\n  node.count = ntree.count;\n}\n\nfunction rebuildWithInterval(node, interval) {\n  var intervals = node.intervals([]);\n  intervals.push(interval);\n  rebuild(node, intervals);\n}\n\nfunction rebuildWithoutInterval(node, interval) {\n  var intervals = node.intervals([]);\n  var idx = intervals.indexOf(interval);\n\n  if (idx < 0) {\n    return NOT_FOUND;\n  }\n\n  intervals.splice(idx, 1);\n  rebuild(node, intervals);\n  return SUCCESS;\n}\n\nproto.intervals = function (result) {\n  result.push.apply(result, this.leftPoints);\n\n  if (this.left) {\n    this.left.intervals(result);\n  }\n\n  if (this.right) {\n    this.right.intervals(result);\n  }\n\n  return result;\n};\n\nproto.insert = function (interval) {\n  var weight = this.count - this.leftPoints.length;\n  this.count += 1;\n\n  if (interval[1] < this.mid) {\n    if (this.left) {\n      if (4 * (this.left.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.left.insert(interval);\n      }\n    } else {\n      this.left = createIntervalTree([interval]);\n    }\n  } else if (interval[0] > this.mid) {\n    if (this.right) {\n      if (4 * (this.right.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.right.insert(interval);\n      }\n    } else {\n      this.right = createIntervalTree([interval]);\n    }\n  } else {\n    var l = bounds.ge(this.leftPoints, interval, compareBegin);\n    var r = bounds.ge(this.rightPoints, interval, compareEnd);\n    this.leftPoints.splice(l, 0, interval);\n    this.rightPoints.splice(r, 0, interval);\n  }\n};\n\nproto.remove = function (interval) {\n  var weight = this.count - this.leftPoints;\n\n  if (interval[1] < this.mid) {\n    if (!this.left) {\n      return NOT_FOUND;\n    }\n\n    var rw = this.right ? this.right.count : 0;\n\n    if (4 * rw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.left.remove(interval);\n\n    if (r === EMPTY) {\n      this.left = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else if (interval[0] > this.mid) {\n    if (!this.right) {\n      return NOT_FOUND;\n    }\n\n    var lw = this.left ? this.left.count : 0;\n\n    if (4 * lw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.right.remove(interval);\n\n    if (r === EMPTY) {\n      this.right = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else {\n    if (this.count === 1) {\n      if (this.leftPoints[0] === interval) {\n        return EMPTY;\n      } else {\n        return NOT_FOUND;\n      }\n    }\n\n    if (this.leftPoints.length === 1 && this.leftPoints[0] === interval) {\n      if (this.left && this.right) {\n        var p = this;\n        var n = this.left;\n\n        while (n.right) {\n          p = n;\n          n = n.right;\n        }\n\n        if (p === this) {\n          n.right = this.right;\n        } else {\n          var l = this.left;\n          var r = this.right;\n          p.count -= n.count;\n          p.right = n.left;\n          n.left = l;\n          n.right = r;\n        }\n\n        copy(this, n);\n        this.count = (this.left ? this.left.count : 0) + (this.right ? this.right.count : 0) + this.leftPoints.length;\n      } else if (this.left) {\n        copy(this, this.left);\n      } else {\n        copy(this, this.right);\n      }\n\n      return SUCCESS;\n    }\n\n    for (var l = bounds.ge(this.leftPoints, interval, compareBegin); l < this.leftPoints.length; ++l) {\n      if (this.leftPoints[l][0] !== interval[0]) {\n        break;\n      }\n\n      if (this.leftPoints[l] === interval) {\n        this.count -= 1;\n        this.leftPoints.splice(l, 1);\n\n        for (var r = bounds.ge(this.rightPoints, interval, compareEnd); r < this.rightPoints.length; ++r) {\n          if (this.rightPoints[r][1] !== interval[1]) {\n            break;\n          } else if (this.rightPoints[r] === interval) {\n            this.rightPoints.splice(r, 1);\n            return SUCCESS;\n          }\n        }\n      }\n    }\n\n    return NOT_FOUND;\n  }\n};\n\nfunction reportLeftRange(arr, hi, cb) {\n  for (var i = 0; i < arr.length && arr[i][0] <= hi; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRightRange(arr, lo, cb) {\n  for (var i = arr.length - 1; i >= 0 && arr[i][1] >= lo; --i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRange(arr, cb) {\n  for (var i = 0; i < arr.length; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nproto.queryPoint = function (x, cb) {\n  if (x < this.mid) {\n    if (this.left) {\n      var r = this.left.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportLeftRange(this.leftPoints, x, cb);\n  } else if (x > this.mid) {\n    if (this.right) {\n      var r = this.right.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportRightRange(this.rightPoints, x, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nproto.queryInterval = function (lo, hi, cb) {\n  if (lo < this.mid && this.left) {\n    var r = this.left.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi > this.mid && this.right) {\n    var r = this.right.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi < this.mid) {\n    return reportLeftRange(this.leftPoints, hi, cb);\n  } else if (lo > this.mid) {\n    return reportRightRange(this.rightPoints, lo, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\nfunction compareBegin(a, b) {\n  var d = a[0] - b[0];\n\n  if (d) {\n    return d;\n  }\n\n  return a[1] - b[1];\n}\n\nfunction compareEnd(a, b) {\n  var d = a[1] - b[1];\n\n  if (d) {\n    return d;\n  }\n\n  return a[0] - b[0];\n}\n\nfunction createIntervalTree(intervals) {\n  if (intervals.length === 0) {\n    return null;\n  }\n\n  var pts = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    pts.push(intervals[i][0], intervals[i][1]);\n  }\n\n  pts.sort(compareNumbers);\n  var mid = pts[pts.length >> 1];\n  var leftIntervals = [];\n  var rightIntervals = [];\n  var centerIntervals = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    var s = intervals[i];\n\n    if (s[1] < mid) {\n      leftIntervals.push(s);\n    } else if (mid < s[0]) {\n      rightIntervals.push(s);\n    } else {\n      centerIntervals.push(s);\n    }\n  } //Split center intervals\n\n\n  var leftPoints = centerIntervals;\n  var rightPoints = centerIntervals.slice();\n  leftPoints.sort(compareBegin);\n  rightPoints.sort(compareEnd);\n  return new IntervalTreeNode(mid, createIntervalTree(leftIntervals), createIntervalTree(rightIntervals), leftPoints, rightPoints);\n} //User friendly wrapper that makes it possible to support empty trees\n\n\nfunction IntervalTree(root) {\n  this.root = root;\n}\n\nvar tproto = IntervalTree.prototype;\n\ntproto.insert = function (interval) {\n  if (this.root) {\n    this.root.insert(interval);\n  } else {\n    this.root = new IntervalTreeNode(interval[0], null, null, [interval], [interval]);\n  }\n};\n\ntproto.remove = function (interval) {\n  if (this.root) {\n    var r = this.root.remove(interval);\n\n    if (r === EMPTY) {\n      this.root = null;\n    }\n\n    return r !== NOT_FOUND;\n  }\n\n  return false;\n};\n\ntproto.queryPoint = function (p, cb) {\n  if (this.root) {\n    return this.root.queryPoint(p, cb);\n  }\n};\n\ntproto.queryInterval = function (lo, hi, cb) {\n  if (lo <= hi && this.root) {\n    return this.root.queryInterval(lo, hi, cb);\n  }\n};\n\nObject.defineProperty(tproto, 'count', {\n  get: function get() {\n    if (this.root) {\n      return this.root.count;\n    }\n\n    return 0;\n  }\n});\nObject.defineProperty(tproto, 'intervals', {\n  get: function get() {\n    if (this.root) {\n      return this.root.intervals([]);\n    }\n\n    return [];\n  }\n});\nexport default function createWrapper(intervals) {\n  if (!intervals || intervals.length === 0) {\n    return new IntervalTree(null);\n  }\n\n  return new IntervalTree(createIntervalTree(intervals));\n}","import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport createIntervalTree from '../vendor/intervalTree';\n\n// Position cache requirements:\n//   O(log(n)) lookup of cells to render for a given viewport size\n//   O(1) lookup of shortest measured column (so we know when to enter phase 1)\nvar PositionCache =\n/*#__PURE__*/\nfunction () {\n  function PositionCache() {\n    _classCallCheck(this, PositionCache);\n\n    _defineProperty(this, \"_columnSizeMap\", {});\n\n    _defineProperty(this, \"_intervalTree\", createIntervalTree());\n\n    _defineProperty(this, \"_leftMap\", {});\n  }\n\n  _createClass(PositionCache, [{\n    key: \"estimateTotalHeight\",\n    value: function estimateTotalHeight(cellCount, columnCount, defaultCellHeight) {\n      var unmeasuredCellCount = cellCount - this.count;\n      return this.tallestColumnSize + Math.ceil(unmeasuredCellCount / columnCount) * defaultCellHeight;\n    } // Render all cells visible within the viewport range defined.\n\n  }, {\n    key: \"range\",\n    value: function range(scrollTop, clientHeight, renderCallback) {\n      var _this = this;\n\n      this._intervalTree.queryInterval(scrollTop, scrollTop + clientHeight, function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 3),\n            top = _ref2[0],\n            _ = _ref2[1],\n            index = _ref2[2];\n\n        return renderCallback(index, _this._leftMap[index], top);\n      });\n    }\n  }, {\n    key: \"setPosition\",\n    value: function setPosition(index, left, top, height) {\n      this._intervalTree.insert([top, top + height, index]);\n\n      this._leftMap[index] = left;\n      var columnSizeMap = this._columnSizeMap;\n      var columnHeight = columnSizeMap[left];\n\n      if (columnHeight === undefined) {\n        columnSizeMap[left] = top + height;\n      } else {\n        columnSizeMap[left] = Math.max(columnHeight, top + height);\n      }\n    }\n  }, {\n    key: \"count\",\n    get: function get() {\n      return this._intervalTree.count;\n    }\n  }, {\n    key: \"shortestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = size === 0 ? height : Math.min(size, height);\n      }\n\n      return size;\n    }\n  }, {\n    key: \"tallestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = Math.max(size, height);\n      }\n\n      return size;\n    }\n  }]);\n\n  return PositionCache;\n}();\n\nexport { PositionCache as default };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport PositionCache from './PositionCache';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\nvar emptyObject = {};\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * This component efficiently displays arbitrarily positioned cells using windowing techniques.\n * Cell position is determined by an injected `cellPositioner` property.\n * Windowing is vertical; this component does not support horizontal scrolling.\n *\n * Rendering occurs in two phases:\n * 1) First pass uses estimated cell sizes (provided by the cache) to determine how many cells to measure in a batch.\n *    Batch size is chosen using a fast, naive layout algorithm that stacks images in order until the viewport has been filled.\n *    After measurement is complete (componentDidMount or componentDidUpdate) this component evaluates positioned cells\n *    in order to determine if another measurement pass is required (eg if actual cell sizes were less than estimated sizes).\n *    All measurements are permanently cached (keyed by `keyMapper`) for performance purposes.\n * 2) Second pass uses the external `cellPositioner` to layout cells.\n *    At this time the positioner has access to cached size measurements for all cells.\n *    The positions it returns are cached by Masonry for fast access later.\n *    Phase one is repeated if the user scrolls beyond the current layout's bounds.\n *    If the layout is invalidated due to eg a resize, cached positions can be cleared using `recomputeCellPositions()`.\n *\n * Animation constraints:\n *   Simple animations are supported (eg translate/slide into place on initial reveal).\n *   More complex animations are not (eg flying from one position to another on resize).\n *\n * Layout constraints:\n *   This component supports multi-column layout.\n *   The height of each item may vary.\n *   The width of each item must not exceed the width of the column it is \"in\".\n *   The left position of all items within a column must align.\n *   (Items may not span multiple columns.)\n */\n\nvar Masonry = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Masonry, _React$PureComponent);\n\n  function Masonry() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Masonry);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Masonry)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStartIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionCache\", new PositionCache());\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingCallback\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      var height = _this.props.height;\n      var eventScrollTop = event.currentTarget.scrollTop; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollTop = Math.min(Math.max(0, _this._getEstimatedTotalHeight() - height), eventScrollTop); // On iOS, we can arrive at negative offsets by swiping past the start or end.\n      // Avoid re-rendering in this case as it can cause problems; see #532 for more.\n\n      if (eventScrollTop !== scrollTop) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._debounceResetIsScrolling(); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n\n      if (_this.state.scrollTop !== scrollTop) {\n        _this.setState({\n          isScrolling: true,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Masonry, [{\n    key: \"clearCellPositions\",\n    value: function clearCellPositions() {\n      this._positionCache = new PositionCache();\n      this.forceUpdate();\n    } // HACK This method signature was intended for Grid\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref) {\n      var index = _ref.rowIndex;\n\n      if (this._invalidateOnUpdateStartIndex === null) {\n        this._invalidateOnUpdateStartIndex = index;\n        this._invalidateOnUpdateStopIndex = index;\n      } else {\n        this._invalidateOnUpdateStartIndex = Math.min(this._invalidateOnUpdateStartIndex, index);\n        this._invalidateOnUpdateStopIndex = Math.max(this._invalidateOnUpdateStopIndex, index);\n      }\n    }\n  }, {\n    key: \"recomputeCellPositions\",\n    value: function recomputeCellPositions() {\n      var stopIndex = this._positionCache.count - 1;\n      this._positionCache = new PositionCache();\n\n      this._populatePositionCache(0, stopIndex);\n\n      this.forceUpdate();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n\n      if (this.props.scrollTop !== prevProps.scrollTop) {\n        this._debounceResetIsScrolling();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          cellCount = _this$props.cellCount,\n          cellMeasurerCache = _this$props.cellMeasurerCache,\n          cellRenderer = _this$props.cellRenderer,\n          className = _this$props.className,\n          height = _this$props.height,\n          id = _this$props.id,\n          keyMapper = _this$props.keyMapper,\n          overscanByPixels = _this$props.overscanByPixels,\n          role = _this$props.role,\n          style = _this$props.style,\n          tabIndex = _this$props.tabIndex,\n          width = _this$props.width,\n          rowDirection = _this$props.rowDirection;\n      var _this$state = this.state,\n          isScrolling = _this$state.isScrolling,\n          scrollTop = _this$state.scrollTop;\n      var children = [];\n\n      var estimateTotalHeight = this._getEstimatedTotalHeight();\n\n      var shortestColumnSize = this._positionCache.shortestColumnSize;\n      var measuredCellCount = this._positionCache.count;\n      var startIndex = 0;\n      var stopIndex;\n\n      this._positionCache.range(Math.max(0, scrollTop - overscanByPixels), height + overscanByPixels * 2, function (index, left, top) {\n        var _style;\n\n        if (typeof stopIndex === 'undefined') {\n          startIndex = index;\n          stopIndex = index;\n        } else {\n          startIndex = Math.min(startIndex, index);\n          stopIndex = Math.max(stopIndex, index);\n        }\n\n        children.push(cellRenderer({\n          index: index,\n          isScrolling: isScrolling,\n          key: keyMapper(index),\n          parent: _this2,\n          style: (_style = {\n            height: cellMeasurerCache.getHeight(index)\n          }, _defineProperty(_style, rowDirection === 'ltr' ? 'left' : 'right', left), _defineProperty(_style, \"position\", 'absolute'), _defineProperty(_style, \"top\", top), _defineProperty(_style, \"width\", cellMeasurerCache.getWidth(index)), _style)\n        }));\n      }); // We need to measure additional cells for this layout\n\n\n      if (shortestColumnSize < scrollTop + height + overscanByPixels && measuredCellCount < cellCount) {\n        var batchSize = Math.min(cellCount - measuredCellCount, Math.ceil((scrollTop + height + overscanByPixels - shortestColumnSize) / cellMeasurerCache.defaultHeight * width / cellMeasurerCache.defaultWidth));\n\n        for (var _index = measuredCellCount; _index < measuredCellCount + batchSize; _index++) {\n          stopIndex = _index;\n          children.push(cellRenderer({\n            index: _index,\n            isScrolling: isScrolling,\n            key: keyMapper(_index),\n            parent: this,\n            style: {\n              width: cellMeasurerCache.getWidth(_index)\n            }\n          }));\n        }\n      }\n\n      this._startIndex = startIndex;\n      this._stopIndex = stopIndex;\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Masonry', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({\n          boxSizing: 'border-box',\n          direction: 'ltr',\n          height: autoHeight ? 'auto' : height,\n          overflowX: 'hidden',\n          overflowY: estimateTotalHeight < height ? 'hidden' : 'auto',\n          position: 'relative',\n          width: width,\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform'\n        }, style),\n        tabIndex: tabIndex\n      }, React.createElement(\"div\", {\n        className: \"ReactVirtualized__Masonry__innerScrollContainer\",\n        style: {\n          width: '100%',\n          height: estimateTotalHeight,\n          maxWidth: '100%',\n          maxHeight: estimateTotalHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }\n      }, children));\n    }\n  }, {\n    key: \"_checkInvalidateOnUpdate\",\n    value: function _checkInvalidateOnUpdate() {\n      if (typeof this._invalidateOnUpdateStartIndex === 'number') {\n        var startIndex = this._invalidateOnUpdateStartIndex;\n        var stopIndex = this._invalidateOnUpdateStopIndex;\n        this._invalidateOnUpdateStartIndex = null;\n        this._invalidateOnUpdateStopIndex = null; // Query external layout logic for position of newly-measured cells\n\n        this._populatePositionCache(startIndex, stopIndex);\n\n        this.forceUpdate();\n      }\n    }\n  }, {\n    key: \"_debounceResetIsScrolling\",\n    value: function _debounceResetIsScrolling() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n\n      this._debounceResetIsScrollingId = requestAnimationTimeout(this._debounceResetIsScrollingCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_getEstimatedTotalHeight\",\n    value: function _getEstimatedTotalHeight() {\n      var _this$props2 = this.props,\n          cellCount = _this$props2.cellCount,\n          cellMeasurerCache = _this$props2.cellMeasurerCache,\n          width = _this$props2.width;\n      var estimatedColumnCount = Math.max(1, Math.floor(width / cellMeasurerCache.defaultWidth));\n      return this._positionCache.estimateTotalHeight(cellCount, estimatedColumnCount, cellMeasurerCache.defaultHeight);\n    }\n  }, {\n    key: \"_invokeOnScrollCallback\",\n    value: function _invokeOnScrollCallback() {\n      var _this$props3 = this.props,\n          height = _this$props3.height,\n          onScroll = _this$props3.onScroll;\n      var scrollTop = this.state.scrollTop;\n\n      if (this._onScrollMemoized !== scrollTop) {\n        onScroll({\n          clientHeight: height,\n          scrollHeight: this._getEstimatedTotalHeight(),\n          scrollTop: scrollTop\n        });\n        this._onScrollMemoized = scrollTop;\n      }\n    }\n  }, {\n    key: \"_invokeOnCellsRenderedCallback\",\n    value: function _invokeOnCellsRenderedCallback() {\n      if (this._startIndexMemoized !== this._startIndex || this._stopIndexMemoized !== this._stopIndex) {\n        var onCellsRendered = this.props.onCellsRendered;\n        onCellsRendered({\n          startIndex: this._startIndex,\n          stopIndex: this._stopIndex\n        });\n        this._startIndexMemoized = this._startIndex;\n        this._stopIndexMemoized = this._stopIndex;\n      }\n    }\n  }, {\n    key: \"_populatePositionCache\",\n    value: function _populatePositionCache(startIndex, stopIndex) {\n      var _this$props4 = this.props,\n          cellMeasurerCache = _this$props4.cellMeasurerCache,\n          cellPositioner = _this$props4.cellPositioner;\n\n      for (var _index2 = startIndex; _index2 <= stopIndex; _index2++) {\n        var _cellPositioner = cellPositioner(_index2),\n            left = _cellPositioner.left,\n            top = _cellPositioner.top;\n\n        this._positionCache.setPosition(_index2, left, top, cellMeasurerCache.getHeight(_index2));\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollTop !== undefined && prevState.scrollTop !== nextProps.scrollTop) {\n        return {\n          isScrolling: true,\n          scrollTop: nextProps.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Masonry;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"autoHeight\": PropTypes.bool.isRequired,\n  \"cellCount\": PropTypes.number.isRequired,\n  \"cellMeasurerCache\": function cellMeasurerCache() {\n    return (typeof CellMeasurerCache === \"function\" ? PropTypes.instanceOf(CellMeasurerCache).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellPositioner\": function cellPositioner() {\n    return (typeof Positioner === \"function\" ? PropTypes.instanceOf(Positioner).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof CellRenderer === \"function\" ? PropTypes.instanceOf(CellRenderer).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"className\": PropTypes.string,\n  \"height\": PropTypes.number.isRequired,\n  \"id\": PropTypes.string,\n  \"keyMapper\": function keyMapper() {\n    return (typeof KeyMapper === \"function\" ? PropTypes.instanceOf(KeyMapper).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"onCellsRendered\": function onCellsRendered() {\n    return (typeof OnCellsRenderedCallback === \"function\" ? PropTypes.instanceOf(OnCellsRenderedCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"onScroll\": function onScroll() {\n    return (typeof OnScrollCallback === \"function\" ? PropTypes.instanceOf(OnScrollCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"overscanByPixels\": PropTypes.number.isRequired,\n  \"role\": PropTypes.string.isRequired,\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n  \"style\": function style(props, propName, componentName) {\n    if (!Object.prototype.hasOwnProperty.call(props, propName)) {\n      throw new Error(\"Prop `\".concat(propName, \"` has type 'any' or 'mixed', but was not provided to `\").concat(componentName, \"`. Pass undefined or any other value.\"));\n    }\n  },\n  \"tabIndex\": PropTypes.number.isRequired,\n  \"width\": PropTypes.number.isRequired,\n  \"rowDirection\": PropTypes.string.isRequired,\n  \"scrollTop\": PropTypes.number\n}), _temp);\n\n_defineProperty(Masonry, \"defaultProps\", {\n  autoHeight: false,\n  keyMapper: identity,\n  onCellsRendered: noop,\n  onScroll: noop,\n  overscanByPixels: 20,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  style: emptyObject,\n  tabIndex: 0,\n  rowDirection: 'ltr'\n});\n\nfunction identity(value) {\n  return value;\n}\n\nfunction noop() {}\n\nvar bpfrpt_proptype_CellMeasurerCache = process.env.NODE_ENV === 'production' ? null : {\n  \"defaultHeight\": PropTypes.number.isRequired,\n  \"defaultWidth\": PropTypes.number.isRequired,\n  \"getHeight\": PropTypes.func.isRequired,\n  \"getWidth\": PropTypes.func.isRequired\n};\npolyfill(Masonry);\nexport default Masonry;\nvar bpfrpt_proptype_Positioner = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_CellMeasurerCache };\nexport { bpfrpt_proptype_Positioner };","import createCellPositioner from './createCellPositioner';\nimport Masonry from './Masonry';\nexport default Masonry;\nexport { createCellPositioner, Masonry };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { CellMeasurerCache } from '../CellMeasurer';\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCacheDecorator =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCacheDecorator() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCacheDecorator);\n\n    _defineProperty(this, \"_cellMeasurerCache\", void 0);\n\n    _defineProperty(this, \"_columnIndexOffset\", void 0);\n\n    _defineProperty(this, \"_rowIndexOffset\", void 0);\n\n    _defineProperty(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      _this._cellMeasurerCache.columnWidth({\n        index: index + _this._columnIndexOffset\n      });\n    });\n\n    _defineProperty(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      _this._cellMeasurerCache.rowHeight({\n        index: index + _this._rowIndexOffset\n      });\n    });\n\n    var cellMeasurerCache = params.cellMeasurerCache,\n        _params$columnIndexOf = params.columnIndexOffset,\n        columnIndexOffset = _params$columnIndexOf === void 0 ? 0 : _params$columnIndexOf,\n        _params$rowIndexOffse = params.rowIndexOffset,\n        rowIndexOffset = _params$rowIndexOffse === void 0 ? 0 : _params$rowIndexOffse;\n    this._cellMeasurerCache = cellMeasurerCache;\n    this._columnIndexOffset = columnIndexOffset;\n    this._rowIndexOffset = rowIndexOffset;\n  }\n\n  _createClass(CellMeasurerCacheDecorator, [{\n    key: \"clear\",\n    value: function clear(rowIndex, columnIndex) {\n      this._cellMeasurerCache.clear(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellMeasurerCache.clearAll();\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._cellMeasurerCache.hasFixedHeight();\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._cellMeasurerCache.hasFixedWidth();\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getHeight(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getWidth(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.has(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      this._cellMeasurerCache.set(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset, width, height);\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCacheDecorator;\n}();\n\nexport { CellMeasurerCacheDecorator as default };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport CellMeasurerCacheDecorator from './CellMeasurerCacheDecorator';\nimport Grid from '../Grid';\nvar SCROLLBAR_SIZE_BUFFER = 20;\n/**\n * Renders 1, 2, or 4 Grids depending on configuration.\n * A main (body) Grid will always be rendered.\n * Optionally, 1-2 Grids for sticky header rows will also be rendered.\n * If no sticky columns, only 1 sticky header Grid will be rendered.\n * If sticky columns, 2 sticky header Grids will be rendered.\n */\n\nvar MultiGrid =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(MultiGrid, _React$PureComponent);\n\n  function MultiGrid(props, context) {\n    var _this;\n\n    _classCallCheck(this, MultiGrid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MultiGrid).call(this, props, context));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollbarSize: 0,\n      showHorizontalScrollbar: false,\n      showVerticalScrollbar: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomLeftGridRef\", function (ref) {\n      _this._bottomLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomRightGridRef\", function (ref) {\n      _this._bottomRightGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomLeftGrid\", function (_ref) {\n      var rowIndex = _ref.rowIndex,\n          rest = _objectWithoutProperties(_ref, [\"rowIndex\"]);\n\n      var _this$props = _this.props,\n          cellRenderer = _this$props.cellRenderer,\n          fixedRowCount = _this$props.fixedRowCount,\n          rowCount = _this$props.rowCount;\n\n      if (rowIndex === rowCount - fixedRowCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            height: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          parent: _assertThisInitialized(_this),\n          rowIndex: rowIndex + fixedRowCount\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomRightGrid\", function (_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex,\n          rest = _objectWithoutProperties(_ref2, [\"columnIndex\", \"rowIndex\"]);\n\n      var _this$props2 = _this.props,\n          cellRenderer = _this$props2.cellRenderer,\n          fixedColumnCount = _this$props2.fixedColumnCount,\n          fixedRowCount = _this$props2.fixedRowCount;\n      return cellRenderer(_objectSpread({}, rest, {\n        columnIndex: columnIndex + fixedColumnCount,\n        parent: _assertThisInitialized(_this),\n        rowIndex: rowIndex + fixedRowCount\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererTopRightGrid\", function (_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rest = _objectWithoutProperties(_ref3, [\"columnIndex\"]);\n\n      var _this$props3 = _this.props,\n          cellRenderer = _this$props3.cellRenderer,\n          columnCount = _this$props3.columnCount,\n          fixedColumnCount = _this$props3.fixedColumnCount;\n\n      if (columnIndex === columnCount - fixedColumnCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            width: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          columnIndex: columnIndex + fixedColumnCount,\n          parent: _assertThisInitialized(_this)\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnWidthRightGrid\", function (_ref4) {\n      var index = _ref4.index;\n      var _this$props4 = _this.props,\n          columnCount = _this$props4.columnCount,\n          fixedColumnCount = _this$props4.fixedColumnCount,\n          columnWidth = _this$props4.columnWidth;\n      var _this$state = _this.state,\n          scrollbarSize = _this$state.scrollbarSize,\n          showHorizontalScrollbar = _this$state.showHorizontalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showHorizontalScrollbar && index === columnCount - fixedColumnCount) {\n        return scrollbarSize;\n      }\n\n      return typeof columnWidth === 'function' ? columnWidth({\n        index: index + fixedColumnCount\n      }) : columnWidth;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft,\n          scrollTop = scrollInfo.scrollTop;\n\n      _this.setState({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      var onScroll = _this.props.onScroll;\n\n      if (onScroll) {\n        onScroll(scrollInfo);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollbarPresenceChange\", function (_ref5) {\n      var horizontal = _ref5.horizontal,\n          size = _ref5.size,\n          vertical = _ref5.vertical;\n      var _this$state2 = _this.state,\n          showHorizontalScrollbar = _this$state2.showHorizontalScrollbar,\n          showVerticalScrollbar = _this$state2.showVerticalScrollbar;\n\n      if (horizontal !== showHorizontalScrollbar || vertical !== showVerticalScrollbar) {\n        _this.setState({\n          scrollbarSize: size,\n          showHorizontalScrollbar: horizontal,\n          showVerticalScrollbar: vertical\n        });\n\n        var onScrollbarPresenceChange = _this.props.onScrollbarPresenceChange;\n\n        if (typeof onScrollbarPresenceChange === 'function') {\n          onScrollbarPresenceChange({\n            horizontal: horizontal,\n            size: size,\n            vertical: vertical\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollLeft\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft;\n\n      _this._onScroll({\n        scrollLeft: scrollLeft,\n        scrollTop: _this.state.scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollTop\", function (scrollInfo) {\n      var scrollTop = scrollInfo.scrollTop;\n\n      _this._onScroll({\n        scrollTop: scrollTop,\n        scrollLeft: _this.state.scrollLeft\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowHeightBottomGrid\", function (_ref6) {\n      var index = _ref6.index;\n      var _this$props5 = _this.props,\n          fixedRowCount = _this$props5.fixedRowCount,\n          rowCount = _this$props5.rowCount,\n          rowHeight = _this$props5.rowHeight;\n      var _this$state3 = _this.state,\n          scrollbarSize = _this$state3.scrollbarSize,\n          showVerticalScrollbar = _this$state3.showVerticalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showVerticalScrollbar && index === rowCount - fixedRowCount) {\n        return scrollbarSize;\n      }\n\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: index + fixedRowCount\n      }) : rowHeight;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topLeftGridRef\", function (ref) {\n      _this._topLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topRightGridRef\", function (ref) {\n      _this._topRightGrid = ref;\n    });\n\n    var deferredMeasurementCache = props.deferredMeasurementCache,\n        _fixedColumnCount = props.fixedColumnCount,\n        _fixedRowCount = props.fixedRowCount;\n\n    _this._maybeCalculateCachedStyles(true);\n\n    if (deferredMeasurementCache) {\n      _this._deferredMeasurementCacheBottomLeftGrid = _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: 0,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheBottomRightGrid = _fixedColumnCount > 0 || _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheTopRightGrid = _fixedColumnCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: 0\n      }) : deferredMeasurementCache;\n    }\n\n    return _this;\n  }\n\n  _createClass(MultiGrid, [{\n    key: \"forceUpdateGrids\",\n    value: function forceUpdateGrids() {\n      this._bottomLeftGrid && this._bottomLeftGrid.forceUpdate();\n      this._bottomRightGrid && this._bottomRightGrid.forceUpdate();\n      this._topLeftGrid && this._topLeftGrid.forceUpdate();\n      this._topRightGrid && this._topRightGrid.forceUpdate();\n    }\n    /** See Grid#invalidateCellSizeAfterRender */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender() {\n      var _ref7 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref7$columnIndex = _ref7.columnIndex,\n          columnIndex = _ref7$columnIndex === void 0 ? 0 : _ref7$columnIndex,\n          _ref7$rowIndex = _ref7.rowIndex,\n          rowIndex = _ref7$rowIndex === void 0 ? 0 : _ref7$rowIndex;\n\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      this._bottomLeftGrid && this._bottomLeftGrid.measureAllCells();\n      this._bottomRightGrid && this._bottomRightGrid.measureAllCells();\n      this._topLeftGrid && this._topLeftGrid.measureAllCells();\n      this._topRightGrid && this._topRightGrid.measureAllCells();\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref8 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref8$columnIndex = _ref8.columnIndex,\n          columnIndex = _ref8$columnIndex === void 0 ? 0 : _ref8$columnIndex,\n          _ref8$rowIndex = _ref8.rowIndex,\n          rowIndex = _ref8$rowIndex === void 0 ? 0 : _ref8$rowIndex;\n\n      var _this$props6 = this.props,\n          fixedColumnCount = _this$props6.fixedColumnCount,\n          fixedRowCount = _this$props6.fixedRowCount;\n      var adjustedColumnIndex = Math.max(0, columnIndex - fixedColumnCount);\n      var adjustedRowIndex = Math.max(0, rowIndex - fixedRowCount);\n      this._bottomLeftGrid && this._bottomLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._bottomRightGrid && this._bottomRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._topLeftGrid && this._topLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: rowIndex\n      });\n      this._topRightGrid && this._topRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: rowIndex\n      });\n      this._leftGridWidth = null;\n      this._topGridHeight = null;\n\n      this._maybeCalculateCachedStyles(true);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props7 = this.props,\n          scrollLeft = _this$props7.scrollLeft,\n          scrollTop = _this$props7.scrollTop;\n\n      if (scrollLeft > 0 || scrollTop > 0) {\n        var newState = {};\n\n        if (scrollLeft > 0) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop > 0) {\n          newState.scrollTop = scrollTop;\n        }\n\n        this.setState(newState);\n      }\n\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props8 = this.props,\n          onScroll = _this$props8.onScroll,\n          onSectionRendered = _this$props8.onSectionRendered,\n          onScrollbarPresenceChange = _this$props8.onScrollbarPresenceChange,\n          scrollLeftProp = _this$props8.scrollLeft,\n          scrollToColumn = _this$props8.scrollToColumn,\n          scrollTopProp = _this$props8.scrollTop,\n          scrollToRow = _this$props8.scrollToRow,\n          rest = _objectWithoutProperties(_this$props8, [\"onScroll\", \"onSectionRendered\", \"onScrollbarPresenceChange\", \"scrollLeft\", \"scrollToColumn\", \"scrollTop\", \"scrollToRow\"]);\n\n      this._prepareForRender(); // Don't render any of our Grids if there are no cells.\n      // This mirrors what Grid does,\n      // And prevents us from recording inaccurage measurements when used with CellMeasurer.\n\n\n      if (this.props.width === 0 || this.props.height === 0) {\n        return null;\n      } // scrollTop and scrollLeft props are explicitly filtered out and ignored\n\n\n      var _this$state4 = this.state,\n          scrollLeft = _this$state4.scrollLeft,\n          scrollTop = _this$state4.scrollTop;\n      return React.createElement(\"div\", {\n        style: this._containerOuterStyle\n      }, React.createElement(\"div\", {\n        style: this._containerTopStyle\n      }, this._renderTopLeftGrid(rest), this._renderTopRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollLeft: scrollLeft\n      }))), React.createElement(\"div\", {\n        style: this._containerBottomStyle\n      }, this._renderBottomLeftGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollTop: scrollTop\n      })), this._renderBottomRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        onSectionRendered: onSectionRendered,\n        scrollLeft: scrollLeft,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow,\n        scrollTop: scrollTop\n      }))));\n    }\n  }, {\n    key: \"_getBottomGridHeight\",\n    value: function _getBottomGridHeight(props) {\n      var height = props.height;\n\n      var topGridHeight = this._getTopGridHeight(props);\n\n      return height - topGridHeight;\n    }\n  }, {\n    key: \"_getLeftGridWidth\",\n    value: function _getLeftGridWidth(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          columnWidth = props.columnWidth;\n\n      if (this._leftGridWidth == null) {\n        if (typeof columnWidth === 'function') {\n          var leftGridWidth = 0;\n\n          for (var index = 0; index < fixedColumnCount; index++) {\n            leftGridWidth += columnWidth({\n              index: index\n            });\n          }\n\n          this._leftGridWidth = leftGridWidth;\n        } else {\n          this._leftGridWidth = columnWidth * fixedColumnCount;\n        }\n      }\n\n      return this._leftGridWidth;\n    }\n  }, {\n    key: \"_getRightGridWidth\",\n    value: function _getRightGridWidth(props) {\n      var width = props.width;\n\n      var leftGridWidth = this._getLeftGridWidth(props);\n\n      return width - leftGridWidth;\n    }\n  }, {\n    key: \"_getTopGridHeight\",\n    value: function _getTopGridHeight(props) {\n      var fixedRowCount = props.fixedRowCount,\n          rowHeight = props.rowHeight;\n\n      if (this._topGridHeight == null) {\n        if (typeof rowHeight === 'function') {\n          var topGridHeight = 0;\n\n          for (var index = 0; index < fixedRowCount; index++) {\n            topGridHeight += rowHeight({\n              index: index\n            });\n          }\n\n          this._topGridHeight = topGridHeight;\n        } else {\n          this._topGridHeight = rowHeight * fixedRowCount;\n        }\n      }\n\n      return this._topGridHeight;\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n        this.forceUpdate();\n      }\n    }\n    /**\n     * Avoid recreating inline styles each render; this bypasses Grid's shallowCompare.\n     * This method recalculates styles only when specific props change.\n     */\n\n  }, {\n    key: \"_maybeCalculateCachedStyles\",\n    value: function _maybeCalculateCachedStyles(resetAll) {\n      var _this$props9 = this.props,\n          columnWidth = _this$props9.columnWidth,\n          enableFixedColumnScroll = _this$props9.enableFixedColumnScroll,\n          enableFixedRowScroll = _this$props9.enableFixedRowScroll,\n          height = _this$props9.height,\n          fixedColumnCount = _this$props9.fixedColumnCount,\n          fixedRowCount = _this$props9.fixedRowCount,\n          rowHeight = _this$props9.rowHeight,\n          style = _this$props9.style,\n          styleBottomLeftGrid = _this$props9.styleBottomLeftGrid,\n          styleBottomRightGrid = _this$props9.styleBottomRightGrid,\n          styleTopLeftGrid = _this$props9.styleTopLeftGrid,\n          styleTopRightGrid = _this$props9.styleTopRightGrid,\n          width = _this$props9.width;\n      var sizeChange = resetAll || height !== this._lastRenderedHeight || width !== this._lastRenderedWidth;\n      var leftSizeChange = resetAll || columnWidth !== this._lastRenderedColumnWidth || fixedColumnCount !== this._lastRenderedFixedColumnCount;\n      var topSizeChange = resetAll || fixedRowCount !== this._lastRenderedFixedRowCount || rowHeight !== this._lastRenderedRowHeight;\n\n      if (resetAll || sizeChange || style !== this._lastRenderedStyle) {\n        this._containerOuterStyle = _objectSpread({\n          height: height,\n          overflow: 'visible',\n          // Let :focus outline show through\n          width: width\n        }, style);\n      }\n\n      if (resetAll || sizeChange || topSizeChange) {\n        this._containerTopStyle = {\n          height: this._getTopGridHeight(this.props),\n          position: 'relative',\n          width: width\n        };\n        this._containerBottomStyle = {\n          height: height - this._getTopGridHeight(this.props),\n          overflow: 'visible',\n          // Let :focus outline show through\n          position: 'relative',\n          width: width\n        };\n      }\n\n      if (resetAll || styleBottomLeftGrid !== this._lastRenderedStyleBottomLeftGrid) {\n        this._bottomLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: enableFixedColumnScroll ? 'auto' : 'hidden',\n          position: 'absolute'\n        }, styleBottomLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleBottomRightGrid !== this._lastRenderedStyleBottomRightGrid) {\n        this._bottomRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          position: 'absolute'\n        }, styleBottomRightGrid);\n      }\n\n      if (resetAll || styleTopLeftGrid !== this._lastRenderedStyleTopLeftGrid) {\n        this._topLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleTopRightGrid !== this._lastRenderedStyleTopRightGrid) {\n        this._topRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          overflowX: enableFixedRowScroll ? 'auto' : 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopRightGrid);\n      }\n\n      this._lastRenderedColumnWidth = columnWidth;\n      this._lastRenderedFixedColumnCount = fixedColumnCount;\n      this._lastRenderedFixedRowCount = fixedRowCount;\n      this._lastRenderedHeight = height;\n      this._lastRenderedRowHeight = rowHeight;\n      this._lastRenderedStyle = style;\n      this._lastRenderedStyleBottomLeftGrid = styleBottomLeftGrid;\n      this._lastRenderedStyleBottomRightGrid = styleBottomRightGrid;\n      this._lastRenderedStyleTopLeftGrid = styleTopLeftGrid;\n      this._lastRenderedStyleTopRightGrid = styleTopRightGrid;\n      this._lastRenderedWidth = width;\n    }\n  }, {\n    key: \"_prepareForRender\",\n    value: function _prepareForRender() {\n      if (this._lastRenderedColumnWidth !== this.props.columnWidth || this._lastRenderedFixedColumnCount !== this.props.fixedColumnCount) {\n        this._leftGridWidth = null;\n      }\n\n      if (this._lastRenderedFixedRowCount !== this.props.fixedRowCount || this._lastRenderedRowHeight !== this.props.rowHeight) {\n        this._topGridHeight = null;\n      }\n\n      this._maybeCalculateCachedStyles();\n\n      this._lastRenderedColumnWidth = this.props.columnWidth;\n      this._lastRenderedFixedColumnCount = this.props.fixedColumnCount;\n      this._lastRenderedFixedRowCount = this.props.fixedRowCount;\n      this._lastRenderedRowHeight = this.props.rowHeight;\n    }\n  }, {\n    key: \"_renderBottomLeftGrid\",\n    value: function _renderBottomLeftGrid(props) {\n      var enableFixedColumnScroll = props.enableFixedColumnScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          hideBottomLeftGridScrollbar = props.hideBottomLeftGridScrollbar;\n      var showVerticalScrollbar = this.state.showVerticalScrollbar;\n\n      if (!fixedColumnCount) {\n        return null;\n      }\n\n      var additionalRowCount = showVerticalScrollbar ? 1 : 0,\n          height = this._getBottomGridHeight(props),\n          width = this._getLeftGridWidth(props),\n          scrollbarSize = this.state.showVerticalScrollbar ? this.state.scrollbarSize : 0,\n          gridWidth = hideBottomLeftGridScrollbar ? width + scrollbarSize : width;\n\n      var bottomLeftGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomLeftGrid,\n        className: this.props.classNameBottomLeftGrid,\n        columnCount: fixedColumnCount,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomLeftGrid,\n        height: height,\n        onScroll: enableFixedColumnScroll ? this._onScrollTop : undefined,\n        ref: this._bottomLeftGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount) + additionalRowCount,\n        rowHeight: this._rowHeightBottomGrid,\n        style: this._bottomLeftGridStyle,\n        tabIndex: null,\n        width: gridWidth\n      }));\n\n      if (hideBottomLeftGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"BottomLeftGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._bottomLeftGridStyle, {\n            height: height,\n            width: width,\n            overflowY: 'hidden'\n          })\n        }, bottomLeftGrid);\n      }\n\n      return bottomLeftGrid;\n    }\n  }, {\n    key: \"_renderBottomRightGrid\",\n    value: function _renderBottomRightGrid(props) {\n      var columnCount = props.columnCount,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          scrollToColumn = props.scrollToColumn,\n          scrollToRow = props.scrollToRow;\n      return React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomRightGrid,\n        className: this.props.classNameBottomRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount),\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomRightGrid,\n        height: this._getBottomGridHeight(props),\n        onScroll: this._onScroll,\n        onScrollbarPresenceChange: this._onScrollbarPresenceChange,\n        ref: this._bottomRightGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount),\n        rowHeight: this._rowHeightBottomGrid,\n        scrollToColumn: scrollToColumn - fixedColumnCount,\n        scrollToRow: scrollToRow - fixedRowCount,\n        style: this._bottomRightGridStyle,\n        width: this._getRightGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopLeftGrid\",\n    value: function _renderTopLeftGrid(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount;\n\n      if (!fixedColumnCount || !fixedRowCount) {\n        return null;\n      }\n\n      return React.createElement(Grid, _extends({}, props, {\n        className: this.props.classNameTopLeftGrid,\n        columnCount: fixedColumnCount,\n        height: this._getTopGridHeight(props),\n        ref: this._topLeftGridRef,\n        rowCount: fixedRowCount,\n        style: this._topLeftGridStyle,\n        tabIndex: null,\n        width: this._getLeftGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopRightGrid\",\n    value: function _renderTopRightGrid(props) {\n      var columnCount = props.columnCount,\n          enableFixedRowScroll = props.enableFixedRowScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          scrollLeft = props.scrollLeft,\n          hideTopRightGridScrollbar = props.hideTopRightGridScrollbar;\n      var _this$state5 = this.state,\n          showHorizontalScrollbar = _this$state5.showHorizontalScrollbar,\n          scrollbarSize = _this$state5.scrollbarSize;\n\n      if (!fixedRowCount) {\n        return null;\n      }\n\n      var additionalColumnCount = showHorizontalScrollbar ? 1 : 0,\n          height = this._getTopGridHeight(props),\n          width = this._getRightGridWidth(props),\n          additionalHeight = showHorizontalScrollbar ? scrollbarSize : 0;\n\n      var gridHeight = height,\n          style = this._topRightGridStyle;\n\n      if (hideTopRightGridScrollbar) {\n        gridHeight = height + additionalHeight;\n        style = _objectSpread({}, this._topRightGridStyle, {\n          left: 0\n        });\n      }\n\n      var topRightGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererTopRightGrid,\n        className: this.props.classNameTopRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount) + additionalColumnCount,\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheTopRightGrid,\n        height: gridHeight,\n        onScroll: enableFixedRowScroll ? this._onScrollLeft : undefined,\n        ref: this._topRightGridRef,\n        rowCount: fixedRowCount,\n        scrollLeft: scrollLeft,\n        style: style,\n        tabIndex: null,\n        width: width\n      }));\n\n      if (hideTopRightGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"TopRightGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._topRightGridStyle, {\n            height: height,\n            width: width,\n            overflowX: 'hidden'\n          })\n        }, topRightGrid);\n      }\n\n      return topRightGrid;\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null && nextProps.scrollLeft >= 0 ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null && nextProps.scrollTop >= 0 ? nextProps.scrollTop : prevState.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return MultiGrid;\n}(React.PureComponent);\n\n_defineProperty(MultiGrid, \"defaultProps\", {\n  classNameBottomLeftGrid: '',\n  classNameBottomRightGrid: '',\n  classNameTopLeftGrid: '',\n  classNameTopRightGrid: '',\n  enableFixedColumnScroll: false,\n  enableFixedRowScroll: false,\n  fixedColumnCount: 0,\n  fixedRowCount: 0,\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  styleBottomLeftGrid: {},\n  styleBottomRightGrid: {},\n  styleTopLeftGrid: {},\n  styleTopRightGrid: {},\n  hideTopRightGridScrollbar: false,\n  hideBottomLeftGridScrollbar: false\n});\n\nMultiGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  classNameBottomLeftGrid: PropTypes.string.isRequired,\n  classNameBottomRightGrid: PropTypes.string.isRequired,\n  classNameTopLeftGrid: PropTypes.string.isRequired,\n  classNameTopRightGrid: PropTypes.string.isRequired,\n  enableFixedColumnScroll: PropTypes.bool.isRequired,\n  enableFixedRowScroll: PropTypes.bool.isRequired,\n  fixedColumnCount: PropTypes.number.isRequired,\n  fixedRowCount: PropTypes.number.isRequired,\n  onScrollbarPresenceChange: PropTypes.func,\n  style: PropTypes.object.isRequired,\n  styleBottomLeftGrid: PropTypes.object.isRequired,\n  styleBottomRightGrid: PropTypes.object.isRequired,\n  styleTopLeftGrid: PropTypes.object.isRequired,\n  styleTopRightGrid: PropTypes.object.isRequired,\n  hideTopRightGridScrollbar: PropTypes.bool,\n  hideBottomLeftGridScrollbar: PropTypes.bool\n} : {};\npolyfill(MultiGrid);\nexport default MultiGrid;","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * HOC that simplifies the process of synchronizing scrolling between two or more virtualized components.\n */\n\nvar ScrollSync =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ScrollSync, _React$PureComponent);\n\n  function ScrollSync(props, context) {\n    var _this;\n\n    _classCallCheck(this, ScrollSync);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ScrollSync).call(this, props, context));\n    _this.state = {\n      clientHeight: 0,\n      clientWidth: 0,\n      scrollHeight: 0,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollWidth: 0\n    };\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ScrollSync, [{\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state = this.state,\n          clientHeight = _this$state.clientHeight,\n          clientWidth = _this$state.clientWidth,\n          scrollHeight = _this$state.scrollHeight,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop,\n          scrollWidth = _this$state.scrollWidth;\n      return children({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        onScroll: this._onScroll,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref) {\n      var clientHeight = _ref.clientHeight,\n          clientWidth = _ref.clientWidth,\n          scrollHeight = _ref.scrollHeight,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          scrollWidth = _ref.scrollWidth;\n      this.setState({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }]);\n\n  return ScrollSync;\n}(React.PureComponent);\n\nexport { ScrollSync as default };\nScrollSync.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering 2 or more virtualized components.\n   * This function should implement the following signature:\n   * ({ onScroll, scrollLeft, scrollTop }) => PropTypes.element\n   */\n  children: PropTypes.func.isRequired\n} : {};","import * as React from 'react';\nexport default function defaultHeaderRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      style = _ref.style;\n  return React.createElement(\"div\", {\n    className: className,\n    role: \"row\",\n    style: style\n  }, columns);\n}\ndefaultHeaderRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRowRendererParams;\nimport { bpfrpt_proptype_HeaderRowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","var SortDirection = {\n  /**\n   * Sort items in ascending order.\n   * This means arranging from the lowest value to the highest (e.g. a-z, 0-9).\n   */\n  ASC: 'ASC',\n\n  /**\n   * Sort items in descending order.\n   * This means arranging from the highest value to the lowest (e.g. z-a, 9-0).\n   */\n  DESC: 'DESC'\n};\nexport default SortDirection;","import clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport SortDirection from './SortDirection';\n/**\n * Displayed beside a header to indicate that a Table is currently sorted by this column.\n */\n\nexport default function SortIndicator(_ref) {\n  var sortDirection = _ref.sortDirection;\n  var classNames = clsx('ReactVirtualized__Table__sortableHeaderIcon', {\n    'ReactVirtualized__Table__sortableHeaderIcon--ASC': sortDirection === SortDirection.ASC,\n    'ReactVirtualized__Table__sortableHeaderIcon--DESC': sortDirection === SortDirection.DESC\n  });\n  return React.createElement(\"svg\", {\n    className: classNames,\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 24 24\"\n  }, sortDirection === SortDirection.ASC ? React.createElement(\"path\", {\n    d: \"M7 14l5-5 5 5z\"\n  }) : React.createElement(\"path\", {\n    d: \"M7 10l5 5 5-5z\"\n  }), React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  }));\n}\nSortIndicator.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC])\n} : {};","import * as React from 'react';\nimport SortIndicator from './SortIndicator';\n\n/**\n * Default table header renderer.\n */\nexport default function defaultHeaderRenderer(_ref) {\n  var dataKey = _ref.dataKey,\n      label = _ref.label,\n      sortBy = _ref.sortBy,\n      sortDirection = _ref.sortDirection;\n  var showSortIndicator = sortBy === dataKey;\n  var children = [React.createElement(\"span\", {\n    className: \"ReactVirtualized__Table__headerTruncatedText\",\n    key: \"label\",\n    title: typeof label === 'string' ? label : null\n  }, label)];\n\n  if (showSortIndicator) {\n    children.push(React.createElement(SortIndicator, {\n      key: \"SortIndicator\",\n      sortDirection: sortDirection\n    }));\n  }\n\n  return children;\n}\ndefaultHeaderRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRendererParams;\nimport { bpfrpt_proptype_HeaderRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\n\n/**\n * Default row renderer for Table.\n */\nexport default function defaultRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      index = _ref.index,\n      key = _ref.key,\n      onRowClick = _ref.onRowClick,\n      onRowDoubleClick = _ref.onRowDoubleClick,\n      onRowMouseOut = _ref.onRowMouseOut,\n      onRowMouseOver = _ref.onRowMouseOver,\n      onRowRightClick = _ref.onRowRightClick,\n      rowData = _ref.rowData,\n      style = _ref.style;\n  var a11yProps = {\n    'aria-rowindex': index + 1\n  };\n\n  if (onRowClick || onRowDoubleClick || onRowMouseOut || onRowMouseOver || onRowRightClick) {\n    a11yProps['aria-label'] = 'row';\n    a11yProps.tabIndex = 0;\n\n    if (onRowClick) {\n      a11yProps.onClick = function (event) {\n        return onRowClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowDoubleClick) {\n      a11yProps.onDoubleClick = function (event) {\n        return onRowDoubleClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOut) {\n      a11yProps.onMouseOut = function (event) {\n        return onRowMouseOut({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOver) {\n      a11yProps.onMouseOver = function (event) {\n        return onRowMouseOver({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowRightClick) {\n      a11yProps.onContextMenu = function (event) {\n        return onRowRightClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n  }\n\n  return React.createElement(\"div\", _extends({}, a11yProps, {\n    className: className,\n    key: key,\n    role: \"row\",\n    style: style\n  }), columns);\n}\ndefaultRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_RowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_RowRendererParams;\nimport { bpfrpt_proptype_RowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport SortDirection from './SortDirection';\n/**\n * Describes the header and cell contents of a table column.\n */\n\nvar Column =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Column, _React$Component);\n\n  function Column() {\n    _classCallCheck(this, Column);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Column).apply(this, arguments));\n  }\n\n  return Column;\n}(React.Component);\n\n_defineProperty(Column, \"defaultProps\", {\n  cellDataGetter: defaultCellDataGetter,\n  cellRenderer: defaultCellRenderer,\n  defaultSortDirection: SortDirection.ASC,\n  flexGrow: 0,\n  flexShrink: 1,\n  headerRenderer: defaultHeaderRenderer,\n  style: {}\n});\n\nexport { Column as default };\nColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Optional aria-label value to set on the column header */\n  'aria-label': PropTypes.string,\n\n  /**\n   * Callback responsible for returning a cell's data, given its :dataKey\n   * ({ columnData: any, dataKey: string, rowData: any }): any\n   */\n  cellDataGetter: PropTypes.func,\n\n  /**\n   * Callback responsible for rendering a cell's contents.\n   * ({ cellData: any, columnData: any, dataKey: string, rowData: any, rowIndex: number }): node\n   */\n  cellRenderer: PropTypes.func,\n\n  /** Optional CSS class to apply to cell */\n  className: PropTypes.string,\n\n  /** Optional additional data passed to this column's :cellDataGetter */\n  columnData: PropTypes.object,\n\n  /** Uniquely identifies the row-data attribute corresponding to this cell */\n  dataKey: PropTypes.any.isRequired,\n\n  /** Optional direction to be used when clicked the first time */\n  defaultSortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** If sort is enabled for the table at large, disable it for this column */\n  disableSort: PropTypes.bool,\n\n  /** Flex grow style; defaults to 0 */\n  flexGrow: PropTypes.number,\n\n  /** Flex shrink style; defaults to 1 */\n  flexShrink: PropTypes.number,\n\n  /** Optional CSS class to apply to this column's header */\n  headerClassName: PropTypes.string,\n\n  /**\n   * Optional callback responsible for rendering a column header contents.\n   * ({ columnData: object, dataKey: string, disableSort: boolean, label: node, sortBy: string, sortDirection: string }): PropTypes.node\n   */\n  headerRenderer: PropTypes.func.isRequired,\n\n  /** Optional inline style to apply to this column's header */\n  headerStyle: PropTypes.object,\n\n  /** Optional id to set on the column header */\n  id: PropTypes.string,\n\n  /** Header label for this column */\n  label: PropTypes.node,\n\n  /** Maximum width of column; this property will only be used if :flexGrow is > 0. */\n  maxWidth: PropTypes.number,\n\n  /** Minimum width of column. */\n  minWidth: PropTypes.number,\n\n  /** Optional inline style to apply to cell */\n  style: PropTypes.object,\n\n  /** Flex basis (width) for this column; This value can grow or shrink based on :flexGrow and :flexShrink properties. */\n  width: PropTypes.number.isRequired\n} : {};","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport Column from './Column';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer';\nimport SortDirection from './SortDirection';\n/**\n * Table component with fixed headers and virtualized rows for improved performance with large data sets.\n * This component expects explicit width, height, and padding parameters.\n */\n\nvar Table =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Table, _React$PureComponent);\n\n  function Table(props) {\n    var _this;\n\n    _classCallCheck(this, Table);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Table).call(this, props));\n    _this.state = {\n      scrollbarWidth: 0\n    };\n    _this._createColumn = _this._createColumn.bind(_assertThisInitialized(_this));\n    _this._createRow = _this._createRow.bind(_assertThisInitialized(_this));\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    _this._onSectionRendered = _this._onSectionRendered.bind(_assertThisInitialized(_this));\n    _this._setRef = _this._setRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Table, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref) {\n      var alignment = _ref.alignment,\n          index = _ref.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref3$columnIndex = _ref3.columnIndex,\n          columnIndex = _ref3$columnIndex === void 0 ? 0 : _ref3$columnIndex,\n          _ref3$rowIndex = _ref3.rowIndex,\n          rowIndex = _ref3$rowIndex === void 0 ? 0 : _ref3$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"getScrollbarWidth\",\n    value: function getScrollbarWidth() {\n      if (this.Grid) {\n        var _Grid = findDOMNode(this.Grid);\n\n        var clientWidth = _Grid.clientWidth || 0;\n        var offsetWidth = _Grid.offsetWidth || 0;\n        return offsetWidth - clientWidth;\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          children = _this$props.children,\n          className = _this$props.className,\n          disableHeader = _this$props.disableHeader,\n          gridClassName = _this$props.gridClassName,\n          gridStyle = _this$props.gridStyle,\n          headerHeight = _this$props.headerHeight,\n          headerRowRenderer = _this$props.headerRowRenderer,\n          height = _this$props.height,\n          id = _this$props.id,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          rowClassName = _this$props.rowClassName,\n          rowStyle = _this$props.rowStyle,\n          scrollToIndex = _this$props.scrollToIndex,\n          style = _this$props.style,\n          width = _this$props.width;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var availableRowsHeight = disableHeader ? height : height - headerHeight;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: -1\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: -1\n      }) : rowStyle; // Precompute and cache column styles before rendering rows and columns to speed things up\n\n      this._cachedColumnStyles = [];\n      React.Children.toArray(children).forEach(function (column, index) {\n        var flexStyles = _this2._getFlexStyleForColumn(column, column.props.style);\n\n        _this2._cachedColumnStyles[index] = _objectSpread({\n          overflow: 'hidden'\n        }, flexStyles);\n      }); // Note that we specify :rowCount, :scrollbarWidth, :sortBy, and :sortDirection as properties on Grid even though these have nothing to do with Grid.\n      // This is done because Grid is a pure component and won't update unless its properties or state has changed.\n      // Any property that should trigger a re-render of Grid then is specified here to avoid a stale display.\n\n      return React.createElement(\"div\", {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-labelledby\": this.props['aria-labelledby'],\n        \"aria-colcount\": React.Children.toArray(children).length,\n        \"aria-rowcount\": this.props.rowCount,\n        className: clsx('ReactVirtualized__Table', className),\n        id: id,\n        role: \"grid\",\n        style: style\n      }, !disableHeader && headerRowRenderer({\n        className: clsx('ReactVirtualized__Table__headerRow', rowClass),\n        columns: this._getHeaderColumns(),\n        style: _objectSpread({\n          height: headerHeight,\n          overflow: 'hidden',\n          paddingRight: scrollbarWidth,\n          width: width\n        }, rowStyleObject)\n      }), React.createElement(Grid, _extends({}, this.props, {\n        \"aria-readonly\": null,\n        autoContainerWidth: true,\n        className: clsx('ReactVirtualized__Table__Grid', gridClassName),\n        cellRenderer: this._createRow,\n        columnWidth: width,\n        columnCount: 1,\n        height: availableRowsHeight,\n        id: undefined,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        role: \"rowgroup\",\n        scrollbarWidth: scrollbarWidth,\n        scrollToRow: scrollToIndex,\n        style: _objectSpread({}, gridStyle, {\n          overflowX: 'hidden'\n        })\n      })));\n    }\n  }, {\n    key: \"_createColumn\",\n    value: function _createColumn(_ref4) {\n      var column = _ref4.column,\n          columnIndex = _ref4.columnIndex,\n          isScrolling = _ref4.isScrolling,\n          parent = _ref4.parent,\n          rowData = _ref4.rowData,\n          rowIndex = _ref4.rowIndex;\n      var onColumnClick = this.props.onColumnClick;\n      var _column$props = column.props,\n          cellDataGetter = _column$props.cellDataGetter,\n          cellRenderer = _column$props.cellRenderer,\n          className = _column$props.className,\n          columnData = _column$props.columnData,\n          dataKey = _column$props.dataKey,\n          id = _column$props.id;\n      var cellData = cellDataGetter({\n        columnData: columnData,\n        dataKey: dataKey,\n        rowData: rowData\n      });\n      var renderedCell = cellRenderer({\n        cellData: cellData,\n        columnData: columnData,\n        columnIndex: columnIndex,\n        dataKey: dataKey,\n        isScrolling: isScrolling,\n        parent: parent,\n        rowData: rowData,\n        rowIndex: rowIndex\n      });\n\n      var onClick = function onClick(event) {\n        onColumnClick && onColumnClick({\n          columnData: columnData,\n          dataKey: dataKey,\n          event: event\n        });\n      };\n\n      var style = this._cachedColumnStyles[columnIndex];\n      var title = typeof renderedCell === 'string' ? renderedCell : null; // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n      return React.createElement(\"div\", {\n        \"aria-colindex\": columnIndex + 1,\n        \"aria-describedby\": id,\n        className: clsx('ReactVirtualized__Table__rowColumn', className),\n        key: 'Row' + rowIndex + '-' + 'Col' + columnIndex,\n        onClick: onClick,\n        role: \"gridcell\",\n        style: style,\n        title: title\n      }, renderedCell);\n    }\n  }, {\n    key: \"_createHeader\",\n    value: function _createHeader(_ref5) {\n      var column = _ref5.column,\n          index = _ref5.index;\n      var _this$props2 = this.props,\n          headerClassName = _this$props2.headerClassName,\n          headerStyle = _this$props2.headerStyle,\n          onHeaderClick = _this$props2.onHeaderClick,\n          sort = _this$props2.sort,\n          sortBy = _this$props2.sortBy,\n          sortDirection = _this$props2.sortDirection;\n      var _column$props2 = column.props,\n          columnData = _column$props2.columnData,\n          dataKey = _column$props2.dataKey,\n          defaultSortDirection = _column$props2.defaultSortDirection,\n          disableSort = _column$props2.disableSort,\n          headerRenderer = _column$props2.headerRenderer,\n          id = _column$props2.id,\n          label = _column$props2.label;\n      var sortEnabled = !disableSort && sort;\n      var classNames = clsx('ReactVirtualized__Table__headerColumn', headerClassName, column.props.headerClassName, {\n        ReactVirtualized__Table__sortableHeaderColumn: sortEnabled\n      });\n\n      var style = this._getFlexStyleForColumn(column, _objectSpread({}, headerStyle, {}, column.props.headerStyle));\n\n      var renderedHeader = headerRenderer({\n        columnData: columnData,\n        dataKey: dataKey,\n        disableSort: disableSort,\n        label: label,\n        sortBy: sortBy,\n        sortDirection: sortDirection\n      });\n      var headerOnClick, headerOnKeyDown, headerTabIndex, headerAriaSort, headerAriaLabel;\n\n      if (sortEnabled || onHeaderClick) {\n        // If this is a sortable header, clicking it should update the table data's sorting.\n        var isFirstTimeSort = sortBy !== dataKey; // If this is the firstTime sort of this column, use the column default sort order.\n        // Otherwise, invert the direction of the sort.\n\n        var newSortDirection = isFirstTimeSort ? defaultSortDirection : sortDirection === SortDirection.DESC ? SortDirection.ASC : SortDirection.DESC;\n\n        var onClick = function onClick(event) {\n          sortEnabled && sort({\n            defaultSortDirection: defaultSortDirection,\n            event: event,\n            sortBy: dataKey,\n            sortDirection: newSortDirection\n          });\n          onHeaderClick && onHeaderClick({\n            columnData: columnData,\n            dataKey: dataKey,\n            event: event\n          });\n        };\n\n        var onKeyDown = function onKeyDown(event) {\n          if (event.key === 'Enter' || event.key === ' ') {\n            onClick(event);\n          }\n        };\n\n        headerAriaLabel = column.props['aria-label'] || label || dataKey;\n        headerAriaSort = 'none';\n        headerTabIndex = 0;\n        headerOnClick = onClick;\n        headerOnKeyDown = onKeyDown;\n      }\n\n      if (sortBy === dataKey) {\n        headerAriaSort = sortDirection === SortDirection.ASC ? 'ascending' : 'descending';\n      } // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n\n      return React.createElement(\"div\", {\n        \"aria-label\": headerAriaLabel,\n        \"aria-sort\": headerAriaSort,\n        className: classNames,\n        id: id,\n        key: 'Header-Col' + index,\n        onClick: headerOnClick,\n        onKeyDown: headerOnKeyDown,\n        role: \"columnheader\",\n        style: style,\n        tabIndex: headerTabIndex\n      }, renderedHeader);\n    }\n  }, {\n    key: \"_createRow\",\n    value: function _createRow(_ref6) {\n      var _this3 = this;\n\n      var index = _ref6.rowIndex,\n          isScrolling = _ref6.isScrolling,\n          key = _ref6.key,\n          parent = _ref6.parent,\n          style = _ref6.style;\n      var _this$props3 = this.props,\n          children = _this$props3.children,\n          onRowClick = _this$props3.onRowClick,\n          onRowDoubleClick = _this$props3.onRowDoubleClick,\n          onRowRightClick = _this$props3.onRowRightClick,\n          onRowMouseOver = _this$props3.onRowMouseOver,\n          onRowMouseOut = _this$props3.onRowMouseOut,\n          rowClassName = _this$props3.rowClassName,\n          rowGetter = _this$props3.rowGetter,\n          rowRenderer = _this$props3.rowRenderer,\n          rowStyle = _this$props3.rowStyle;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: index\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: index\n      }) : rowStyle;\n      var rowData = rowGetter({\n        index: index\n      });\n      var columns = React.Children.toArray(children).map(function (column, columnIndex) {\n        return _this3._createColumn({\n          column: column,\n          columnIndex: columnIndex,\n          isScrolling: isScrolling,\n          parent: parent,\n          rowData: rowData,\n          rowIndex: index,\n          scrollbarWidth: scrollbarWidth\n        });\n      });\n      var className = clsx('ReactVirtualized__Table__row', rowClass);\n\n      var flattenedStyle = _objectSpread({}, style, {\n        height: this._getRowHeight(index),\n        overflow: 'hidden',\n        paddingRight: scrollbarWidth\n      }, rowStyleObject);\n\n      return rowRenderer({\n        className: className,\n        columns: columns,\n        index: index,\n        isScrolling: isScrolling,\n        key: key,\n        onRowClick: onRowClick,\n        onRowDoubleClick: onRowDoubleClick,\n        onRowRightClick: onRowRightClick,\n        onRowMouseOver: onRowMouseOver,\n        onRowMouseOut: onRowMouseOut,\n        rowData: rowData,\n        style: flattenedStyle\n      });\n    }\n    /**\n     * Determines the flex-shrink, flex-grow, and width values for a cell (header or column).\n     */\n\n  }, {\n    key: \"_getFlexStyleForColumn\",\n    value: function _getFlexStyleForColumn(column) {\n      var customStyle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var flexValue = \"\".concat(column.props.flexGrow, \" \").concat(column.props.flexShrink, \" \").concat(column.props.width, \"px\");\n\n      var style = _objectSpread({}, customStyle, {\n        flex: flexValue,\n        msFlex: flexValue,\n        WebkitFlex: flexValue\n      });\n\n      if (column.props.maxWidth) {\n        style.maxWidth = column.props.maxWidth;\n      }\n\n      if (column.props.minWidth) {\n        style.minWidth = column.props.minWidth;\n      }\n\n      return style;\n    }\n  }, {\n    key: \"_getHeaderColumns\",\n    value: function _getHeaderColumns() {\n      var _this4 = this;\n\n      var _this$props4 = this.props,\n          children = _this$props4.children,\n          disableHeader = _this$props4.disableHeader;\n      var items = disableHeader ? [] : React.Children.toArray(children);\n      return items.map(function (column, index) {\n        return _this4._createHeader({\n          column: column,\n          index: index\n        });\n      });\n    }\n  }, {\n    key: \"_getRowHeight\",\n    value: function _getRowHeight(rowIndex) {\n      var rowHeight = this.props.rowHeight;\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: rowIndex\n      }) : rowHeight;\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref7) {\n      var clientHeight = _ref7.clientHeight,\n          scrollHeight = _ref7.scrollHeight,\n          scrollTop = _ref7.scrollTop;\n      var onScroll = this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    }\n  }, {\n    key: \"_onSectionRendered\",\n    value: function _onSectionRendered(_ref8) {\n      var rowOverscanStartIndex = _ref8.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref8.rowOverscanStopIndex,\n          rowStartIndex = _ref8.rowStartIndex,\n          rowStopIndex = _ref8.rowStopIndex;\n      var onRowsRendered = this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    }\n  }, {\n    key: \"_setRef\",\n    value: function _setRef(ref) {\n      this.Grid = ref;\n    }\n  }, {\n    key: \"_setScrollbarWidth\",\n    value: function _setScrollbarWidth() {\n      var scrollbarWidth = this.getScrollbarWidth();\n      this.setState({\n        scrollbarWidth: scrollbarWidth\n      });\n    }\n  }]);\n\n  return Table;\n}(React.PureComponent);\n\n_defineProperty(Table, \"defaultProps\", {\n  disableHeader: false,\n  estimatedRowSize: 30,\n  headerHeight: 0,\n  headerStyle: {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  rowRenderer: defaultRowRenderer,\n  headerRowRenderer: defaultHeaderRowRenderer,\n  rowStyle: {},\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { Table as default };\nTable.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** This is just set on the grid top element. */\n  'aria-label': PropTypes.string,\n\n  /** This is just set on the grid top element. */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /** One or more Columns describing the data displayed in this row */\n  children: function children(props) {\n    var children = React.Children.toArray(props.children);\n\n    for (var i = 0; i < children.length; i++) {\n      var childType = children[i].type;\n\n      if (childType !== Column && !(childType.prototype instanceof Column)) {\n        return new Error('Table only accepts children of type Column');\n      }\n    }\n  },\n\n  /** Optional CSS class name */\n  className: PropTypes.string,\n\n  /** Disable rendering the header at all */\n  disableHeader: PropTypes.bool,\n\n  /**\n   * Used to estimate the total height of a Table before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  estimatedRowSize: PropTypes.number.isRequired,\n\n  /** Optional custom CSS class name to attach to inner Grid element. */\n  gridClassName: PropTypes.string,\n\n  /** Optional inline style to attach to inner Grid element. */\n  gridStyle: PropTypes.object,\n\n  /** Optional CSS class to apply to all column headers */\n  headerClassName: PropTypes.string,\n\n  /** Fixed height of header row */\n  headerHeight: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: any[],\n   *   style: any\n   * }): PropTypes.node\n   */\n  headerRowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table header columns. */\n  headerStyle: PropTypes.object,\n\n  /** Fixed/available height for out DOM element */\n  height: PropTypes.number.isRequired,\n\n  /** Optional id */\n  id: PropTypes.string,\n\n  /** Optional renderer to be used in place of table body rows when rowCount is 0 */\n  noRowsRenderer: PropTypes.func,\n\n  /**\n   * Optional callback when a column is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onColumnClick: PropTypes.func,\n\n  /**\n   * Optional callback when a column's header is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onHeaderClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user double-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowDoubleClick: PropTypes.func,\n\n  /**\n   * Callback invoked when the mouse leaves a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOut: PropTypes.func,\n\n  /**\n   * Callback invoked when a user moves the mouse over a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOver: PropTypes.func,\n\n  /**\n   * Callback invoked when a user right-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowRightClick: PropTypes.func,\n\n  /**\n   * Callback invoked with information about the slice of rows that were just rendered.\n   * ({ startIndex, stopIndex }): void\n   */\n  onRowsRendered: PropTypes.func,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, scrollHeight, scrollTop }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  overscanIndicesGetter: PropTypes.func.isRequired,\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  overscanRowCount: PropTypes.number.isRequired,\n\n  /**\n   * Optional CSS class to apply to all table rows (including the header row).\n   * This property can be a CSS class name (string) or a function that returns a class name.\n   * If a function is provided its signature should be: ({ index: number }): string\n   */\n  rowClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n\n  /**\n   * Callback responsible for returning a data row given an index.\n   * ({ index: number }): any\n   */\n  rowGetter: PropTypes.func.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * ({ index: number }): number\n   */\n  rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n\n  /** Number of rows in table. */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: Array,\n   *   index: number,\n   *   isScrolling: boolean,\n   *   onRowClick: ?Function,\n   *   onRowDoubleClick: ?Function,\n   *   onRowMouseOver: ?Function,\n   *   onRowMouseOut: ?Function,\n   *   rowData: any,\n   *   style: any\n   * }): PropTypes.node\n   */\n  rowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table rows. */\n  rowStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n\n  /** See Grid#scrollToAlignment */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  scrollToIndex: PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Sort function to be called if a sortable header is clicked.\n   * Should implement the following interface: ({\n   *   defaultSortDirection: 'ASC' | 'DESC',\n   *   event: MouseEvent,\n   *   sortBy: string,\n   *   sortDirection: SortDirection\n   * }): void\n   */\n  sort: PropTypes.func,\n\n  /** Table data is currently sorted by this :dataKey (if it is sorted at all) */\n  sortBy: PropTypes.string,\n\n  /** Table data is currently sorted in this direction (if it is sorted at all) */\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** Optional inline style */\n  style: PropTypes.object,\n\n  /** Tab index for focus */\n  tabIndex: PropTypes.number,\n\n  /** Width of list */\n  width: PropTypes.number.isRequired\n} : {};\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";","/**\n * Default accessor for returning a cell value for a given attribute.\n * This function expects to operate on either a vanilla Object or an Immutable Map.\n * You should override the column's cellDataGetter if your data is some other type of object.\n */\nexport default function defaultCellDataGetter(_ref) {\n  var dataKey = _ref.dataKey,\n      rowData = _ref.rowData;\n\n  if (typeof rowData.get === 'function') {\n    return rowData.get(dataKey);\n  } else {\n    return rowData[dataKey];\n  }\n}\nimport { bpfrpt_proptype_CellDataGetterParams } from \"./types\";","/**\n * Default cell renderer that displays an attribute as a simple string\n * You should override the column's cellRenderer if your data is some other type of object.\n */\nexport default function defaultCellRenderer(_ref) {\n  var cellData = _ref.cellData;\n\n  if (cellData == null) {\n    return '';\n  } else {\n    return String(cellData);\n  }\n}\nimport { bpfrpt_proptype_CellRendererParams } from \"./types\";","import createMultiSort from './createMultiSort';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer.js';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport Column from './Column';\nimport SortDirection from './SortDirection';\nimport SortIndicator from './SortIndicator';\nimport Table from './Table';\nexport default Table;\nexport { createMultiSort, defaultCellDataGetter, defaultCellRenderer, defaultHeaderRowRenderer, defaultHeaderRenderer, defaultRowRenderer, Column, SortDirection, SortIndicator, Table };","import { requestAnimationTimeout, cancelAnimationTimeout } from '../../utils/requestAnimationTimeout';\nvar mountedInstances = [];\nvar originalBodyPointerEvents = null;\nvar disablePointerEventsTimeoutId = null;\n\nfunction enablePointerEventsIfDisabled() {\n  if (disablePointerEventsTimeoutId) {\n    disablePointerEventsTimeoutId = null;\n\n    if (document.body && originalBodyPointerEvents != null) {\n      document.body.style.pointerEvents = originalBodyPointerEvents;\n    }\n\n    originalBodyPointerEvents = null;\n  }\n}\n\nfunction enablePointerEventsAfterDelayCallback() {\n  enablePointerEventsIfDisabled();\n  mountedInstances.forEach(function (instance) {\n    return instance.__resetIsScrolling();\n  });\n}\n\nfunction enablePointerEventsAfterDelay() {\n  if (disablePointerEventsTimeoutId) {\n    cancelAnimationTimeout(disablePointerEventsTimeoutId);\n  }\n\n  var maximumTimeout = 0;\n  mountedInstances.forEach(function (instance) {\n    maximumTimeout = Math.max(maximumTimeout, instance.props.scrollingResetTimeInterval);\n  });\n  disablePointerEventsTimeoutId = requestAnimationTimeout(enablePointerEventsAfterDelayCallback, maximumTimeout);\n}\n\nfunction onScrollWindow(event) {\n  if (event.currentTarget === window && originalBodyPointerEvents == null && document.body) {\n    originalBodyPointerEvents = document.body.style.pointerEvents;\n    document.body.style.pointerEvents = 'none';\n  }\n\n  enablePointerEventsAfterDelay();\n  mountedInstances.forEach(function (instance) {\n    if (instance.props.scrollElement === event.currentTarget) {\n      instance.__handleWindowScrollEvent();\n    }\n  });\n}\n\nexport function registerScrollListener(component, element) {\n  if (!mountedInstances.some(function (instance) {\n    return instance.props.scrollElement === element;\n  })) {\n    element.addEventListener('scroll', onScrollWindow);\n  }\n\n  mountedInstances.push(component);\n}\nexport function unregisterScrollListener(component, element) {\n  mountedInstances = mountedInstances.filter(function (instance) {\n    return instance !== component;\n  });\n\n  if (!mountedInstances.length) {\n    element.removeEventListener('scroll', onScrollWindow);\n\n    if (disablePointerEventsTimeoutId) {\n      cancelAnimationTimeout(disablePointerEventsTimeoutId);\n      enablePointerEventsIfDisabled();\n    }\n  }\n}\nimport { bpfrpt_proptype_WindowScroller } from \"../WindowScroller.js\";","/**\n * Gets the dimensions of the element, accounting for API differences between\n * `window` and other DOM elements.\n */\n// TODO Move this into WindowScroller and import from there\nvar isWindow = function isWindow(element) {\n  return element === window;\n};\n\nvar getBoundingBox = function getBoundingBox(element) {\n  return element.getBoundingClientRect();\n};\n\nexport function getDimensions(scrollElement, props) {\n  if (!scrollElement) {\n    return {\n      height: props.serverHeight,\n      width: props.serverWidth\n    };\n  } else if (isWindow(scrollElement)) {\n    var _window = window,\n        innerHeight = _window.innerHeight,\n        innerWidth = _window.innerWidth;\n    return {\n      height: typeof innerHeight === 'number' ? innerHeight : 0,\n      width: typeof innerWidth === 'number' ? innerWidth : 0\n    };\n  } else {\n    return getBoundingBox(scrollElement);\n  }\n}\n/**\n * Gets the vertical and horizontal position of an element within its scroll container.\n * Elements that have been “scrolled past” return negative values.\n * Handles edge-case where a user is navigating back (history) from an already-scrolled page.\n * In this case the body’s top or left position will be a negative number and this element’s top or left will be increased (by that amount).\n */\n\nexport function getPositionOffset(element, container) {\n  if (isWindow(container) && document.documentElement) {\n    var containerElement = document.documentElement;\n    var elementRect = getBoundingBox(element);\n    var containerRect = getBoundingBox(containerElement);\n    return {\n      top: elementRect.top - containerRect.top,\n      left: elementRect.left - containerRect.left\n    };\n  } else {\n    var scrollOffset = getScrollOffset(container);\n\n    var _elementRect = getBoundingBox(element);\n\n    var _containerRect = getBoundingBox(container);\n\n    return {\n      top: _elementRect.top + scrollOffset.top - _containerRect.top,\n      left: _elementRect.left + scrollOffset.left - _containerRect.left\n    };\n  }\n}\n/**\n * Gets the vertical and horizontal scroll amount of the element, accounting for IE compatibility\n * and API differences between `window` and other DOM elements.\n */\n\nexport function getScrollOffset(element) {\n  if (isWindow(element) && document.documentElement) {\n    return {\n      top: 'scrollY' in window ? window.scrollY : document.documentElement.scrollTop,\n      left: 'scrollX' in window ? window.scrollX : document.documentElement.scrollLeft\n    };\n  } else {\n    return {\n      top: element.scrollTop,\n      left: element.scrollLeft\n    };\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { registerScrollListener, unregisterScrollListener } from './utils/onScroll';\nimport { getDimensions, getPositionOffset, getScrollOffset } from './utils/dimensions';\nimport createDetectElementResize from '../vendor/detectElementResize';\n\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\nexport var IS_SCROLLING_TIMEOUT = 150;\n\nvar getWindow = function getWindow() {\n  return typeof window !== 'undefined' ? window : undefined;\n};\n\nvar WindowScroller = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(WindowScroller, _React$PureComponent);\n\n  function WindowScroller() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, WindowScroller);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(WindowScroller)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", getWindow());\n\n    _defineProperty(_assertThisInitialized(_this), \"_isMounted\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromTop\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromLeft\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", _objectSpread({}, getDimensions(_this.props.scrollElement, _this.props), {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    }));\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('WindowScroller registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onChildScroll\", function (_ref) {\n      var scrollTop = _ref.scrollTop;\n\n      if (_this.state.scrollTop === scrollTop) {\n        return;\n      }\n\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        if (typeof scrollElement.scrollTo === 'function') {\n          scrollElement.scrollTo(0, scrollTop + _this._positionFromTop);\n        } else {\n          scrollElement.scrollTop = scrollTop + _this._positionFromTop;\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerResizeListener\", function (element) {\n      if (element === window) {\n        window.addEventListener('resize', _this._onResize, false);\n      } else {\n        _this._detectElementResize.addResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_unregisterResizeListener\", function (element) {\n      if (element === window) {\n        window.removeEventListener('resize', _this._onResize, false);\n      } else if (element) {\n        _this._detectElementResize.removeResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__handleWindowScrollEvent\", function () {\n      if (!_this._isMounted) {\n        return;\n      }\n\n      var onScroll = _this.props.onScroll;\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        var scrollOffset = getScrollOffset(scrollElement);\n        var scrollLeft = Math.max(0, scrollOffset.left - _this._positionFromLeft);\n        var scrollTop = Math.max(0, scrollOffset.top - _this._positionFromTop);\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        onScroll({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__resetIsScrolling\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(WindowScroller, [{\n    key: \"updatePosition\",\n    value: function updatePosition() {\n      var scrollElement = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.scrollElement;\n      var onResize = this.props.onResize;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width;\n      var thisNode = this._child || ReactDOM.findDOMNode(this);\n\n      if (thisNode instanceof Element && scrollElement) {\n        var offset = getPositionOffset(thisNode, scrollElement);\n        this._positionFromTop = offset.top;\n        this._positionFromLeft = offset.left;\n      }\n\n      var dimensions = getDimensions(scrollElement, this.props);\n\n      if (height !== dimensions.height || width !== dimensions.width) {\n        this.setState({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n        onResize({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var scrollElement = this.props.scrollElement;\n      this._detectElementResize = createDetectElementResize();\n      this.updatePosition(scrollElement);\n\n      if (scrollElement) {\n        registerScrollListener(this, scrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n\n      this._isMounted = true;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var scrollElement = this.props.scrollElement;\n      var prevScrollElement = prevProps.scrollElement;\n\n      if (prevScrollElement !== scrollElement && prevScrollElement != null && scrollElement != null) {\n        this.updatePosition(scrollElement);\n        unregisterScrollListener(this, prevScrollElement);\n        registerScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(prevScrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var scrollElement = this.props.scrollElement;\n\n      if (scrollElement) {\n        unregisterScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(scrollElement);\n      }\n\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state2 = this.state,\n          isScrolling = _this$state2.isScrolling,\n          scrollTop = _this$state2.scrollTop,\n          scrollLeft = _this$state2.scrollLeft,\n          height = _this$state2.height,\n          width = _this$state2.width;\n      return children({\n        onChildScroll: this._onChildScroll,\n        registerChild: this._registerChild,\n        height: height,\n        isScrolling: isScrolling,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        width: width\n      });\n    }\n  }]);\n\n  return WindowScroller;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /**\n   * Function responsible for rendering children.\n   * This function should implement the following signature:\n   * ({ height, isScrolling, scrollLeft, scrollTop, width }) => PropTypes.element\n   */\n  \"children\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-resize: ({ height, width }) */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-scroll: ({ scrollLeft, scrollTop }) */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** Element to attach scroll event listeners. Defaults to window. */\n  \"scrollElement\": PropTypes.oneOfType([PropTypes.any, function () {\n    return (typeof Element === \"function\" ? PropTypes.instanceOf(Element) : PropTypes.any).apply(this, arguments);\n  }]),\n\n  /**\n   * Wait this amount of time after the last scroll event before resetting child `pointer-events`.\n   */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Height used for server-side rendering */\n  \"serverHeight\": PropTypes.number.isRequired,\n\n  /** Width used for server-side rendering */\n  \"serverWidth\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(WindowScroller, \"defaultProps\", {\n  onResize: function onResize() {},\n  onScroll: function onScroll() {},\n  scrollingResetTimeInterval: IS_SCROLLING_TIMEOUT,\n  scrollElement: getWindow(),\n  serverHeight: 0,\n  serverWidth: 0\n});\n\nexport { WindowScroller as default };\nimport PropTypes from \"prop-types\";","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport useTheme from '../styles/useTheme';\nimport IconButton from '../IconButton';\n/**\n * @ignore - internal component.\n */\n\nvar _ref = /*#__PURE__*/React.createElement(KeyboardArrowRight, null);\n\nvar _ref2 = /*#__PURE__*/React.createElement(KeyboardArrowLeft, null);\n\nvar _ref3 = /*#__PURE__*/React.createElement(KeyboardArrowLeft, null);\n\nvar _ref4 = /*#__PURE__*/React.createElement(KeyboardArrowRight, null);\n\nvar TablePaginationActions = /*#__PURE__*/React.forwardRef(function TablePaginationActions(props, ref) {\n  var backIconButtonProps = props.backIconButtonProps,\n      count = props.count,\n      nextIconButtonProps = props.nextIconButtonProps,\n      onChangePage = props.onChangePage,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      other = _objectWithoutProperties(props, [\"backIconButtonProps\", \"count\", \"nextIconButtonProps\", \"onChangePage\", \"page\", \"rowsPerPage\"]);\n\n  var theme = useTheme();\n\n  var handleBackButtonClick = function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  };\n\n  var handleNextButtonClick = function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(IconButton, _extends({\n    onClick: handleBackButtonClick,\n    disabled: page === 0,\n    color: \"inherit\"\n  }, backIconButtonProps), theme.direction === 'rtl' ? _ref : _ref2), /*#__PURE__*/React.createElement(IconButton, _extends({\n    onClick: handleNextButtonClick,\n    disabled: count !== -1 ? page >= Math.ceil(count / rowsPerPage) - 1 : false,\n    color: \"inherit\"\n  }, nextIconButtonProps), theme.direction === 'rtl' ? _ref3 : _ref4));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePaginationActions.propTypes = {\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) element.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onChangePage: PropTypes.func.isRequired,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: PropTypes.number.isRequired,\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired\n} : void 0;\nexport default TablePaginationActions;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@material-ui/utils';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport InputBase from '../InputBase';\nimport MenuItem from '../MenuItem';\nimport Select from '../Select';\nimport TableCell from '../TableCell';\nimport Toolbar from '../Toolbar';\nimport Typography from '../Typography';\nimport TablePaginationActions from './TablePaginationActions';\nimport useId from '../utils/unstable_useId';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.primary,\n      fontSize: theme.typography.pxToRem(14),\n      overflow: 'auto',\n      // Increase the specificity to override TableCell.\n      '&:last-child': {\n        padding: 0\n      }\n    },\n\n    /* Styles applied to the Toolbar component. */\n    toolbar: {\n      minHeight: 52,\n      paddingRight: 2\n    },\n\n    /* Styles applied to the spacer element. */\n    spacer: {\n      flex: '1 1 100%'\n    },\n\n    /* Styles applied to the caption Typography components if `variant=\"caption\"`. */\n    caption: {\n      flexShrink: 0\n    },\n    // TODO v5: `.selectRoot` should be merged with `.input`\n\n    /* Styles applied to the Select component root element. */\n    selectRoot: {\n      marginRight: 32,\n      marginLeft: 8\n    },\n\n    /* Styles applied to the Select component `select` class. */\n    select: {\n      paddingLeft: 8,\n      paddingRight: 24,\n      textAlign: 'right',\n      textAlignLast: 'right' // Align <select> on Chrome.\n\n    },\n    // TODO v5: remove\n\n    /* Styles applied to the Select component `icon` class. */\n    selectIcon: {},\n\n    /* Styles applied to the `InputBase` component. */\n    input: {\n      color: 'inherit',\n      fontSize: 'inherit',\n      flexShrink: 0\n    },\n\n    /* Styles applied to the MenuItem component. */\n    menuItem: {},\n\n    /* Styles applied to the internal `TablePaginationActions` component. */\n    actions: {\n      flexShrink: 0,\n      marginLeft: 20\n    }\n  };\n};\n\nvar defaultLabelDisplayedRows = function defaultLabelDisplayedRows(_ref) {\n  var from = _ref.from,\n      to = _ref.to,\n      count = _ref.count;\n  return \"\".concat(from, \"-\").concat(to, \" of \").concat(count !== -1 ? count : \"more than \".concat(to));\n};\n\nvar defaultRowsPerPageOptions = [10, 25, 50, 100];\n/**\n * A `TableCell` based component for placing inside `TableFooter` for pagination.\n */\n\nvar TablePagination = /*#__PURE__*/React.forwardRef(function TablePagination(props, ref) {\n  var _props$ActionsCompone = props.ActionsComponent,\n      ActionsComponent = _props$ActionsCompone === void 0 ? TablePaginationActions : _props$ActionsCompone,\n      backIconButtonProps = props.backIconButtonProps,\n      _props$backIconButton = props.backIconButtonText,\n      backIconButtonText = _props$backIconButton === void 0 ? 'Previous page' : _props$backIconButton,\n      classes = props.classes,\n      className = props.className,\n      colSpanProp = props.colSpan,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? TableCell : _props$component,\n      count = props.count,\n      _props$labelDisplayed = props.labelDisplayedRows,\n      labelDisplayedRows = _props$labelDisplayed === void 0 ? defaultLabelDisplayedRows : _props$labelDisplayed,\n      _props$labelRowsPerPa = props.labelRowsPerPage,\n      labelRowsPerPage = _props$labelRowsPerPa === void 0 ? 'Rows per page:' : _props$labelRowsPerPa,\n      nextIconButtonProps = props.nextIconButtonProps,\n      _props$nextIconButton = props.nextIconButtonText,\n      nextIconButtonText = _props$nextIconButton === void 0 ? 'Next page' : _props$nextIconButton,\n      onChangePage = props.onChangePage,\n      onChangeRowsPerPage = props.onChangeRowsPerPage,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      _props$rowsPerPageOpt = props.rowsPerPageOptions,\n      rowsPerPageOptions = _props$rowsPerPageOpt === void 0 ? defaultRowsPerPageOptions : _props$rowsPerPageOpt,\n      _props$SelectProps = props.SelectProps,\n      SelectProps = _props$SelectProps === void 0 ? {} : _props$SelectProps,\n      other = _objectWithoutProperties(props, [\"ActionsComponent\", \"backIconButtonProps\", \"backIconButtonText\", \"classes\", \"className\", \"colSpan\", \"component\", \"count\", \"labelDisplayedRows\", \"labelRowsPerPage\", \"nextIconButtonProps\", \"nextIconButtonText\", \"onChangePage\", \"onChangeRowsPerPage\", \"page\", \"rowsPerPage\", \"rowsPerPageOptions\", \"SelectProps\"]);\n\n  var colSpan;\n\n  if (Component === TableCell || Component === 'td') {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n\n  var selectId = useId();\n  var labelId = useId();\n  var MenuItemComponent = SelectProps.native ? 'option' : MenuItem;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    colSpan: colSpan,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(Toolbar, {\n    className: classes.toolbar\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.spacer\n  }), rowsPerPageOptions.length > 1 && /*#__PURE__*/React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"body2\",\n    className: classes.caption,\n    id: labelId\n  }, labelRowsPerPage), rowsPerPageOptions.length > 1 && /*#__PURE__*/React.createElement(Select, _extends({\n    classes: {\n      select: classes.select,\n      icon: classes.selectIcon\n    },\n    input: /*#__PURE__*/React.createElement(InputBase, {\n      className: clsx(classes.input, classes.selectRoot)\n    }),\n    value: rowsPerPage,\n    onChange: onChangeRowsPerPage,\n    id: selectId,\n    labelId: labelId\n  }, SelectProps), rowsPerPageOptions.map(function (rowsPerPageOption) {\n    return /*#__PURE__*/React.createElement(MenuItemComponent, {\n      className: classes.menuItem,\n      key: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption,\n      value: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption\n    }, rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption);\n  })), /*#__PURE__*/React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"body2\",\n    className: classes.caption\n  }, labelDisplayedRows({\n    from: count === 0 ? 0 : page * rowsPerPage + 1,\n    to: count !== -1 ? Math.min(count, (page + 1) * rowsPerPage) : (page + 1) * rowsPerPage,\n    count: count === -1 ? -1 : count,\n    page: page\n  })), /*#__PURE__*/React.createElement(ActionsComponent, {\n    className: classes.actions,\n    backIconButtonProps: _extends({\n      title: backIconButtonText,\n      'aria-label': backIconButtonText\n    }, backIconButtonProps),\n    count: count,\n    nextIconButtonProps: _extends({\n      title: nextIconButtonText,\n      'aria-label': nextIconButtonText\n    }, nextIconButtonProps),\n    onChangePage: onChangePage,\n    page: page,\n    rowsPerPage: rowsPerPage\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePagination.propTypes = {\n  /**\n   * The component used for displaying the actions.\n   * Either a string to use a HTML element or a component.\n   */\n  ActionsComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) component.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * Text label for the back arrow icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  backIconButtonText: PropTypes.string,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * The total number of rows.\n   *\n   * To enable server side pagination for an unknown number of items, provide -1.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`\n   * object.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  labelDisplayedRows: PropTypes.func,\n\n  /**\n   * Customize the rows per page label.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  labelRowsPerPage: PropTypes.node,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Text label for the next arrow icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  nextIconButtonText: PropTypes.string,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onChangePage: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onChangeRowsPerPage: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(PropTypes.number.isRequired, function (props) {\n    var count = props.count,\n        page = props.page,\n        rowsPerPage = props.rowsPerPage;\n\n    if (count === -1) {\n      return null;\n    }\n\n    var newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n\n    if (page < 0 || page > newLastPage) {\n      return new Error('Material-UI: The page prop of a TablePagination is out of range ' + \"(0 to \".concat(newLastPage, \", but page is \").concat(page, \").\"));\n    }\n\n    return null;\n  }),\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired,\n\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   */\n  rowsPerPageOptions: PropTypes.array,\n\n  /**\n   * Props applied to the rows per page [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTablePagination'\n})(TablePagination);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport ArrowDownwardIcon from '../internal/svg-icons/ArrowDownward';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      cursor: 'pointer',\n      display: 'inline-flex',\n      justifyContent: 'flex-start',\n      flexDirection: 'inherit',\n      alignItems: 'center',\n      '&:focus': {\n        color: theme.palette.text.secondary\n      },\n      '&:hover': {\n        color: theme.palette.text.secondary,\n        '& $icon': {\n          opacity: 0.5\n        }\n      },\n      '&$active': {\n        color: theme.palette.text.primary,\n        // && instead of & is a workaround for https://github.com/cssinjs/jss/issues/1045\n        '&& $icon': {\n          opacity: 1,\n          color: theme.palette.text.secondary\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the root element if `active={true}`. */\n    active: {},\n\n    /* Styles applied to the icon component. */\n    icon: {\n      fontSize: 18,\n      marginRight: 4,\n      marginLeft: 4,\n      opacity: 0,\n      transition: theme.transitions.create(['opacity', 'transform'], {\n        duration: theme.transitions.duration.shorter\n      }),\n      userSelect: 'none'\n    },\n\n    /* Styles applied to the icon component if `direction=\"desc\"`. */\n    iconDirectionDesc: {\n      transform: 'rotate(0deg)'\n    },\n\n    /* Styles applied to the icon component if `direction=\"asc\"`. */\n    iconDirectionAsc: {\n      transform: 'rotate(180deg)'\n    }\n  };\n};\n/**\n * A button based label for placing inside `TableCell` for column sorting.\n */\n\nvar TableSortLabel = /*#__PURE__*/React.forwardRef(function TableSortLabel(props, ref) {\n  var _props$active = props.active,\n      active = _props$active === void 0 ? false : _props$active,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'asc' : _props$direction,\n      _props$hideSortIcon = props.hideSortIcon,\n      hideSortIcon = _props$hideSortIcon === void 0 ? false : _props$hideSortIcon,\n      _props$IconComponent = props.IconComponent,\n      IconComponent = _props$IconComponent === void 0 ? ArrowDownwardIcon : _props$IconComponent,\n      other = _objectWithoutProperties(props, [\"active\", \"children\", \"classes\", \"className\", \"direction\", \"hideSortIcon\", \"IconComponent\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className, active && classes.active),\n    component: \"span\",\n    disableRipple: true,\n    ref: ref\n  }, other), children, hideSortIcon && !active ? null : /*#__PURE__*/React.createElement(IconComponent, {\n    className: clsx(classes.icon, classes[\"iconDirection\".concat(capitalize(direction))])\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableSortLabel.propTypes = {\n  /**\n   * If `true`, the label will have the active styling (should be true for the sorted column).\n   */\n  active: PropTypes.bool,\n\n  /**\n   * Label contents, the arrow will be appended automatically.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The current sort direction.\n   */\n  direction: PropTypes.oneOf(['asc', 'desc']),\n\n  /**\n   * Hide sort icon when active is false.\n   */\n  hideSortIcon: PropTypes.bool,\n\n  /**\n   * Sort icon to use.\n   */\n  IconComponent: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableSortLabel'\n})(TableSortLabel);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport TableContext from './TableContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'table',\n      width: '100%',\n      borderCollapse: 'collapse',\n      borderSpacing: 0,\n      '& caption': _extends({}, theme.typography.body2, {\n        padding: theme.spacing(2),\n        color: theme.palette.text.secondary,\n        textAlign: 'left',\n        captionSide: 'bottom'\n      })\n    },\n\n    /* Styles applied to the root element if `stickyHeader={true}`. */\n    stickyHeader: {\n      borderCollapse: 'separate'\n    }\n  };\n};\nvar defaultComponent = 'table';\nvar Table = /*#__PURE__*/React.forwardRef(function Table(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      _props$padding = props.padding,\n      padding = _props$padding === void 0 ? 'default' : _props$padding,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$stickyHeader = props.stickyHeader,\n      stickyHeader = _props$stickyHeader === void 0 ? false : _props$stickyHeader,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"padding\", \"size\", \"stickyHeader\"]);\n\n  var table = React.useMemo(function () {\n    return {\n      padding: padding,\n      size: size,\n      stickyHeader: stickyHeader\n    };\n  }, [padding, size, stickyHeader]);\n  return /*#__PURE__*/React.createElement(TableContext.Provider, {\n    value: table\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    role: Component === defaultComponent ? null : 'table',\n    ref: ref,\n    className: clsx(classes.root, className, stickyHeader && classes.stickyHeader)\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Table.propTypes = {\n  /**\n   * The content of the table, normally `TableHead` and `TableBody`.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Allows TableCells to inherit padding of the Table.\n   */\n  padding: PropTypes.oneOf(['default', 'checkbox', 'none']),\n\n  /**\n   * Allows TableCells to inherit size of the Table.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * Set the header sticky.\n   *\n   * ⚠️ It doesn't work with IE 11.\n   */\n  stickyHeader: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTable'\n})(Table);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table-footer-group'\n  }\n};\nvar tablelvl2 = {\n  variant: 'footer'\n};\nvar defaultComponent = 'tfoot';\nvar TableFooter = /*#__PURE__*/React.forwardRef(function TableFooter(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Tablelvl2Context.Provider, {\n    value: tablelvl2\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: Component === defaultComponent ? null : 'rowgroup'\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableFooter.propTypes = {\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableFooter'\n})(TableFooter);","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import { deepmerge } from '@material-ui/utils';\nimport createMuiTheme from './createMuiTheme';\nexport default function createMuiStrictModeTheme(options) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  return createMuiTheme.apply(void 0, [deepmerge({\n    unstable_strictMode: true\n  }, options)].concat(args));\n}","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nexport function isUnitless(value) {\n  return String(parseFloat(value)).length === String(value).length;\n} // Ported from Compass\n// https://github.com/Compass/compass/blob/master/core/stylesheets/compass/typography/_units.scss\n// Emulate the sass function \"unit\"\n\nexport function getUnit(input) {\n  return String(input).match(/[\\d.\\-+]*\\s*(.*)/)[1] || '';\n} // Emulate the sass function \"unitless\"\n\nexport function toUnitless(length) {\n  return parseFloat(length);\n} // Convert any CSS <length> or <percentage> value to any another.\n// From https://github.com/KyleAMathews/convert-css-length\n\nexport function convertLength(baseFontSize) {\n  return function (length, toUnit) {\n    var fromUnit = getUnit(length); // Optimize for cases where `from` and `to` units are accidentally the same.\n\n    if (fromUnit === toUnit) {\n      return length;\n    } // Convert input length to pixels.\n\n\n    var pxLength = toUnitless(length);\n\n    if (fromUnit !== 'px') {\n      if (fromUnit === 'em') {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n      } else if (fromUnit === 'rem') {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n        return length;\n      }\n    } // Convert length in pixels to the output unit\n\n\n    var outputLength = pxLength;\n\n    if (toUnit !== 'px') {\n      if (toUnit === 'em') {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else if (toUnit === 'rem') {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else {\n        return length;\n      }\n    }\n\n    return parseFloat(outputLength.toFixed(5)) + toUnit;\n  };\n}\nexport function alignProperty(_ref) {\n  var size = _ref.size,\n      grid = _ref.grid;\n  var sizeBelow = size - size % grid;\n  var sizeAbove = sizeBelow + grid;\n  return size - sizeBelow < sizeAbove - size ? sizeBelow : sizeAbove;\n} // fontGrid finds a minimal grid (in rem) for the fontSize values so that the\n// lineHeight falls under a x pixels grid, 4px in the case of Material Design,\n// without changing the relative line height\n\nexport function fontGrid(_ref2) {\n  var lineHeight = _ref2.lineHeight,\n      pixels = _ref2.pixels,\n      htmlFontSize = _ref2.htmlFontSize;\n  return pixels / (lineHeight * htmlFontSize);\n}\n/**\n * generate a responsive version of a given CSS property\n * @example\n * responsiveProperty({\n *   cssProperty: 'fontSize',\n *   min: 15,\n *   max: 20,\n *   unit: 'px',\n *   breakpoints: [300, 600],\n * })\n *\n * // this returns\n *\n * {\n *   fontSize: '15px',\n *   '@media (min-width:300px)': {\n *     fontSize: '17.5px',\n *   },\n *   '@media (min-width:600px)': {\n *     fontSize: '20px',\n *   },\n * }\n *\n * @param {Object} params\n * @param {string} params.cssProperty - The CSS property to be made responsive\n * @param {number} params.min - The smallest value of the CSS property\n * @param {number} params.max - The largest value of the CSS property\n * @param {string} [params.unit] - The unit to be used for the CSS property\n * @param {Array.number} [params.breakpoints]  - An array of breakpoints\n * @param {number} [params.alignStep] - Round scaled value to fall under this grid\n * @returns {Object} responsive styles for {params.cssProperty}\n */\n\nexport function responsiveProperty(_ref3) {\n  var cssProperty = _ref3.cssProperty,\n      min = _ref3.min,\n      max = _ref3.max,\n      _ref3$unit = _ref3.unit,\n      unit = _ref3$unit === void 0 ? 'rem' : _ref3$unit,\n      _ref3$breakpoints = _ref3.breakpoints,\n      breakpoints = _ref3$breakpoints === void 0 ? [600, 960, 1280] : _ref3$breakpoints,\n      _ref3$transform = _ref3.transform,\n      transform = _ref3$transform === void 0 ? null : _ref3$transform;\n\n  var output = _defineProperty({}, cssProperty, \"\".concat(min).concat(unit));\n\n  var factor = (max - min) / breakpoints[breakpoints.length - 1];\n  breakpoints.forEach(function (breakpoint) {\n    var value = min + factor * breakpoint;\n\n    if (transform !== null) {\n      value = transform(value);\n    }\n\n    output[\"@media (min-width:\".concat(breakpoint, \"px)\")] = _defineProperty({}, cssProperty, \"\".concat(Math.round(value * 10000) / 10000).concat(unit));\n  });\n  return output;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@material-ui/utils\";\nimport { isUnitless, convertLength, responsiveProperty, alignProperty, fontGrid } from './cssUtils';\nexport default function responsiveFontSizes(themeInput) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$breakpoints = options.breakpoints,\n      breakpoints = _options$breakpoints === void 0 ? ['sm', 'md', 'lg'] : _options$breakpoints,\n      _options$disableAlign = options.disableAlign,\n      disableAlign = _options$disableAlign === void 0 ? false : _options$disableAlign,\n      _options$factor = options.factor,\n      factor = _options$factor === void 0 ? 2 : _options$factor,\n      _options$variants = options.variants,\n      variants = _options$variants === void 0 ? ['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline'] : _options$variants;\n\n  var theme = _extends({}, themeInput);\n\n  theme.typography = _extends({}, theme.typography);\n  var typography = theme.typography; // Convert between css lengths e.g. em->px or px->rem\n  // Set the baseFontSize for your project. Defaults to 16px (also the browser default).\n\n  var convert = convertLength(typography.htmlFontSize);\n  var breakpointValues = breakpoints.map(function (x) {\n    return theme.breakpoints.values[x];\n  });\n  variants.forEach(function (variant) {\n    var style = typography[variant];\n    var remFontSize = parseFloat(convert(style.fontSize, 'rem'));\n\n    if (remFontSize <= 1) {\n      return;\n    }\n\n    var maxFontSize = remFontSize;\n    var minFontSize = 1 + (maxFontSize - 1) / factor;\n    var lineHeight = style.lineHeight;\n\n    if (!isUnitless(lineHeight) && !disableAlign) {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? \"Material-UI: Unsupported non-unitless line height with grid alignment.\\nUse unitless line heights instead.\" : _formatMuiErrorMessage(6));\n    }\n\n    if (!isUnitless(lineHeight)) {\n      // make it unitless\n      lineHeight = parseFloat(convert(lineHeight, 'rem')) / parseFloat(remFontSize);\n    }\n\n    var transform = null;\n\n    if (!disableAlign) {\n      transform = function transform(value) {\n        return alignProperty({\n          size: value,\n          grid: fontGrid({\n            pixels: 4,\n            lineHeight: lineHeight,\n            htmlFontSize: typography.htmlFontSize\n          })\n        });\n      };\n    }\n\n    typography[variant] = _extends({}, style, responsiveProperty({\n      cssProperty: 'fontSize',\n      min: minFontSize,\n      max: maxFontSize,\n      unit: 'rem',\n      breakpoints: breakpointValues,\n      transform: transform\n    }));\n  });\n  return theme;\n}","import { withThemeCreator } from '@material-ui/styles';\nimport defaultTheme from './defaultTheme';\nvar withTheme = withThemeCreator({\n  defaultTheme: defaultTheme\n});\nexport default withTheme;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","var _typeof = require(\"../helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bpfrpt_proptype_VisibleCellRange = exports.bpfrpt_proptype_Alignment = exports.bpfrpt_proptype_OverscanIndicesGetter = exports.bpfrpt_proptype_OverscanIndices = exports.bpfrpt_proptype_OverscanIndicesGetterParams = exports.bpfrpt_proptype_RenderedSection = exports.bpfrpt_proptype_ScrollbarPresenceChange = exports.bpfrpt_proptype_Scroll = exports.bpfrpt_proptype_NoContentRenderer = exports.bpfrpt_proptype_CellSize = exports.bpfrpt_proptype_CellSizeGetter = exports.bpfrpt_proptype_CellRangeRenderer = exports.bpfrpt_proptype_CellRangeRendererParams = exports.bpfrpt_proptype_StyleCache = exports.bpfrpt_proptype_CellCache = exports.bpfrpt_proptype_CellRenderer = exports.bpfrpt_proptype_CellRendererParams = exports.bpfrpt_proptype_CellPosition = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _ScalingCellSizeAndPositionManager = _interopRequireDefault(require(\"./utils/ScalingCellSizeAndPositionManager\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar bpfrpt_proptype_CellPosition = process.env.NODE_ENV === 'production' ? null : {\n  \"columnIndex\": _propTypes[\"default\"].number.isRequired,\n  \"rowIndex\": _propTypes[\"default\"].number.isRequired\n};\nexports.bpfrpt_proptype_CellPosition = bpfrpt_proptype_CellPosition;\nvar bpfrpt_proptype_CellRendererParams = process.env.NODE_ENV === 'production' ? null : {\n  \"columnIndex\": _propTypes[\"default\"].number.isRequired,\n  \"isScrolling\": _propTypes[\"default\"].bool.isRequired,\n  \"isVisible\": _propTypes[\"default\"].bool.isRequired,\n  \"key\": _propTypes[\"default\"].string.isRequired,\n  \"parent\": _propTypes[\"default\"].object.isRequired,\n  \"rowIndex\": _propTypes[\"default\"].number.isRequired,\n  \"style\": _propTypes[\"default\"].object.isRequired\n};\nexports.bpfrpt_proptype_CellRendererParams = bpfrpt_proptype_CellRendererParams;\nvar bpfrpt_proptype_CellRenderer = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].func;\nexports.bpfrpt_proptype_CellRenderer = bpfrpt_proptype_CellRenderer;\nvar bpfrpt_proptype_CellCache = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].objectOf(_propTypes[\"default\"].node.isRequired);\nexports.bpfrpt_proptype_CellCache = bpfrpt_proptype_CellCache;\nvar bpfrpt_proptype_StyleCache = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].objectOf(_propTypes[\"default\"].object.isRequired);\nexports.bpfrpt_proptype_StyleCache = bpfrpt_proptype_StyleCache;\nvar bpfrpt_proptype_CellRangeRendererParams = process.env.NODE_ENV === 'production' ? null : {\n  \"cellCache\": _propTypes[\"default\"].objectOf(_propTypes[\"default\"].node.isRequired).isRequired,\n  \"cellRenderer\": _propTypes[\"default\"].func.isRequired,\n  \"columnSizeAndPositionManager\": function columnSizeAndPositionManager() {\n    return (typeof _ScalingCellSizeAndPositionManager[\"default\"] === \"function\" ? _propTypes[\"default\"].instanceOf(_ScalingCellSizeAndPositionManager[\"default\"]).isRequired : _propTypes[\"default\"].any.isRequired).apply(this, arguments);\n  },\n  \"columnStartIndex\": _propTypes[\"default\"].number.isRequired,\n  \"columnStopIndex\": _propTypes[\"default\"].number.isRequired,\n  \"deferredMeasurementCache\": _propTypes[\"default\"].object,\n  \"horizontalOffsetAdjustment\": _propTypes[\"default\"].number.isRequired,\n  \"isScrolling\": _propTypes[\"default\"].bool.isRequired,\n  \"isScrollingOptOut\": _propTypes[\"default\"].bool.isRequired,\n  \"parent\": _propTypes[\"default\"].object.isRequired,\n  \"rowSizeAndPositionManager\": function rowSizeAndPositionManager() {\n    return (typeof _ScalingCellSizeAndPositionManager[\"default\"] === \"function\" ? _propTypes[\"default\"].instanceOf(_ScalingCellSizeAndPositionManager[\"default\"]).isRequired : _propTypes[\"default\"].any.isRequired).apply(this, arguments);\n  },\n  \"rowStartIndex\": _propTypes[\"default\"].number.isRequired,\n  \"rowStopIndex\": _propTypes[\"default\"].number.isRequired,\n  \"scrollLeft\": _propTypes[\"default\"].number.isRequired,\n  \"scrollTop\": _propTypes[\"default\"].number.isRequired,\n  \"styleCache\": _propTypes[\"default\"].objectOf(_propTypes[\"default\"].object.isRequired).isRequired,\n  \"verticalOffsetAdjustment\": _propTypes[\"default\"].number.isRequired,\n  \"visibleColumnIndices\": _propTypes[\"default\"].object.isRequired,\n  \"visibleRowIndices\": _propTypes[\"default\"].object.isRequired\n};\nexports.bpfrpt_proptype_CellRangeRendererParams = bpfrpt_proptype_CellRangeRendererParams;\nvar bpfrpt_proptype_CellRangeRenderer = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].func;\nexports.bpfrpt_proptype_CellRangeRenderer = bpfrpt_proptype_CellRangeRenderer;\nvar bpfrpt_proptype_CellSizeGetter = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].func;\nexports.bpfrpt_proptype_CellSizeGetter = bpfrpt_proptype_CellSizeGetter;\nvar bpfrpt_proptype_CellSize = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].func, _propTypes[\"default\"].number]);\nexports.bpfrpt_proptype_CellSize = bpfrpt_proptype_CellSize;\nvar bpfrpt_proptype_NoContentRenderer = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].func;\nexports.bpfrpt_proptype_NoContentRenderer = bpfrpt_proptype_NoContentRenderer;\nvar bpfrpt_proptype_Scroll = process.env.NODE_ENV === 'production' ? null : {\n  \"clientHeight\": _propTypes[\"default\"].number.isRequired,\n  \"clientWidth\": _propTypes[\"default\"].number.isRequired,\n  \"scrollHeight\": _propTypes[\"default\"].number.isRequired,\n  \"scrollLeft\": _propTypes[\"default\"].number.isRequired,\n  \"scrollTop\": _propTypes[\"default\"].number.isRequired,\n  \"scrollWidth\": _propTypes[\"default\"].number.isRequired\n};\nexports.bpfrpt_proptype_Scroll = bpfrpt_proptype_Scroll;\nvar bpfrpt_proptype_ScrollbarPresenceChange = process.env.NODE_ENV === 'production' ? null : {\n  \"horizontal\": _propTypes[\"default\"].bool.isRequired,\n  \"vertical\": _propTypes[\"default\"].bool.isRequired,\n  \"size\": _propTypes[\"default\"].number.isRequired\n};\nexports.bpfrpt_proptype_ScrollbarPresenceChange = bpfrpt_proptype_ScrollbarPresenceChange;\nvar bpfrpt_proptype_RenderedSection = process.env.NODE_ENV === 'production' ? null : {\n  \"columnOverscanStartIndex\": _propTypes[\"default\"].number.isRequired,\n  \"columnOverscanStopIndex\": _propTypes[\"default\"].number.isRequired,\n  \"columnStartIndex\": _propTypes[\"default\"].number.isRequired,\n  \"columnStopIndex\": _propTypes[\"default\"].number.isRequired,\n  \"rowOverscanStartIndex\": _propTypes[\"default\"].number.isRequired,\n  \"rowOverscanStopIndex\": _propTypes[\"default\"].number.isRequired,\n  \"rowStartIndex\": _propTypes[\"default\"].number.isRequired,\n  \"rowStopIndex\": _propTypes[\"default\"].number.isRequired\n};\nexports.bpfrpt_proptype_RenderedSection = bpfrpt_proptype_RenderedSection;\nvar bpfrpt_proptype_OverscanIndicesGetterParams = process.env.NODE_ENV === 'production' ? null : {\n  // One of SCROLL_DIRECTION_HORIZONTAL or SCROLL_DIRECTION_VERTICAL\n  \"direction\": _propTypes[\"default\"].oneOf([\"horizontal\", \"vertical\"]).isRequired,\n  // One of SCROLL_DIRECTION_BACKWARD or SCROLL_DIRECTION_FORWARD\n  \"scrollDirection\": _propTypes[\"default\"].oneOf([-1, 1]).isRequired,\n  // Number of rows or columns in the current axis\n  \"cellCount\": _propTypes[\"default\"].number.isRequired,\n  // Maximum number of cells to over-render in either direction\n  \"overscanCellsCount\": _propTypes[\"default\"].number.isRequired,\n  // Begin of range of visible cells\n  \"startIndex\": _propTypes[\"default\"].number.isRequired,\n  // End of range of visible cells\n  \"stopIndex\": _propTypes[\"default\"].number.isRequired\n};\nexports.bpfrpt_proptype_OverscanIndicesGetterParams = bpfrpt_proptype_OverscanIndicesGetterParams;\nvar bpfrpt_proptype_OverscanIndices = process.env.NODE_ENV === 'production' ? null : {\n  \"overscanStartIndex\": _propTypes[\"default\"].number.isRequired,\n  \"overscanStopIndex\": _propTypes[\"default\"].number.isRequired\n};\nexports.bpfrpt_proptype_OverscanIndices = bpfrpt_proptype_OverscanIndices;\nvar bpfrpt_proptype_OverscanIndicesGetter = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].func;\nexports.bpfrpt_proptype_OverscanIndicesGetter = bpfrpt_proptype_OverscanIndicesGetter;\nvar bpfrpt_proptype_Alignment = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].oneOf([\"auto\", \"end\", \"start\", \"center\"]);\nexports.bpfrpt_proptype_Alignment = bpfrpt_proptype_Alignment;\nvar bpfrpt_proptype_VisibleCellRange = process.env.NODE_ENV === 'production' ? null : {\n  \"start\": _propTypes[\"default\"].number,\n  \"stop\": _propTypes[\"default\"].number\n};\nexports.bpfrpt_proptype_VisibleCellRange = bpfrpt_proptype_VisibleCellRange;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nfunction componentWillMount() {\n  // Call this.constructor.gDSFP to support sub-classes.\n  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);\n  if (state !== null && state !== undefined) {\n    this.setState(state);\n  }\n}\n\nfunction componentWillReceiveProps(nextProps) {\n  // Call this.constructor.gDSFP to support sub-classes.\n  // Use the setState() updater to ensure state isn't stale in certain edge cases.\n  function updater(prevState) {\n    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);\n    return state !== null && state !== undefined ? state : null;\n  }\n  // Binding \"this\" is important for shallow renderer support.\n  this.setState(updater.bind(this));\n}\n\nfunction componentWillUpdate(nextProps, nextState) {\n  try {\n    var prevProps = this.props;\n    var prevState = this.state;\n    this.props = nextProps;\n    this.state = nextState;\n    this.__reactInternalSnapshotFlag = true;\n    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(\n      prevProps,\n      prevState\n    );\n  } finally {\n    this.props = prevProps;\n    this.state = prevState;\n  }\n}\n\n// React may warn about cWM/cWRP/cWU methods being deprecated.\n// Add a flag to suppress these warnings for this special case.\ncomponentWillMount.__suppressDeprecationWarning = true;\ncomponentWillReceiveProps.__suppressDeprecationWarning = true;\ncomponentWillUpdate.__suppressDeprecationWarning = true;\n\nfunction polyfill(Component) {\n  var prototype = Component.prototype;\n\n  if (!prototype || !prototype.isReactComponent) {\n    throw new Error('Can only polyfill class components');\n  }\n\n  if (\n    typeof Component.getDerivedStateFromProps !== 'function' &&\n    typeof prototype.getSnapshotBeforeUpdate !== 'function'\n  ) {\n    return Component;\n  }\n\n  // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n  // Error if any of these lifecycles are present,\n  // Because they would work differently between older and newer (16.3+) versions of React.\n  var foundWillMountName = null;\n  var foundWillReceivePropsName = null;\n  var foundWillUpdateName = null;\n  if (typeof prototype.componentWillMount === 'function') {\n    foundWillMountName = 'componentWillMount';\n  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {\n    foundWillMountName = 'UNSAFE_componentWillMount';\n  }\n  if (typeof prototype.componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'componentWillReceiveProps';\n  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n  }\n  if (typeof prototype.componentWillUpdate === 'function') {\n    foundWillUpdateName = 'componentWillUpdate';\n  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {\n    foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n  }\n  if (\n    foundWillMountName !== null ||\n    foundWillReceivePropsName !== null ||\n    foundWillUpdateName !== null\n  ) {\n    var componentName = Component.displayName || Component.name;\n    var newApiName =\n      typeof Component.getDerivedStateFromProps === 'function'\n        ? 'getDerivedStateFromProps()'\n        : 'getSnapshotBeforeUpdate()';\n\n    throw Error(\n      'Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' +\n        componentName +\n        ' uses ' +\n        newApiName +\n        ' but also contains the following legacy lifecycles:' +\n        (foundWillMountName !== null ? '\\n  ' + foundWillMountName : '') +\n        (foundWillReceivePropsName !== null\n          ? '\\n  ' + foundWillReceivePropsName\n          : '') +\n        (foundWillUpdateName !== null ? '\\n  ' + foundWillUpdateName : '') +\n        '\\n\\nThe above lifecycles should be removed. Learn more about this warning here:\\n' +\n        'https://fb.me/react-async-component-lifecycle-hooks'\n    );\n  }\n\n  // React <= 16.2 does not support static getDerivedStateFromProps.\n  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.\n  // Newer versions of React will ignore these lifecycles if gDSFP exists.\n  if (typeof Component.getDerivedStateFromProps === 'function') {\n    prototype.componentWillMount = componentWillMount;\n    prototype.componentWillReceiveProps = componentWillReceiveProps;\n  }\n\n  // React <= 16.2 does not support getSnapshotBeforeUpdate.\n  // As a workaround, use cWU to invoke the new lifecycle.\n  // Newer versions of React will ignore that lifecycle if gSBU exists.\n  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {\n    if (typeof prototype.componentDidUpdate !== 'function') {\n      throw new Error(\n        'Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype'\n      );\n    }\n\n    prototype.componentWillUpdate = componentWillUpdate;\n\n    var componentDidUpdate = prototype.componentDidUpdate;\n\n    prototype.componentDidUpdate = function componentDidUpdatePolyfill(\n      prevProps,\n      prevState,\n      maybeSnapshot\n    ) {\n      // 16.3+ will not execute our will-update method;\n      // It will pass a snapshot value to did-update though.\n      // Older versions will require our polyfilled will-update value.\n      // We need to handle both cases, but can't just check for the presence of \"maybeSnapshot\",\n      // Because for <= 15.x versions this might be a \"prevContext\" object.\n      // We also can't just check \"__reactInternalSnapshot\",\n      // Because get-snapshot might return a falsy value.\n      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.\n      var snapshot = this.__reactInternalSnapshotFlag\n        ? this.__reactInternalSnapshot\n        : maybeSnapshot;\n\n      componentDidUpdate.call(this, prevProps, prevState, snapshot);\n    };\n  }\n\n  return Component;\n}\n\nexport { polyfill };\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _CellSizeAndPositionManager = _interopRequireDefault(require(\"./CellSizeAndPositionManager\"));\n\nvar _maxElementSize = require(\"./maxElementSize.js\");\n\nvar _types = require(\"../types\");\n\n/**\n * Extends CellSizeAndPositionManager and adds scaling behavior for lists that are too large to fit within a browser's native limits.\n */\nvar ScalingCellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  function ScalingCellSizeAndPositionManager(_ref) {\n    var _ref$maxScrollSize = _ref.maxScrollSize,\n        maxScrollSize = _ref$maxScrollSize === void 0 ? (0, _maxElementSize.getMaxElementSize)() : _ref$maxScrollSize,\n        params = (0, _objectWithoutProperties2[\"default\"])(_ref, [\"maxScrollSize\"]);\n    (0, _classCallCheck2[\"default\"])(this, ScalingCellSizeAndPositionManager);\n    (0, _defineProperty2[\"default\"])(this, \"_cellSizeAndPositionManager\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_maxScrollSize\", void 0);\n    // Favor composition over inheritance to simplify IE10 support\n    this._cellSizeAndPositionManager = new _CellSizeAndPositionManager[\"default\"](params);\n    this._maxScrollSize = maxScrollSize;\n  }\n\n  (0, _createClass2[\"default\"])(ScalingCellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return this._cellSizeAndPositionManager.getTotalSize() > this._maxScrollSize;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(params) {\n      this._cellSizeAndPositionManager.configure(params);\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellSizeAndPositionManager.getCellCount();\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._cellSizeAndPositionManager.getEstimatedCellSize();\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._cellSizeAndPositionManager.getLastMeasuredIndex();\n    }\n    /**\n     * Number of pixels a cell at the given position (offset) should be shifted in order to fit within the scaled container.\n     * The offset passed to this function is scaled (safe) as well.\n     */\n\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment(_ref2) {\n      var containerSize = _ref2.containerSize,\n          offset = _ref2.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      var offsetPercentage = this._getOffsetPercentage({\n        containerSize: containerSize,\n        offset: offset,\n        totalSize: safeTotalSize\n      });\n\n      return Math.round(offsetPercentage * (safeTotalSize - totalSize));\n    }\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfCell(index);\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfLastMeasuredCell();\n    }\n    /** See CellSizeAndPositionManager#getTotalSize */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return Math.min(this._maxScrollSize, this._cellSizeAndPositionManager.getTotalSize());\n    }\n    /** See CellSizeAndPositionManager#getUpdatedOffsetForIndex */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n      currentOffset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: currentOffset\n      });\n\n      var offset = this._cellSizeAndPositionManager.getUpdatedOffsetForIndex({\n        align: align,\n        containerSize: containerSize,\n        currentOffset: currentOffset,\n        targetIndex: targetIndex\n      });\n\n      return this._offsetToSafeOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n    /** See CellSizeAndPositionManager#getVisibleCellRange */\n\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(_ref4) {\n      var containerSize = _ref4.containerSize,\n          offset = _ref4.offset;\n      offset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n      return this._cellSizeAndPositionManager.getVisibleCellRange({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._cellSizeAndPositionManager.resetCell(index);\n    }\n  }, {\n    key: \"_getOffsetPercentage\",\n    value: function _getOffsetPercentage(_ref5) {\n      var containerSize = _ref5.containerSize,\n          offset = _ref5.offset,\n          totalSize = _ref5.totalSize;\n      return totalSize <= containerSize ? 0 : offset / (totalSize - containerSize);\n    }\n  }, {\n    key: \"_offsetToSafeOffset\",\n    value: function _offsetToSafeOffset(_ref6) {\n      var containerSize = _ref6.containerSize,\n          offset = _ref6.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: totalSize\n        });\n\n        return Math.round(offsetPercentage * (safeTotalSize - containerSize));\n      }\n    }\n  }, {\n    key: \"_safeOffsetToOffset\",\n    value: function _safeOffsetToOffset(_ref7) {\n      var containerSize = _ref7.containerSize,\n          offset = _ref7.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: safeTotalSize\n        });\n\n        return Math.round(offsetPercentage * (totalSize - containerSize));\n      }\n    }\n  }]);\n  return ScalingCellSizeAndPositionManager;\n}();\n\nexports[\"default\"] = ScalingCellSizeAndPositionManager;","export default !!(typeof window !== 'undefined' && window.document && window.document.createElement);","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bpfrpt_proptype_CellMeasureCache = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar bpfrpt_proptype_CellMeasureCache = process.env.NODE_ENV === 'production' ? null : {\n  \"hasFixedWidth\": _propTypes[\"default\"].func.isRequired,\n  \"hasFixedHeight\": _propTypes[\"default\"].func.isRequired,\n  \"has\": _propTypes[\"default\"].func.isRequired,\n  \"set\": _propTypes[\"default\"].func.isRequired,\n  \"getHeight\": _propTypes[\"default\"].func.isRequired,\n  \"getWidth\": _propTypes[\"default\"].func.isRequired\n};\nexports.bpfrpt_proptype_CellMeasureCache = bpfrpt_proptype_CellMeasureCache;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = defaultOverscanIndicesGetter;\nexports.SCROLL_DIRECTION_VERTICAL = exports.SCROLL_DIRECTION_HORIZONTAL = exports.SCROLL_DIRECTION_FORWARD = exports.SCROLL_DIRECTION_BACKWARD = void 0;\n\nvar _types = require(\"./types\");\n\nvar SCROLL_DIRECTION_BACKWARD = -1;\nexports.SCROLL_DIRECTION_BACKWARD = SCROLL_DIRECTION_BACKWARD;\nvar SCROLL_DIRECTION_FORWARD = 1;\nexports.SCROLL_DIRECTION_FORWARD = SCROLL_DIRECTION_FORWARD;\nvar SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexports.SCROLL_DIRECTION_HORIZONTAL = SCROLL_DIRECTION_HORIZONTAL;\nvar SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexports.SCROLL_DIRECTION_VERTICAL = SCROLL_DIRECTION_VERTICAL;\n\nfunction defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex)\n    };\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = defaultCellRangeRenderer;\n\nvar _types = require(\"./types\");\n\n/**\n * Default implementation of cellRangeRenderer used by Grid.\n * This renderer supports cell-caching while the user is scrolling.\n */\nfunction defaultCellRangeRenderer(_ref) {\n  var cellCache = _ref.cellCache,\n      cellRenderer = _ref.cellRenderer,\n      columnSizeAndPositionManager = _ref.columnSizeAndPositionManager,\n      columnStartIndex = _ref.columnStartIndex,\n      columnStopIndex = _ref.columnStopIndex,\n      deferredMeasurementCache = _ref.deferredMeasurementCache,\n      horizontalOffsetAdjustment = _ref.horizontalOffsetAdjustment,\n      isScrolling = _ref.isScrolling,\n      isScrollingOptOut = _ref.isScrollingOptOut,\n      parent = _ref.parent,\n      rowSizeAndPositionManager = _ref.rowSizeAndPositionManager,\n      rowStartIndex = _ref.rowStartIndex,\n      rowStopIndex = _ref.rowStopIndex,\n      styleCache = _ref.styleCache,\n      verticalOffsetAdjustment = _ref.verticalOffsetAdjustment,\n      visibleColumnIndices = _ref.visibleColumnIndices,\n      visibleRowIndices = _ref.visibleRowIndices;\n  var renderedCells = []; // Browsers have native size limits for elements (eg Chrome 33M pixels, IE 1.5M pixes).\n  // User cannot scroll beyond these size limitations.\n  // In order to work around this, ScalingCellSizeAndPositionManager compresses offsets.\n  // We should never cache styles for compressed offsets though as this can lead to bugs.\n  // See issue #576 for more.\n\n  var areOffsetsAdjusted = columnSizeAndPositionManager.areOffsetsAdjusted() || rowSizeAndPositionManager.areOffsetsAdjusted();\n  var canCacheStyle = !isScrolling && !areOffsetsAdjusted;\n\n  for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n    var rowDatum = rowSizeAndPositionManager.getSizeAndPositionOfCell(rowIndex);\n\n    for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n      var columnDatum = columnSizeAndPositionManager.getSizeAndPositionOfCell(columnIndex);\n      var isVisible = columnIndex >= visibleColumnIndices.start && columnIndex <= visibleColumnIndices.stop && rowIndex >= visibleRowIndices.start && rowIndex <= visibleRowIndices.stop;\n      var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n      var style = void 0; // Cache style objects so shallow-compare doesn't re-render unnecessarily.\n\n      if (canCacheStyle && styleCache[key]) {\n        style = styleCache[key];\n      } else {\n        // In deferred mode, cells will be initially rendered before we know their size.\n        // Don't interfere with CellMeasurer's measurements by setting an invalid size.\n        if (deferredMeasurementCache && !deferredMeasurementCache.has(rowIndex, columnIndex)) {\n          // Position not-yet-measured cells at top/left 0,0,\n          // And give them width/height of 'auto' so they can grow larger than the parent Grid if necessary.\n          // Positioning them further to the right/bottom influences their measured size.\n          style = {\n            height: 'auto',\n            left: 0,\n            position: 'absolute',\n            top: 0,\n            width: 'auto'\n          };\n        } else {\n          style = {\n            height: rowDatum.size,\n            left: columnDatum.offset + horizontalOffsetAdjustment,\n            position: 'absolute',\n            top: rowDatum.offset + verticalOffsetAdjustment,\n            width: columnDatum.size\n          };\n          styleCache[key] = style;\n        }\n      }\n\n      var cellRendererParams = {\n        columnIndex: columnIndex,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent,\n        rowIndex: rowIndex,\n        style: style\n      };\n      var renderedCell = void 0; // Avoid re-creating cells while scrolling.\n      // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n      // If a scroll is in progress- cache and reuse cells.\n      // This cache will be thrown away once scrolling completes.\n      // However if we are scaling scroll positions and sizes, we should also avoid caching.\n      // This is because the offset changes slightly as scroll position changes and caching leads to stale values.\n      // For more info refer to issue #395\n      //\n      // If isScrollingOptOut is specified, we always cache cells.\n      // For more info refer to issue #1028\n\n      if ((isScrollingOptOut || isScrolling) && !horizontalOffsetAdjustment && !verticalOffsetAdjustment) {\n        if (!cellCache[key]) {\n          cellCache[key] = cellRenderer(cellRendererParams);\n        }\n\n        renderedCell = cellCache[key]; // If the user is no longer scrolling, don't cache cells.\n        // This makes dynamic cell content difficult for users and would also lead to a heavier memory footprint.\n      } else {\n        renderedCell = cellRenderer(cellRendererParams);\n      }\n\n      if (renderedCell == null || renderedCell === false) {\n        continue;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        warnAboutMissingStyle(parent, renderedCell);\n      }\n\n      renderedCells.push(renderedCell);\n    }\n  }\n\n  return renderedCells;\n}\n\nfunction warnAboutMissingStyle(parent, renderedCell) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (renderedCell) {\n      // If the direct child is a CellMeasurer, then we should check its child\n      // See issue #611\n      if (renderedCell.type && renderedCell.type.__internalCellMeasurerFlag) {\n        renderedCell = renderedCell.props.children;\n      }\n\n      if (renderedCell && renderedCell.props && renderedCell.props.style === undefined && parent.__warnedAboutMissingStyle !== true) {\n        parent.__warnedAboutMissingStyle = true;\n        console.warn('Rendered cell should include style property for positioning.');\n      }\n    }\n  }\n}","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar TableContext = /*#__PURE__*/React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  TableContext.displayName = 'TableContext';\n}\n\nexport default TableContext;","export { default } from './TableCell';","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport { darken, fade, lighten } from '../styles/colorManipulator';\nimport TableContext from '../Table/TableContext';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body2, {\n      display: 'table-cell',\n      verticalAlign: 'inherit',\n      // Workaround for a rendering bug with spanned columns in Chrome 62.0.\n      // Removes the alpha (sets it to 1), and lightens or darkens the theme color.\n      borderBottom: \"1px solid\\n    \".concat(theme.palette.type === 'light' ? lighten(fade(theme.palette.divider, 1), 0.88) : darken(fade(theme.palette.divider, 1), 0.68)),\n      textAlign: 'left',\n      padding: 16\n    }),\n\n    /* Styles applied to the root element if `variant=\"head\"` or `context.table.head`. */\n    head: {\n      color: theme.palette.text.primary,\n      lineHeight: theme.typography.pxToRem(24),\n      fontWeight: theme.typography.fontWeightMedium\n    },\n\n    /* Styles applied to the root element if `variant=\"body\"` or `context.table.body`. */\n    body: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `variant=\"footer\"` or `context.table.footer`. */\n    footer: {\n      color: theme.palette.text.secondary,\n      lineHeight: theme.typography.pxToRem(21),\n      fontSize: theme.typography.pxToRem(12)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      padding: '6px 24px 6px 16px',\n      '&:last-child': {\n        paddingRight: 16\n      },\n      '&$paddingCheckbox': {\n        width: 24,\n        // prevent the checkbox column from growing\n        padding: '0 12px 0 16px',\n        '&:last-child': {\n          paddingLeft: 12,\n          paddingRight: 16\n        },\n        '& > *': {\n          padding: 0\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `padding=\"checkbox\"`. */\n    paddingCheckbox: {\n      width: 48,\n      // prevent the checkbox column from growing\n      padding: '0 0 0 4px',\n      '&:last-child': {\n        paddingLeft: 0,\n        paddingRight: 4\n      }\n    },\n\n    /* Styles applied to the root element if `padding=\"none\"`. */\n    paddingNone: {\n      padding: 0,\n      '&:last-child': {\n        padding: 0\n      }\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right',\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `context.table.stickyHeader={true}`. */\n    stickyHeader: {\n      position: 'sticky',\n      top: 0,\n      left: 0,\n      zIndex: 2,\n      backgroundColor: theme.palette.background.default\n    }\n  };\n};\n/**\n * The component renders a `<th>` element when the parent context is a header\n * or otherwise a `<td>` element.\n */\n\nvar TableCell = /*#__PURE__*/React.forwardRef(function TableCell(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      component = props.component,\n      paddingProp = props.padding,\n      scopeProp = props.scope,\n      sizeProp = props.size,\n      sortDirection = props.sortDirection,\n      variantProp = props.variant,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"component\", \"padding\", \"scope\", \"size\", \"sortDirection\", \"variant\"]);\n\n  var table = React.useContext(TableContext);\n  var tablelvl2 = React.useContext(Tablelvl2Context);\n  var isHeadCell = tablelvl2 && tablelvl2.variant === 'head';\n  var role;\n  var Component;\n\n  if (component) {\n    Component = component;\n    role = isHeadCell ? 'columnheader' : 'cell';\n  } else {\n    Component = isHeadCell ? 'th' : 'td';\n  }\n\n  var scope = scopeProp;\n\n  if (!scope && isHeadCell) {\n    scope = 'col';\n  }\n\n  var padding = paddingProp || (table && table.padding ? table.padding : 'default');\n  var size = sizeProp || (table && table.size ? table.size : 'medium');\n  var variant = variantProp || tablelvl2 && tablelvl2.variant;\n  var ariaSort = null;\n\n  if (sortDirection) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, classes[variant], className, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], padding !== 'default' && classes[\"padding\".concat(capitalize(padding))], size !== 'medium' && classes[\"size\".concat(capitalize(size))], variant === 'head' && table && table.stickyHeader && classes.stickyHeader),\n    \"aria-sort\": ariaSort,\n    role: role,\n    scope: scope\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Set the text-align on the table cell content.\n   *\n   * Monetary or generally number fields **should be right aligned** as that allows\n   * you to add them up quickly in your head without having to worry about decimals.\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n\n  /**\n   * The table cell contents.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Sets the padding applied to the cell.\n   * By default, the Table parent component set the value (`default`).\n   */\n  padding: PropTypes.oneOf(['checkbox', 'default', 'none']),\n\n  /**\n   * Set scope attribute.\n   */\n  scope: PropTypes.string,\n\n  /**\n   * Specify the size of the cell.\n   * By default, the Table parent component set the value (`medium`).\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * Set aria-sort direction.\n   */\n  sortDirection: PropTypes.oneOf(['asc', 'desc', false]),\n\n  /**\n   * Specify the cell type.\n   * By default, the TableHead, TableBody or TableFooter parent component set the value.\n   */\n  variant: PropTypes.oneOf(['body', 'footer', 'head'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableCell'\n})(TableCell);","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar Tablelvl2Context = /*#__PURE__*/React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  Tablelvl2Context.displayName = 'Tablelvl2Context';\n}\n\nexport default Tablelvl2Context;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function get() {\n    return _AutoSizer[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"AutoSizer\", {\n  enumerable: true,\n  get: function get() {\n    return _AutoSizer[\"default\"];\n  }\n});\n\nvar _AutoSizer = _interopRequireDefault(require(\"./AutoSizer\"));","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React from 'react';\n\nvar Component = function (_React$Component) {\n  _inherits(Component, _React$Component);\n\n  function Component() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Component);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _initialiseProps.call(_this), _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  Component.prototype.getArgs = function getArgs() {\n    var state = this.state,\n        props = this.props,\n        setState = this._setState,\n        forceUpdate = this._forceUpdate;\n\n    return {\n      state: state,\n      props: props,\n      setState: setState,\n      forceUpdate: forceUpdate\n    };\n  };\n\n  Component.prototype.componentDidMount = function componentDidMount() {\n    if (this.props.didMount) this.props.didMount(this.getArgs());\n  };\n\n  Component.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState) {\n    if (this.props.shouldUpdate) return this.props.shouldUpdate({\n      props: this.props,\n      state: this.state,\n      nextProps: nextProps,\n      nextState: nextState\n    });else return true;\n  };\n\n  Component.prototype.componentWillUnmount = function componentWillUnmount() {\n    if (this.props.willUnmount) this.props.willUnmount({\n      state: this.state,\n      props: this.props\n    });\n  };\n\n  Component.prototype.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n    if (this.props.didUpdate) this.props.didUpdate(Object.assign(this.getArgs(), {\n      prevProps: prevProps,\n      prevState: prevState\n    }));\n  };\n\n  Component.prototype.render = function render() {\n    var _props = this.props,\n        children = _props.children,\n        render = _props.render;\n\n    return children ? typeof children === 'function' ? children(this.getArgs()) : children : render ? render(this.getArgs()) : null;\n  };\n\n  return Component;\n}(React.Component);\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this2 = this;\n\n  this.state = this.props.initialState;\n\n  this._setState = function () {\n    return _this2.setState.apply(_this2, arguments);\n  };\n\n  this._forceUpdate = function () {\n    return _this2.forceUpdate.apply(_this2, arguments);\n  };\n};\n\nexport default Component;","/**\n * Detect Element Resize.\n * https://github.com/sdecima/javascript-detect-element-resize\n * Sebastian Decima\n *\n * Forked from version 0.5.3; includes the following modifications:\n * 1) Guard against unsafe 'window' and 'document' references (to support SSR).\n * 2) Defer initialization code via a top-level function wrapper (to support SSR).\n * 3) Avoid unnecessary reflows by not measuring size for scroll events bubbling from children.\n * 4) Add nonce for style element.\n * 5) Added support for injecting custom window object\n **/\nexport default function createDetectElementResize(nonce, hostWindow) {\n  // Check `document` and `window` in case of server-side rendering\n  var _window;\n\n  if (typeof hostWindow !== 'undefined') {\n    _window = hostWindow;\n  } else if (typeof window !== 'undefined') {\n    _window = window;\n  } else if (typeof self !== 'undefined') {\n    _window = self;\n  } else {\n    _window = global;\n  }\n\n  var attachEvent = typeof _window.document !== 'undefined' && _window.document.attachEvent;\n\n  if (!attachEvent) {\n    var requestFrame = function () {\n      var raf = _window.requestAnimationFrame || _window.mozRequestAnimationFrame || _window.webkitRequestAnimationFrame || function (fn) {\n        return _window.setTimeout(fn, 20);\n      };\n\n      return function (fn) {\n        return raf(fn);\n      };\n    }();\n\n    var cancelFrame = function () {\n      var cancel = _window.cancelAnimationFrame || _window.mozCancelAnimationFrame || _window.webkitCancelAnimationFrame || _window.clearTimeout;\n      return function (id) {\n        return cancel(id);\n      };\n    }();\n\n    var resetTriggers = function resetTriggers(element) {\n      var triggers = element.__resizeTriggers__,\n          expand = triggers.firstElementChild,\n          contract = triggers.lastElementChild,\n          expandChild = expand.firstElementChild;\n      contract.scrollLeft = contract.scrollWidth;\n      contract.scrollTop = contract.scrollHeight;\n      expandChild.style.width = expand.offsetWidth + 1 + 'px';\n      expandChild.style.height = expand.offsetHeight + 1 + 'px';\n      expand.scrollLeft = expand.scrollWidth;\n      expand.scrollTop = expand.scrollHeight;\n    };\n\n    var checkTriggers = function checkTriggers(element) {\n      return element.offsetWidth != element.__resizeLast__.width || element.offsetHeight != element.__resizeLast__.height;\n    };\n\n    var scrollListener = function scrollListener(e) {\n      // Don't measure (which forces) reflow for scrolls that happen inside of children!\n      if (e.target.className && typeof e.target.className.indexOf === 'function' && e.target.className.indexOf('contract-trigger') < 0 && e.target.className.indexOf('expand-trigger') < 0) {\n        return;\n      }\n\n      var element = this;\n      resetTriggers(this);\n\n      if (this.__resizeRAF__) {\n        cancelFrame(this.__resizeRAF__);\n      }\n\n      this.__resizeRAF__ = requestFrame(function () {\n        if (checkTriggers(element)) {\n          element.__resizeLast__.width = element.offsetWidth;\n          element.__resizeLast__.height = element.offsetHeight;\n\n          element.__resizeListeners__.forEach(function (fn) {\n            fn.call(element, e);\n          });\n        }\n      });\n    };\n    /* Detect CSS Animations support to detect element display/re-attach */\n\n\n    var animation = false,\n        keyframeprefix = '',\n        animationstartevent = 'animationstart',\n        domPrefixes = 'Webkit Moz O ms'.split(' '),\n        startEvents = 'webkitAnimationStart animationstart oAnimationStart MSAnimationStart'.split(' '),\n        pfx = '';\n    {\n      var elm = _window.document.createElement('fakeelement');\n\n      if (elm.style.animationName !== undefined) {\n        animation = true;\n      }\n\n      if (animation === false) {\n        for (var i = 0; i < domPrefixes.length; i++) {\n          if (elm.style[domPrefixes[i] + 'AnimationName'] !== undefined) {\n            pfx = domPrefixes[i];\n            keyframeprefix = '-' + pfx.toLowerCase() + '-';\n            animationstartevent = startEvents[i];\n            animation = true;\n            break;\n          }\n        }\n      }\n    }\n    var animationName = 'resizeanim';\n    var animationKeyframes = '@' + keyframeprefix + 'keyframes ' + animationName + ' { from { opacity: 0; } to { opacity: 0; } } ';\n    var animationStyle = keyframeprefix + 'animation: 1ms ' + animationName + '; ';\n  }\n\n  var createStyles = function createStyles(doc) {\n    if (!doc.getElementById('detectElementResize')) {\n      //opacity:0 works around a chrome bug https://code.google.com/p/chromium/issues/detail?id=286360\n      var css = (animationKeyframes ? animationKeyframes : '') + '.resize-triggers { ' + (animationStyle ? animationStyle : '') + 'visibility: hidden; opacity: 0; } ' + '.resize-triggers, .resize-triggers > div, .contract-trigger:before { content: \" \"; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; z-index: -1; } .resize-triggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',\n          head = doc.head || doc.getElementsByTagName('head')[0],\n          style = doc.createElement('style');\n      style.id = 'detectElementResize';\n      style.type = 'text/css';\n\n      if (nonce != null) {\n        style.setAttribute('nonce', nonce);\n      }\n\n      if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n      } else {\n        style.appendChild(doc.createTextNode(css));\n      }\n\n      head.appendChild(style);\n    }\n  };\n\n  var addResizeListener = function addResizeListener(element, fn) {\n    if (attachEvent) {\n      element.attachEvent('onresize', fn);\n    } else {\n      if (!element.__resizeTriggers__) {\n        var doc = element.ownerDocument;\n\n        var elementStyle = _window.getComputedStyle(element);\n\n        if (elementStyle && elementStyle.position == 'static') {\n          element.style.position = 'relative';\n        }\n\n        createStyles(doc);\n        element.__resizeLast__ = {};\n        element.__resizeListeners__ = [];\n        (element.__resizeTriggers__ = doc.createElement('div')).className = 'resize-triggers';\n        element.__resizeTriggers__.innerHTML = '<div class=\"expand-trigger\"><div></div></div>' + '<div class=\"contract-trigger\"></div>';\n        element.appendChild(element.__resizeTriggers__);\n        resetTriggers(element);\n        element.addEventListener('scroll', scrollListener, true);\n        /* Listen for a css animation to detect element display/re-attach */\n\n        if (animationstartevent) {\n          element.__resizeTriggers__.__animationListener__ = function animationListener(e) {\n            if (e.animationName == animationName) {\n              resetTriggers(element);\n            }\n          };\n\n          element.__resizeTriggers__.addEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n        }\n      }\n\n      element.__resizeListeners__.push(fn);\n    }\n  };\n\n  var removeResizeListener = function removeResizeListener(element, fn) {\n    if (attachEvent) {\n      element.detachEvent('onresize', fn);\n    } else {\n      element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n\n      if (!element.__resizeListeners__.length) {\n        element.removeEventListener('scroll', scrollListener, true);\n\n        if (element.__resizeTriggers__.__animationListener__) {\n          element.__resizeTriggers__.removeEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n\n          element.__resizeTriggers__.__animationListener__ = null;\n        }\n\n        try {\n          element.__resizeTriggers__ = !element.removeChild(element.__resizeTriggers__);\n        } catch (e) {// Preact compat; see developit/preact-compat/issues/228\n        }\n      }\n    }\n  };\n\n  return {\n    addResizeListener: addResizeListener,\n    removeResizeListener: removeResizeListener\n  };\n}","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nexports.default = MuiTable;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _MultiGrid = require('react-virtualized/dist/commonjs/MultiGrid');\n\nvar _MultiGrid2 = _interopRequireDefault(_MultiGrid);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _Table = require('@material-ui/core/Table');\n\nvar _Table2 = _interopRequireDefault(_Table);\n\nvar _TableCell = require('@material-ui/core/TableCell');\n\nvar _TableCell2 = _interopRequireDefault(_TableCell);\n\nvar _TableFooter = require('@material-ui/core/TableFooter');\n\nvar _TableFooter2 = _interopRequireDefault(_TableFooter);\n\nvar _TablePagination = require('@material-ui/core/TablePagination');\n\nvar _TablePagination2 = _interopRequireDefault(_TablePagination);\n\nvar _TableSortLabel = require('@material-ui/core/TableSortLabel');\n\nvar _TableSortLabel2 = _interopRequireDefault(_TableSortLabel);\n\nvar _styles = require('@material-ui/core/styles');\n\nvar _reactDraggable = require('react-draggable');\n\nvar _reactDraggable2 = _interopRequireDefault(_reactDraggable);\n\nvar _utils = require('./utils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar FOOTER_BORDER_HEIGHT = 1;\n\nvar useStyles = (0, _styles.makeStyles)(function (theme) {\n  return {\n    table: {\n      boxSizing: 'border-box',\n\n      '& .topLeftGrid': {\n        backgroundColor: theme.palette.grey[theme.palette.type === 'dark' ? 800 : 200],\n        borderBottom: '2px solid ' + theme.palette.divider,\n        borderRight: '2px solid ' + theme.palette.divider,\n        color: theme.palette.text.secondary,\n        fontSize: theme.typography.pxToRem(12),\n\n        // Hide scrollbars on Chrome/Safari/IE\n        '&::-webkit-scrollbar': {\n          display: 'none'\n        },\n        '-ms-overflow-style': 'none'\n      },\n\n      '& .topRightGrid': {\n        backgroundColor: theme.palette.grey[theme.palette.type === 'dark' ? 800 : 200],\n        borderBottom: '2px solid ' + theme.palette.divider,\n        color: theme.palette.text.secondary,\n        fontSize: theme.typography.pxToRem(12),\n\n        // Hide scrollbars on Chrome/Safari/IE\n        '&::-webkit-scrollbar': {\n          display: 'none'\n        },\n        '-ms-overflow-style': 'none'\n      },\n\n      '& .bottomLeftGrid': {\n        backgroundColor: theme.palette.grey[theme.palette.type === 'dark' ? 800 : 200],\n        borderRight: '2px solid ' + theme.palette.divider,\n        color: theme.palette.text.secondary,\n        fontSize: theme.typography.pxToRem(13),\n\n        // Hide scrollbars on Chrome/Safari/IE\n        '&::-webkit-scrollbar': {\n          display: 'none'\n        },\n        '-ms-overflow-style': 'none'\n      },\n\n      '& .bottomRightGrid': {\n        color: theme.palette.text.primary,\n        fontSize: theme.typography.pxToRem(13),\n        outline: 'none' // See: https://github.com/bvaughn/react-virtualized/issues/381\n      }\n    },\n    cell: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    cellClickable: {\n      cursor: 'pointer'\n    },\n    cellSelected: {\n      backgroundColor: theme.palette.grey[theme.palette.type === 'dark' ? 900 : 100]\n    },\n    cellHovered: {\n      backgroundColor: theme.palette.grey[theme.palette.type === 'dark' ? 800 : 200]\n    },\n    cellDisabled: {\n      opacity: 0.5\n    },\n    cellContents: {\n      width: '100%',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      textOverflow: 'ellipsis'\n    },\n    cellHeader: {\n      fontSize: theme.typography.pxToRem(12),\n      fontWeight: theme.typography.fontWeightMedium,\n      color: theme.palette.text.secondary\n    },\n    cellInLastColumn: {\n      paddingRight: theme.spacing(3)\n    },\n    cellInLastRow: {\n      borderBottom: 'none'\n    },\n    footer: {\n      borderTop: FOOTER_BORDER_HEIGHT + 'px solid ' + theme.palette.divider\n    },\n    dragHandle: {\n      flex: '0 0 16px',\n      zIndex: 2,\n      cursor: 'col-resize',\n      color: '#0085ff'\n    },\n    DragHandleActive: {\n      color: '#0b6fcc',\n      zIndex: 3\n    },\n    DragHandleIcon: {\n      flex: '0 0 12px',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  };\n});\n\nvar calculateWidths = function calculateWidths(_ref) {\n  var resizable = _ref.resizable,\n      Columns = _ref.columns;\n\n  var widths = [];\n  if (resizable) {\n    var initialWidth = 1;\n    var columns = [];\n    Columns.forEach(function (c) {\n      if (c.width) {\n        widths[c.name] = 0.1;\n        initialWidth = initialWidth - 0.1;\n      } else {\n        columns.push(c);\n      }\n    });\n    columns.forEach(function (c) {\n      widths[c.name] = initialWidth / columns.length;\n    });\n  }\n  return widths;\n};\n\nvar useCellRenderer = function useCellRenderer(_ref2) {\n  var recomputeGridSize = _ref2.recomputeGridSize,\n      columns = _ref2.columns,\n      width = _ref2.width,\n      includeHeaders = _ref2.includeHeaders,\n      data = _ref2.data,\n      columnWidth = _ref2.columnWidth,\n      isCellHovered = _ref2.isCellHovered,\n      isCellSelected = _ref2.isCellSelected,\n      isCellDisabled = _ref2.isCellDisabled,\n      classes = _ref2.classes,\n      orderBy = _ref2.orderBy,\n      orderDirection = _ref2.orderDirection,\n      onHeaderClick = _ref2.onHeaderClick,\n      onCellClick = _ref2.onCellClick,\n      onCellDoubleClick = _ref2.onCellDoubleClick,\n      onCellContextMenu = _ref2.onCellContextMenu,\n      resizable = _ref2.resizable,\n      defaultCellProps = _ref2.cellProps;\n\n  var _React$useState = _react2.default.useState({\n    hoveredColumn: null,\n    hoveredRowData: null\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      _React$useState2$ = _React$useState2[0],\n      hoveredColumn = _React$useState2$.hoveredColumn,\n      hoveredRowData = _React$useState2$.hoveredRowData,\n      setHovered = _React$useState2[1];\n\n  var _React$useState3 = _react2.default.useState(calculateWidths({ resizable: resizable, columns: columns })),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      widths = _React$useState4[0],\n      setWidths = _React$useState4[1];\n\n  _react2.default.useEffect(function () {\n    recomputeGridSize();\n  }, [recomputeGridSize, hoveredColumn, hoveredRowData, widths]);\n\n  var resizableColumnWidths = _react2.default.useCallback(function (index, columns, tableWidth) {\n    return widths[columns[index].name] * tableWidth;\n  }, [widths]);\n\n  var getColumnWidth = _react2.default.useCallback(function (_ref3) {\n    var index = _ref3.index;\n    return typeof columnWidth === 'function' ? columnWidth({ index: index, columns: columns, width: width }) : resizable ? resizableColumnWidths(index, columns, width) : (0, _utils.calcColumnWidth)(index, columns, width);\n  }, [columnWidth, resizable, columns, width, resizableColumnWidths]);\n\n  var resizeRow = _react2.default.useCallback(function (_ref4) {\n    var dataKey = _ref4.dataKey,\n        deltaX = _ref4.deltaX;\n    return setWidths(function (prev) {\n      var _extends2;\n\n      var delta = deltaX / width;\n      var index = columns.findIndex(function (c) {\n        return c.name === dataKey;\n      });\n      var nextDataKey = columns[index + 1].name;\n      return _extends({}, prev, (_extends2 = {}, _defineProperty(_extends2, dataKey, prev[dataKey] + delta), _defineProperty(_extends2, nextDataKey, prev[nextDataKey] - delta), _extends2));\n    });\n  }, [setWidths, columns, width]);\n\n  var handleDrag = _react2.default.useCallback(function (dataKey) {\n    return function (event, _ref5) {\n      var deltaX = _ref5.deltaX;\n      return resizeRow({\n        dataKey: dataKey,\n        deltaX: deltaX\n      });\n    };\n  }, [resizeRow]);\n\n  var handleMouse = _react2.default.useCallback(function (hoveredColumn, hoveredRowData) {\n    return function (e) {\n      return setHovered({\n        hoveredColumn: hoveredColumn,\n        hoveredRowData: hoveredRowData\n      });\n    };\n  }, [setHovered]);\n\n  var cellRenderer = function cellRenderer(_ref6) {\n    var _classNames;\n\n    var columnIndex = _ref6.columnIndex,\n        rowIndex = _ref6.rowIndex,\n        key = _ref6.key,\n        style = _ref6.style;\n\n    var column = columns[columnIndex];\n    var isHeader = includeHeaders && rowIndex === 0;\n    var headerOffset = includeHeaders ? 1 : 0;\n    var rowData = data && data[rowIndex - headerOffset] || {};\n\n    var isSelected = isCellSelected && isCellSelected(column, rowData);\n    var isDisabled = isCellDisabled && isCellDisabled(column, rowData);\n\n    var isHovered = hoveredColumn && hoveredRowData && isCellHovered && isCellHovered(column, rowData, hoveredColumn, hoveredRowData);\n\n    var resolveCellProps = function resolveCellProps(cellProps) {\n      return typeof cellProps === 'function' ? cellProps(column, rowData, hoveredColumn, hoveredRowData) : cellProps;\n    };\n    // TODO: Deep merge (do not override all defaultCellProps styles if column.cellProps.styles defined?)\n\n    var _resolveCellProps$res = _extends({}, resolveCellProps(defaultCellProps), resolveCellProps(column.cellProps)),\n        cellStyle = _resolveCellProps$res.style,\n        cellProps = _objectWithoutProperties(_resolveCellProps$res, ['style']);\n\n    var contents = _react2.default.createElement(\n      'div',\n      { className: classes.cellContents },\n      _react2.default.createElement(\n        'span',\n        { style: { flex: 'auto' } },\n        isHeader ? column.header != null ? column.header : column.name : column.cell ? column.cell(rowData) : rowData[column.name]\n      ),\n      _react2.default.createElement(\n        'span',\n        { style: { float: 'right' } },\n        isHeader && resizable && columnIndex < columns.length - 1 && _react2.default.createElement(\n          _reactDraggable2.default,\n          {\n            axis: 'x',\n            defaultClassName: classes.dragHandle,\n            defaultClassNameDragging: classes.DragHandleActive,\n            onDrag: handleDrag(column.name),\n            position: { x: 0 }\n          },\n          _react2.default.createElement(\n            'span',\n            { className: classes.DragHandleIcon },\n            '\\u22EE'\n          )\n        )\n      )\n    );\n\n    var hasCellClick = !isHeader && onCellClick;\n    var hasCellDoubleClick = !isHeader && onCellDoubleClick;\n    var hasCellContextMenu = !isHeader && onCellContextMenu;\n    var isClickable = hasCellClick || hasCellDoubleClick || hasCellContextMenu || column.onClick;\n\n    var className = (0, _classnames2.default)(classes.cell, (_classNames = {}, _defineProperty(_classNames, classes.cellClickable, isClickable), _defineProperty(_classNames, classes.cellHovered, isHovered), _defineProperty(_classNames, classes.cellSelected, isSelected), _defineProperty(_classNames, classes.cellDisabled, isDisabled), _defineProperty(_classNames, classes.cellHeader, isHeader), _defineProperty(_classNames, classes.cellInLastColumn, columnIndex === columns.length - 1), _defineProperty(_classNames, classes.cellInLastRow, !isHeader && rowIndex === (data ? data.length : 0)), _classNames));\n\n    return _react2.default.createElement(\n      _TableCell2.default,\n      _extends({\n        component: 'div',\n        className: className,\n        key: key,\n        onMouseEnter: handleMouse(column, rowData),\n        onMouseLeave: handleMouse(null, null),\n        style: _extends({}, style, cellStyle)\n      }, hasCellClick && {\n        onClick: function onClick(event) {\n          return onCellClick(event, { column: column, rowData: rowData, data: data });\n        }\n      }, hasCellDoubleClick && {\n        onDoubleClick: function onDoubleClick(event) {\n          return onCellDoubleClick(event, { column: column, rowData: rowData, data: data });\n        }\n      }, hasCellContextMenu && {\n        onContextMenu: function onContextMenu(event) {\n          return onCellContextMenu(event, { column: column, rowData: rowData, data: data });\n        }\n      }, cellProps),\n      isHeader && column.onHeaderClick !== false && (column.onHeaderClick || onHeaderClick) ? _react2.default.createElement(\n        _TableSortLabel2.default,\n        {\n          active: orderBy && (orderBy === column.name || orderBy === column.orderBy) && rowIndex === 0,\n          style: { width: 'inherit' } // fix text overflowing\n          , direction: orderDirection,\n          onClick: function onClick(event) {\n            return column.onHeaderClick ? column.onHeaderClick(event, { column: column }) : onHeaderClick(event, { column: column });\n          }\n        },\n        contents\n      ) : isHeader && column.resizable ? _react2.default.createElement(\n        _react2.default.Fragment,\n        null,\n        contents,\n        _react2.default.createElement(\n          _reactDraggable2.default,\n          {\n            axis: 'x',\n            defaultClassName: 'DragHandle',\n            defaultClassNameDragging: 'DragHandleActive',\n            onDrag: handleDrag(column.name),\n            position: { x: 0 }\n          },\n          _react2.default.createElement(\n            'span',\n            { className: 'DragHandleIcon' },\n            '\\u22EE'\n          )\n        )\n      ) : contents\n    );\n  };\n\n  return { cellRenderer: cellRenderer, columnWidth: getColumnWidth };\n};\n\nfunction MuiTable(_ref7) {\n  var data = _ref7.data,\n      columns = _ref7.columns,\n      width = _ref7.width,\n      height = _ref7.height,\n      _ref7$maxHeight = _ref7.maxHeight,\n      maxHeight = _ref7$maxHeight === undefined ? null : _ref7$maxHeight,\n      pagination = _ref7.pagination,\n      fitHeightToRows = _ref7.fitHeightToRows,\n      _ref7$fixedRowCount = _ref7.fixedRowCount,\n      fixedRowCount = _ref7$fixedRowCount === undefined ? 0 : _ref7$fixedRowCount,\n      _ref7$fixedColumnCoun = _ref7.fixedColumnCount,\n      fixedColumnCount = _ref7$fixedColumnCoun === undefined ? 0 : _ref7$fixedColumnCoun,\n      _ref7$rowHeight = _ref7.rowHeight,\n      rowHeight = _ref7$rowHeight === undefined ? 48 : _ref7$rowHeight,\n      style = _ref7.style,\n      columnWidth = _ref7.columnWidth,\n      _ref7$includeHeaders = _ref7.includeHeaders,\n      includeHeaders = _ref7$includeHeaders === undefined ? false : _ref7$includeHeaders,\n      isCellHovered = _ref7.isCellHovered,\n      isCellSelected = _ref7.isCellSelected,\n      isCellDisabled = _ref7.isCellDisabled,\n      Classes = _ref7.classes,\n      orderBy = _ref7.orderBy,\n      orderDirection = _ref7.orderDirection,\n      onHeaderClick = _ref7.onHeaderClick,\n      onCellClick = _ref7.onCellClick,\n      onCellDoubleClick = _ref7.onCellDoubleClick,\n      onCellContextMenu = _ref7.onCellContextMenu,\n      resizable = _ref7.resizable,\n      cellProps = _ref7.cellProps,\n      other = _objectWithoutProperties(_ref7, ['data', 'columns', 'width', 'height', 'maxHeight', 'pagination', 'fitHeightToRows', 'fixedRowCount', 'fixedColumnCount', 'rowHeight', 'style', 'columnWidth', 'includeHeaders', 'isCellHovered', 'isCellSelected', 'isCellDisabled', 'classes', 'orderBy', 'orderDirection', 'onHeaderClick', 'onCellClick', 'onCellDoubleClick', 'onCellContextMenu', 'resizable', 'cellProps']);\n\n  var classes = useStyles({ classes: Classes });\n  var theme = (0, _styles.useTheme)();\n\n  var multiGrid = _react2.default.useRef(null);\n\n  var recomputeGridSize = _react2.default.useCallback(function () {\n    return multiGrid.current && multiGrid.current.recomputeGridSize();\n  }, [multiGrid]);\n\n  _react2.default.useEffect(function () {\n    recomputeGridSize();\n  }, [columns, data, height, width, recomputeGridSize]);\n\n  var calculatedHeight = 0;\n  if (height) {\n    calculatedHeight = height; // fixed height\n  } else if (pagination && pagination.rowsPerPage && !fitHeightToRows) {\n    var rowCount = pagination.rowsPerPage + (fixedRowCount ? fixedRowCount : includeHeaders ? 1 : 0);\n    calculatedHeight = rowCount * rowHeight;\n  } else if (Array.isArray(data)) {\n    var _rowCount = data.length + (fixedRowCount ? fixedRowCount : includeHeaders ? 1 : 0);\n    calculatedHeight = _rowCount * rowHeight;\n  }\n\n  var paginationHeight = theme.mixins.toolbar.minHeight + FOOTER_BORDER_HEIGHT;\n\n  var calculatedHeightWithFooter = calculatedHeight + (pagination ? paginationHeight : 0);\n  var containerHeight = maxHeight != null ? Math.min(calculatedHeightWithFooter, maxHeight) : calculatedHeightWithFooter;\n  var multiGridHeight = containerHeight - (pagination ? paginationHeight : 0);\n\n  return _react2.default.createElement(\n    _Table2.default,\n    _extends({\n      component: 'div',\n      style: _extends({ width: width, height: containerHeight }, style),\n      className: classes.table\n    }, other),\n    _react2.default.createElement(_MultiGrid2.default, _extends({}, useCellRenderer({\n      recomputeGridSize: recomputeGridSize,\n      data: data,\n      columns: columns,\n      width: width,\n      classes: classes,\n      includeHeaders: includeHeaders,\n      columnWidth: columnWidth,\n      isCellHovered: isCellHovered,\n      isCellSelected: isCellSelected,\n      isCellDisabled: isCellDisabled,\n      orderBy: orderBy,\n      orderDirection: orderDirection,\n      onHeaderClick: onHeaderClick,\n      onCellClick: onCellClick,\n      onCellDoubleClick: onCellDoubleClick,\n      onCellContextMenu: onCellContextMenu,\n      resizable: resizable,\n      cellProps: cellProps\n    }), {\n      ref: multiGrid,\n      width: width,\n      columnCount: Array.isArray(columns) ? columns.length : 0,\n      fixedColumnCount: fixedColumnCount,\n      enableFixedColumnScroll: fixedColumnCount > 0,\n      height: multiGridHeight,\n      rowHeight: rowHeight,\n      rowCount: Array.isArray(data) ? data.length + (includeHeaders ? 1 : 0) : 0,\n      fixedRowCount: fixedRowCount,\n      enableFixedRowScroll: fixedRowCount > 0\n      // TODO: Read these from `classes` without classes.table inheritance?  How to pass props.classes down to override?\n      , classNameTopLeftGrid: 'topLeftGrid',\n      classNameTopRightGrid: 'topRightGrid',\n      classNameBottomLeftGrid: 'bottomLeftGrid',\n      classNameBottomRightGrid: 'bottomRightGrid'\n    })),\n    pagination && _react2.default.createElement(\n      _TableFooter2.default,\n      { component: 'div', className: classes.footer },\n      _react2.default.createElement(_TablePagination2.default, _extends({ component: 'div' }, pagination))\n    )\n  );\n}\n\nMuiTable.propTypes = {\n  data: _propTypes2.default.array,\n  columns: _propTypes2.default.array,\n  width: _propTypes2.default.number,\n  height: _propTypes2.default.number,\n  maxHeight: _propTypes2.default.number,\n  pagination: _propTypes2.default.object,\n  fitHeightToRows: _propTypes2.default.bool,\n  fixedRowCount: _propTypes2.default.number,\n  fixedColumnCount: _propTypes2.default.number,\n  rowHeight: _propTypes2.default.number,\n  columnWidth: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.func]),\n  includeHeaders: _propTypes2.default.bool,\n  orderBy: _propTypes2.default.string,\n  orderDirection: _propTypes2.default.string,\n  onHeaderClick: _propTypes2.default.func,\n  onCellClick: _propTypes2.default.func,\n  onCellDoubleClick: _propTypes2.default.func,\n  onCellContextMenu: _propTypes2.default.func,\n  noPointer: _propTypes2.default.bool,\n  isCellHovered: _propTypes2.default.func,\n  isCellSelected: _propTypes2.default.func,\n  isCellDisabled: _propTypes2.default.func,\n  classes: _propTypes2.default.object,\n  cellProps: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.func]),\n  style: _propTypes2.default.object\n};","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"MultiGrid\", {\n  enumerable: true,\n  get: function get() {\n    return _MultiGrid[\"default\"];\n  }\n});\nexports[\"default\"] = void 0;\n\nvar _MultiGrid = _interopRequireDefault(require(\"./MultiGrid\"));\n\nvar _default = _MultiGrid[\"default\"];\nexports[\"default\"] = _default;","\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactLifecyclesCompat = require(\"react-lifecycles-compat\");\n\nvar _CellMeasurerCacheDecorator = _interopRequireDefault(require(\"./CellMeasurerCacheDecorator\"));\n\nvar _Grid = _interopRequireDefault(require(\"../Grid\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar SCROLLBAR_SIZE_BUFFER = 20;\n/**\n * Renders 1, 2, or 4 Grids depending on configuration.\n * A main (body) Grid will always be rendered.\n * Optionally, 1-2 Grids for sticky header rows will also be rendered.\n * If no sticky columns, only 1 sticky header Grid will be rendered.\n * If sticky columns, 2 sticky header Grids will be rendered.\n */\n\nvar MultiGrid =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  (0, _inherits2[\"default\"])(MultiGrid, _React$PureComponent);\n\n  function MultiGrid(props, context) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, MultiGrid);\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(MultiGrid).call(this, props, context));\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"state\", {\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollbarSize: 0,\n      showHorizontalScrollbar: false,\n      showVerticalScrollbar: false\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_deferredInvalidateColumnIndex\", null);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_deferredInvalidateRowIndex\", null);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_bottomLeftGridRef\", function (ref) {\n      _this._bottomLeftGrid = ref;\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_bottomRightGridRef\", function (ref) {\n      _this._bottomRightGrid = ref;\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_cellRendererBottomLeftGrid\", function (_ref) {\n      var rowIndex = _ref.rowIndex,\n          rest = (0, _objectWithoutProperties2[\"default\"])(_ref, [\"rowIndex\"]);\n      var _this$props = _this.props,\n          cellRenderer = _this$props.cellRenderer,\n          fixedRowCount = _this$props.fixedRowCount,\n          rowCount = _this$props.rowCount;\n\n      if (rowIndex === rowCount - fixedRowCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            height: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          parent: (0, _assertThisInitialized2[\"default\"])(_this),\n          rowIndex: rowIndex + fixedRowCount\n        }));\n      }\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_cellRendererBottomRightGrid\", function (_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex,\n          rest = (0, _objectWithoutProperties2[\"default\"])(_ref2, [\"columnIndex\", \"rowIndex\"]);\n      var _this$props2 = _this.props,\n          cellRenderer = _this$props2.cellRenderer,\n          fixedColumnCount = _this$props2.fixedColumnCount,\n          fixedRowCount = _this$props2.fixedRowCount;\n      return cellRenderer(_objectSpread({}, rest, {\n        columnIndex: columnIndex + fixedColumnCount,\n        parent: (0, _assertThisInitialized2[\"default\"])(_this),\n        rowIndex: rowIndex + fixedRowCount\n      }));\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_cellRendererTopRightGrid\", function (_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rest = (0, _objectWithoutProperties2[\"default\"])(_ref3, [\"columnIndex\"]);\n      var _this$props3 = _this.props,\n          cellRenderer = _this$props3.cellRenderer,\n          columnCount = _this$props3.columnCount,\n          fixedColumnCount = _this$props3.fixedColumnCount;\n\n      if (columnIndex === columnCount - fixedColumnCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            width: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          columnIndex: columnIndex + fixedColumnCount,\n          parent: (0, _assertThisInitialized2[\"default\"])(_this)\n        }));\n      }\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_columnWidthRightGrid\", function (_ref4) {\n      var index = _ref4.index;\n      var _this$props4 = _this.props,\n          columnCount = _this$props4.columnCount,\n          fixedColumnCount = _this$props4.fixedColumnCount,\n          columnWidth = _this$props4.columnWidth;\n      var _this$state = _this.state,\n          scrollbarSize = _this$state.scrollbarSize,\n          showHorizontalScrollbar = _this$state.showHorizontalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showHorizontalScrollbar && index === columnCount - fixedColumnCount) {\n        return scrollbarSize;\n      }\n\n      return typeof columnWidth === 'function' ? columnWidth({\n        index: index + fixedColumnCount\n      }) : columnWidth;\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onScroll\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft,\n          scrollTop = scrollInfo.scrollTop;\n\n      _this.setState({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      var onScroll = _this.props.onScroll;\n\n      if (onScroll) {\n        onScroll(scrollInfo);\n      }\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onScrollbarPresenceChange\", function (_ref5) {\n      var horizontal = _ref5.horizontal,\n          size = _ref5.size,\n          vertical = _ref5.vertical;\n      var _this$state2 = _this.state,\n          showHorizontalScrollbar = _this$state2.showHorizontalScrollbar,\n          showVerticalScrollbar = _this$state2.showVerticalScrollbar;\n\n      if (horizontal !== showHorizontalScrollbar || vertical !== showVerticalScrollbar) {\n        _this.setState({\n          scrollbarSize: size,\n          showHorizontalScrollbar: horizontal,\n          showVerticalScrollbar: vertical\n        });\n\n        var onScrollbarPresenceChange = _this.props.onScrollbarPresenceChange;\n\n        if (typeof onScrollbarPresenceChange === 'function') {\n          onScrollbarPresenceChange({\n            horizontal: horizontal,\n            size: size,\n            vertical: vertical\n          });\n        }\n      }\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onScrollLeft\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft;\n\n      _this._onScroll({\n        scrollLeft: scrollLeft,\n        scrollTop: _this.state.scrollTop\n      });\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onScrollTop\", function (scrollInfo) {\n      var scrollTop = scrollInfo.scrollTop;\n\n      _this._onScroll({\n        scrollTop: scrollTop,\n        scrollLeft: _this.state.scrollLeft\n      });\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_rowHeightBottomGrid\", function (_ref6) {\n      var index = _ref6.index;\n      var _this$props5 = _this.props,\n          fixedRowCount = _this$props5.fixedRowCount,\n          rowCount = _this$props5.rowCount,\n          rowHeight = _this$props5.rowHeight;\n      var _this$state3 = _this.state,\n          scrollbarSize = _this$state3.scrollbarSize,\n          showVerticalScrollbar = _this$state3.showVerticalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showVerticalScrollbar && index === rowCount - fixedRowCount) {\n        return scrollbarSize;\n      }\n\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: index + fixedRowCount\n      }) : rowHeight;\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_topLeftGridRef\", function (ref) {\n      _this._topLeftGrid = ref;\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_topRightGridRef\", function (ref) {\n      _this._topRightGrid = ref;\n    });\n    var deferredMeasurementCache = props.deferredMeasurementCache,\n        _fixedColumnCount = props.fixedColumnCount,\n        _fixedRowCount = props.fixedRowCount;\n\n    _this._maybeCalculateCachedStyles(true);\n\n    if (deferredMeasurementCache) {\n      _this._deferredMeasurementCacheBottomLeftGrid = _fixedRowCount > 0 ? new _CellMeasurerCacheDecorator[\"default\"]({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: 0,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheBottomRightGrid = _fixedColumnCount > 0 || _fixedRowCount > 0 ? new _CellMeasurerCacheDecorator[\"default\"]({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheTopRightGrid = _fixedColumnCount > 0 ? new _CellMeasurerCacheDecorator[\"default\"]({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: 0\n      }) : deferredMeasurementCache;\n    }\n\n    return _this;\n  }\n\n  (0, _createClass2[\"default\"])(MultiGrid, [{\n    key: \"forceUpdateGrids\",\n    value: function forceUpdateGrids() {\n      this._bottomLeftGrid && this._bottomLeftGrid.forceUpdate();\n      this._bottomRightGrid && this._bottomRightGrid.forceUpdate();\n      this._topLeftGrid && this._topLeftGrid.forceUpdate();\n      this._topRightGrid && this._topRightGrid.forceUpdate();\n    }\n    /** See Grid#invalidateCellSizeAfterRender */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender() {\n      var _ref7 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref7$columnIndex = _ref7.columnIndex,\n          columnIndex = _ref7$columnIndex === void 0 ? 0 : _ref7$columnIndex,\n          _ref7$rowIndex = _ref7.rowIndex,\n          rowIndex = _ref7$rowIndex === void 0 ? 0 : _ref7$rowIndex;\n\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      this._bottomLeftGrid && this._bottomLeftGrid.measureAllCells();\n      this._bottomRightGrid && this._bottomRightGrid.measureAllCells();\n      this._topLeftGrid && this._topLeftGrid.measureAllCells();\n      this._topRightGrid && this._topRightGrid.measureAllCells();\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref8 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref8$columnIndex = _ref8.columnIndex,\n          columnIndex = _ref8$columnIndex === void 0 ? 0 : _ref8$columnIndex,\n          _ref8$rowIndex = _ref8.rowIndex,\n          rowIndex = _ref8$rowIndex === void 0 ? 0 : _ref8$rowIndex;\n\n      var _this$props6 = this.props,\n          fixedColumnCount = _this$props6.fixedColumnCount,\n          fixedRowCount = _this$props6.fixedRowCount;\n      var adjustedColumnIndex = Math.max(0, columnIndex - fixedColumnCount);\n      var adjustedRowIndex = Math.max(0, rowIndex - fixedRowCount);\n      this._bottomLeftGrid && this._bottomLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._bottomRightGrid && this._bottomRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._topLeftGrid && this._topLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: rowIndex\n      });\n      this._topRightGrid && this._topRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: rowIndex\n      });\n      this._leftGridWidth = null;\n      this._topGridHeight = null;\n\n      this._maybeCalculateCachedStyles(true);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props7 = this.props,\n          scrollLeft = _this$props7.scrollLeft,\n          scrollTop = _this$props7.scrollTop;\n\n      if (scrollLeft > 0 || scrollTop > 0) {\n        var newState = {};\n\n        if (scrollLeft > 0) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop > 0) {\n          newState.scrollTop = scrollTop;\n        }\n\n        this.setState(newState);\n      }\n\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props8 = this.props,\n          onScroll = _this$props8.onScroll,\n          onSectionRendered = _this$props8.onSectionRendered,\n          onScrollbarPresenceChange = _this$props8.onScrollbarPresenceChange,\n          scrollLeftProp = _this$props8.scrollLeft,\n          scrollToColumn = _this$props8.scrollToColumn,\n          scrollTopProp = _this$props8.scrollTop,\n          scrollToRow = _this$props8.scrollToRow,\n          rest = (0, _objectWithoutProperties2[\"default\"])(_this$props8, [\"onScroll\", \"onSectionRendered\", \"onScrollbarPresenceChange\", \"scrollLeft\", \"scrollToColumn\", \"scrollTop\", \"scrollToRow\"]);\n\n      this._prepareForRender(); // Don't render any of our Grids if there are no cells.\n      // This mirrors what Grid does,\n      // And prevents us from recording inaccurage measurements when used with CellMeasurer.\n\n\n      if (this.props.width === 0 || this.props.height === 0) {\n        return null;\n      } // scrollTop and scrollLeft props are explicitly filtered out and ignored\n\n\n      var _this$state4 = this.state,\n          scrollLeft = _this$state4.scrollLeft,\n          scrollTop = _this$state4.scrollTop;\n      return React.createElement(\"div\", {\n        style: this._containerOuterStyle\n      }, React.createElement(\"div\", {\n        style: this._containerTopStyle\n      }, this._renderTopLeftGrid(rest), this._renderTopRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollLeft: scrollLeft\n      }))), React.createElement(\"div\", {\n        style: this._containerBottomStyle\n      }, this._renderBottomLeftGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollTop: scrollTop\n      })), this._renderBottomRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        onSectionRendered: onSectionRendered,\n        scrollLeft: scrollLeft,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow,\n        scrollTop: scrollTop\n      }))));\n    }\n  }, {\n    key: \"_getBottomGridHeight\",\n    value: function _getBottomGridHeight(props) {\n      var height = props.height;\n\n      var topGridHeight = this._getTopGridHeight(props);\n\n      return height - topGridHeight;\n    }\n  }, {\n    key: \"_getLeftGridWidth\",\n    value: function _getLeftGridWidth(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          columnWidth = props.columnWidth;\n\n      if (this._leftGridWidth == null) {\n        if (typeof columnWidth === 'function') {\n          var leftGridWidth = 0;\n\n          for (var index = 0; index < fixedColumnCount; index++) {\n            leftGridWidth += columnWidth({\n              index: index\n            });\n          }\n\n          this._leftGridWidth = leftGridWidth;\n        } else {\n          this._leftGridWidth = columnWidth * fixedColumnCount;\n        }\n      }\n\n      return this._leftGridWidth;\n    }\n  }, {\n    key: \"_getRightGridWidth\",\n    value: function _getRightGridWidth(props) {\n      var width = props.width;\n\n      var leftGridWidth = this._getLeftGridWidth(props);\n\n      return width - leftGridWidth;\n    }\n  }, {\n    key: \"_getTopGridHeight\",\n    value: function _getTopGridHeight(props) {\n      var fixedRowCount = props.fixedRowCount,\n          rowHeight = props.rowHeight;\n\n      if (this._topGridHeight == null) {\n        if (typeof rowHeight === 'function') {\n          var topGridHeight = 0;\n\n          for (var index = 0; index < fixedRowCount; index++) {\n            topGridHeight += rowHeight({\n              index: index\n            });\n          }\n\n          this._topGridHeight = topGridHeight;\n        } else {\n          this._topGridHeight = rowHeight * fixedRowCount;\n        }\n      }\n\n      return this._topGridHeight;\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n        this.forceUpdate();\n      }\n    }\n    /**\n     * Avoid recreating inline styles each render; this bypasses Grid's shallowCompare.\n     * This method recalculates styles only when specific props change.\n     */\n\n  }, {\n    key: \"_maybeCalculateCachedStyles\",\n    value: function _maybeCalculateCachedStyles(resetAll) {\n      var _this$props9 = this.props,\n          columnWidth = _this$props9.columnWidth,\n          enableFixedColumnScroll = _this$props9.enableFixedColumnScroll,\n          enableFixedRowScroll = _this$props9.enableFixedRowScroll,\n          height = _this$props9.height,\n          fixedColumnCount = _this$props9.fixedColumnCount,\n          fixedRowCount = _this$props9.fixedRowCount,\n          rowHeight = _this$props9.rowHeight,\n          style = _this$props9.style,\n          styleBottomLeftGrid = _this$props9.styleBottomLeftGrid,\n          styleBottomRightGrid = _this$props9.styleBottomRightGrid,\n          styleTopLeftGrid = _this$props9.styleTopLeftGrid,\n          styleTopRightGrid = _this$props9.styleTopRightGrid,\n          width = _this$props9.width;\n      var sizeChange = resetAll || height !== this._lastRenderedHeight || width !== this._lastRenderedWidth;\n      var leftSizeChange = resetAll || columnWidth !== this._lastRenderedColumnWidth || fixedColumnCount !== this._lastRenderedFixedColumnCount;\n      var topSizeChange = resetAll || fixedRowCount !== this._lastRenderedFixedRowCount || rowHeight !== this._lastRenderedRowHeight;\n\n      if (resetAll || sizeChange || style !== this._lastRenderedStyle) {\n        this._containerOuterStyle = _objectSpread({\n          height: height,\n          overflow: 'visible',\n          // Let :focus outline show through\n          width: width\n        }, style);\n      }\n\n      if (resetAll || sizeChange || topSizeChange) {\n        this._containerTopStyle = {\n          height: this._getTopGridHeight(this.props),\n          position: 'relative',\n          width: width\n        };\n        this._containerBottomStyle = {\n          height: height - this._getTopGridHeight(this.props),\n          overflow: 'visible',\n          // Let :focus outline show through\n          position: 'relative',\n          width: width\n        };\n      }\n\n      if (resetAll || styleBottomLeftGrid !== this._lastRenderedStyleBottomLeftGrid) {\n        this._bottomLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: enableFixedColumnScroll ? 'auto' : 'hidden',\n          position: 'absolute'\n        }, styleBottomLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleBottomRightGrid !== this._lastRenderedStyleBottomRightGrid) {\n        this._bottomRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          position: 'absolute'\n        }, styleBottomRightGrid);\n      }\n\n      if (resetAll || styleTopLeftGrid !== this._lastRenderedStyleTopLeftGrid) {\n        this._topLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleTopRightGrid !== this._lastRenderedStyleTopRightGrid) {\n        this._topRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          overflowX: enableFixedRowScroll ? 'auto' : 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopRightGrid);\n      }\n\n      this._lastRenderedColumnWidth = columnWidth;\n      this._lastRenderedFixedColumnCount = fixedColumnCount;\n      this._lastRenderedFixedRowCount = fixedRowCount;\n      this._lastRenderedHeight = height;\n      this._lastRenderedRowHeight = rowHeight;\n      this._lastRenderedStyle = style;\n      this._lastRenderedStyleBottomLeftGrid = styleBottomLeftGrid;\n      this._lastRenderedStyleBottomRightGrid = styleBottomRightGrid;\n      this._lastRenderedStyleTopLeftGrid = styleTopLeftGrid;\n      this._lastRenderedStyleTopRightGrid = styleTopRightGrid;\n      this._lastRenderedWidth = width;\n    }\n  }, {\n    key: \"_prepareForRender\",\n    value: function _prepareForRender() {\n      if (this._lastRenderedColumnWidth !== this.props.columnWidth || this._lastRenderedFixedColumnCount !== this.props.fixedColumnCount) {\n        this._leftGridWidth = null;\n      }\n\n      if (this._lastRenderedFixedRowCount !== this.props.fixedRowCount || this._lastRenderedRowHeight !== this.props.rowHeight) {\n        this._topGridHeight = null;\n      }\n\n      this._maybeCalculateCachedStyles();\n\n      this._lastRenderedColumnWidth = this.props.columnWidth;\n      this._lastRenderedFixedColumnCount = this.props.fixedColumnCount;\n      this._lastRenderedFixedRowCount = this.props.fixedRowCount;\n      this._lastRenderedRowHeight = this.props.rowHeight;\n    }\n  }, {\n    key: \"_renderBottomLeftGrid\",\n    value: function _renderBottomLeftGrid(props) {\n      var enableFixedColumnScroll = props.enableFixedColumnScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          hideBottomLeftGridScrollbar = props.hideBottomLeftGridScrollbar;\n      var showVerticalScrollbar = this.state.showVerticalScrollbar;\n\n      if (!fixedColumnCount) {\n        return null;\n      }\n\n      var additionalRowCount = showVerticalScrollbar ? 1 : 0,\n          height = this._getBottomGridHeight(props),\n          width = this._getLeftGridWidth(props),\n          scrollbarSize = this.state.showVerticalScrollbar ? this.state.scrollbarSize : 0,\n          gridWidth = hideBottomLeftGridScrollbar ? width + scrollbarSize : width;\n\n      var bottomLeftGrid = React.createElement(_Grid[\"default\"], (0, _extends2[\"default\"])({}, props, {\n        cellRenderer: this._cellRendererBottomLeftGrid,\n        className: this.props.classNameBottomLeftGrid,\n        columnCount: fixedColumnCount,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomLeftGrid,\n        height: height,\n        onScroll: enableFixedColumnScroll ? this._onScrollTop : undefined,\n        ref: this._bottomLeftGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount) + additionalRowCount,\n        rowHeight: this._rowHeightBottomGrid,\n        style: this._bottomLeftGridStyle,\n        tabIndex: null,\n        width: gridWidth\n      }));\n\n      if (hideBottomLeftGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"BottomLeftGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._bottomLeftGridStyle, {\n            height: height,\n            width: width,\n            overflowY: 'hidden'\n          })\n        }, bottomLeftGrid);\n      }\n\n      return bottomLeftGrid;\n    }\n  }, {\n    key: \"_renderBottomRightGrid\",\n    value: function _renderBottomRightGrid(props) {\n      var columnCount = props.columnCount,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          scrollToColumn = props.scrollToColumn,\n          scrollToRow = props.scrollToRow;\n      return React.createElement(_Grid[\"default\"], (0, _extends2[\"default\"])({}, props, {\n        cellRenderer: this._cellRendererBottomRightGrid,\n        className: this.props.classNameBottomRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount),\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomRightGrid,\n        height: this._getBottomGridHeight(props),\n        onScroll: this._onScroll,\n        onScrollbarPresenceChange: this._onScrollbarPresenceChange,\n        ref: this._bottomRightGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount),\n        rowHeight: this._rowHeightBottomGrid,\n        scrollToColumn: scrollToColumn - fixedColumnCount,\n        scrollToRow: scrollToRow - fixedRowCount,\n        style: this._bottomRightGridStyle,\n        width: this._getRightGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopLeftGrid\",\n    value: function _renderTopLeftGrid(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount;\n\n      if (!fixedColumnCount || !fixedRowCount) {\n        return null;\n      }\n\n      return React.createElement(_Grid[\"default\"], (0, _extends2[\"default\"])({}, props, {\n        className: this.props.classNameTopLeftGrid,\n        columnCount: fixedColumnCount,\n        height: this._getTopGridHeight(props),\n        ref: this._topLeftGridRef,\n        rowCount: fixedRowCount,\n        style: this._topLeftGridStyle,\n        tabIndex: null,\n        width: this._getLeftGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopRightGrid\",\n    value: function _renderTopRightGrid(props) {\n      var columnCount = props.columnCount,\n          enableFixedRowScroll = props.enableFixedRowScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          scrollLeft = props.scrollLeft,\n          hideTopRightGridScrollbar = props.hideTopRightGridScrollbar;\n      var _this$state5 = this.state,\n          showHorizontalScrollbar = _this$state5.showHorizontalScrollbar,\n          scrollbarSize = _this$state5.scrollbarSize;\n\n      if (!fixedRowCount) {\n        return null;\n      }\n\n      var additionalColumnCount = showHorizontalScrollbar ? 1 : 0,\n          height = this._getTopGridHeight(props),\n          width = this._getRightGridWidth(props),\n          additionalHeight = showHorizontalScrollbar ? scrollbarSize : 0;\n\n      var gridHeight = height,\n          style = this._topRightGridStyle;\n\n      if (hideTopRightGridScrollbar) {\n        gridHeight = height + additionalHeight;\n        style = _objectSpread({}, this._topRightGridStyle, {\n          left: 0\n        });\n      }\n\n      var topRightGrid = React.createElement(_Grid[\"default\"], (0, _extends2[\"default\"])({}, props, {\n        cellRenderer: this._cellRendererTopRightGrid,\n        className: this.props.classNameTopRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount) + additionalColumnCount,\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheTopRightGrid,\n        height: gridHeight,\n        onScroll: enableFixedRowScroll ? this._onScrollLeft : undefined,\n        ref: this._topRightGridRef,\n        rowCount: fixedRowCount,\n        scrollLeft: scrollLeft,\n        style: style,\n        tabIndex: null,\n        width: width\n      }));\n\n      if (hideTopRightGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"TopRightGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._topRightGridStyle, {\n            height: height,\n            width: width,\n            overflowX: 'hidden'\n          })\n        }, topRightGrid);\n      }\n\n      return topRightGrid;\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null && nextProps.scrollLeft >= 0 ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null && nextProps.scrollTop >= 0 ? nextProps.scrollTop : prevState.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n  return MultiGrid;\n}(React.PureComponent);\n\n(0, _defineProperty2[\"default\"])(MultiGrid, \"defaultProps\", {\n  classNameBottomLeftGrid: '',\n  classNameBottomRightGrid: '',\n  classNameTopLeftGrid: '',\n  classNameTopRightGrid: '',\n  enableFixedColumnScroll: false,\n  enableFixedRowScroll: false,\n  fixedColumnCount: 0,\n  fixedRowCount: 0,\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  styleBottomLeftGrid: {},\n  styleBottomRightGrid: {},\n  styleTopLeftGrid: {},\n  styleTopRightGrid: {},\n  hideTopRightGridScrollbar: false,\n  hideBottomLeftGridScrollbar: false\n});\nMultiGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  classNameBottomLeftGrid: _propTypes[\"default\"].string.isRequired,\n  classNameBottomRightGrid: _propTypes[\"default\"].string.isRequired,\n  classNameTopLeftGrid: _propTypes[\"default\"].string.isRequired,\n  classNameTopRightGrid: _propTypes[\"default\"].string.isRequired,\n  enableFixedColumnScroll: _propTypes[\"default\"].bool.isRequired,\n  enableFixedRowScroll: _propTypes[\"default\"].bool.isRequired,\n  fixedColumnCount: _propTypes[\"default\"].number.isRequired,\n  fixedRowCount: _propTypes[\"default\"].number.isRequired,\n  onScrollbarPresenceChange: _propTypes[\"default\"].func,\n  style: _propTypes[\"default\"].object.isRequired,\n  styleBottomLeftGrid: _propTypes[\"default\"].object.isRequired,\n  styleBottomRightGrid: _propTypes[\"default\"].object.isRequired,\n  styleTopLeftGrid: _propTypes[\"default\"].object.isRequired,\n  styleTopRightGrid: _propTypes[\"default\"].object.isRequired,\n  hideTopRightGridScrollbar: _propTypes[\"default\"].bool,\n  hideBottomLeftGridScrollbar: _propTypes[\"default\"].bool\n} : {};\n(0, _reactLifecyclesCompat.polyfill)(MultiGrid);\nvar _default = MultiGrid;\nexports[\"default\"] = _default;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _CellMeasurer = require(\"../CellMeasurer\");\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCacheDecorator =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCacheDecorator() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    (0, _classCallCheck2[\"default\"])(this, CellMeasurerCacheDecorator);\n    (0, _defineProperty2[\"default\"])(this, \"_cellMeasurerCache\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_columnIndexOffset\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_rowIndexOffset\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      _this._cellMeasurerCache.columnWidth({\n        index: index + _this._columnIndexOffset\n      });\n    });\n    (0, _defineProperty2[\"default\"])(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      _this._cellMeasurerCache.rowHeight({\n        index: index + _this._rowIndexOffset\n      });\n    });\n    var cellMeasurerCache = params.cellMeasurerCache,\n        _params$columnIndexOf = params.columnIndexOffset,\n        columnIndexOffset = _params$columnIndexOf === void 0 ? 0 : _params$columnIndexOf,\n        _params$rowIndexOffse = params.rowIndexOffset,\n        rowIndexOffset = _params$rowIndexOffse === void 0 ? 0 : _params$rowIndexOffse;\n    this._cellMeasurerCache = cellMeasurerCache;\n    this._columnIndexOffset = columnIndexOffset;\n    this._rowIndexOffset = rowIndexOffset;\n  }\n\n  (0, _createClass2[\"default\"])(CellMeasurerCacheDecorator, [{\n    key: \"clear\",\n    value: function clear(rowIndex, columnIndex) {\n      this._cellMeasurerCache.clear(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellMeasurerCache.clearAll();\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._cellMeasurerCache.hasFixedHeight();\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._cellMeasurerCache.hasFixedWidth();\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getHeight(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getWidth(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.has(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      this._cellMeasurerCache.set(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset, width, height);\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultWidth;\n    }\n  }]);\n  return CellMeasurerCacheDecorator;\n}();\n\nexports[\"default\"] = CellMeasurerCacheDecorator;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"CellMeasurer\", {\n  enumerable: true,\n  get: function get() {\n    return _CellMeasurer[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"CellMeasurerCache\", {\n  enumerable: true,\n  get: function get() {\n    return _CellMeasurerCache[\"default\"];\n  }\n});\nexports[\"default\"] = void 0;\n\nvar _CellMeasurer = _interopRequireDefault(require(\"./CellMeasurer\"));\n\nvar _CellMeasurerCache = _interopRequireDefault(require(\"./CellMeasurerCache\"));\n\nvar _default = _CellMeasurer[\"default\"];\nexports[\"default\"] = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf3 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactDom = require(\"react-dom\");\n\nvar _types = require(\"./types\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _class, _temp;\n\n/**\n * Wraps a cell and measures its rendered content.\n * Measurements are stored in a per-cell cache.\n * Cached-content is not be re-measured.\n */\nvar CellMeasurer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  (0, _inherits2[\"default\"])(CellMeasurer, _React$PureComponent);\n\n  function CellMeasurer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, CellMeasurer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3[\"default\"])(CellMeasurer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_child\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_measure\", function () {\n      var _this$props = _this.props,\n          cache = _this$props.cache,\n          _this$props$columnInd = _this$props.columnIndex,\n          columnIndex = _this$props$columnInd === void 0 ? 0 : _this$props$columnInd,\n          parent = _this$props.parent,\n          _this$props$rowIndex = _this$props.rowIndex,\n          rowIndex = _this$props$rowIndex === void 0 ? _this.props.index || 0 : _this$props$rowIndex;\n\n      var _this$_getCellMeasure = _this._getCellMeasurements(),\n          height = _this$_getCellMeasure.height,\n          width = _this$_getCellMeasure.width;\n\n      if (height !== cache.getHeight(rowIndex, columnIndex) || width !== cache.getWidth(rowIndex, columnIndex)) {\n        cache.set(rowIndex, columnIndex, width, height);\n\n        if (parent && typeof parent.recomputeGridSize === 'function') {\n          parent.recomputeGridSize({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('CellMeasurer registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      if (element) {\n        _this._maybeMeasureCell();\n      }\n    });\n    return _this;\n  }\n\n  (0, _createClass2[\"default\"])(CellMeasurer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return typeof children === 'function' ? children({\n        measure: this._measure,\n        registerChild: this._registerChild\n      }) : children;\n    }\n  }, {\n    key: \"_getCellMeasurements\",\n    value: function _getCellMeasurements() {\n      var cache = this.props.cache;\n      var node = this._child || (0, _reactDom.findDOMNode)(this); // TODO Check for a bad combination of fixedWidth and missing numeric width or vice versa with height\n\n      if (node && node.ownerDocument && node.ownerDocument.defaultView && node instanceof node.ownerDocument.defaultView.HTMLElement) {\n        var styleWidth = node.style.width;\n        var styleHeight = node.style.height; // If we are re-measuring a cell that has already been measured,\n        // It will have a hard-coded width/height from the previous measurement.\n        // The fact that we are measuring indicates this measurement is probably stale,\n        // So explicitly clear it out (eg set to \"auto\") so we can recalculate.\n        // See issue #593 for more info.\n        // Even if we are measuring initially- if we're inside of a MultiGrid component,\n        // Explicitly clear width/height before measuring to avoid being tainted by another Grid.\n        // eg top/left Grid renders before bottom/right Grid\n        // Since the CellMeasurerCache is shared between them this taints derived cell size values.\n\n        if (!cache.hasFixedWidth()) {\n          node.style.width = 'auto';\n        }\n\n        if (!cache.hasFixedHeight()) {\n          node.style.height = 'auto';\n        }\n\n        var height = Math.ceil(node.offsetHeight);\n        var width = Math.ceil(node.offsetWidth); // Reset after measuring to avoid breaking styles; see #660\n\n        if (styleWidth) {\n          node.style.width = styleWidth;\n        }\n\n        if (styleHeight) {\n          node.style.height = styleHeight;\n        }\n\n        return {\n          height: height,\n          width: width\n        };\n      } else {\n        return {\n          height: 0,\n          width: 0\n        };\n      }\n    }\n  }, {\n    key: \"_maybeMeasureCell\",\n    value: function _maybeMeasureCell() {\n      var _this$props2 = this.props,\n          cache = _this$props2.cache,\n          _this$props2$columnIn = _this$props2.columnIndex,\n          columnIndex = _this$props2$columnIn === void 0 ? 0 : _this$props2$columnIn,\n          parent = _this$props2.parent,\n          _this$props2$rowIndex = _this$props2.rowIndex,\n          rowIndex = _this$props2$rowIndex === void 0 ? this.props.index || 0 : _this$props2$rowIndex;\n\n      if (!cache.has(rowIndex, columnIndex)) {\n        var _this$_getCellMeasure2 = this._getCellMeasurements(),\n            height = _this$_getCellMeasure2.height,\n            width = _this$_getCellMeasure2.width;\n\n        cache.set(rowIndex, columnIndex, width, height); // If size has changed, let Grid know to re-render.\n\n        if (parent && typeof parent.invalidateCellSizeAfterRender === 'function') {\n          parent.invalidateCellSizeAfterRender({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    }\n  }]);\n  return CellMeasurer;\n}(React.PureComponent), (0, _defineProperty2[\"default\"])(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"cache\": function cache() {\n    return (typeof _types.bpfrpt_proptype_CellMeasureCache === \"function\" ? _types.bpfrpt_proptype_CellMeasureCache.isRequired ? _types.bpfrpt_proptype_CellMeasureCache.isRequired : _types.bpfrpt_proptype_CellMeasureCache : _propTypes[\"default\"].shape(_types.bpfrpt_proptype_CellMeasureCache).isRequired).apply(this, arguments);\n  },\n  \"children\": _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].func, _propTypes[\"default\"].node]).isRequired,\n  \"columnIndex\": _propTypes[\"default\"].number,\n  \"index\": _propTypes[\"default\"].number,\n  \"parent\": _propTypes[\"default\"].shape({\n    invalidateCellSizeAfterRender: _propTypes[\"default\"].func,\n    recomputeGridSize: _propTypes[\"default\"].func\n  }).isRequired,\n  \"rowIndex\": _propTypes[\"default\"].number\n}), _temp); // Used for DEV mode warning check\n\nexports[\"default\"] = CellMeasurer;\n(0, _defineProperty2[\"default\"])(CellMeasurer, \"__internalCellMeasurerFlag\", false);\n\nif (process.env.NODE_ENV !== 'production') {\n  CellMeasurer.__internalCellMeasurerFlag = true;\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.DEFAULT_WIDTH = exports.DEFAULT_HEIGHT = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _types = require(\"./types\");\n\nvar DEFAULT_HEIGHT = 30;\nexports.DEFAULT_HEIGHT = DEFAULT_HEIGHT;\nvar DEFAULT_WIDTH = 100; // Enables more intelligent mapping of a given column and row index to an item ID.\n// This prevents a cell cache from being invalidated when its parent collection is modified.\n\nexports.DEFAULT_WIDTH = DEFAULT_WIDTH;\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCache =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCache() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    (0, _classCallCheck2[\"default\"])(this, CellMeasurerCache);\n    (0, _defineProperty2[\"default\"])(this, \"_cellHeightCache\", {});\n    (0, _defineProperty2[\"default\"])(this, \"_cellWidthCache\", {});\n    (0, _defineProperty2[\"default\"])(this, \"_columnWidthCache\", {});\n    (0, _defineProperty2[\"default\"])(this, \"_rowHeightCache\", {});\n    (0, _defineProperty2[\"default\"])(this, \"_defaultHeight\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_defaultWidth\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_minHeight\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_minWidth\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_keyMapper\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_hasFixedHeight\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_hasFixedWidth\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_columnCount\", 0);\n    (0, _defineProperty2[\"default\"])(this, \"_rowCount\", 0);\n    (0, _defineProperty2[\"default\"])(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      var key = _this._keyMapper(0, index);\n\n      return _this._columnWidthCache[key] !== undefined ? _this._columnWidthCache[key] : _this._defaultWidth;\n    });\n    (0, _defineProperty2[\"default\"])(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      var key = _this._keyMapper(index, 0);\n\n      return _this._rowHeightCache[key] !== undefined ? _this._rowHeightCache[key] : _this._defaultHeight;\n    });\n    var defaultHeight = params.defaultHeight,\n        defaultWidth = params.defaultWidth,\n        fixedHeight = params.fixedHeight,\n        fixedWidth = params.fixedWidth,\n        keyMapper = params.keyMapper,\n        minHeight = params.minHeight,\n        minWidth = params.minWidth;\n    this._hasFixedHeight = fixedHeight === true;\n    this._hasFixedWidth = fixedWidth === true;\n    this._minHeight = minHeight || 0;\n    this._minWidth = minWidth || 0;\n    this._keyMapper = keyMapper || defaultKeyMapper;\n    this._defaultHeight = Math.max(this._minHeight, typeof defaultHeight === 'number' ? defaultHeight : DEFAULT_HEIGHT);\n    this._defaultWidth = Math.max(this._minWidth, typeof defaultWidth === 'number' ? defaultWidth : DEFAULT_WIDTH);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (this._hasFixedHeight === false && this._hasFixedWidth === false) {\n        console.warn(\"CellMeasurerCache should only measure a cell's width or height. \" + 'You have configured CellMeasurerCache to measure both. ' + 'This will result in poor performance.');\n      }\n\n      if (this._hasFixedHeight === false && this._defaultHeight === 0) {\n        console.warn('Fixed height CellMeasurerCache should specify a :defaultHeight greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n\n      if (this._hasFixedWidth === false && this._defaultWidth === 0) {\n        console.warn('Fixed width CellMeasurerCache should specify a :defaultWidth greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n    }\n  }\n\n  (0, _createClass2[\"default\"])(CellMeasurerCache, [{\n    key: \"clear\",\n    value: function clear(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      delete this._cellHeightCache[key];\n      delete this._cellWidthCache[key];\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellHeightCache = {};\n      this._cellWidthCache = {};\n      this._columnWidthCache = {};\n      this._rowHeightCache = {};\n      this._rowCount = 0;\n      this._columnCount = 0;\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._hasFixedHeight;\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._hasFixedWidth;\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedHeight) {\n        return this._defaultHeight;\n      } else {\n        var _key = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellHeightCache[_key] !== undefined ? Math.max(this._minHeight, this._cellHeightCache[_key]) : this._defaultHeight;\n      }\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedWidth) {\n        return this._defaultWidth;\n      } else {\n        var _key2 = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellWidthCache[_key2] !== undefined ? Math.max(this._minWidth, this._cellWidthCache[_key2]) : this._defaultWidth;\n      }\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      return this._cellHeightCache[key] !== undefined;\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      if (columnIndex >= this._columnCount) {\n        this._columnCount = columnIndex + 1;\n      }\n\n      if (rowIndex >= this._rowCount) {\n        this._rowCount = rowIndex + 1;\n      } // Size is cached per cell so we don't have to re-measure if cells are re-ordered.\n\n\n      this._cellHeightCache[key] = height;\n      this._cellWidthCache[key] = width;\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"_updateCachedColumnAndRowSizes\",\n    value: function _updateCachedColumnAndRowSizes(rowIndex, columnIndex) {\n      // :columnWidth and :rowHeight are derived based on all cells in a column/row.\n      // Pre-cache these derived values for faster lookup later.\n      // Reads are expected to occur more frequently than writes in this case.\n      // Only update non-fixed dimensions though to avoid doing unnecessary work.\n      if (!this._hasFixedWidth) {\n        var columnWidth = 0;\n\n        for (var i = 0; i < this._rowCount; i++) {\n          columnWidth = Math.max(columnWidth, this.getWidth(i, columnIndex));\n        }\n\n        var columnKey = this._keyMapper(0, columnIndex);\n\n        this._columnWidthCache[columnKey] = columnWidth;\n      }\n\n      if (!this._hasFixedHeight) {\n        var rowHeight = 0;\n\n        for (var _i = 0; _i < this._columnCount; _i++) {\n          rowHeight = Math.max(rowHeight, this.getHeight(rowIndex, _i));\n        }\n\n        var rowKey = this._keyMapper(rowIndex, 0);\n\n        this._rowHeightCache[rowKey] = rowHeight;\n      }\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._defaultWidth;\n    }\n  }]);\n  return CellMeasurerCache;\n}();\n\nexports[\"default\"] = CellMeasurerCache;\n\nfunction defaultKeyMapper(rowIndex, columnIndex) {\n  return \"\".concat(rowIndex, \"-\").concat(columnIndex);\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function get() {\n    return _Grid[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"Grid\", {\n  enumerable: true,\n  get: function get() {\n    return _Grid[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"accessibilityOverscanIndicesGetter\", {\n  enumerable: true,\n  get: function get() {\n    return _accessibilityOverscanIndicesGetter[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"defaultCellRangeRenderer\", {\n  enumerable: true,\n  get: function get() {\n    return _defaultCellRangeRenderer[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"defaultOverscanIndicesGetter\", {\n  enumerable: true,\n  get: function get() {\n    return _defaultOverscanIndicesGetter[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"bpfrpt_proptype_NoContentRenderer\", {\n  enumerable: true,\n  get: function get() {\n    return _types.bpfrpt_proptype_NoContentRenderer;\n  }\n});\nObject.defineProperty(exports, \"bpfrpt_proptype_Alignment\", {\n  enumerable: true,\n  get: function get() {\n    return _types.bpfrpt_proptype_Alignment;\n  }\n});\nObject.defineProperty(exports, \"bpfrpt_proptype_CellPosition\", {\n  enumerable: true,\n  get: function get() {\n    return _types.bpfrpt_proptype_CellPosition;\n  }\n});\nObject.defineProperty(exports, \"bpfrpt_proptype_CellSize\", {\n  enumerable: true,\n  get: function get() {\n    return _types.bpfrpt_proptype_CellSize;\n  }\n});\nObject.defineProperty(exports, \"bpfrpt_proptype_OverscanIndicesGetter\", {\n  enumerable: true,\n  get: function get() {\n    return _types.bpfrpt_proptype_OverscanIndicesGetter;\n  }\n});\nObject.defineProperty(exports, \"bpfrpt_proptype_RenderedSection\", {\n  enumerable: true,\n  get: function get() {\n    return _types.bpfrpt_proptype_RenderedSection;\n  }\n});\nObject.defineProperty(exports, \"bpfrpt_proptype_CellRendererParams\", {\n  enumerable: true,\n  get: function get() {\n    return _types.bpfrpt_proptype_CellRendererParams;\n  }\n});\nObject.defineProperty(exports, \"bpfrpt_proptype_Scroll\", {\n  enumerable: true,\n  get: function get() {\n    return _types.bpfrpt_proptype_Scroll;\n  }\n});\n\nvar _Grid = _interopRequireDefault(require(\"./Grid\"));\n\nvar _accessibilityOverscanIndicesGetter = _interopRequireDefault(require(\"./accessibilityOverscanIndicesGetter\"));\n\nvar _defaultCellRangeRenderer = _interopRequireDefault(require(\"./defaultCellRangeRenderer\"));\n\nvar _defaultOverscanIndicesGetter = _interopRequireDefault(require(\"./defaultOverscanIndicesGetter\"));\n\nvar _types = require(\"./types\");","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.DEFAULT_SCROLLING_RESET_TIME_INTERVAL = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\n\nvar _calculateSizeAndPositionDataAndUpdateScrollOffset = _interopRequireDefault(require(\"./utils/calculateSizeAndPositionDataAndUpdateScrollOffset\"));\n\nvar _ScalingCellSizeAndPositionManager = _interopRequireDefault(require(\"./utils/ScalingCellSizeAndPositionManager\"));\n\nvar _createCallbackMemoizer = _interopRequireDefault(require(\"../utils/createCallbackMemoizer\"));\n\nvar _defaultOverscanIndicesGetter = _interopRequireWildcard(require(\"./defaultOverscanIndicesGetter\"));\n\nvar _updateScrollIndexHelper = _interopRequireDefault(require(\"./utils/updateScrollIndexHelper\"));\n\nvar _defaultCellRangeRenderer = _interopRequireDefault(require(\"./defaultCellRangeRenderer\"));\n\nvar _scrollbarSize = _interopRequireDefault(require(\"dom-helpers/scrollbarSize\"));\n\nvar _reactLifecyclesCompat = require(\"react-lifecycles-compat\");\n\nvar _requestAnimationTimeout = require(\"../utils/requestAnimationTimeout\");\n\nvar _types = require(\"./types\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\nvar DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nexports.DEFAULT_SCROLLING_RESET_TIME_INTERVAL = DEFAULT_SCROLLING_RESET_TIME_INTERVAL;\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n\nvar renderNull = function renderNull() {\n  return null;\n};\n\n/**\n * Renders tabular data with virtualization along the vertical and horizontal axes.\n * Row heights and column widths must be known ahead of time and specified as properties.\n */\nvar Grid = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  (0, _inherits2[\"default\"])(Grid, _React$PureComponent);\n\n  // Invokes onSectionRendered callback only when start/stop row or column indices change\n  function Grid(props) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, Grid);\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(Grid).call(this, props));\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onGridRenderedMemoizer\", (0, _createCallbackMemoizer[\"default\"])());\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onScrollMemoizer\", (0, _createCallbackMemoizer[\"default\"])(false));\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_deferredInvalidateColumnIndex\", null);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_deferredInvalidateRowIndex\", null);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_recomputeScrollLeftFlag\", false);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_recomputeScrollTopFlag\", false);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_horizontalScrollBarSize\", 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_verticalScrollBarSize\", 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_scrollbarPresenceChanged\", false);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_scrollingContainer\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_childrenToDisplay\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_columnStartIndex\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_columnStopIndex\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_rowStartIndex\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_rowStopIndex\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_renderedColumnStartIndex\", 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_renderedColumnStopIndex\", 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_renderedRowStartIndex\", 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_renderedRowStopIndex\", 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_initialScrollTop\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_initialScrollLeft\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_disablePointerEventsTimeoutId\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_styleCache\", {});\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_cellCache\", {});\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_debounceScrollEndedCallback\", function () {\n      _this._disablePointerEventsTimeoutId = null; // isScrolling is used to determine if we reset styleCache\n\n      _this.setState({\n        isScrolling: false,\n        needToResetStyleCache: false\n      });\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_invokeOnGridRenderedHelper\", function () {\n      var onSectionRendered = _this.props.onSectionRendered;\n\n      _this._onGridRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          columnOverscanStartIndex: _this._columnStartIndex,\n          columnOverscanStopIndex: _this._columnStopIndex,\n          columnStartIndex: _this._renderedColumnStartIndex,\n          columnStopIndex: _this._renderedColumnStopIndex,\n          rowOverscanStartIndex: _this._rowStartIndex,\n          rowOverscanStopIndex: _this._rowStopIndex,\n          rowStartIndex: _this._renderedRowStartIndex,\n          rowStopIndex: _this._renderedRowStopIndex\n        }\n      });\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target === _this._scrollingContainer) {\n        _this.handleScrollEvent(event.target);\n      }\n    });\n    var columnSizeAndPositionManager = new _ScalingCellSizeAndPositionManager[\"default\"]({\n      cellCount: props.columnCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.columnWidth)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedColumnSize(props)\n    });\n    var rowSizeAndPositionManager = new _ScalingCellSizeAndPositionManager[\"default\"]({\n      cellCount: props.rowCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.rowHeight)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedRowSize(props)\n    });\n    _this.state = {\n      instanceProps: {\n        columnSizeAndPositionManager: columnSizeAndPositionManager,\n        rowSizeAndPositionManager: rowSizeAndPositionManager,\n        prevColumnWidth: props.columnWidth,\n        prevRowHeight: props.rowHeight,\n        prevColumnCount: props.columnCount,\n        prevRowCount: props.rowCount,\n        prevIsScrolling: props.isScrolling === true,\n        prevScrollToColumn: props.scrollToColumn,\n        prevScrollToRow: props.scrollToRow,\n        scrollbarSize: 0,\n        scrollbarSizeMeasured: false\n      },\n      isScrolling: false,\n      scrollDirectionHorizontal: _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD,\n      scrollDirectionVertical: _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollPositionChangeReason: null,\n      needToResetStyleCache: false\n    };\n\n    if (props.scrollToRow > 0) {\n      _this._initialScrollTop = _this._getCalculatedScrollTop(props, _this.state);\n    }\n\n    if (props.scrollToColumn > 0) {\n      _this._initialScrollLeft = _this._getCalculatedScrollLeft(props, _this.state);\n    }\n\n    return _this;\n  }\n  /**\n   * Gets offsets for a given cell and alignment.\n   */\n\n\n  (0, _createClass2[\"default\"])(Grid, [{\n    key: \"getOffsetForCell\",\n    value: function getOffsetForCell() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$alignment = _ref.alignment,\n          alignment = _ref$alignment === void 0 ? this.props.scrollToAlignment : _ref$alignment,\n          _ref$columnIndex = _ref.columnIndex,\n          columnIndex = _ref$columnIndex === void 0 ? this.props.scrollToColumn : _ref$columnIndex,\n          _ref$rowIndex = _ref.rowIndex,\n          rowIndex = _ref$rowIndex === void 0 ? this.props.scrollToRow : _ref$rowIndex;\n\n      var offsetProps = _objectSpread({}, this.props, {\n        scrollToAlignment: alignment,\n        scrollToColumn: columnIndex,\n        scrollToRow: rowIndex\n      });\n\n      return {\n        scrollLeft: this._getCalculatedScrollLeft(offsetProps),\n        scrollTop: this._getCalculatedScrollTop(offsetProps)\n      };\n    }\n    /**\n     * Gets estimated total rows' height.\n     */\n\n  }, {\n    key: \"getTotalRowsHeight\",\n    value: function getTotalRowsHeight() {\n      return this.state.instanceProps.rowSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * Gets estimated total columns' width.\n     */\n\n  }, {\n    key: \"getTotalColumnsWidth\",\n    value: function getTotalColumnsWidth() {\n      return this.state.instanceProps.columnSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * This method handles a scroll event originating from an external scroll control.\n     * It's an advanced method and should probably not be used unless you're implementing a custom scroll-bar solution.\n     */\n\n  }, {\n    key: \"handleScrollEvent\",\n    value: function handleScrollEvent(_ref2) {\n      var _ref2$scrollLeft = _ref2.scrollLeft,\n          scrollLeftParam = _ref2$scrollLeft === void 0 ? 0 : _ref2$scrollLeft,\n          _ref2$scrollTop = _ref2.scrollTop,\n          scrollTopParam = _ref2$scrollTop === void 0 ? 0 : _ref2$scrollTop;\n\n      // On iOS, we can arrive at negative offsets by swiping past the start.\n      // To prevent flicker here, we make playing in the negative offset zone cause nothing to happen.\n      if (scrollTopParam < 0) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      this._debounceScrollEnded();\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          autoWidth = _this$props.autoWidth,\n          height = _this$props.height,\n          width = _this$props.width;\n      var instanceProps = this.state.instanceProps; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollbarSize = instanceProps.scrollbarSize;\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var scrollLeft = Math.min(Math.max(0, totalColumnsWidth - width + scrollbarSize), scrollLeftParam);\n      var scrollTop = Math.min(Math.max(0, totalRowsHeight - height + scrollbarSize), scrollTopParam); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (this.state.scrollLeft !== scrollLeft || this.state.scrollTop !== scrollTop) {\n        // Track scrolling direction so we can more efficiently overscan rows to reduce empty space around the edges while scrolling.\n        // Don't change direction for an axis unless scroll offset has changed.\n        var scrollDirectionHorizontal = scrollLeft !== this.state.scrollLeft ? scrollLeft > this.state.scrollLeft ? _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD : _defaultOverscanIndicesGetter.SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionHorizontal;\n        var scrollDirectionVertical = scrollTop !== this.state.scrollTop ? scrollTop > this.state.scrollTop ? _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD : _defaultOverscanIndicesGetter.SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionVertical;\n        var newState = {\n          isScrolling: true,\n          scrollDirectionHorizontal: scrollDirectionHorizontal,\n          scrollDirectionVertical: scrollDirectionVertical,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.OBSERVED\n        };\n\n        if (!autoHeight) {\n          newState.scrollTop = scrollTop;\n        }\n\n        if (!autoWidth) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        newState.needToResetStyleCache = false;\n        this.setState(newState);\n      }\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalColumnsWidth: totalColumnsWidth,\n        totalRowsHeight: totalRowsHeight\n      });\n    }\n    /**\n     * Invalidate Grid size and recompute visible cells.\n     * This is a deferred wrapper for recomputeGridSize().\n     * It sets a flag to be evaluated on cDM/cDU to avoid unnecessary renders.\n     * This method is intended for advanced use-cases like CellMeasurer.\n     */\n    // @TODO (bvaughn) Add automated test coverage for this.\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rowIndex = _ref3.rowIndex;\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /**\n     * Pre-measure all columns and rows in a Grid.\n     * Typically cells are only measured as needed and estimated sizes are used for cells that have not yet been measured.\n     * This method ensures that the next call to getTotalSize() returns an exact size (as opposed to just an estimated one).\n     */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      var _this$props2 = this.props,\n          columnCount = _this$props2.columnCount,\n          rowCount = _this$props2.rowCount;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.getSizeAndPositionOfCell(columnCount - 1);\n      instanceProps.rowSizeAndPositionManager.getSizeAndPositionOfCell(rowCount - 1);\n    }\n    /**\n     * Forced recompute of row heights and column widths.\n     * This function should be called if dynamic column or row sizes have changed but nothing else has.\n     * Since Grid only receives :columnCount and :rowCount it has no way of detecting when the underlying data changes.\n     */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref4$columnIndex = _ref4.columnIndex,\n          columnIndex = _ref4$columnIndex === void 0 ? 0 : _ref4$columnIndex,\n          _ref4$rowIndex = _ref4.rowIndex,\n          rowIndex = _ref4$rowIndex === void 0 ? 0 : _ref4$rowIndex;\n\n      var _this$props3 = this.props,\n          scrollToColumn = _this$props3.scrollToColumn,\n          scrollToRow = _this$props3.scrollToRow;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.resetCell(columnIndex);\n      instanceProps.rowSizeAndPositionManager.resetCell(rowIndex); // Cell sizes may be determined by a function property.\n      // In this case the cDU handler can't know if they changed.\n      // Store this flag to let the next cDU pass know it needs to recompute the scroll offset.\n\n      this._recomputeScrollLeftFlag = scrollToColumn >= 0 && (this.state.scrollDirectionHorizontal === _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD ? columnIndex <= scrollToColumn : columnIndex >= scrollToColumn);\n      this._recomputeScrollTopFlag = scrollToRow >= 0 && (this.state.scrollDirectionVertical === _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD ? rowIndex <= scrollToRow : rowIndex >= scrollToRow); // Clear cell cache in case we are scrolling;\n      // Invalid row heights likely mean invalid cached content as well.\n\n      this._styleCache = {};\n      this._cellCache = {};\n      this.forceUpdate();\n    }\n    /**\n     * Ensure column and row are visible.\n     */\n\n  }, {\n    key: \"scrollToCell\",\n    value: function scrollToCell(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n      var columnCount = this.props.columnCount;\n      var props = this.props; // Don't adjust scroll offset for single-column grids (eg List, Table).\n      // This can cause a funky scroll offset because of the vertical scrollbar width.\n\n      if (columnCount > 1 && columnIndex !== undefined) {\n        this._updateScrollLeftForScrollToColumn(_objectSpread({}, props, {\n          scrollToColumn: columnIndex\n        }));\n      }\n\n      if (rowIndex !== undefined) {\n        this._updateScrollTopForScrollToRow(_objectSpread({}, props, {\n          scrollToRow: rowIndex\n        }));\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          getScrollbarSize = _this$props4.getScrollbarSize,\n          height = _this$props4.height,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToColumn = _this$props4.scrollToColumn,\n          scrollTop = _this$props4.scrollTop,\n          scrollToRow = _this$props4.scrollToRow,\n          width = _this$props4.width;\n      var instanceProps = this.state.instanceProps; // Reset initial offsets to be ignored in browser\n\n      this._initialScrollTop = 0;\n      this._initialScrollLeft = 0; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n\n      if (!instanceProps.scrollbarSizeMeasured) {\n        this.setState(function (prevState) {\n          var stateUpdate = _objectSpread({}, prevState, {\n            needToResetStyleCache: false\n          });\n\n          stateUpdate.instanceProps.scrollbarSize = getScrollbarSize();\n          stateUpdate.instanceProps.scrollbarSizeMeasured = true;\n          return stateUpdate;\n        });\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 || typeof scrollTop === 'number' && scrollTop >= 0) {\n        var stateUpdate = Grid._getScrollToPositionStateUpdate({\n          prevState: this.state,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        if (stateUpdate) {\n          stateUpdate.needToResetStyleCache = false;\n          this.setState(stateUpdate);\n        }\n      } // refs don't work in `react-test-renderer`\n\n\n      if (this._scrollingContainer) {\n        // setting the ref's scrollLeft and scrollTop.\n        // Somehow in MultiGrid the main grid doesn't trigger a update on mount.\n        if (this._scrollingContainer.scrollLeft !== this.state.scrollLeft) {\n          this._scrollingContainer.scrollLeft = this.state.scrollLeft;\n        }\n\n        if (this._scrollingContainer.scrollTop !== this.state.scrollTop) {\n          this._scrollingContainer.scrollTop = this.state.scrollTop;\n        }\n      } // Don't update scroll offset if the size is 0; we don't render any cells in this case.\n      // Setting a state may cause us to later thing we've updated the offce when we haven't.\n\n\n      var sizeIsBiggerThanZero = height > 0 && width > 0;\n\n      if (scrollToColumn >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollLeftForScrollToColumn();\n      }\n\n      if (scrollToRow >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollTopForScrollToRow();\n      } // Update onRowsRendered callback\n\n\n      this._invokeOnGridRenderedHelper(); // Initialize onScroll callback\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalColumnsWidth: instanceProps.columnSizeAndPositionManager.getTotalSize(),\n        totalRowsHeight: instanceProps.rowSizeAndPositionManager.getTotalSize()\n      });\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) New scroll-to-cell props have been set\n     */\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      var _this$props5 = this.props,\n          autoHeight = _this$props5.autoHeight,\n          autoWidth = _this$props5.autoWidth,\n          columnCount = _this$props5.columnCount,\n          height = _this$props5.height,\n          rowCount = _this$props5.rowCount,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToColumn = _this$props5.scrollToColumn,\n          scrollToRow = _this$props5.scrollToRow,\n          width = _this$props5.width;\n      var _this$state = this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollPositionChangeReason = _this$state.scrollPositionChangeReason,\n          scrollTop = _this$state.scrollTop,\n          instanceProps = _this$state.instanceProps; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // Handle edge case where column or row count has only just increased over 0.\n      // In this case we may have to restore a previously-specified scroll offset.\n      // For more info see bvaughn/react-virtualized/issues/218\n\n\n      var columnOrRowCountJustIncreasedFromZero = columnCount > 0 && prevProps.columnCount === 0 || rowCount > 0 && prevProps.rowCount === 0; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        // @TRICKY :autoHeight and :autoWidth properties instructs Grid to leave :scrollTop and :scrollLeft management to an external HOC (eg WindowScroller).\n        // In this case we should avoid checking scrollingContainer.scrollTop and scrollingContainer.scrollLeft since it forces layout/flow.\n        if (!autoWidth && scrollLeft >= 0 && (scrollLeft !== this._scrollingContainer.scrollLeft || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (!autoHeight && scrollTop >= 0 && (scrollTop !== this._scrollingContainer.scrollTop || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Special case where the previous size was 0:\n      // In this case we don't show any windowed cells at all.\n      // So we should always recalculate offset afterwards.\n\n\n      var sizeJustIncreasedFromZero = (prevProps.width === 0 || prevProps.height === 0) && height > 0 && width > 0; // Update scroll offsets if the current :scrollToColumn or :scrollToRow values requires it\n      // @TODO Do we also need this check or can the one in componentWillUpdate() suffice?\n\n      if (this._recomputeScrollLeftFlag) {\n        this._recomputeScrollLeftFlag = false;\n\n        this._updateScrollLeftForScrollToColumn(this.props);\n      } else {\n        (0, _updateScrollIndexHelper[\"default\"])({\n          cellSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          previousCellsCount: prevProps.columnCount,\n          previousCellSize: prevProps.columnWidth,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToColumn,\n          previousSize: prevProps.width,\n          scrollOffset: scrollLeft,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToColumn,\n          size: width,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollLeftForScrollToColumn(_this2.props);\n          }\n        });\n      }\n\n      if (this._recomputeScrollTopFlag) {\n        this._recomputeScrollTopFlag = false;\n\n        this._updateScrollTopForScrollToRow(this.props);\n      } else {\n        (0, _updateScrollIndexHelper[\"default\"])({\n          cellSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          previousCellsCount: prevProps.rowCount,\n          previousCellSize: prevProps.rowHeight,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToRow,\n          previousSize: prevProps.height,\n          scrollOffset: scrollTop,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToRow,\n          size: height,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollTopForScrollToRow(_this2.props);\n          }\n        });\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnGridRenderedHelper(); // Changes to :scrollLeft or :scrollTop should also notify :onScroll listeners\n\n\n      if (scrollLeft !== prevState.scrollLeft || scrollTop !== prevState.scrollTop) {\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n\n        this._invokeOnScrollMemoizer({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          totalColumnsWidth: totalColumnsWidth,\n          totalRowsHeight: totalRowsHeight\n        });\n      }\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        (0, _requestAnimationTimeout.cancelAnimationTimeout)(this._disablePointerEventsTimeoutId);\n      }\n    }\n    /**\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoContainerWidth = _this$props6.autoContainerWidth,\n          autoHeight = _this$props6.autoHeight,\n          autoWidth = _this$props6.autoWidth,\n          className = _this$props6.className,\n          containerProps = _this$props6.containerProps,\n          containerRole = _this$props6.containerRole,\n          containerStyle = _this$props6.containerStyle,\n          height = _this$props6.height,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          role = _this$props6.role,\n          style = _this$props6.style,\n          tabIndex = _this$props6.tabIndex,\n          width = _this$props6.width;\n      var _this$state2 = this.state,\n          instanceProps = _this$state2.instanceProps,\n          needToResetStyleCache = _this$state2.needToResetStyleCache;\n\n      var isScrolling = this._isScrolling();\n\n      var gridStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        width: autoWidth ? 'auto' : width,\n        WebkitOverflowScrolling: 'touch',\n        willChange: 'transform'\n      };\n\n      if (needToResetStyleCache) {\n        this._styleCache = {};\n      } // calculate _styleCache here\n      // if state.isScrolling (not from _isScrolling) then reset\n\n\n      if (!this.state.isScrolling) {\n        this._resetStyleCache();\n      } // calculate children to render here\n\n\n      this._calculateChildrenToRender(this.props, this.state);\n\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize(); // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n      var horizontalScrollBarSize = totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n\n      if (horizontalScrollBarSize !== this._horizontalScrollBarSize || verticalScrollBarSize !== this._verticalScrollBarSize) {\n        this._horizontalScrollBarSize = horizontalScrollBarSize;\n        this._verticalScrollBarSize = verticalScrollBarSize;\n        this._scrollbarPresenceChanged = true;\n      } // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n\n      gridStyle.overflowX = totalColumnsWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      gridStyle.overflowY = totalRowsHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      var childrenToDisplay = this._childrenToDisplay;\n      var showNoContentRenderer = childrenToDisplay.length === 0 && height > 0 && width > 0;\n      return React.createElement(\"div\", (0, _extends2[\"default\"])({\n        ref: this._setScrollingContainerRef\n      }, containerProps, {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-readonly\": this.props['aria-readonly'],\n        className: (0, _clsx[\"default\"])('ReactVirtualized__Grid', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({}, gridStyle, {}, style),\n        tabIndex: tabIndex\n      }), childrenToDisplay.length > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Grid__innerScrollContainer\",\n        role: containerRole,\n        style: _objectSpread({\n          width: autoContainerWidth ? 'auto' : totalColumnsWidth,\n          height: totalRowsHeight,\n          maxWidth: totalColumnsWidth,\n          maxHeight: totalRowsHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }, containerStyle)\n      }, childrenToDisplay), showNoContentRenderer && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n  }, {\n    key: \"_calculateChildrenToRender\",\n    value: function _calculateChildrenToRender() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      var cellRenderer = props.cellRenderer,\n          cellRangeRenderer = props.cellRangeRenderer,\n          columnCount = props.columnCount,\n          deferredMeasurementCache = props.deferredMeasurementCache,\n          height = props.height,\n          overscanColumnCount = props.overscanColumnCount,\n          overscanIndicesGetter = props.overscanIndicesGetter,\n          overscanRowCount = props.overscanRowCount,\n          rowCount = props.rowCount,\n          width = props.width,\n          isScrollingOptOut = props.isScrollingOptOut;\n      var scrollDirectionHorizontal = state.scrollDirectionHorizontal,\n          scrollDirectionVertical = state.scrollDirectionVertical,\n          instanceProps = state.instanceProps;\n      var scrollTop = this._initialScrollTop > 0 ? this._initialScrollTop : state.scrollTop;\n      var scrollLeft = this._initialScrollLeft > 0 ? this._initialScrollLeft : state.scrollLeft;\n\n      var isScrolling = this._isScrolling(props, state);\n\n      this._childrenToDisplay = []; // Render only enough columns and rows to cover the visible area of the grid.\n\n      if (height > 0 && width > 0) {\n        var visibleColumnIndices = instanceProps.columnSizeAndPositionManager.getVisibleCellRange({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var visibleRowIndices = instanceProps.rowSizeAndPositionManager.getVisibleCellRange({\n          containerSize: height,\n          offset: scrollTop\n        });\n        var horizontalOffsetAdjustment = instanceProps.columnSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var verticalOffsetAdjustment = instanceProps.rowSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: height,\n          offset: scrollTop\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        this._renderedColumnStartIndex = visibleColumnIndices.start;\n        this._renderedColumnStopIndex = visibleColumnIndices.stop;\n        this._renderedRowStartIndex = visibleRowIndices.start;\n        this._renderedRowStopIndex = visibleRowIndices.stop;\n        var overscanColumnIndices = overscanIndicesGetter({\n          direction: 'horizontal',\n          cellCount: columnCount,\n          overscanCellsCount: overscanColumnCount,\n          scrollDirection: scrollDirectionHorizontal,\n          startIndex: typeof visibleColumnIndices.start === 'number' ? visibleColumnIndices.start : 0,\n          stopIndex: typeof visibleColumnIndices.stop === 'number' ? visibleColumnIndices.stop : -1\n        });\n        var overscanRowIndices = overscanIndicesGetter({\n          direction: 'vertical',\n          cellCount: rowCount,\n          overscanCellsCount: overscanRowCount,\n          scrollDirection: scrollDirectionVertical,\n          startIndex: typeof visibleRowIndices.start === 'number' ? visibleRowIndices.start : 0,\n          stopIndex: typeof visibleRowIndices.stop === 'number' ? visibleRowIndices.stop : -1\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        var columnStartIndex = overscanColumnIndices.overscanStartIndex;\n        var columnStopIndex = overscanColumnIndices.overscanStopIndex;\n        var rowStartIndex = overscanRowIndices.overscanStartIndex;\n        var rowStopIndex = overscanRowIndices.overscanStopIndex; // Advanced use-cases (eg CellMeasurer) require batched measurements to determine accurate sizes.\n\n        if (deferredMeasurementCache) {\n          // If rows have a dynamic height, scan the rows we are about to render.\n          // If any have not yet been measured, then we need to render all columns initially,\n          // Because the height of the row is equal to the tallest cell within that row,\n          // (And so we can't know the height without measuring all column-cells first).\n          if (!deferredMeasurementCache.hasFixedHeight()) {\n            for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n              if (!deferredMeasurementCache.has(rowIndex, 0)) {\n                columnStartIndex = 0;\n                columnStopIndex = columnCount - 1;\n                break;\n              }\n            }\n          } // If columns have a dynamic width, scan the columns we are about to render.\n          // If any have not yet been measured, then we need to render all rows initially,\n          // Because the width of the column is equal to the widest cell within that column,\n          // (And so we can't know the width without measuring all row-cells first).\n\n\n          if (!deferredMeasurementCache.hasFixedWidth()) {\n            for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n              if (!deferredMeasurementCache.has(0, columnIndex)) {\n                rowStartIndex = 0;\n                rowStopIndex = rowCount - 1;\n                break;\n              }\n            }\n          }\n        }\n\n        this._childrenToDisplay = cellRangeRenderer({\n          cellCache: this._cellCache,\n          cellRenderer: cellRenderer,\n          columnSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          columnStartIndex: columnStartIndex,\n          columnStopIndex: columnStopIndex,\n          deferredMeasurementCache: deferredMeasurementCache,\n          horizontalOffsetAdjustment: horizontalOffsetAdjustment,\n          isScrolling: isScrolling,\n          isScrollingOptOut: isScrollingOptOut,\n          parent: this,\n          rowSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          rowStartIndex: rowStartIndex,\n          rowStopIndex: rowStopIndex,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          styleCache: this._styleCache,\n          verticalOffsetAdjustment: verticalOffsetAdjustment,\n          visibleColumnIndices: visibleColumnIndices,\n          visibleRowIndices: visibleRowIndices\n        }); // update the indices\n\n        this._columnStartIndex = columnStartIndex;\n        this._columnStopIndex = columnStopIndex;\n        this._rowStartIndex = rowStartIndex;\n        this._rowStopIndex = rowStopIndex;\n      }\n    }\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Grid.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_debounceScrollEnded\",\n    value: function _debounceScrollEnded() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._disablePointerEventsTimeoutId) {\n        (0, _requestAnimationTimeout.cancelAnimationTimeout)(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = (0, _requestAnimationTimeout.requestAnimationTimeout)(this._debounceScrollEndedCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n\n    /**\n     * Check for batched CellMeasurer size invalidations.\n     * This will occur the first time one or more previously unmeasured cells are rendered.\n     */\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number' && typeof this._deferredInvalidateRowIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n      }\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref6) {\n      var _this3 = this;\n\n      var scrollLeft = _ref6.scrollLeft,\n          scrollTop = _ref6.scrollTop,\n          totalColumnsWidth = _ref6.totalColumnsWidth,\n          totalRowsHeight = _ref6.totalRowsHeight;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref7) {\n          var scrollLeft = _ref7.scrollLeft,\n              scrollTop = _ref7.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalRowsHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalColumnsWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_isScrolling\",\n    value: function _isScrolling() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      // If isScrolling is defined in props, use it to override the value in state\n      // This is a performance optimization for WindowScroller + Grid\n      return Object.hasOwnProperty.call(props, 'isScrolling') ? Boolean(props.isScrolling) : Boolean(state.isScrolling);\n    }\n  }, {\n    key: \"_maybeCallOnScrollbarPresenceChange\",\n    value: function _maybeCallOnScrollbarPresenceChange() {\n      if (this._scrollbarPresenceChanged) {\n        var onScrollbarPresenceChange = this.props.onScrollbarPresenceChange;\n        this._scrollbarPresenceChanged = false;\n        onScrollbarPresenceChange({\n          horizontal: this._horizontalScrollBarSize > 0,\n          size: this.state.instanceProps.scrollbarSize,\n          vertical: this._verticalScrollBarSize > 0\n        });\n      }\n    }\n  }, {\n    key: \"scrollToPosition\",\n\n    /**\n     * Scroll to the specified offset(s).\n     * Useful for animating position changes.\n     */\n    value: function scrollToPosition(_ref8) {\n      var scrollLeft = _ref8.scrollLeft,\n          scrollTop = _ref8.scrollTop;\n\n      var stateUpdate = Grid._getScrollToPositionStateUpdate({\n        prevState: this.state,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollLeft(props, state);\n    }\n  }, {\n    key: \"_updateScrollLeftForScrollToColumn\",\n    value: function _updateScrollLeftForScrollToColumn() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollLeftForScrollToColumnStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollTop(props, state);\n    }\n  }, {\n    key: \"_resetStyleCache\",\n    value: function _resetStyleCache() {\n      var styleCache = this._styleCache;\n      var cellCache = this._cellCache;\n      var isScrollingOptOut = this.props.isScrollingOptOut; // Reset cell and style caches once scrolling stops.\n      // This makes Grid simpler to use (since cells commonly change).\n      // And it keeps the caches from growing too large.\n      // Performance is most sensitive when a user is scrolling.\n      // Don't clear visible cells from cellCache if isScrollingOptOut is specified.\n      // This keeps the cellCache to a resonable size.\n\n      this._cellCache = {};\n      this._styleCache = {}; // Copy over the visible cell styles so avoid unnecessary re-render.\n\n      for (var rowIndex = this._rowStartIndex; rowIndex <= this._rowStopIndex; rowIndex++) {\n        for (var columnIndex = this._columnStartIndex; columnIndex <= this._columnStopIndex; columnIndex++) {\n          var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n          this._styleCache[key] = styleCache[key];\n\n          if (isScrollingOptOut) {\n            this._cellCache[key] = cellCache[key];\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_updateScrollTopForScrollToRow\",\n    value: function _updateScrollTopForScrollToRow() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollTopForScrollToRowStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var newState = {};\n\n      if (nextProps.columnCount === 0 && prevState.scrollLeft !== 0 || nextProps.rowCount === 0 && prevState.scrollTop !== 0) {\n        newState.scrollLeft = 0;\n        newState.scrollTop = 0; // only use scroll{Left,Top} from props if scrollTo{Column,Row} isn't specified\n        // scrollTo{Column,Row} should override scroll{Left,Top}\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft && nextProps.scrollToColumn < 0 || nextProps.scrollTop !== prevState.scrollTop && nextProps.scrollToRow < 0) {\n        Object.assign(newState, Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: nextProps.scrollLeft,\n          scrollTop: nextProps.scrollTop\n        }));\n      }\n\n      var instanceProps = prevState.instanceProps; // Initially we should not clearStyleCache\n\n      newState.needToResetStyleCache = false;\n\n      if (nextProps.columnWidth !== instanceProps.prevColumnWidth || nextProps.rowHeight !== instanceProps.prevRowHeight) {\n        // Reset cache. set it to {} in render\n        newState.needToResetStyleCache = true;\n      }\n\n      instanceProps.columnSizeAndPositionManager.configure({\n        cellCount: nextProps.columnCount,\n        estimatedCellSize: Grid._getEstimatedColumnSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.columnWidth)\n      });\n      instanceProps.rowSizeAndPositionManager.configure({\n        cellCount: nextProps.rowCount,\n        estimatedCellSize: Grid._getEstimatedRowSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.rowHeight)\n      });\n\n      if (instanceProps.prevColumnCount === 0 || instanceProps.prevRowCount === 0) {\n        instanceProps.prevColumnCount = 0;\n        instanceProps.prevRowCount = 0;\n      } // If scrolling is controlled outside this component, clear cache when scrolling stops\n\n\n      if (nextProps.autoHeight && nextProps.isScrolling === false && instanceProps.prevIsScrolling === true) {\n        Object.assign(newState, {\n          isScrolling: false\n        });\n      }\n\n      var maybeStateA;\n      var maybeStateB;\n      (0, _calculateSizeAndPositionDataAndUpdateScrollOffset[\"default\"])({\n        cellCount: instanceProps.prevColumnCount,\n        cellSize: typeof instanceProps.prevColumnWidth === 'number' ? instanceProps.prevColumnWidth : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.columnSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.columnCount,\n        nextCellSize: typeof nextProps.columnWidth === 'number' ? nextProps.columnWidth : null,\n        nextScrollToIndex: nextProps.scrollToColumn,\n        scrollToIndex: instanceProps.prevScrollToColumn,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateA = Grid._getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState);\n        }\n      });\n      (0, _calculateSizeAndPositionDataAndUpdateScrollOffset[\"default\"])({\n        cellCount: instanceProps.prevRowCount,\n        cellSize: typeof instanceProps.prevRowHeight === 'number' ? instanceProps.prevRowHeight : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.rowSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.rowCount,\n        nextCellSize: typeof nextProps.rowHeight === 'number' ? nextProps.rowHeight : null,\n        nextScrollToIndex: nextProps.scrollToRow,\n        scrollToIndex: instanceProps.prevScrollToRow,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateB = Grid._getScrollTopForScrollToRowStateUpdate(nextProps, prevState);\n        }\n      });\n      instanceProps.prevColumnCount = nextProps.columnCount;\n      instanceProps.prevColumnWidth = nextProps.columnWidth;\n      instanceProps.prevIsScrolling = nextProps.isScrolling === true;\n      instanceProps.prevRowCount = nextProps.rowCount;\n      instanceProps.prevRowHeight = nextProps.rowHeight;\n      instanceProps.prevScrollToColumn = nextProps.scrollToColumn;\n      instanceProps.prevScrollToRow = nextProps.scrollToRow; // getting scrollBarSize (moved from componentWillMount)\n\n      instanceProps.scrollbarSize = nextProps.getScrollbarSize();\n\n      if (instanceProps.scrollbarSize === undefined) {\n        instanceProps.scrollbarSizeMeasured = false;\n        instanceProps.scrollbarSize = 0;\n      } else {\n        instanceProps.scrollbarSizeMeasured = true;\n      }\n\n      newState.instanceProps = instanceProps;\n      return _objectSpread({}, newState, {}, maybeStateA, {}, maybeStateB);\n    }\n  }, {\n    key: \"_getEstimatedColumnSize\",\n    value: function _getEstimatedColumnSize(props) {\n      return typeof props.columnWidth === 'number' ? props.columnWidth : props.estimatedColumnSize;\n    }\n  }, {\n    key: \"_getEstimatedRowSize\",\n    value: function _getEstimatedRowSize(props) {\n      return typeof props.rowHeight === 'number' ? props.rowHeight : props.estimatedRowSize;\n    }\n  }, {\n    key: \"_getScrollToPositionStateUpdate\",\n\n    /**\n     * Get the updated state after scrolling to\n     * scrollLeft and scrollTop\n     */\n    value: function _getScrollToPositionStateUpdate(_ref9) {\n      var prevState = _ref9.prevState,\n          scrollLeft = _ref9.scrollLeft,\n          scrollTop = _ref9.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0) {\n        newState.scrollDirectionHorizontal = scrollLeft > prevState.scrollLeft ? _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD : _defaultOverscanIndicesGetter.SCROLL_DIRECTION_BACKWARD;\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (typeof scrollTop === 'number' && scrollTop >= 0) {\n        newState.scrollDirectionVertical = scrollTop > prevState.scrollTop ? _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD : _defaultOverscanIndicesGetter.SCROLL_DIRECTION_BACKWARD;\n        newState.scrollTop = scrollTop;\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft || typeof scrollTop === 'number' && scrollTop >= 0 && scrollTop !== prevState.scrollTop) {\n        return newState;\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_wrapSizeGetter\",\n    value: function _wrapSizeGetter(value) {\n      return typeof value === 'function' ? value : function () {\n        return value;\n      };\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft(nextProps, prevState) {\n      var columnCount = nextProps.columnCount,\n          height = nextProps.height,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToColumn = nextProps.scrollToColumn,\n          width = nextProps.width;\n      var scrollLeft = prevState.scrollLeft,\n          instanceProps = prevState.instanceProps;\n\n      if (columnCount > 0) {\n        var finalColumn = columnCount - 1;\n        var targetIndex = scrollToColumn < 0 ? finalColumn : Math.min(finalColumn, scrollToColumn);\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n        return instanceProps.columnSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: width - scrollBarSize,\n          currentOffset: scrollLeft,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollLeftForScrollToColumnStateUpdate\",\n    value: function _getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState) {\n      var scrollLeft = prevState.scrollLeft;\n\n      var calculatedScrollLeft = Grid._getCalculatedScrollLeft(nextProps, prevState);\n\n      if (typeof calculatedScrollLeft === 'number' && calculatedScrollLeft >= 0 && scrollLeft !== calculatedScrollLeft) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: calculatedScrollLeft,\n          scrollTop: -1\n        });\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop(nextProps, prevState) {\n      var height = nextProps.height,\n          rowCount = nextProps.rowCount,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToRow = nextProps.scrollToRow,\n          width = nextProps.width;\n      var scrollTop = prevState.scrollTop,\n          instanceProps = prevState.instanceProps;\n\n      if (rowCount > 0) {\n        var finalRow = rowCount - 1;\n        var targetIndex = scrollToRow < 0 ? finalRow : Math.min(finalRow, scrollToRow);\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n        return instanceProps.rowSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: height - scrollBarSize,\n          currentOffset: scrollTop,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollTopForScrollToRowStateUpdate\",\n    value: function _getScrollTopForScrollToRowStateUpdate(nextProps, prevState) {\n      var scrollTop = prevState.scrollTop;\n\n      var calculatedScrollTop = Grid._getCalculatedScrollTop(nextProps, prevState);\n\n      if (typeof calculatedScrollTop === 'number' && calculatedScrollTop >= 0 && scrollTop !== calculatedScrollTop) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: -1,\n          scrollTop: calculatedScrollTop\n        });\n      }\n\n      return {};\n    }\n  }]);\n  return Grid;\n}(React.PureComponent), (0, _defineProperty2[\"default\"])(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": _propTypes[\"default\"].string.isRequired,\n  \"aria-readonly\": _propTypes[\"default\"].bool,\n\n  /**\n   * Set the width of the inner scrollable container to 'auto'.\n   * This is useful for single-column Grids to ensure that the column doesn't extend below a vertical scrollbar.\n   */\n  \"autoContainerWidth\": _propTypes[\"default\"].bool.isRequired,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoHeight\": _propTypes[\"default\"].bool.isRequired,\n\n  /**\n   * Removes fixed width from the scrollingContainer so that the total width of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoWidth\": _propTypes[\"default\"].bool.isRequired,\n\n  /** Responsible for rendering a cell given an row and column index.  */\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof _types.bpfrpt_proptype_CellRenderer === \"function\" ? _types.bpfrpt_proptype_CellRenderer.isRequired ? _types.bpfrpt_proptype_CellRenderer.isRequired : _types.bpfrpt_proptype_CellRenderer : _propTypes[\"default\"].shape(_types.bpfrpt_proptype_CellRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a group of cells given their index ranges.  */\n  \"cellRangeRenderer\": function cellRangeRenderer() {\n    return (typeof _types.bpfrpt_proptype_CellRangeRenderer === \"function\" ? _types.bpfrpt_proptype_CellRangeRenderer.isRequired ? _types.bpfrpt_proptype_CellRangeRenderer.isRequired : _types.bpfrpt_proptype_CellRangeRenderer : _propTypes[\"default\"].shape(_types.bpfrpt_proptype_CellRangeRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Optional custom CSS class name to attach to root Grid element.  */\n  \"className\": _propTypes[\"default\"].string,\n\n  /** Number of columns in grid.  */\n  \"columnCount\": _propTypes[\"default\"].number.isRequired,\n\n  /** Either a fixed column width (number) or a function that returns the width of a column given its index.  */\n  \"columnWidth\": function columnWidth() {\n    return (typeof _types.bpfrpt_proptype_CellSize === \"function\" ? _types.bpfrpt_proptype_CellSize.isRequired ? _types.bpfrpt_proptype_CellSize.isRequired : _types.bpfrpt_proptype_CellSize : _propTypes[\"default\"].shape(_types.bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Unfiltered props for the Grid container. */\n  \"containerProps\": _propTypes[\"default\"].object,\n\n  /** ARIA role for the cell-container.  */\n  \"containerRole\": _propTypes[\"default\"].string.isRequired,\n\n  /** Optional inline style applied to inner cell-container */\n  \"containerStyle\": _propTypes[\"default\"].object.isRequired,\n\n  /**\n   * If CellMeasurer is used to measure this Grid's children, this should be a pointer to its CellMeasurerCache.\n   * A shared CellMeasurerCache reference enables Grid and CellMeasurer to share measurement data.\n   */\n  \"deferredMeasurementCache\": _propTypes[\"default\"].object,\n\n  /**\n   * Used to estimate the total width of a Grid before all of its columns have actually been measured.\n   * The estimated total width is adjusted as columns are rendered.\n   */\n  \"estimatedColumnSize\": _propTypes[\"default\"].number.isRequired,\n\n  /**\n   * Used to estimate the total height of a Grid before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": _propTypes[\"default\"].number.isRequired,\n\n  /** Exposed for testing purposes only.  */\n  \"getScrollbarSize\": _propTypes[\"default\"].func.isRequired,\n\n  /** Height of Grid; this property determines the number of visible (vs virtualized) rows.  */\n  \"height\": _propTypes[\"default\"].number.isRequired,\n\n  /** Optional custom id to attach to root Grid element.  */\n  \"id\": _propTypes[\"default\"].string,\n\n  /**\n   * Override internal is-scrolling state tracking.\n   * This property is primarily intended for use with the WindowScroller component.\n   */\n  \"isScrolling\": _propTypes[\"default\"].bool,\n\n  /**\n   * Opt-out of isScrolling param passed to cellRangeRenderer.\n   * To avoid the extra render when scroll stops.\n   */\n  \"isScrollingOptOut\": _propTypes[\"default\"].bool.isRequired,\n\n  /** Optional renderer to be used in place of rows when either :rowCount or :columnCount is 0.  */\n  \"noContentRenderer\": function noContentRenderer() {\n    return (typeof _types.bpfrpt_proptype_NoContentRenderer === \"function\" ? _types.bpfrpt_proptype_NoContentRenderer.isRequired ? _types.bpfrpt_proptype_NoContentRenderer.isRequired : _types.bpfrpt_proptype_NoContentRenderer : _propTypes[\"default\"].shape(_types.bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": _propTypes[\"default\"].func.isRequired,\n\n  /**\n   * Called whenever a horizontal or vertical scrollbar is added or removed.\n   * This prop is not intended for end-user use;\n   * It is used by MultiGrid to support fixed-row/fixed-column scroll syncing.\n   */\n  \"onScrollbarPresenceChange\": _propTypes[\"default\"].func.isRequired,\n\n  /** Callback invoked with information about the section of the Grid that was just rendered.  */\n  \"onSectionRendered\": _propTypes[\"default\"].func.isRequired,\n\n  /**\n   * Number of columns to render before/after the visible section of the grid.\n   * These columns can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanColumnCount\": _propTypes[\"default\"].number.isRequired,\n\n  /**\n   * Calculates the number of cells to overscan before and after a specified range.\n   * This function ensures that overscanning doesn't exceed the available cells.\n   */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof _types.bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? _types.bpfrpt_proptype_OverscanIndicesGetter.isRequired ? _types.bpfrpt_proptype_OverscanIndicesGetter.isRequired : _types.bpfrpt_proptype_OverscanIndicesGetter : _propTypes[\"default\"].shape(_types.bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible section of the grid.\n   * These rows can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanRowCount\": _propTypes[\"default\"].number.isRequired,\n\n  /** ARIA role for the grid element.  */\n  \"role\": _propTypes[\"default\"].string.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * Should implement the following interface: ({ index: number }): number\n   */\n  \"rowHeight\": function rowHeight() {\n    return (typeof _types.bpfrpt_proptype_CellSize === \"function\" ? _types.bpfrpt_proptype_CellSize.isRequired ? _types.bpfrpt_proptype_CellSize.isRequired : _types.bpfrpt_proptype_CellSize : _propTypes[\"default\"].shape(_types.bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in grid.  */\n  \"rowCount\": _propTypes[\"default\"].number.isRequired,\n\n  /** Wait this amount of time after the last scroll event before resetting Grid `pointer-events`. */\n  \"scrollingResetTimeInterval\": _propTypes[\"default\"].number.isRequired,\n\n  /** Horizontal offset. */\n  \"scrollLeft\": _propTypes[\"default\"].number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof _types.bpfrpt_proptype_Alignment === \"function\" ? _types.bpfrpt_proptype_Alignment.isRequired ? _types.bpfrpt_proptype_Alignment.isRequired : _types.bpfrpt_proptype_Alignment : _propTypes[\"default\"].shape(_types.bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Column index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToColumn\": _propTypes[\"default\"].number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": _propTypes[\"default\"].number,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToRow\": _propTypes[\"default\"].number.isRequired,\n\n  /** Optional inline style */\n  \"style\": _propTypes[\"default\"].object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": _propTypes[\"default\"].number,\n\n  /** Width of Grid; this property determines the number of visible (vs virtualized) columns.  */\n  \"width\": _propTypes[\"default\"].number.isRequired\n}), _temp);\n(0, _defineProperty2[\"default\"])(Grid, \"defaultProps\", {\n  'aria-label': 'grid',\n  'aria-readonly': true,\n  autoContainerWidth: false,\n  autoHeight: false,\n  autoWidth: false,\n  cellRangeRenderer: _defaultCellRangeRenderer[\"default\"],\n  containerRole: 'rowgroup',\n  containerStyle: {},\n  estimatedColumnSize: 100,\n  estimatedRowSize: 30,\n  getScrollbarSize: _scrollbarSize[\"default\"],\n  noContentRenderer: renderNull,\n  onScroll: function onScroll() {},\n  onScrollbarPresenceChange: function onScrollbarPresenceChange() {},\n  onSectionRendered: function onSectionRendered() {},\n  overscanColumnCount: 0,\n  overscanIndicesGetter: _defaultOverscanIndicesGetter[\"default\"],\n  overscanRowCount: 10,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  scrollToAlignment: 'auto',\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  tabIndex: 0,\n  isScrollingOptOut: false\n});\n(0, _reactLifecyclesCompat.polyfill)(Grid);\nvar _default = Grid;\nexports[\"default\"] = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = calculateSizeAndPositionDataAndUpdateScrollOffset;\n\n/**\n * Helper method that determines when to recalculate row or column metadata.\n */\nfunction calculateSizeAndPositionDataAndUpdateScrollOffset(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSize = _ref.cellSize,\n      computeMetadataCallback = _ref.computeMetadataCallback,\n      computeMetadataCallbackProps = _ref.computeMetadataCallbackProps,\n      nextCellsCount = _ref.nextCellsCount,\n      nextCellSize = _ref.nextCellSize,\n      nextScrollToIndex = _ref.nextScrollToIndex,\n      scrollToIndex = _ref.scrollToIndex,\n      updateScrollOffsetForScrollToIndex = _ref.updateScrollOffsetForScrollToIndex;\n\n  // Don't compare cell sizes if they are functions because inline functions would cause infinite loops.\n  // In that event users should use the manual recompute methods to inform of changes.\n  if (cellCount !== nextCellsCount || (typeof cellSize === 'number' || typeof nextCellSize === 'number') && cellSize !== nextCellSize) {\n    computeMetadataCallback(computeMetadataCallbackProps); // Updated cell metadata may have hidden the previous scrolled-to item.\n    // In this case we should also update the scrollTop to ensure it stays visible.\n\n    if (scrollToIndex >= 0 && scrollToIndex === nextScrollToIndex) {\n      updateScrollOffsetForScrollToIndex();\n    }\n  }\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _types = require(\"../types\");\n\n/**\n * Just-in-time calculates and caches size and position information for a collection of cells.\n */\nvar CellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  // Cache of size and position data for cells, mapped by cell index.\n  // Note that invalid values may exist in this map so only rely on cells up to this._lastMeasuredIndex\n  // Measurements for cells up to this index can be trusted; cells afterward should be estimated.\n  // Used in deferred mode to track which cells have been queued for measurement.\n  function CellSizeAndPositionManager(_ref) {\n    var cellCount = _ref.cellCount,\n        cellSizeGetter = _ref.cellSizeGetter,\n        estimatedCellSize = _ref.estimatedCellSize;\n    (0, _classCallCheck2[\"default\"])(this, CellSizeAndPositionManager);\n    (0, _defineProperty2[\"default\"])(this, \"_cellSizeAndPositionData\", {});\n    (0, _defineProperty2[\"default\"])(this, \"_lastMeasuredIndex\", -1);\n    (0, _defineProperty2[\"default\"])(this, \"_lastBatchedIndex\", -1);\n    (0, _defineProperty2[\"default\"])(this, \"_cellCount\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_cellSizeGetter\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_estimatedCellSize\", void 0);\n    this._cellSizeGetter = cellSizeGetter;\n    this._cellCount = cellCount;\n    this._estimatedCellSize = estimatedCellSize;\n  }\n\n  (0, _createClass2[\"default\"])(CellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return false;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(_ref2) {\n      var cellCount = _ref2.cellCount,\n          estimatedCellSize = _ref2.estimatedCellSize,\n          cellSizeGetter = _ref2.cellSizeGetter;\n      this._cellCount = cellCount;\n      this._estimatedCellSize = estimatedCellSize;\n      this._cellSizeGetter = cellSizeGetter;\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellCount;\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._estimatedCellSize;\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._lastMeasuredIndex;\n    }\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment() {\n      return 0;\n    }\n    /**\n     * This method returns the size and position for the cell at the specified index.\n     * It just-in-time calculates (or used cached values) for cells leading up to the index.\n     */\n\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      if (index < 0 || index >= this._cellCount) {\n        throw Error(\"Requested index \".concat(index, \" is outside of range 0..\").concat(this._cellCount));\n      }\n\n      if (index > this._lastMeasuredIndex) {\n        var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n        var offset = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n\n        for (var i = this._lastMeasuredIndex + 1; i <= index; i++) {\n          var size = this._cellSizeGetter({\n            index: i\n          }); // undefined or NaN probably means a logic error in the size getter.\n          // null means we're using CellMeasurer and haven't yet measured a given index.\n\n\n          if (size === undefined || isNaN(size)) {\n            throw Error(\"Invalid size returned for cell \".concat(i, \" of value \").concat(size));\n          } else if (size === null) {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: 0\n            };\n            this._lastBatchedIndex = index;\n          } else {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: size\n            };\n            offset += size;\n            this._lastMeasuredIndex = index;\n          }\n        }\n      }\n\n      return this._cellSizeAndPositionData[index];\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._lastMeasuredIndex >= 0 ? this._cellSizeAndPositionData[this._lastMeasuredIndex] : {\n        offset: 0,\n        size: 0\n      };\n    }\n    /**\n     * Total size of all cells being measured.\n     * This value will be completely estimated initially.\n     * As cells are measured, the estimate will be updated.\n     */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var totalSizeOfMeasuredCells = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n      var numUnmeasuredCells = this._cellCount - this._lastMeasuredIndex - 1;\n      var totalSizeOfUnmeasuredCells = numUnmeasuredCells * this._estimatedCellSize;\n      return totalSizeOfMeasuredCells + totalSizeOfUnmeasuredCells;\n    }\n    /**\n     * Determines a new offset that ensures a certain cell is visible, given the current offset.\n     * If the cell is already visible then the current offset will be returned.\n     * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n     *\n     * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n     * @param containerSize Size (width or height) of the container viewport\n     * @param currentOffset Container's current (x or y) offset\n     * @param totalSize Total size (width or height) of all cells\n     * @return Offset to use to ensure the specified cell is visible\n     */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n\n      if (containerSize <= 0) {\n        return 0;\n      }\n\n      var datum = this.getSizeAndPositionOfCell(targetIndex);\n      var maxOffset = datum.offset;\n      var minOffset = maxOffset - containerSize + datum.size;\n      var idealOffset;\n\n      switch (align) {\n        case 'start':\n          idealOffset = maxOffset;\n          break;\n\n        case 'end':\n          idealOffset = minOffset;\n          break;\n\n        case 'center':\n          idealOffset = maxOffset - (containerSize - datum.size) / 2;\n          break;\n\n        default:\n          idealOffset = Math.max(minOffset, Math.min(maxOffset, currentOffset));\n          break;\n      }\n\n      var totalSize = this.getTotalSize();\n      return Math.max(0, Math.min(totalSize - containerSize, idealOffset));\n    }\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(params) {\n      var containerSize = params.containerSize,\n          offset = params.offset;\n      var totalSize = this.getTotalSize();\n\n      if (totalSize === 0) {\n        return {};\n      }\n\n      var maxOffset = offset + containerSize;\n\n      var start = this._findNearestCell(offset);\n\n      var datum = this.getSizeAndPositionOfCell(start);\n      offset = datum.offset + datum.size;\n      var stop = start;\n\n      while (offset < maxOffset && stop < this._cellCount - 1) {\n        stop++;\n        offset += this.getSizeAndPositionOfCell(stop).size;\n      }\n\n      return {\n        start: start,\n        stop: stop\n      };\n    }\n    /**\n     * Clear all cached values for cells after the specified index.\n     * This method should be called for any cell that has changed its size.\n     * It will not immediately perform any calculations; they'll be performed the next time getSizeAndPositionOfCell() is called.\n     */\n\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._lastMeasuredIndex = Math.min(this._lastMeasuredIndex, index - 1);\n    }\n  }, {\n    key: \"_binarySearch\",\n    value: function _binarySearch(high, low, offset) {\n      while (low <= high) {\n        var middle = low + Math.floor((high - low) / 2);\n        var currentOffset = this.getSizeAndPositionOfCell(middle).offset;\n\n        if (currentOffset === offset) {\n          return middle;\n        } else if (currentOffset < offset) {\n          low = middle + 1;\n        } else if (currentOffset > offset) {\n          high = middle - 1;\n        }\n      }\n\n      if (low > 0) {\n        return low - 1;\n      } else {\n        return 0;\n      }\n    }\n  }, {\n    key: \"_exponentialSearch\",\n    value: function _exponentialSearch(index, offset) {\n      var interval = 1;\n\n      while (index < this._cellCount && this.getSizeAndPositionOfCell(index).offset < offset) {\n        index += interval;\n        interval *= 2;\n      }\n\n      return this._binarySearch(Math.min(index, this._cellCount - 1), Math.floor(index / 2), offset);\n    }\n    /**\n     * Searches for the cell (index) nearest the specified offset.\n     *\n     * If no exact match is found the next lowest cell index will be returned.\n     * This allows partially visible cells (with offsets just before/above the fold) to be visible.\n     */\n\n  }, {\n    key: \"_findNearestCell\",\n    value: function _findNearestCell(offset) {\n      if (isNaN(offset)) {\n        throw Error(\"Invalid offset \".concat(offset, \" specified\"));\n      } // Our search algorithms find the nearest match at or below the specified offset.\n      // So make sure the offset is at least 0 or no match will be found.\n\n\n      offset = Math.max(0, offset);\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var lastMeasuredIndex = Math.max(0, this._lastMeasuredIndex);\n\n      if (lastMeasuredCellSizeAndPosition.offset >= offset) {\n        // If we've already measured cells within this range just use a binary search as it's faster.\n        return this._binarySearch(lastMeasuredIndex, 0, offset);\n      } else {\n        // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n        // The exponential search avoids pre-computing sizes for the full set of cells as a binary search would.\n        // The overall complexity for this approach is O(log n).\n        return this._exponentialSearch(lastMeasuredIndex, offset);\n      }\n    }\n  }]);\n  return CellSizeAndPositionManager;\n}();\n\nexports[\"default\"] = CellSizeAndPositionManager;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getMaxElementSize = void 0;\nvar DEFAULT_MAX_ELEMENT_SIZE = 1500000;\nvar CHROME_MAX_ELEMENT_SIZE = 1.67771e7;\n\nvar isBrowser = function isBrowser() {\n  return typeof window !== 'undefined';\n};\n\nvar isChrome = function isChrome() {\n  return !!window.chrome;\n};\n\nvar getMaxElementSize = function getMaxElementSize() {\n  if (isBrowser()) {\n    if (isChrome()) {\n      return CHROME_MAX_ELEMENT_SIZE;\n    }\n  }\n\n  return DEFAULT_MAX_ELEMENT_SIZE;\n};\n\nexports.getMaxElementSize = getMaxElementSize;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = createCallbackMemoizer;\n\n/**\n * Helper utility that updates the specified callback whenever any of the specified indices have changed.\n */\nfunction createCallbackMemoizer() {\n  var requireAllKeys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  var cachedIndices = {};\n  return function (_ref) {\n    var callback = _ref.callback,\n        indices = _ref.indices;\n    var keys = Object.keys(indices);\n    var allInitialized = !requireAllKeys || keys.every(function (key) {\n      var value = indices[key];\n      return Array.isArray(value) ? value.length > 0 : value >= 0;\n    });\n    var indexChanged = keys.length !== Object.keys(cachedIndices).length || keys.some(function (key) {\n      var cachedValue = cachedIndices[key];\n      var value = indices[key];\n      return Array.isArray(value) ? cachedValue.join(',') !== value.join(',') : cachedValue !== value;\n    });\n    cachedIndices = indices;\n\n    if (allInitialized && indexChanged) {\n      callback(indices);\n    }\n  };\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = updateScrollIndexHelper;\n\nvar _ScalingCellSizeAndPositionManager = _interopRequireDefault(require(\"./ScalingCellSizeAndPositionManager.js\"));\n\nvar _types = require(\"../types\");\n\nfunction updateScrollIndexHelper(_ref) {\n  var cellSize = _ref.cellSize,\n      cellSizeAndPositionManager = _ref.cellSizeAndPositionManager,\n      previousCellsCount = _ref.previousCellsCount,\n      previousCellSize = _ref.previousCellSize,\n      previousScrollToAlignment = _ref.previousScrollToAlignment,\n      previousScrollToIndex = _ref.previousScrollToIndex,\n      previousSize = _ref.previousSize,\n      scrollOffset = _ref.scrollOffset,\n      scrollToAlignment = _ref.scrollToAlignment,\n      scrollToIndex = _ref.scrollToIndex,\n      size = _ref.size,\n      sizeJustIncreasedFromZero = _ref.sizeJustIncreasedFromZero,\n      updateScrollIndexCallback = _ref.updateScrollIndexCallback;\n  var cellCount = cellSizeAndPositionManager.getCellCount();\n  var hasScrollToIndex = scrollToIndex >= 0 && scrollToIndex < cellCount;\n  var sizeHasChanged = size !== previousSize || sizeJustIncreasedFromZero || !previousCellSize || typeof cellSize === 'number' && cellSize !== previousCellSize; // If we have a new scroll target OR if height/row-height has changed,\n  // We should ensure that the scroll target is visible.\n\n  if (hasScrollToIndex && (sizeHasChanged || scrollToAlignment !== previousScrollToAlignment || scrollToIndex !== previousScrollToIndex)) {\n    updateScrollIndexCallback(scrollToIndex); // If we don't have a selected item but list size or number of children have decreased,\n    // Make sure we aren't scrolled too far past the current content.\n  } else if (!hasScrollToIndex && cellCount > 0 && (size < previousSize || cellCount < previousCellsCount)) {\n    // We need to ensure that the current scroll offset is still within the collection's range.\n    // To do this, we don't need to measure everything; CellMeasurer would perform poorly.\n    // Just check to make sure we're still okay.\n    // Only adjust the scroll position if we've scrolled below the last set of rows.\n    if (scrollOffset > cellSizeAndPositionManager.getTotalSize() - size) {\n      updateScrollIndexCallback(cellCount - 1);\n    }\n  }\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bpfrpt_proptype_AnimationTimeoutId = exports.requestAnimationTimeout = exports.cancelAnimationTimeout = void 0;\n\nvar _animationFrame = require(\"./animationFrame\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar bpfrpt_proptype_AnimationTimeoutId = process.env.NODE_ENV === 'production' ? null : {\n  \"id\": _propTypes[\"default\"].number.isRequired\n};\nexports.bpfrpt_proptype_AnimationTimeoutId = bpfrpt_proptype_AnimationTimeoutId;\n\nvar cancelAnimationTimeout = function cancelAnimationTimeout(frame) {\n  return (0, _animationFrame.caf)(frame.id);\n};\n/**\n * Recursively calls requestAnimationFrame until a specified delay has been met or exceeded.\n * When the delay time has been reached the function you're timing out will be called.\n *\n * Credit: Joe Lambert (https://gist.github.com/joelambert/1002116#file-requesttimeout-js)\n */\n\n\nexports.cancelAnimationTimeout = cancelAnimationTimeout;\n\nvar requestAnimationTimeout = function requestAnimationTimeout(callback, delay) {\n  var start; // wait for end of processing current event handler, because event handler may be long\n\n  Promise.resolve().then(function () {\n    start = Date.now();\n  });\n\n  var timeout = function timeout() {\n    if (Date.now() - start >= delay) {\n      callback.call();\n    } else {\n      frame.id = (0, _animationFrame.raf)(timeout);\n    }\n  };\n\n  var frame = {\n    id: (0, _animationFrame.raf)(timeout)\n  };\n  return frame;\n};\n\nexports.requestAnimationTimeout = requestAnimationTimeout;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.caf = exports.raf = void 0;\n// Properly handle server-side rendering.\nvar win;\n\nif (typeof window !== 'undefined') {\n  win = window;\n} else if (typeof self !== 'undefined') {\n  win = self;\n} else {\n  win = {};\n} // requestAnimationFrame() shim by Paul Irish\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\nvar request = win.requestAnimationFrame || win.webkitRequestAnimationFrame || win.mozRequestAnimationFrame || win.oRequestAnimationFrame || win.msRequestAnimationFrame || function (callback) {\n  return win.setTimeout(callback, 1000 / 60);\n};\n\nvar cancel = win.cancelAnimationFrame || win.webkitCancelAnimationFrame || win.mozCancelAnimationFrame || win.oCancelAnimationFrame || win.msCancelAnimationFrame || function (id) {\n  win.clearTimeout(id);\n};\n\nvar raf = request;\nexports.raf = raf;\nvar caf = cancel;\nexports.caf = caf;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = defaultOverscanIndicesGetter;\nexports.SCROLL_DIRECTION_VERTICAL = exports.SCROLL_DIRECTION_HORIZONTAL = exports.SCROLL_DIRECTION_FORWARD = exports.SCROLL_DIRECTION_BACKWARD = void 0;\n\nvar _types = require(\"./types\");\n\nvar SCROLL_DIRECTION_BACKWARD = -1;\nexports.SCROLL_DIRECTION_BACKWARD = SCROLL_DIRECTION_BACKWARD;\nvar SCROLL_DIRECTION_FORWARD = 1;\nexports.SCROLL_DIRECTION_FORWARD = SCROLL_DIRECTION_FORWARD;\nvar SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexports.SCROLL_DIRECTION_HORIZONTAL = SCROLL_DIRECTION_HORIZONTAL;\nvar SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexports.SCROLL_DIRECTION_VERTICAL = SCROLL_DIRECTION_VERTICAL;\n\nfunction defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n  // Make sure we render at least 1 cell extra before and after (except near boundaries)\n  // This is necessary in order to support keyboard navigation (TAB/SHIFT+TAB) in some cases\n  // For more info see issues #625\n  overscanCellsCount = Math.max(1, overscanCellsCount);\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - 1),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + 1)\n    };\n  }\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calcColumnWidth = calcColumnWidth;\nfunction calcColumnWidth(index, columns, tableWidth) {\n  var column = columns[index];\n\n  var width = getDeterministicColumnWidth(column, tableWidth);\n\n  if (width) {\n    return width;\n  }\n\n  var totalAllocatedWidth = columns.reduce(function (result, c) {\n    return result + (getDeterministicColumnWidth(c, tableWidth) || 0);\n  }, 0);\n\n  // Evenly distribute remaining width amoungst columns (accounting for minWidths)\n  var variableWidthColumns = columns.filter(function (c) {\n    return typeof c.width !== 'number' && typeof c.width !== 'string';\n  });\n  var initialDistributedWidthPerColumn = (tableWidth - totalAllocatedWidth) / variableWidthColumns.length;\n  var activeMinWidthColumns = variableWidthColumns.filter(function (c) {\n    return c.minWidth > initialDistributedWidthPerColumn ? c.minWidth : 0;\n  });\n  var allocatedMinWidth = activeMinWidthColumns.reduce(function (result, c) {\n    return result + c.minWidth;\n  }, 0);\n  var remainingWidth = tableWidth - totalAllocatedWidth - allocatedMinWidth;\n\n  return Math.max(column.minWidth || 0, remainingWidth / (variableWidthColumns.length - activeMinWidthColumns.length));\n}\n\nfunction getDeterministicColumnWidth(column, tableWidth) {\n  if (typeof column.width === 'number') {\n    // Fixed width\n    return column.width;\n  } else if (typeof column.width === 'string') {\n    // Percentage width\n    var percentageBasedWidth = percentToFixedWidth(column.width, tableWidth);\n    return Math.max(percentageBasedWidth, column.minWidth || 0);\n  } else {\n    // Variable width\n    return null;\n  }\n}\n\nfunction percentToFixedWidth(percentAsString, tableWidth) {\n  return parseFloat(percentAsString) / 100 * tableWidth;\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf3 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _detectElementResize = _interopRequireDefault(require(\"../vendor/detectElementResize\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar AutoSizer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inherits2[\"default\"])(AutoSizer, _React$Component);\n\n  function AutoSizer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, AutoSizer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3[\"default\"])(AutoSizer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"state\", {\n      height: _this.props.defaultHeight || 0,\n      width: _this.props.defaultWidth || 0\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_parentNode\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_autoSizer\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_window\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_detectElementResize\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onResize\", function () {\n      var _this$props = _this.props,\n          disableHeight = _this$props.disableHeight,\n          disableWidth = _this$props.disableWidth,\n          onResize = _this$props.onResize;\n\n      if (_this._parentNode) {\n        // Guard against AutoSizer component being removed from the DOM immediately after being added.\n        // This can result in invalid style values which can result in NaN values if we don't handle them.\n        // See issue #150 for more context.\n        var height = _this._parentNode.offsetHeight || 0;\n        var width = _this._parentNode.offsetWidth || 0;\n        var win = _this._window || window;\n        var style = win.getComputedStyle(_this._parentNode) || {};\n        var paddingLeft = parseInt(style.paddingLeft, 10) || 0;\n        var paddingRight = parseInt(style.paddingRight, 10) || 0;\n        var paddingTop = parseInt(style.paddingTop, 10) || 0;\n        var paddingBottom = parseInt(style.paddingBottom, 10) || 0;\n        var newHeight = height - paddingTop - paddingBottom;\n        var newWidth = width - paddingLeft - paddingRight;\n\n        if (!disableHeight && _this.state.height !== newHeight || !disableWidth && _this.state.width !== newWidth) {\n          _this.setState({\n            height: height - paddingTop - paddingBottom,\n            width: width - paddingLeft - paddingRight\n          });\n\n          onResize({\n            height: height,\n            width: width\n          });\n        }\n      }\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_setRef\", function (autoSizer) {\n      _this._autoSizer = autoSizer;\n    });\n    return _this;\n  }\n\n  (0, _createClass2[\"default\"])(AutoSizer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var nonce = this.props.nonce;\n\n      if (this._autoSizer && this._autoSizer.parentNode && this._autoSizer.parentNode.ownerDocument && this._autoSizer.parentNode.ownerDocument.defaultView && this._autoSizer.parentNode instanceof this._autoSizer.parentNode.ownerDocument.defaultView.HTMLElement) {\n        // Delay access of parentNode until mount.\n        // This handles edge-cases where the component has already been unmounted before its ref has been set,\n        // As well as libraries like react-lite which have a slightly different lifecycle.\n        this._parentNode = this._autoSizer.parentNode;\n        this._window = this._autoSizer.parentNode.ownerDocument.defaultView; // Defer requiring resize handler in order to support server-side rendering.\n        // See issue #41\n\n        this._detectElementResize = (0, _detectElementResize[\"default\"])(nonce, this._window);\n\n        this._detectElementResize.addResizeListener(this._parentNode, this._onResize);\n\n        this._onResize();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._detectElementResize && this._parentNode) {\n        this._detectElementResize.removeResizeListener(this._parentNode, this._onResize);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          className = _this$props2.className,\n          disableHeight = _this$props2.disableHeight,\n          disableWidth = _this$props2.disableWidth,\n          style = _this$props2.style;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width; // Outer div should not force width/height since that may prevent containers from shrinking.\n      // Inner component should overflow and use calculated width/height.\n      // See issue #68 for more information.\n\n      var outerStyle = {\n        overflow: 'visible'\n      };\n      var childParams = {};\n\n      if (!disableHeight) {\n        outerStyle.height = 0;\n        childParams.height = height;\n      }\n\n      if (!disableWidth) {\n        outerStyle.width = 0;\n        childParams.width = width;\n      }\n      /**\n       * TODO: Avoid rendering children before the initial measurements have been collected.\n       * At best this would just be wasting cycles.\n       * Add this check into version 10 though as it could break too many ref callbacks in version 9.\n       * Note that if default width/height props were provided this would still work with SSR.\n      if (\n        height !== 0 &&\n        width !== 0\n      ) {\n        child = children({ height, width })\n      }\n      */\n\n\n      return React.createElement(\"div\", {\n        className: className,\n        ref: this._setRef,\n        style: _objectSpread({}, outerStyle, {}, style)\n      }, children(childParams));\n    }\n  }]);\n  return AutoSizer;\n}(React.Component), (0, _defineProperty2[\"default\"])(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /** Function responsible for rendering children.*/\n  \"children\": _propTypes[\"default\"].func.isRequired,\n\n  /** Optional custom CSS class name to attach to root AutoSizer element.  */\n  \"className\": _propTypes[\"default\"].string,\n\n  /** Default height to use for initial render; useful for SSR */\n  \"defaultHeight\": _propTypes[\"default\"].number,\n\n  /** Default width to use for initial render; useful for SSR */\n  \"defaultWidth\": _propTypes[\"default\"].number,\n\n  /** Disable dynamic :height property */\n  \"disableHeight\": _propTypes[\"default\"].bool.isRequired,\n\n  /** Disable dynamic :width property */\n  \"disableWidth\": _propTypes[\"default\"].bool.isRequired,\n\n  /** Nonce of the inlined stylesheet for Content Security Policy */\n  \"nonce\": _propTypes[\"default\"].string,\n\n  /** Callback to be invoked on-resize */\n  \"onResize\": _propTypes[\"default\"].func.isRequired,\n\n  /** Optional inline style */\n  \"style\": _propTypes[\"default\"].object\n}), _temp);\nexports[\"default\"] = AutoSizer;\n(0, _defineProperty2[\"default\"])(AutoSizer, \"defaultProps\", {\n  onResize: function onResize() {},\n  disableHeight: false,\n  disableWidth: false,\n  style: {}\n});","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = createDetectElementResize;\n\n/**\n * Detect Element Resize.\n * https://github.com/sdecima/javascript-detect-element-resize\n * Sebastian Decima\n *\n * Forked from version 0.5.3; includes the following modifications:\n * 1) Guard against unsafe 'window' and 'document' references (to support SSR).\n * 2) Defer initialization code via a top-level function wrapper (to support SSR).\n * 3) Avoid unnecessary reflows by not measuring size for scroll events bubbling from children.\n * 4) Add nonce for style element.\n * 5) Added support for injecting custom window object\n **/\nfunction createDetectElementResize(nonce, hostWindow) {\n  // Check `document` and `window` in case of server-side rendering\n  var _window;\n\n  if (typeof hostWindow !== 'undefined') {\n    _window = hostWindow;\n  } else if (typeof window !== 'undefined') {\n    _window = window;\n  } else if (typeof self !== 'undefined') {\n    _window = self;\n  } else {\n    _window = global;\n  }\n\n  var attachEvent = typeof _window.document !== 'undefined' && _window.document.attachEvent;\n\n  if (!attachEvent) {\n    var requestFrame = function () {\n      var raf = _window.requestAnimationFrame || _window.mozRequestAnimationFrame || _window.webkitRequestAnimationFrame || function (fn) {\n        return _window.setTimeout(fn, 20);\n      };\n\n      return function (fn) {\n        return raf(fn);\n      };\n    }();\n\n    var cancelFrame = function () {\n      var cancel = _window.cancelAnimationFrame || _window.mozCancelAnimationFrame || _window.webkitCancelAnimationFrame || _window.clearTimeout;\n      return function (id) {\n        return cancel(id);\n      };\n    }();\n\n    var resetTriggers = function resetTriggers(element) {\n      var triggers = element.__resizeTriggers__,\n          expand = triggers.firstElementChild,\n          contract = triggers.lastElementChild,\n          expandChild = expand.firstElementChild;\n      contract.scrollLeft = contract.scrollWidth;\n      contract.scrollTop = contract.scrollHeight;\n      expandChild.style.width = expand.offsetWidth + 1 + 'px';\n      expandChild.style.height = expand.offsetHeight + 1 + 'px';\n      expand.scrollLeft = expand.scrollWidth;\n      expand.scrollTop = expand.scrollHeight;\n    };\n\n    var checkTriggers = function checkTriggers(element) {\n      return element.offsetWidth != element.__resizeLast__.width || element.offsetHeight != element.__resizeLast__.height;\n    };\n\n    var scrollListener = function scrollListener(e) {\n      // Don't measure (which forces) reflow for scrolls that happen inside of children!\n      if (e.target.className && typeof e.target.className.indexOf === 'function' && e.target.className.indexOf('contract-trigger') < 0 && e.target.className.indexOf('expand-trigger') < 0) {\n        return;\n      }\n\n      var element = this;\n      resetTriggers(this);\n\n      if (this.__resizeRAF__) {\n        cancelFrame(this.__resizeRAF__);\n      }\n\n      this.__resizeRAF__ = requestFrame(function () {\n        if (checkTriggers(element)) {\n          element.__resizeLast__.width = element.offsetWidth;\n          element.__resizeLast__.height = element.offsetHeight;\n\n          element.__resizeListeners__.forEach(function (fn) {\n            fn.call(element, e);\n          });\n        }\n      });\n    };\n    /* Detect CSS Animations support to detect element display/re-attach */\n\n\n    var animation = false,\n        keyframeprefix = '',\n        animationstartevent = 'animationstart',\n        domPrefixes = 'Webkit Moz O ms'.split(' '),\n        startEvents = 'webkitAnimationStart animationstart oAnimationStart MSAnimationStart'.split(' '),\n        pfx = '';\n    {\n      var elm = _window.document.createElement('fakeelement');\n\n      if (elm.style.animationName !== undefined) {\n        animation = true;\n      }\n\n      if (animation === false) {\n        for (var i = 0; i < domPrefixes.length; i++) {\n          if (elm.style[domPrefixes[i] + 'AnimationName'] !== undefined) {\n            pfx = domPrefixes[i];\n            keyframeprefix = '-' + pfx.toLowerCase() + '-';\n            animationstartevent = startEvents[i];\n            animation = true;\n            break;\n          }\n        }\n      }\n    }\n    var animationName = 'resizeanim';\n    var animationKeyframes = '@' + keyframeprefix + 'keyframes ' + animationName + ' { from { opacity: 0; } to { opacity: 0; } } ';\n    var animationStyle = keyframeprefix + 'animation: 1ms ' + animationName + '; ';\n  }\n\n  var createStyles = function createStyles(doc) {\n    if (!doc.getElementById('detectElementResize')) {\n      //opacity:0 works around a chrome bug https://code.google.com/p/chromium/issues/detail?id=286360\n      var css = (animationKeyframes ? animationKeyframes : '') + '.resize-triggers { ' + (animationStyle ? animationStyle : '') + 'visibility: hidden; opacity: 0; } ' + '.resize-triggers, .resize-triggers > div, .contract-trigger:before { content: \" \"; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; z-index: -1; } .resize-triggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',\n          head = doc.head || doc.getElementsByTagName('head')[0],\n          style = doc.createElement('style');\n      style.id = 'detectElementResize';\n      style.type = 'text/css';\n\n      if (nonce != null) {\n        style.setAttribute('nonce', nonce);\n      }\n\n      if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n      } else {\n        style.appendChild(doc.createTextNode(css));\n      }\n\n      head.appendChild(style);\n    }\n  };\n\n  var addResizeListener = function addResizeListener(element, fn) {\n    if (attachEvent) {\n      element.attachEvent('onresize', fn);\n    } else {\n      if (!element.__resizeTriggers__) {\n        var doc = element.ownerDocument;\n\n        var elementStyle = _window.getComputedStyle(element);\n\n        if (elementStyle && elementStyle.position == 'static') {\n          element.style.position = 'relative';\n        }\n\n        createStyles(doc);\n        element.__resizeLast__ = {};\n        element.__resizeListeners__ = [];\n        (element.__resizeTriggers__ = doc.createElement('div')).className = 'resize-triggers';\n        element.__resizeTriggers__.innerHTML = '<div class=\"expand-trigger\"><div></div></div>' + '<div class=\"contract-trigger\"></div>';\n        element.appendChild(element.__resizeTriggers__);\n        resetTriggers(element);\n        element.addEventListener('scroll', scrollListener, true);\n        /* Listen for a css animation to detect element display/re-attach */\n\n        if (animationstartevent) {\n          element.__resizeTriggers__.__animationListener__ = function animationListener(e) {\n            if (e.animationName == animationName) {\n              resetTriggers(element);\n            }\n          };\n\n          element.__resizeTriggers__.addEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n        }\n      }\n\n      element.__resizeListeners__.push(fn);\n    }\n  };\n\n  var removeResizeListener = function removeResizeListener(element, fn) {\n    if (attachEvent) {\n      element.detachEvent('onresize', fn);\n    } else {\n      element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n\n      if (!element.__resizeListeners__.length) {\n        element.removeEventListener('scroll', scrollListener, true);\n\n        if (element.__resizeTriggers__.__animationListener__) {\n          element.__resizeTriggers__.removeEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n\n          element.__resizeTriggers__.__animationListener__ = null;\n        }\n\n        try {\n          element.__resizeTriggers__ = !element.removeChild(element.__resizeTriggers__);\n        } catch (e) {// Preact compat; see developit/preact-compat/issues/228\n        }\n      }\n    }\n  };\n\n  return {\n    addResizeListener: addResizeListener,\n    removeResizeListener: removeResizeListener\n  };\n}","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;"],"sourceRoot":""}