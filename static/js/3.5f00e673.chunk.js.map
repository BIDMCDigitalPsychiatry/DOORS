{"version":3,"sources":["../node_modules/@material-ui/core/esm/Table/TableContext.js","../node_modules/@material-ui/core/esm/TableCell/index.js","../node_modules/@material-ui/core/esm/TableCell/TableCell.js","../node_modules/@material-ui/core/esm/Table/Tablelvl2Context.js","../node_modules/react-virtualized/dist/commonjs/AutoSizer/index.js","../node_modules/@reactions/component/es/index.js","../node_modules/react-virtualized/dist/es/vendor/detectElementResize.js","../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../node_modules/mui-virtualized-table/dist/index.js","../node_modules/react-virtualized/dist/commonjs/MultiGrid/index.js","../node_modules/react-virtualized/dist/commonjs/MultiGrid/MultiGrid.js","../node_modules/@babel/runtime/helpers/setPrototypeOf.js","../node_modules/react-virtualized/dist/commonjs/MultiGrid/CellMeasurerCacheDecorator.js","../node_modules/react-virtualized/dist/commonjs/CellMeasurer/index.js","../node_modules/react-virtualized/dist/commonjs/CellMeasurer/CellMeasurer.js","../node_modules/react-virtualized/dist/commonjs/CellMeasurer/CellMeasurerCache.js","../node_modules/react-virtualized/dist/commonjs/Grid/index.js","../node_modules/react-virtualized/dist/commonjs/Grid/Grid.js","../node_modules/react-virtualized/dist/commonjs/Grid/utils/calculateSizeAndPositionDataAndUpdateScrollOffset.js","../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/commonjs/Grid/utils/maxElementSize.js","../node_modules/react-virtualized/dist/commonjs/utils/createCallbackMemoizer.js","../node_modules/react-virtualized/dist/commonjs/Grid/utils/updateScrollIndexHelper.js","../node_modules/react-virtualized/dist/commonjs/utils/requestAnimationTimeout.js","../node_modules/react-virtualized/dist/commonjs/utils/animationFrame.js","../node_modules/react-virtualized/dist/commonjs/Grid/accessibilityOverscanIndicesGetter.js","../node_modules/mui-virtualized-table/dist/utils.js","../node_modules/react-virtualized/dist/commonjs/AutoSizer/AutoSizer.js","../node_modules/react-virtualized/dist/commonjs/vendor/detectElementResize.js","../node_modules/@babel/runtime/helpers/toConsumableArray.js","../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/slicedToArray.js","../node_modules/@babel/runtime/helpers/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/nonIterableRest.js","../node_modules/react-virtualized/dist/es/Grid/utils/calculateSizeAndPositionDataAndUpdateScrollOffset.js","../node_modules/react-virtualized/dist/es/Grid/utils/CellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/es/Grid/utils/maxElementSize.js","../node_modules/react-virtualized/dist/es/Grid/utils/ScalingCellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/es/utils/createCallbackMemoizer.js","../node_modules/react-virtualized/dist/es/Grid/utils/updateScrollIndexHelper.js","../node_modules/react-virtualized/dist/es/utils/animationFrame.js","../node_modules/react-virtualized/dist/es/Grid/Grid.js","../node_modules/react-virtualized/dist/es/utils/requestAnimationTimeout.js","../node_modules/react-virtualized/dist/es/Grid/defaultOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/es/Grid/defaultCellRangeRenderer.js","../node_modules/react-virtualized/dist/es/Grid/accessibilityOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/es/ArrowKeyStepper/types.js","../node_modules/react-virtualized/dist/es/ArrowKeyStepper/ArrowKeyStepper.js","../node_modules/react-virtualized/dist/es/AutoSizer/AutoSizer.js","../node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurer.js","../node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurerCache.js","../node_modules/react-virtualized/dist/es/Collection/CollectionView.js","../node_modules/react-virtualized/dist/es/Collection/Section.js","../node_modules/react-virtualized/dist/es/Collection/SectionManager.js","../node_modules/react-virtualized/dist/es/utils/getUpdatedOffsetForIndex.js","../node_modules/react-virtualized/dist/es/Collection/Collection.js","../node_modules/react-virtualized/dist/es/Collection/utils/calculateSizeAndPositionData.js","../node_modules/react-virtualized/dist/es/Collection/index.js","../node_modules/react-virtualized/dist/es/ColumnSizer/ColumnSizer.js","../node_modules/react-virtualized/dist/es/ColumnSizer/index.js","../node_modules/react-virtualized/dist/es/InfiniteLoader/InfiniteLoader.js","../node_modules/react-virtualized/dist/es/InfiniteLoader/index.js","../node_modules/react-virtualized/dist/es/List/List.js","../node_modules/react-virtualized/dist/es/vendor/binarySearchBounds.js","../node_modules/react-virtualized/dist/es/vendor/intervalTree.js","../node_modules/react-virtualized/dist/es/Masonry/PositionCache.js","../node_modules/react-virtualized/dist/es/Masonry/Masonry.js","../node_modules/react-virtualized/dist/es/Masonry/index.js","../node_modules/react-virtualized/dist/es/MultiGrid/CellMeasurerCacheDecorator.js","../node_modules/react-virtualized/dist/es/MultiGrid/MultiGrid.js","../node_modules/react-virtualized/dist/es/ScrollSync/ScrollSync.js","../node_modules/react-virtualized/dist/es/Table/defaultHeaderRowRenderer.js","../node_modules/react-virtualized/dist/es/Table/SortDirection.js","../node_modules/react-virtualized/dist/es/Table/SortIndicator.js","../node_modules/react-virtualized/dist/es/Table/defaultHeaderRenderer.js","../node_modules/react-virtualized/dist/es/Table/defaultRowRenderer.js","../node_modules/react-virtualized/dist/es/Table/Column.js","../node_modules/react-virtualized/dist/es/Table/Table.js","../node_modules/react-virtualized/dist/es/Table/defaultCellDataGetter.js","../node_modules/react-virtualized/dist/es/Table/defaultCellRenderer.js","../node_modules/react-virtualized/dist/es/Table/index.js","../node_modules/react-virtualized/dist/es/WindowScroller/utils/onScroll.js","../node_modules/react-virtualized/dist/es/WindowScroller/utils/dimensions.js","../node_modules/react-virtualized/dist/es/WindowScroller/WindowScroller.js","../node_modules/@material-ui/core/esm/TablePagination/TablePaginationActions.js","../node_modules/@material-ui/core/esm/TablePagination/TablePagination.js","../node_modules/@material-ui/core/esm/internal/svg-icons/ArrowDownward.js","../node_modules/@material-ui/core/esm/TableSortLabel/TableSortLabel.js","../node_modules/@material-ui/core/esm/Table/Table.js","../node_modules/@material-ui/core/esm/TableFooter/TableFooter.js","../node_modules/@material-ui/icons/esm/CheckBox.js","../node_modules/@material-ui/icons/esm/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/styles/createMuiStrictModeTheme.js","../node_modules/@material-ui/core/esm/styles/cssUtils.js","../node_modules/@material-ui/core/esm/styles/responsiveFontSizes.js","../node_modules/@material-ui/core/esm/styles/withTheme.js","../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/createClass.js","../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/inherits.js","../node_modules/react-virtualized/dist/commonjs/Grid/types.js","../node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js","../node_modules/react-virtualized/dist/commonjs/Grid/utils/ScalingCellSizeAndPositionManager.js","../node_modules/dom-helpers/esm/canUseDOM.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/react-virtualized/dist/commonjs/CellMeasurer/types.js","../node_modules/react-virtualized/dist/commonjs/Grid/defaultOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/commonjs/Grid/defaultCellRangeRenderer.js"],"names":["TableContext","React","TableCell","props","ref","role","Component","_props$align","align","classes","className","component","paddingProp","padding","scopeProp","scope","sizeProp","size","sortDirection","variantProp","variant","other","_objectWithoutProperties","table","tablelvl2","Tablelvl2Context","isHeadCell","ariaSort","_extends","clsx","root","concat","capitalize","stickyHeader","withStyles","theme","typography","body2","display","verticalAlign","borderBottom","palette","type","lighten","fade","divider","darken","textAlign","head","color","text","primary","lineHeight","pxToRem","fontWeight","fontWeightMedium","body","footer","secondary","fontSize","sizeSmall","paddingRight","width","paddingLeft","paddingCheckbox","paddingNone","alignLeft","alignCenter","alignRight","flexDirection","alignJustify","position","top","left","zIndex","backgroundColor","background","default","name","_interopRequireDefault","require","Object","defineProperty","exports","value","enumerable","get","_AutoSizer","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_React$Component","_temp","_this","this","_len","arguments","length","args","Array","_key","apply","_initialiseProps","subClass","superClass","prototype","create","constructor","writable","configurable","setPrototypeOf","__proto__","_inherits","getArgs","state","setState","_setState","forceUpdate","_forceUpdate","componentDidMount","didMount","shouldComponentUpdate","nextProps","nextState","shouldUpdate","componentWillUnmount","willUnmount","componentDidUpdate","prevProps","prevState","didUpdate","assign","render","_props","children","_this2","initialState","createDetectElementResize","nonce","hostWindow","_window","attachEvent","window","global","document","requestFrame","raf","requestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","fn","setTimeout","cancelFrame","cancel","cancelAnimationFrame","mozCancelAnimationFrame","webkitCancelAnimationFrame","clearTimeout","id","resetTriggers","element","triggers","__resizeTriggers__","expand","firstElementChild","contract","lastElementChild","expandChild","scrollLeft","scrollWidth","scrollTop","scrollHeight","style","offsetWidth","height","offsetHeight","scrollListener","e","target","indexOf","__resizeRAF__","__resizeLast__","checkTriggers","__resizeListeners__","forEach","animation","keyframeprefix","animationstartevent","domPrefixes","split","startEvents","elm","createElement","undefined","animationName","i","toLowerCase","animationKeyframes","animationStyle","addResizeListener","doc","ownerDocument","elementStyle","getComputedStyle","getElementById","css","getElementsByTagName","setAttribute","styleSheet","cssText","appendChild","createTextNode","createStyles","innerHTML","addEventListener","__animationListener__","push","removeResizeListener","detachEvent","splice","removeEventListener","removeChild","module","arr","len","arr2","arrayLikeToArray","o","minLen","n","toString","slice","from","test","source","key","hasOwnProperty","_slicedToArray","isArray","Symbol","iterator","_arr","_n","_d","_e","_s","_i","next","done","err","sliceIterator","MuiTable","_react2","_propTypes2","_MultiGrid2","_classnames2","_Table2","_TableCell2","_TableFooter2","_TablePagination2","_TableSortLabel2","_styles","_reactDraggable2","_utils","obj","__esModule","keys","_defineProperty","useStyles","makeStyles","boxSizing","grey","borderRight","outline","cell","alignItems","cellClickable","cursor","cellSelected","cellHovered","cellDisabled","opacity","cellContents","whiteSpace","overflow","textOverflow","cellHeader","cellInLastColumn","spacing","cellInLastRow","borderTop","FOOTER_BORDER_HEIGHT","dragHandle","flex","DragHandleActive","DragHandleIcon","justifyContent","_ref7","data","columns","_ref7$maxHeight","maxHeight","pagination","fitHeightToRows","_ref7$fixedRowCount","fixedRowCount","_ref7$fixedColumnCoun","fixedColumnCount","_ref7$rowHeight","rowHeight","columnWidth","_ref7$includeHeaders","includeHeaders","isCellHovered","isCellSelected","isCellDisabled","Classes","orderBy","orderDirection","onHeaderClick","onCellClick","onCellDoubleClick","onCellContextMenu","resizable","cellProps","useTheme","multiGrid","useRef","recomputeGridSize","useCallback","current","useEffect","calculatedHeight","rowsPerPage","paginationHeight","mixins","toolbar","minHeight","calculatedHeightWithFooter","containerHeight","Math","min","multiGridHeight","_ref2","defaultCellProps","_React$useState","useState","hoveredColumn","hoveredRowData","_React$useState2","_React$useState2$","setHovered","_React$useState3","_ref","Columns","widths","initialWidth","c","calculateWidths","_React$useState4","setWidths","resizableColumnWidths","index","tableWidth","getColumnWidth","_ref3","calcColumnWidth","resizeRow","_ref4","dataKey","deltaX","prev","_extends2","delta","findIndex","nextDataKey","handleDrag","event","_ref5","handleMouse","cellRenderer","_ref6","_classNames","columnIndex","rowIndex","column","isHeader","rowData","isSelected","isDisabled","isHovered","resolveCellProps","_resolveCellProps$res","cellStyle","contents","header","float","axis","defaultClassName","defaultClassNameDragging","onDrag","x","hasCellClick","hasCellDoubleClick","hasCellContextMenu","isClickable","onClick","onMouseEnter","onMouseLeave","onDoubleClick","onContextMenu","active","direction","Fragment","useCellRenderer","columnCount","enableFixedColumnScroll","rowCount","enableFixedRowScroll","classNameTopLeftGrid","classNameTopRightGrid","classNameBottomLeftGrid","classNameBottomRightGrid","propTypes","array","number","object","bool","oneOfType","func","string","noPointer","_MultiGrid","_default","_interopRequireWildcard","_objectWithoutProperties2","_classCallCheck2","_createClass2","_possibleConstructorReturn2","_getPrototypeOf2","_assertThisInitialized2","_inherits2","_defineProperty2","_reactLifecyclesCompat","_CellMeasurerCacheDecorator","_Grid","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","_objectSpread","getOwnPropertyDescriptors","defineProperties","MultiGrid","_React$PureComponent","context","scrollbarSize","showHorizontalScrollbar","showVerticalScrollbar","_bottomLeftGrid","_bottomRightGrid","rest","_this$props","parent","_this$props2","_this$props3","_this$props4","_this$state","scrollInfo","onScroll","horizontal","vertical","_this$state2","onScrollbarPresenceChange","_onScroll","_this$props5","_this$state3","_topLeftGrid","_topRightGrid","deferredMeasurementCache","_fixedColumnCount","_fixedRowCount","_maybeCalculateCachedStyles","_deferredMeasurementCacheBottomLeftGrid","cellMeasurerCache","columnIndexOffset","rowIndexOffset","_deferredMeasurementCacheBottomRightGrid","_deferredMeasurementCacheTopRightGrid","_ref7$columnIndex","_ref7$rowIndex","_deferredInvalidateColumnIndex","_deferredInvalidateRowIndex","measureAllCells","_ref8","_ref8$columnIndex","_ref8$rowIndex","_this$props6","adjustedColumnIndex","max","adjustedRowIndex","_leftGridWidth","_topGridHeight","_this$props7","newState","_handleInvalidatedGridSize","_this$props8","onSectionRendered","scrollToColumn","scrollToRow","_prepareForRender","_this$state4","_containerOuterStyle","_containerTopStyle","_renderTopLeftGrid","_renderTopRightGrid","_containerBottomStyle","_renderBottomLeftGrid","_renderBottomRightGrid","_getTopGridHeight","leftGridWidth","_getLeftGridWidth","topGridHeight","resetAll","_this$props9","styleBottomLeftGrid","styleBottomRightGrid","styleTopLeftGrid","styleTopRightGrid","sizeChange","_lastRenderedHeight","_lastRenderedWidth","leftSizeChange","_lastRenderedColumnWidth","_lastRenderedFixedColumnCount","topSizeChange","_lastRenderedFixedRowCount","_lastRenderedRowHeight","_lastRenderedStyle","_lastRenderedStyleBottomLeftGrid","_bottomLeftGridStyle","overflowX","overflowY","_lastRenderedStyleBottomRightGrid","_bottomRightGridStyle","_lastRenderedStyleTopLeftGrid","_topLeftGridStyle","_lastRenderedStyleTopRightGrid","_topRightGridStyle","hideBottomLeftGridScrollbar","additionalRowCount","_getBottomGridHeight","gridWidth","bottomLeftGrid","_cellRendererBottomLeftGrid","_onScrollTop","_bottomLeftGridRef","_rowHeightBottomGrid","tabIndex","_cellRendererBottomRightGrid","_columnWidthRightGrid","_onScrollbarPresenceChange","_bottomRightGridRef","_getRightGridWidth","_topLeftGridRef","hideTopRightGridScrollbar","_this$state5","additionalColumnCount","additionalHeight","gridHeight","topRightGrid","_cellRendererTopRightGrid","_onScrollLeft","_topRightGridRef","PureComponent","polyfill","_setPrototypeOf","p","CellMeasurerCacheDecorator","params","_cellMeasurerCache","_columnIndexOffset","_rowIndexOffset","_params$columnIndexOf","_params$rowIndexOffse","clear","clearAll","hasFixedHeight","hasFixedWidth","getHeight","getWidth","has","set","defaultHeight","defaultWidth","_CellMeasurer","_CellMeasurerCache","_class","_getPrototypeOf3","_reactDom","CellMeasurer","cache","_this$props$columnInd","_this$props$rowIndex","_this$_getCellMeasure","_getCellMeasurements","Element","console","warn","_child","_maybeMeasureCell","measure","_measure","registerChild","_registerChild","node","findDOMNode","defaultView","HTMLElement","styleWidth","styleHeight","ceil","_this$props2$columnIn","_this$props2$rowIndex","_this$_getCellMeasure2","invalidateCellSizeAfterRender","DEFAULT_WIDTH","DEFAULT_HEIGHT","CellMeasurerCache","_keyMapper","_columnWidthCache","_defaultWidth","_rowHeightCache","_defaultHeight","fixedHeight","fixedWidth","keyMapper","minWidth","_hasFixedHeight","_hasFixedWidth","_minHeight","_minWidth","defaultKeyMapper","_cellHeightCache","_cellWidthCache","_updateCachedColumnAndRowSizes","_rowCount","_columnCount","_key2","columnKey","rowKey","_accessibilityOverscanIndicesGetter","_defaultCellRangeRenderer","_defaultOverscanIndicesGetter","_types","bpfrpt_proptype_NoContentRenderer","bpfrpt_proptype_Alignment","bpfrpt_proptype_CellPosition","bpfrpt_proptype_CellSize","bpfrpt_proptype_OverscanIndicesGetter","bpfrpt_proptype_RenderedSection","bpfrpt_proptype_CellRendererParams","bpfrpt_proptype_Scroll","DEFAULT_SCROLLING_RESET_TIME_INTERVAL","_clsx","_calculateSizeAndPositionDataAndUpdateScrollOffset","_ScalingCellSizeAndPositionManager","_createCallbackMemoizer","_updateScrollIndexHelper","_scrollbarSize","_requestAnimationTimeout","SCROLL_POSITION_CHANGE_REASONS","Grid","_disablePointerEventsTimeoutId","isScrolling","needToResetStyleCache","_onGridRenderedMemoizer","callback","indices","columnOverscanStartIndex","_columnStartIndex","columnOverscanStopIndex","_columnStopIndex","columnStartIndex","_renderedColumnStartIndex","columnStopIndex","_renderedColumnStopIndex","rowOverscanStartIndex","_rowStartIndex","rowOverscanStopIndex","_rowStopIndex","rowStartIndex","_renderedRowStartIndex","rowStopIndex","_renderedRowStopIndex","_scrollingContainer","handleScrollEvent","columnSizeAndPositionManager","cellCount","cellSizeGetter","_wrapSizeGetter","estimatedCellSize","_getEstimatedColumnSize","rowSizeAndPositionManager","_getEstimatedRowSize","instanceProps","prevColumnWidth","prevRowHeight","prevColumnCount","prevRowCount","prevIsScrolling","prevScrollToColumn","prevScrollToRow","scrollbarSizeMeasured","scrollDirectionHorizontal","SCROLL_DIRECTION_FORWARD","scrollDirectionVertical","scrollPositionChangeReason","_initialScrollTop","_getCalculatedScrollTop","_initialScrollLeft","_getCalculatedScrollLeft","_ref$alignment","alignment","scrollToAlignment","_ref$columnIndex","_ref$rowIndex","offsetProps","getTotalSize","_ref2$scrollLeft","scrollLeftParam","_ref2$scrollTop","scrollTopParam","_debounceScrollEnded","autoHeight","autoWidth","totalRowsHeight","totalColumnsWidth","SCROLL_DIRECTION_BACKWARD","_invokeOnScrollMemoizer","getSizeAndPositionOfCell","_ref4$columnIndex","_ref4$rowIndex","resetCell","_recomputeScrollLeftFlag","_recomputeScrollTopFlag","_styleCache","_cellCache","_updateScrollLeftForScrollToColumn","_updateScrollTopForScrollToRow","getScrollbarSize","stateUpdate","_getScrollToPositionStateUpdate","sizeIsBiggerThanZero","_invokeOnGridRenderedHelper","_maybeCallOnScrollbarPresenceChange","columnOrRowCountJustIncreasedFromZero","sizeJustIncreasedFromZero","cellSizeAndPositionManager","previousCellsCount","previousCellSize","previousScrollToAlignment","previousScrollToIndex","previousSize","scrollOffset","scrollToIndex","updateScrollIndexCallback","cancelAnimationTimeout","autoContainerWidth","containerProps","containerRole","containerStyle","noContentRenderer","_isScrolling","gridStyle","WebkitOverflowScrolling","willChange","_resetStyleCache","_calculateChildrenToRender","verticalScrollBarSize","horizontalScrollBarSize","_horizontalScrollBarSize","_verticalScrollBarSize","_scrollbarPresenceChanged","childrenToDisplay","_childrenToDisplay","showNoContentRenderer","_setScrollingContainerRef","maxWidth","pointerEvents","cellRangeRenderer","overscanColumnCount","overscanIndicesGetter","overscanRowCount","isScrollingOptOut","visibleColumnIndices","getVisibleCellRange","containerSize","offset","visibleRowIndices","horizontalOffsetAdjustment","getOffsetAdjustment","verticalOffsetAdjustment","start","stop","overscanColumnIndices","overscanCellsCount","scrollDirection","startIndex","stopIndex","overscanRowIndices","overscanStartIndex","overscanStopIndex","cellCache","styleCache","scrollingResetTimeInterval","requestAnimationTimeout","_debounceScrollEndedCallback","_this3","_onScrollMemoizer","_this3$props","clientHeight","clientWidth","Boolean","_getScrollLeftForScrollToColumnStateUpdate","_getScrollTopForScrollToRowStateUpdate","maybeStateA","maybeStateB","configure","cellSize","computeMetadataCallback","computeMetadataCallbackProps","nextCellsCount","nextCellSize","nextScrollToIndex","updateScrollOffsetForScrollToIndex","estimatedColumnSize","estimatedRowSize","_ref9","finalColumn","targetIndex","scrollBarSize","getUpdatedOffsetForIndex","currentOffset","calculatedScrollLeft","finalRow","calculatedScrollTop","CellSizeAndPositionManager","_cellSizeGetter","_cellCount","_estimatedCellSize","_lastMeasuredIndex","Error","lastMeasuredCellSizeAndPosition","getSizeAndPositionOfLastMeasuredCell","isNaN","_cellSizeAndPositionData","_lastBatchedIndex","_ref3$align","idealOffset","datum","maxOffset","minOffset","totalSize","_findNearestCell","high","low","middle","floor","interval","_binarySearch","lastMeasuredIndex","_exponentialSearch","getMaxElementSize","chrome","requireAllKeys","cachedIndices","allInitialized","every","indexChanged","some","cachedValue","join","getCellCount","hasScrollToIndex","sizeHasChanged","bpfrpt_proptype_AnimationTimeoutId","_animationFrame","frame","caf","delay","Promise","resolve","then","Date","now","timeout","win","request","oRequestAnimationFrame","msRequestAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","SCROLL_DIRECTION_VERTICAL","SCROLL_DIRECTION_HORIZONTAL","getDeterministicColumnWidth","percentageBasedWidth","percentAsString","parseFloat","percentToFixedWidth","totalAllocatedWidth","reduce","result","variableWidthColumns","initialDistributedWidthPerColumn","activeMinWidthColumns","allocatedMinWidth","remainingWidth","_detectElementResize","AutoSizer","disableHeight","disableWidth","onResize","_parentNode","parseInt","paddingTop","paddingBottom","newHeight","newWidth","autoSizer","_autoSizer","parentNode","_onResize","outerStyle","childParams","_setRef","pfx","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","iter","arrayWithHoles","iterableToArrayLimit","nonIterableRest","calculateSizeAndPositionDataAndUpdateScrollOffset","_createClass","ScalingCellSizeAndPositionManager","_ref$maxScrollSize","maxScrollSize","_cellSizeAndPositionManager","_maxScrollSize","getEstimatedCellSize","getLastMeasuredIndex","safeTotalSize","offsetPercentage","_getOffsetPercentage","round","_safeOffsetToOffset","_offsetToSafeOffset","createCallbackMemoizer","updateScrollIndexHelper","_getPrototypeOf","_assertThisInitialized","renderedCells","areOffsetsAdjusted","canCacheStyle","rowDatum","columnDatum","isVisible","cellRendererParams","renderedCell","defaultOverscanIndicesGetter","ArrowKeyStepper","disabled","mode","_this$_getScrollState","_getScrollState","scrollToColumnPrevious","scrollToRowPrevious","_this$_getScrollState2","preventDefault","_updateScrollState","_this$_getScrollState3","onKeyDown","_onKeyDown","_onSectionRendered","isControlled","onScrollToChange","CollectionView","cellLayoutManager","_onSectionRenderedMemoizer","getLastRenderedIndices","scrollToCell","scrollPosition","getScrollPositionForCell","cellIndex","_setScrollPosition","_enablePointerEventsAfterDelay","isScrollingChange","_cellLayoutManager$ge","totalHeight","totalWidth","cancelable","_scrollbarSizeMeasured","_calculateSizeAndPositionDataOnNextUpdate","_updateScrollPositionForScrollToCell","_invokeOnSectionRenderedHelper","_cellLayoutManager$ge2","horizontalOverscanSize","verticalOverscanSize","_lastRenderedCellCount","_lastRenderedCellLayoutManager","calculateSizeAndPositionData","_cellLayoutManager$ge3","right","bottom","cellRenderers","y","collectionStyle","Section","_indexMap","_indices","SectionManager","sectionSize","_sectionSize","_cellMetadata","_sections","getSections","section","getCellIndices","map","sectionXStart","sectionXStop","sectionYStart","sectionYStop","sections","sectionX","sectionY","cellMetadatum","addCellIndex","_ref$align","cellOffset","Collection","_lastRenderedCellIndices","_isScrollingChange","bind","_setCollectionViewRef","_collectionView","recomputeCellSizesAndPositions","cellSizeAndPositionGetter","cellMetadata","sectionManager","registerCell","_calculateSizeAndPositionData","_sectionManager","_height","_width","cellGroupRenderer","getCellMetadata","cellRendererProps","ColumnSizer","columnMaxWidth","columnMinWidth","_registeredChild","safeColumnMinWidth","safeColumnMaxWidth","adjustedWidth","child","InfiniteLoader","_loadMoreRowsMemoizer","_onRowsRendered","autoReload","_doStuff","_lastRenderedStartIndex","_lastRenderedStopIndex","onRowsRendered","unloadedRanges","loadMoreRows","unloadedRange","promise","lastRenderedStartIndex","lastRenderedStopIndex","isRangeVisible","currentIndex","recomputeSize","recomputeRowHeights","forceUpdateReactVirtualizedComponent","isRowLoaded","minimumBatchSize","threshold","rangeStartIndex","rangeStopIndex","potentialStopIndex","_index","firstUnloadedRange","_index2","scanForUnloadedRanges","squashedUnloadedRanges","_toConsumableArray","_loadUnloadedRanges","registeredChild","List","rowRenderer","widthDescriptor","getOffsetForCell","_ref6$columnIndex","_ref6$rowIndex","scrollToPosition","noRowsRenderer","classNames","_cellRenderer","accessibilityOverscanIndicesGetter","ge","a","l","h","m","_GEP","_GEA","gt","_GTP","_GTA","lt","_LTP","_LTA","le","_LEP","_LEA","eq","_EQP","_EQA","IntervalTreeNode","mid","leftPoints","rightPoints","count","proto","copy","b","rebuild","intervals","ntree","createIntervalTree","rebuildWithInterval","rebuildWithoutInterval","idx","reportLeftRange","hi","cb","r","reportRightRange","lo","reportRange","compareNumbers","compareBegin","d","compareEnd","pts","sort","leftIntervals","rightIntervals","centerIntervals","s","IntervalTree","insert","weight","bounds","remove","queryPoint","queryInterval","tproto","PositionCache","defaultCellHeight","unmeasuredCellCount","tallestColumnSize","renderCallback","_intervalTree","_leftMap","columnSizeMap","_columnSizeMap","columnHeight","Masonry","eventScrollTop","currentTarget","_getEstimatedTotalHeight","_debounceResetIsScrolling","_positionCache","_invalidateOnUpdateStartIndex","_invalidateOnUpdateStopIndex","_populatePositionCache","_checkInvalidateOnUpdate","_invokeOnScrollCallback","_invokeOnCellsRenderedCallback","_debounceResetIsScrollingId","overscanByPixels","rowDirection","estimateTotalHeight","shortestColumnSize","measuredCellCount","range","_style","batchSize","_startIndex","_stopIndex","_debounceResetIsScrollingCallback","estimatedColumnCount","_onScrollMemoized","_startIndexMemoized","_stopIndexMemoized","onCellsRendered","cellPositioner","_cellPositioner","setPosition","noop","ScrollSync","defaultHeaderRowRenderer","SortDirection","ASC","DESC","SortIndicator","viewBox","fill","defaultHeaderRenderer","label","sortBy","showSortIndicator","title","defaultRowRenderer","onRowClick","onRowDoubleClick","onRowMouseOut","onRowMouseOver","onRowRightClick","a11yProps","onMouseOut","onMouseOver","Column","cellDataGetter","cellData","String","defaultSortDirection","flexGrow","flexShrink","headerRenderer","Table","scrollbarWidth","_createColumn","_createRow","_ref3$columnIndex","_ref3$rowIndex","_setScrollbarWidth","disableHeader","gridClassName","headerHeight","headerRowRenderer","rowClassName","rowStyle","availableRowsHeight","rowClass","rowStyleObject","_cachedColumnStyles","toArray","flexStyles","_getFlexStyleForColumn","_getHeaderColumns","onColumnClick","_column$props","columnData","headerOnClick","headerOnKeyDown","headerTabIndex","headerAriaSort","headerAriaLabel","headerClassName","headerStyle","_column$props2","disableSort","sortEnabled","ReactVirtualized__Table__sortableHeaderColumn","renderedHeader","newSortDirection","rowGetter","flattenedStyle","_getRowHeight","customStyle","flexValue","msFlex","WebkitFlex","_this4","_createHeader","getScrollbarWidth","mountedInstances","originalBodyPointerEvents","disablePointerEventsTimeoutId","enablePointerEventsIfDisabled","enablePointerEventsAfterDelayCallback","__resetIsScrolling","onScrollWindow","maximumTimeout","enablePointerEventsAfterDelay","scrollElement","__handleWindowScrollEvent","registerScrollListener","unregisterScrollListener","isWindow","getBoundingBox","getBoundingClientRect","getDimensions","innerHeight","innerWidth","serverHeight","serverWidth","getPositionOffset","container","documentElement","containerElement","elementRect","containerRect","getScrollOffset","_elementRect","_containerRect","scrollY","scrollX","getWindow","WindowScroller","updatePosition","scrollTo","_positionFromTop","_isMounted","_positionFromLeft","thisNode","ReactDOM","dimensions","_registerResizeListener","prevScrollElement","_unregisterResizeListener","onChildScroll","_onChildScroll","KeyboardArrowRight","KeyboardArrowLeft","TablePaginationActions","backIconButtonProps","nextIconButtonProps","onChangePage","page","IconButton","defaultLabelDisplayedRows","to","defaultRowsPerPageOptions","TablePagination","colSpan","_props$ActionsCompone","ActionsComponent","_props$backIconButton","backIconButtonText","colSpanProp","_props$component","_props$labelDisplayed","labelDisplayedRows","_props$labelRowsPerPa","labelRowsPerPage","_props$nextIconButton","nextIconButtonText","onChangeRowsPerPage","_props$rowsPerPageOpt","rowsPerPageOptions","_props$SelectProps","SelectProps","selectId","useId","labelId","MenuItemComponent","native","MenuItem","Toolbar","spacer","Typography","caption","Select","select","icon","selectIcon","input","InputBase","selectRoot","onChange","rowsPerPageOption","menuItem","actions","marginRight","marginLeft","textAlignLast","createSvgIcon","TableSortLabel","_props$active","_props$direction","_props$hideSortIcon","hideSortIcon","_props$IconComponent","IconComponent","ArrowDownwardIcon","ButtonBase","disableRipple","transition","transitions","duration","shorter","userSelect","iconDirectionDesc","transform","iconDirectionAsc","_props$padding","_props$size","_props$stickyHeader","Provider","borderCollapse","borderSpacing","captionSide","TableFooter","createMuiStrictModeTheme","options","createMuiTheme","deepmerge","unstable_strictMode","isUnitless","toUnitless","convertLength","baseFontSize","toUnit","fromUnit","match","pxLength","outputLength","toFixed","alignProperty","grid","sizeBelow","sizeAbove","fontGrid","pixels","htmlFontSize","responsiveProperty","cssProperty","_ref3$unit","unit","_ref3$breakpoints","breakpoints","_ref3$transform","output","factor","breakpoint","responsiveFontSizes","themeInput","_options$breakpoints","_options$disableAlign","disableAlign","_options$factor","_options$variants","variants","convert","breakpointValues","values","remFontSize","maxFontSize","minFontSize","_formatMuiErrorMessage","withTheme","withThemeCreator","defaultTheme","_defineProperties","descriptor","protoProps","staticProps","_typeof","assertThisInitialized","getPrototypeOf","bpfrpt_proptype_VisibleCellRange","bpfrpt_proptype_OverscanIndices","bpfrpt_proptype_OverscanIndicesGetterParams","bpfrpt_proptype_ScrollbarPresenceChange","bpfrpt_proptype_CellSizeGetter","bpfrpt_proptype_CellRangeRenderer","bpfrpt_proptype_CellRangeRendererParams","bpfrpt_proptype_StyleCache","bpfrpt_proptype_CellCache","bpfrpt_proptype_CellRenderer","componentWillMount","getDerivedStateFromProps","componentWillReceiveProps","componentWillUpdate","__reactInternalSnapshotFlag","__reactInternalSnapshot","getSnapshotBeforeUpdate","isReactComponent","foundWillMountName","foundWillReceivePropsName","foundWillUpdateName","UNSAFE_componentWillMount","UNSAFE_componentWillReceiveProps","UNSAFE_componentWillUpdate","componentName","displayName","newApiName","maybeSnapshot","snapshot","__suppressDeprecationWarning","_CellSizeAndPositionManager","_maxElementSize","recalc","canUseDOM","scrollDiv","bpfrpt_proptype_CellMeasureCache"],"mappings":"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","file":"static/js/3.5f00e673.chunk.js","sourcesContent":["import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar TableContext = /*#__PURE__*/React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  TableContext.displayName = 'TableContext';\n}\n\nexport default TableContext;","export { default } from './TableCell';","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport { darken, fade, lighten } from '../styles/colorManipulator';\nimport TableContext from '../Table/TableContext';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body2, {\n      display: 'table-cell',\n      verticalAlign: 'inherit',\n      // Workaround for a rendering bug with spanned columns in Chrome 62.0.\n      // Removes the alpha (sets it to 1), and lightens or darkens the theme color.\n      borderBottom: \"1px solid\\n    \".concat(theme.palette.type === 'light' ? lighten(fade(theme.palette.divider, 1), 0.88) : darken(fade(theme.palette.divider, 1), 0.68)),\n      textAlign: 'left',\n      padding: 16\n    }),\n\n    /* Styles applied to the root element if `variant=\"head\"` or `context.table.head`. */\n    head: {\n      color: theme.palette.text.primary,\n      lineHeight: theme.typography.pxToRem(24),\n      fontWeight: theme.typography.fontWeightMedium\n    },\n\n    /* Styles applied to the root element if `variant=\"body\"` or `context.table.body`. */\n    body: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `variant=\"footer\"` or `context.table.footer`. */\n    footer: {\n      color: theme.palette.text.secondary,\n      lineHeight: theme.typography.pxToRem(21),\n      fontSize: theme.typography.pxToRem(12)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      padding: '6px 24px 6px 16px',\n      '&:last-child': {\n        paddingRight: 16\n      },\n      '&$paddingCheckbox': {\n        width: 24,\n        // prevent the checkbox column from growing\n        padding: '0 12px 0 16px',\n        '&:last-child': {\n          paddingLeft: 12,\n          paddingRight: 16\n        },\n        '& > *': {\n          padding: 0\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `padding=\"checkbox\"`. */\n    paddingCheckbox: {\n      width: 48,\n      // prevent the checkbox column from growing\n      padding: '0 0 0 4px',\n      '&:last-child': {\n        paddingLeft: 0,\n        paddingRight: 4\n      }\n    },\n\n    /* Styles applied to the root element if `padding=\"none\"`. */\n    paddingNone: {\n      padding: 0,\n      '&:last-child': {\n        padding: 0\n      }\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right',\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `context.table.stickyHeader={true}`. */\n    stickyHeader: {\n      position: 'sticky',\n      top: 0,\n      left: 0,\n      zIndex: 2,\n      backgroundColor: theme.palette.background.default\n    }\n  };\n};\n/**\n * The component renders a `<th>` element when the parent context is a header\n * or otherwise a `<td>` element.\n */\n\nvar TableCell = /*#__PURE__*/React.forwardRef(function TableCell(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      component = props.component,\n      paddingProp = props.padding,\n      scopeProp = props.scope,\n      sizeProp = props.size,\n      sortDirection = props.sortDirection,\n      variantProp = props.variant,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"component\", \"padding\", \"scope\", \"size\", \"sortDirection\", \"variant\"]);\n\n  var table = React.useContext(TableContext);\n  var tablelvl2 = React.useContext(Tablelvl2Context);\n  var isHeadCell = tablelvl2 && tablelvl2.variant === 'head';\n  var role;\n  var Component;\n\n  if (component) {\n    Component = component;\n    role = isHeadCell ? 'columnheader' : 'cell';\n  } else {\n    Component = isHeadCell ? 'th' : 'td';\n  }\n\n  var scope = scopeProp;\n\n  if (!scope && isHeadCell) {\n    scope = 'col';\n  }\n\n  var padding = paddingProp || (table && table.padding ? table.padding : 'default');\n  var size = sizeProp || (table && table.size ? table.size : 'medium');\n  var variant = variantProp || tablelvl2 && tablelvl2.variant;\n  var ariaSort = null;\n\n  if (sortDirection) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, classes[variant], className, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], padding !== 'default' && classes[\"padding\".concat(capitalize(padding))], size !== 'medium' && classes[\"size\".concat(capitalize(size))], variant === 'head' && table && table.stickyHeader && classes.stickyHeader),\n    \"aria-sort\": ariaSort,\n    role: role,\n    scope: scope\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Set the text-align on the table cell content.\n   *\n   * Monetary or generally number fields **should be right aligned** as that allows\n   * you to add them up quickly in your head without having to worry about decimals.\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n\n  /**\n   * The table cell contents.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Sets the padding applied to the cell.\n   * By default, the Table parent component set the value (`default`).\n   */\n  padding: PropTypes.oneOf(['checkbox', 'default', 'none']),\n\n  /**\n   * Set scope attribute.\n   */\n  scope: PropTypes.string,\n\n  /**\n   * Specify the size of the cell.\n   * By default, the Table parent component set the value (`medium`).\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * Set aria-sort direction.\n   */\n  sortDirection: PropTypes.oneOf(['asc', 'desc', false]),\n\n  /**\n   * Specify the cell type.\n   * By default, the TableHead, TableBody or TableFooter parent component set the value.\n   */\n  variant: PropTypes.oneOf(['body', 'footer', 'head'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableCell'\n})(TableCell);","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar Tablelvl2Context = /*#__PURE__*/React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  Tablelvl2Context.displayName = 'Tablelvl2Context';\n}\n\nexport default Tablelvl2Context;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function get() {\n    return _AutoSizer[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"AutoSizer\", {\n  enumerable: true,\n  get: function get() {\n    return _AutoSizer[\"default\"];\n  }\n});\n\nvar _AutoSizer = _interopRequireDefault(require(\"./AutoSizer\"));","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React from 'react';\n\nvar Component = function (_React$Component) {\n  _inherits(Component, _React$Component);\n\n  function Component() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Component);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _initialiseProps.call(_this), _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  Component.prototype.getArgs = function getArgs() {\n    var state = this.state,\n        props = this.props,\n        setState = this._setState,\n        forceUpdate = this._forceUpdate;\n\n    return {\n      state: state,\n      props: props,\n      setState: setState,\n      forceUpdate: forceUpdate\n    };\n  };\n\n  Component.prototype.componentDidMount = function componentDidMount() {\n    if (this.props.didMount) this.props.didMount(this.getArgs());\n  };\n\n  Component.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState) {\n    if (this.props.shouldUpdate) return this.props.shouldUpdate({\n      props: this.props,\n      state: this.state,\n      nextProps: nextProps,\n      nextState: nextState\n    });else return true;\n  };\n\n  Component.prototype.componentWillUnmount = function componentWillUnmount() {\n    if (this.props.willUnmount) this.props.willUnmount({\n      state: this.state,\n      props: this.props\n    });\n  };\n\n  Component.prototype.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n    if (this.props.didUpdate) this.props.didUpdate(Object.assign(this.getArgs(), {\n      prevProps: prevProps,\n      prevState: prevState\n    }));\n  };\n\n  Component.prototype.render = function render() {\n    var _props = this.props,\n        children = _props.children,\n        render = _props.render;\n\n    return children ? typeof children === 'function' ? children(this.getArgs()) : children : render ? render(this.getArgs()) : null;\n  };\n\n  return Component;\n}(React.Component);\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this2 = this;\n\n  this.state = this.props.initialState;\n\n  this._setState = function () {\n    return _this2.setState.apply(_this2, arguments);\n  };\n\n  this._forceUpdate = function () {\n    return _this2.forceUpdate.apply(_this2, arguments);\n  };\n};\n\nexport default Component;","/**\n * Detect Element Resize.\n * https://github.com/sdecima/javascript-detect-element-resize\n * Sebastian Decima\n *\n * Forked from version 0.5.3; includes the following modifications:\n * 1) Guard against unsafe 'window' and 'document' references (to support SSR).\n * 2) Defer initialization code via a top-level function wrapper (to support SSR).\n * 3) Avoid unnecessary reflows by not measuring size for scroll events bubbling from children.\n * 4) Add nonce for style element.\n * 5) Added support for injecting custom window object\n **/\nexport default function createDetectElementResize(nonce, hostWindow) {\n  // Check `document` and `window` in case of server-side rendering\n  var _window;\n\n  if (typeof hostWindow !== 'undefined') {\n    _window = hostWindow;\n  } else if (typeof window !== 'undefined') {\n    _window = window;\n  } else if (typeof self !== 'undefined') {\n    _window = self;\n  } else {\n    _window = global;\n  }\n\n  var attachEvent = typeof _window.document !== 'undefined' && _window.document.attachEvent;\n\n  if (!attachEvent) {\n    var requestFrame = function () {\n      var raf = _window.requestAnimationFrame || _window.mozRequestAnimationFrame || _window.webkitRequestAnimationFrame || function (fn) {\n        return _window.setTimeout(fn, 20);\n      };\n\n      return function (fn) {\n        return raf(fn);\n      };\n    }();\n\n    var cancelFrame = function () {\n      var cancel = _window.cancelAnimationFrame || _window.mozCancelAnimationFrame || _window.webkitCancelAnimationFrame || _window.clearTimeout;\n      return function (id) {\n        return cancel(id);\n      };\n    }();\n\n    var resetTriggers = function resetTriggers(element) {\n      var triggers = element.__resizeTriggers__,\n          expand = triggers.firstElementChild,\n          contract = triggers.lastElementChild,\n          expandChild = expand.firstElementChild;\n      contract.scrollLeft = contract.scrollWidth;\n      contract.scrollTop = contract.scrollHeight;\n      expandChild.style.width = expand.offsetWidth + 1 + 'px';\n      expandChild.style.height = expand.offsetHeight + 1 + 'px';\n      expand.scrollLeft = expand.scrollWidth;\n      expand.scrollTop = expand.scrollHeight;\n    };\n\n    var checkTriggers = function checkTriggers(element) {\n      return element.offsetWidth != element.__resizeLast__.width || element.offsetHeight != element.__resizeLast__.height;\n    };\n\n    var scrollListener = function scrollListener(e) {\n      // Don't measure (which forces) reflow for scrolls that happen inside of children!\n      if (e.target.className && typeof e.target.className.indexOf === 'function' && e.target.className.indexOf('contract-trigger') < 0 && e.target.className.indexOf('expand-trigger') < 0) {\n        return;\n      }\n\n      var element = this;\n      resetTriggers(this);\n\n      if (this.__resizeRAF__) {\n        cancelFrame(this.__resizeRAF__);\n      }\n\n      this.__resizeRAF__ = requestFrame(function () {\n        if (checkTriggers(element)) {\n          element.__resizeLast__.width = element.offsetWidth;\n          element.__resizeLast__.height = element.offsetHeight;\n\n          element.__resizeListeners__.forEach(function (fn) {\n            fn.call(element, e);\n          });\n        }\n      });\n    };\n    /* Detect CSS Animations support to detect element display/re-attach */\n\n\n    var animation = false,\n        keyframeprefix = '',\n        animationstartevent = 'animationstart',\n        domPrefixes = 'Webkit Moz O ms'.split(' '),\n        startEvents = 'webkitAnimationStart animationstart oAnimationStart MSAnimationStart'.split(' '),\n        pfx = '';\n    {\n      var elm = _window.document.createElement('fakeelement');\n\n      if (elm.style.animationName !== undefined) {\n        animation = true;\n      }\n\n      if (animation === false) {\n        for (var i = 0; i < domPrefixes.length; i++) {\n          if (elm.style[domPrefixes[i] + 'AnimationName'] !== undefined) {\n            pfx = domPrefixes[i];\n            keyframeprefix = '-' + pfx.toLowerCase() + '-';\n            animationstartevent = startEvents[i];\n            animation = true;\n            break;\n          }\n        }\n      }\n    }\n    var animationName = 'resizeanim';\n    var animationKeyframes = '@' + keyframeprefix + 'keyframes ' + animationName + ' { from { opacity: 0; } to { opacity: 0; } } ';\n    var animationStyle = keyframeprefix + 'animation: 1ms ' + animationName + '; ';\n  }\n\n  var createStyles = function createStyles(doc) {\n    if (!doc.getElementById('detectElementResize')) {\n      //opacity:0 works around a chrome bug https://code.google.com/p/chromium/issues/detail?id=286360\n      var css = (animationKeyframes ? animationKeyframes : '') + '.resize-triggers { ' + (animationStyle ? animationStyle : '') + 'visibility: hidden; opacity: 0; } ' + '.resize-triggers, .resize-triggers > div, .contract-trigger:before { content: \" \"; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; z-index: -1; } .resize-triggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',\n          head = doc.head || doc.getElementsByTagName('head')[0],\n          style = doc.createElement('style');\n      style.id = 'detectElementResize';\n      style.type = 'text/css';\n\n      if (nonce != null) {\n        style.setAttribute('nonce', nonce);\n      }\n\n      if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n      } else {\n        style.appendChild(doc.createTextNode(css));\n      }\n\n      head.appendChild(style);\n    }\n  };\n\n  var addResizeListener = function addResizeListener(element, fn) {\n    if (attachEvent) {\n      element.attachEvent('onresize', fn);\n    } else {\n      if (!element.__resizeTriggers__) {\n        var doc = element.ownerDocument;\n\n        var elementStyle = _window.getComputedStyle(element);\n\n        if (elementStyle && elementStyle.position == 'static') {\n          element.style.position = 'relative';\n        }\n\n        createStyles(doc);\n        element.__resizeLast__ = {};\n        element.__resizeListeners__ = [];\n        (element.__resizeTriggers__ = doc.createElement('div')).className = 'resize-triggers';\n        element.__resizeTriggers__.innerHTML = '<div class=\"expand-trigger\"><div></div></div>' + '<div class=\"contract-trigger\"></div>';\n        element.appendChild(element.__resizeTriggers__);\n        resetTriggers(element);\n        element.addEventListener('scroll', scrollListener, true);\n        /* Listen for a css animation to detect element display/re-attach */\n\n        if (animationstartevent) {\n          element.__resizeTriggers__.__animationListener__ = function animationListener(e) {\n            if (e.animationName == animationName) {\n              resetTriggers(element);\n            }\n          };\n\n          element.__resizeTriggers__.addEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n        }\n      }\n\n      element.__resizeListeners__.push(fn);\n    }\n  };\n\n  var removeResizeListener = function removeResizeListener(element, fn) {\n    if (attachEvent) {\n      element.detachEvent('onresize', fn);\n    } else {\n      element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n\n      if (!element.__resizeListeners__.length) {\n        element.removeEventListener('scroll', scrollListener, true);\n\n        if (element.__resizeTriggers__.__animationListener__) {\n          element.__resizeTriggers__.removeEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n\n          element.__resizeTriggers__.__animationListener__ = null;\n        }\n\n        try {\n          element.__resizeTriggers__ = !element.removeChild(element.__resizeTriggers__);\n        } catch (e) {// Preact compat; see developit/preact-compat/issues/228\n        }\n      }\n    }\n  };\n\n  return {\n    addResizeListener: addResizeListener,\n    removeResizeListener: removeResizeListener\n  };\n}","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nexports.default = MuiTable;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _MultiGrid = require('react-virtualized/dist/commonjs/MultiGrid');\n\nvar _MultiGrid2 = _interopRequireDefault(_MultiGrid);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _Table = require('@material-ui/core/Table');\n\nvar _Table2 = _interopRequireDefault(_Table);\n\nvar _TableCell = require('@material-ui/core/TableCell');\n\nvar _TableCell2 = _interopRequireDefault(_TableCell);\n\nvar _TableFooter = require('@material-ui/core/TableFooter');\n\nvar _TableFooter2 = _interopRequireDefault(_TableFooter);\n\nvar _TablePagination = require('@material-ui/core/TablePagination');\n\nvar _TablePagination2 = _interopRequireDefault(_TablePagination);\n\nvar _TableSortLabel = require('@material-ui/core/TableSortLabel');\n\nvar _TableSortLabel2 = _interopRequireDefault(_TableSortLabel);\n\nvar _styles = require('@material-ui/core/styles');\n\nvar _reactDraggable = require('react-draggable');\n\nvar _reactDraggable2 = _interopRequireDefault(_reactDraggable);\n\nvar _utils = require('./utils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar FOOTER_BORDER_HEIGHT = 1;\n\nvar useStyles = (0, _styles.makeStyles)(function (theme) {\n  return {\n    table: {\n      boxSizing: 'border-box',\n\n      '& .topLeftGrid': {\n        backgroundColor: theme.palette.grey[theme.palette.type === 'dark' ? 800 : 200],\n        borderBottom: '2px solid ' + theme.palette.divider,\n        borderRight: '2px solid ' + theme.palette.divider,\n        color: theme.palette.text.secondary,\n        fontSize: theme.typography.pxToRem(12),\n\n        // Hide scrollbars on Chrome/Safari/IE\n        '&::-webkit-scrollbar': {\n          display: 'none'\n        },\n        '-ms-overflow-style': 'none'\n      },\n\n      '& .topRightGrid': {\n        backgroundColor: theme.palette.grey[theme.palette.type === 'dark' ? 800 : 200],\n        borderBottom: '2px solid ' + theme.palette.divider,\n        color: theme.palette.text.secondary,\n        fontSize: theme.typography.pxToRem(12),\n\n        // Hide scrollbars on Chrome/Safari/IE\n        '&::-webkit-scrollbar': {\n          display: 'none'\n        },\n        '-ms-overflow-style': 'none'\n      },\n\n      '& .bottomLeftGrid': {\n        backgroundColor: theme.palette.grey[theme.palette.type === 'dark' ? 800 : 200],\n        borderRight: '2px solid ' + theme.palette.divider,\n        color: theme.palette.text.secondary,\n        fontSize: theme.typography.pxToRem(13),\n\n        // Hide scrollbars on Chrome/Safari/IE\n        '&::-webkit-scrollbar': {\n          display: 'none'\n        },\n        '-ms-overflow-style': 'none'\n      },\n\n      '& .bottomRightGrid': {\n        color: theme.palette.text.primary,\n        fontSize: theme.typography.pxToRem(13),\n        outline: 'none' // See: https://github.com/bvaughn/react-virtualized/issues/381\n      }\n    },\n    cell: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    cellClickable: {\n      cursor: 'pointer'\n    },\n    cellSelected: {\n      backgroundColor: theme.palette.grey[theme.palette.type === 'dark' ? 900 : 100]\n    },\n    cellHovered: {\n      backgroundColor: theme.palette.grey[theme.palette.type === 'dark' ? 800 : 200]\n    },\n    cellDisabled: {\n      opacity: 0.5\n    },\n    cellContents: {\n      width: '100%',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      textOverflow: 'ellipsis'\n    },\n    cellHeader: {\n      fontSize: theme.typography.pxToRem(12),\n      fontWeight: theme.typography.fontWeightMedium,\n      color: theme.palette.text.secondary\n    },\n    cellInLastColumn: {\n      paddingRight: theme.spacing(3)\n    },\n    cellInLastRow: {\n      borderBottom: 'none'\n    },\n    footer: {\n      borderTop: FOOTER_BORDER_HEIGHT + 'px solid ' + theme.palette.divider\n    },\n    dragHandle: {\n      flex: '0 0 16px',\n      zIndex: 2,\n      cursor: 'col-resize',\n      color: '#0085ff'\n    },\n    DragHandleActive: {\n      color: '#0b6fcc',\n      zIndex: 3\n    },\n    DragHandleIcon: {\n      flex: '0 0 12px',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  };\n});\n\nvar calculateWidths = function calculateWidths(_ref) {\n  var resizable = _ref.resizable,\n      Columns = _ref.columns;\n\n  var widths = [];\n  if (resizable) {\n    var initialWidth = 1;\n    var columns = [];\n    Columns.forEach(function (c) {\n      if (c.width) {\n        widths[c.name] = 0.1;\n        initialWidth = initialWidth - 0.1;\n      } else {\n        columns.push(c);\n      }\n    });\n    columns.forEach(function (c) {\n      widths[c.name] = initialWidth / columns.length;\n    });\n  }\n  return widths;\n};\n\nvar useCellRenderer = function useCellRenderer(_ref2) {\n  var recomputeGridSize = _ref2.recomputeGridSize,\n      columns = _ref2.columns,\n      width = _ref2.width,\n      includeHeaders = _ref2.includeHeaders,\n      data = _ref2.data,\n      columnWidth = _ref2.columnWidth,\n      isCellHovered = _ref2.isCellHovered,\n      isCellSelected = _ref2.isCellSelected,\n      isCellDisabled = _ref2.isCellDisabled,\n      classes = _ref2.classes,\n      orderBy = _ref2.orderBy,\n      orderDirection = _ref2.orderDirection,\n      onHeaderClick = _ref2.onHeaderClick,\n      onCellClick = _ref2.onCellClick,\n      onCellDoubleClick = _ref2.onCellDoubleClick,\n      onCellContextMenu = _ref2.onCellContextMenu,\n      resizable = _ref2.resizable,\n      defaultCellProps = _ref2.cellProps;\n\n  var _React$useState = _react2.default.useState({\n    hoveredColumn: null,\n    hoveredRowData: null\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      _React$useState2$ = _React$useState2[0],\n      hoveredColumn = _React$useState2$.hoveredColumn,\n      hoveredRowData = _React$useState2$.hoveredRowData,\n      setHovered = _React$useState2[1];\n\n  var _React$useState3 = _react2.default.useState(calculateWidths({ resizable: resizable, columns: columns })),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      widths = _React$useState4[0],\n      setWidths = _React$useState4[1];\n\n  _react2.default.useEffect(function () {\n    recomputeGridSize();\n  }, [recomputeGridSize, hoveredColumn, hoveredRowData, widths]);\n\n  var resizableColumnWidths = _react2.default.useCallback(function (index, columns, tableWidth) {\n    return widths[columns[index].name] * tableWidth;\n  }, [widths]);\n\n  var getColumnWidth = _react2.default.useCallback(function (_ref3) {\n    var index = _ref3.index;\n    return typeof columnWidth === 'function' ? columnWidth({ index: index, columns: columns, width: width }) : resizable ? resizableColumnWidths(index, columns, width) : (0, _utils.calcColumnWidth)(index, columns, width);\n  }, [columnWidth, resizable, columns, width, resizableColumnWidths]);\n\n  var resizeRow = _react2.default.useCallback(function (_ref4) {\n    var dataKey = _ref4.dataKey,\n        deltaX = _ref4.deltaX;\n    return setWidths(function (prev) {\n      var _extends2;\n\n      var delta = deltaX / width;\n      var index = columns.findIndex(function (c) {\n        return c.name === dataKey;\n      });\n      var nextDataKey = columns[index + 1].name;\n      return _extends({}, prev, (_extends2 = {}, _defineProperty(_extends2, dataKey, prev[dataKey] + delta), _defineProperty(_extends2, nextDataKey, prev[nextDataKey] - delta), _extends2));\n    });\n  }, [setWidths, columns, width]);\n\n  var handleDrag = _react2.default.useCallback(function (dataKey) {\n    return function (event, _ref5) {\n      var deltaX = _ref5.deltaX;\n      return resizeRow({\n        dataKey: dataKey,\n        deltaX: deltaX\n      });\n    };\n  }, [resizeRow]);\n\n  var handleMouse = _react2.default.useCallback(function (hoveredColumn, hoveredRowData) {\n    return function (e) {\n      return setHovered({\n        hoveredColumn: hoveredColumn,\n        hoveredRowData: hoveredRowData\n      });\n    };\n  }, [setHovered]);\n\n  var cellRenderer = function cellRenderer(_ref6) {\n    var _classNames;\n\n    var columnIndex = _ref6.columnIndex,\n        rowIndex = _ref6.rowIndex,\n        key = _ref6.key,\n        style = _ref6.style;\n\n    var column = columns[columnIndex];\n    var isHeader = includeHeaders && rowIndex === 0;\n    var headerOffset = includeHeaders ? 1 : 0;\n    var rowData = data && data[rowIndex - headerOffset] || {};\n\n    var isSelected = isCellSelected && isCellSelected(column, rowData);\n    var isDisabled = isCellDisabled && isCellDisabled(column, rowData);\n\n    var isHovered = hoveredColumn && hoveredRowData && isCellHovered && isCellHovered(column, rowData, hoveredColumn, hoveredRowData);\n\n    var resolveCellProps = function resolveCellProps(cellProps) {\n      return typeof cellProps === 'function' ? cellProps(column, rowData, hoveredColumn, hoveredRowData) : cellProps;\n    };\n    // TODO: Deep merge (do not override all defaultCellProps styles if column.cellProps.styles defined?)\n\n    var _resolveCellProps$res = _extends({}, resolveCellProps(defaultCellProps), resolveCellProps(column.cellProps)),\n        cellStyle = _resolveCellProps$res.style,\n        cellProps = _objectWithoutProperties(_resolveCellProps$res, ['style']);\n\n    var contents = _react2.default.createElement(\n      'div',\n      { className: classes.cellContents },\n      _react2.default.createElement(\n        'span',\n        { style: { flex: 'auto' } },\n        isHeader ? column.header != null ? column.header : column.name : column.cell ? column.cell(rowData) : rowData[column.name]\n      ),\n      _react2.default.createElement(\n        'span',\n        { style: { float: 'right' } },\n        isHeader && resizable && columnIndex < columns.length - 1 && _react2.default.createElement(\n          _reactDraggable2.default,\n          {\n            axis: 'x',\n            defaultClassName: classes.dragHandle,\n            defaultClassNameDragging: classes.DragHandleActive,\n            onDrag: handleDrag(column.name),\n            position: { x: 0 }\n          },\n          _react2.default.createElement(\n            'span',\n            { className: classes.DragHandleIcon },\n            '\\u22EE'\n          )\n        )\n      )\n    );\n\n    var hasCellClick = !isHeader && onCellClick;\n    var hasCellDoubleClick = !isHeader && onCellDoubleClick;\n    var hasCellContextMenu = !isHeader && onCellContextMenu;\n    var isClickable = hasCellClick || hasCellDoubleClick || hasCellContextMenu || column.onClick;\n\n    var className = (0, _classnames2.default)(classes.cell, (_classNames = {}, _defineProperty(_classNames, classes.cellClickable, isClickable), _defineProperty(_classNames, classes.cellHovered, isHovered), _defineProperty(_classNames, classes.cellSelected, isSelected), _defineProperty(_classNames, classes.cellDisabled, isDisabled), _defineProperty(_classNames, classes.cellHeader, isHeader), _defineProperty(_classNames, classes.cellInLastColumn, columnIndex === columns.length - 1), _defineProperty(_classNames, classes.cellInLastRow, !isHeader && rowIndex === (data ? data.length : 0)), _classNames));\n\n    return _react2.default.createElement(\n      _TableCell2.default,\n      _extends({\n        component: 'div',\n        className: className,\n        key: key,\n        onMouseEnter: handleMouse(column, rowData),\n        onMouseLeave: handleMouse(null, null),\n        style: _extends({}, style, cellStyle)\n      }, hasCellClick && {\n        onClick: function onClick(event) {\n          return onCellClick(event, { column: column, rowData: rowData, data: data });\n        }\n      }, hasCellDoubleClick && {\n        onDoubleClick: function onDoubleClick(event) {\n          return onCellDoubleClick(event, { column: column, rowData: rowData, data: data });\n        }\n      }, hasCellContextMenu && {\n        onContextMenu: function onContextMenu(event) {\n          return onCellContextMenu(event, { column: column, rowData: rowData, data: data });\n        }\n      }, cellProps),\n      isHeader && column.onHeaderClick !== false && (column.onHeaderClick || onHeaderClick) ? _react2.default.createElement(\n        _TableSortLabel2.default,\n        {\n          active: orderBy && (orderBy === column.name || orderBy === column.orderBy) && rowIndex === 0,\n          style: { width: 'inherit' } // fix text overflowing\n          , direction: orderDirection,\n          onClick: function onClick(event) {\n            return column.onHeaderClick ? column.onHeaderClick(event, { column: column }) : onHeaderClick(event, { column: column });\n          }\n        },\n        contents\n      ) : isHeader && column.resizable ? _react2.default.createElement(\n        _react2.default.Fragment,\n        null,\n        contents,\n        _react2.default.createElement(\n          _reactDraggable2.default,\n          {\n            axis: 'x',\n            defaultClassName: 'DragHandle',\n            defaultClassNameDragging: 'DragHandleActive',\n            onDrag: handleDrag(column.name),\n            position: { x: 0 }\n          },\n          _react2.default.createElement(\n            'span',\n            { className: 'DragHandleIcon' },\n            '\\u22EE'\n          )\n        )\n      ) : contents\n    );\n  };\n\n  return { cellRenderer: cellRenderer, columnWidth: getColumnWidth };\n};\n\nfunction MuiTable(_ref7) {\n  var data = _ref7.data,\n      columns = _ref7.columns,\n      width = _ref7.width,\n      height = _ref7.height,\n      _ref7$maxHeight = _ref7.maxHeight,\n      maxHeight = _ref7$maxHeight === undefined ? null : _ref7$maxHeight,\n      pagination = _ref7.pagination,\n      fitHeightToRows = _ref7.fitHeightToRows,\n      _ref7$fixedRowCount = _ref7.fixedRowCount,\n      fixedRowCount = _ref7$fixedRowCount === undefined ? 0 : _ref7$fixedRowCount,\n      _ref7$fixedColumnCoun = _ref7.fixedColumnCount,\n      fixedColumnCount = _ref7$fixedColumnCoun === undefined ? 0 : _ref7$fixedColumnCoun,\n      _ref7$rowHeight = _ref7.rowHeight,\n      rowHeight = _ref7$rowHeight === undefined ? 48 : _ref7$rowHeight,\n      style = _ref7.style,\n      columnWidth = _ref7.columnWidth,\n      _ref7$includeHeaders = _ref7.includeHeaders,\n      includeHeaders = _ref7$includeHeaders === undefined ? false : _ref7$includeHeaders,\n      isCellHovered = _ref7.isCellHovered,\n      isCellSelected = _ref7.isCellSelected,\n      isCellDisabled = _ref7.isCellDisabled,\n      Classes = _ref7.classes,\n      orderBy = _ref7.orderBy,\n      orderDirection = _ref7.orderDirection,\n      onHeaderClick = _ref7.onHeaderClick,\n      onCellClick = _ref7.onCellClick,\n      onCellDoubleClick = _ref7.onCellDoubleClick,\n      onCellContextMenu = _ref7.onCellContextMenu,\n      resizable = _ref7.resizable,\n      cellProps = _ref7.cellProps,\n      other = _objectWithoutProperties(_ref7, ['data', 'columns', 'width', 'height', 'maxHeight', 'pagination', 'fitHeightToRows', 'fixedRowCount', 'fixedColumnCount', 'rowHeight', 'style', 'columnWidth', 'includeHeaders', 'isCellHovered', 'isCellSelected', 'isCellDisabled', 'classes', 'orderBy', 'orderDirection', 'onHeaderClick', 'onCellClick', 'onCellDoubleClick', 'onCellContextMenu', 'resizable', 'cellProps']);\n\n  var classes = useStyles({ classes: Classes });\n  var theme = (0, _styles.useTheme)();\n\n  var multiGrid = _react2.default.useRef(null);\n\n  var recomputeGridSize = _react2.default.useCallback(function () {\n    return multiGrid.current && multiGrid.current.recomputeGridSize();\n  }, [multiGrid]);\n\n  _react2.default.useEffect(function () {\n    recomputeGridSize();\n  }, [columns, data, height, width, recomputeGridSize]);\n\n  var calculatedHeight = 0;\n  if (height) {\n    calculatedHeight = height; // fixed height\n  } else if (pagination && pagination.rowsPerPage && !fitHeightToRows) {\n    var rowCount = pagination.rowsPerPage + (fixedRowCount ? fixedRowCount : includeHeaders ? 1 : 0);\n    calculatedHeight = rowCount * rowHeight;\n  } else if (Array.isArray(data)) {\n    var _rowCount = data.length + (fixedRowCount ? fixedRowCount : includeHeaders ? 1 : 0);\n    calculatedHeight = _rowCount * rowHeight;\n  }\n\n  var paginationHeight = theme.mixins.toolbar.minHeight + FOOTER_BORDER_HEIGHT;\n\n  var calculatedHeightWithFooter = calculatedHeight + (pagination ? paginationHeight : 0);\n  var containerHeight = maxHeight != null ? Math.min(calculatedHeightWithFooter, maxHeight) : calculatedHeightWithFooter;\n  var multiGridHeight = containerHeight - (pagination ? paginationHeight : 0);\n\n  return _react2.default.createElement(\n    _Table2.default,\n    _extends({\n      component: 'div',\n      style: _extends({ width: width, height: containerHeight }, style),\n      className: classes.table\n    }, other),\n    _react2.default.createElement(_MultiGrid2.default, _extends({}, useCellRenderer({\n      recomputeGridSize: recomputeGridSize,\n      data: data,\n      columns: columns,\n      width: width,\n      classes: classes,\n      includeHeaders: includeHeaders,\n      columnWidth: columnWidth,\n      isCellHovered: isCellHovered,\n      isCellSelected: isCellSelected,\n      isCellDisabled: isCellDisabled,\n      orderBy: orderBy,\n      orderDirection: orderDirection,\n      onHeaderClick: onHeaderClick,\n      onCellClick: onCellClick,\n      onCellDoubleClick: onCellDoubleClick,\n      onCellContextMenu: onCellContextMenu,\n      resizable: resizable,\n      cellProps: cellProps\n    }), {\n      ref: multiGrid,\n      width: width,\n      columnCount: Array.isArray(columns) ? columns.length : 0,\n      fixedColumnCount: fixedColumnCount,\n      enableFixedColumnScroll: fixedColumnCount > 0,\n      height: multiGridHeight,\n      rowHeight: rowHeight,\n      rowCount: Array.isArray(data) ? data.length + (includeHeaders ? 1 : 0) : 0,\n      fixedRowCount: fixedRowCount,\n      enableFixedRowScroll: fixedRowCount > 0\n      // TODO: Read these from `classes` without classes.table inheritance?  How to pass props.classes down to override?\n      , classNameTopLeftGrid: 'topLeftGrid',\n      classNameTopRightGrid: 'topRightGrid',\n      classNameBottomLeftGrid: 'bottomLeftGrid',\n      classNameBottomRightGrid: 'bottomRightGrid'\n    })),\n    pagination && _react2.default.createElement(\n      _TableFooter2.default,\n      { component: 'div', className: classes.footer },\n      _react2.default.createElement(_TablePagination2.default, _extends({ component: 'div' }, pagination))\n    )\n  );\n}\n\nMuiTable.propTypes = {\n  data: _propTypes2.default.array,\n  columns: _propTypes2.default.array,\n  width: _propTypes2.default.number,\n  height: _propTypes2.default.number,\n  maxHeight: _propTypes2.default.number,\n  pagination: _propTypes2.default.object,\n  fitHeightToRows: _propTypes2.default.bool,\n  fixedRowCount: _propTypes2.default.number,\n  fixedColumnCount: _propTypes2.default.number,\n  rowHeight: _propTypes2.default.number,\n  columnWidth: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.func]),\n  includeHeaders: _propTypes2.default.bool,\n  orderBy: _propTypes2.default.string,\n  orderDirection: _propTypes2.default.string,\n  onHeaderClick: _propTypes2.default.func,\n  onCellClick: _propTypes2.default.func,\n  onCellDoubleClick: _propTypes2.default.func,\n  onCellContextMenu: _propTypes2.default.func,\n  noPointer: _propTypes2.default.bool,\n  isCellHovered: _propTypes2.default.func,\n  isCellSelected: _propTypes2.default.func,\n  isCellDisabled: _propTypes2.default.func,\n  classes: _propTypes2.default.object,\n  cellProps: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.func]),\n  style: _propTypes2.default.object\n};","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"MultiGrid\", {\n  enumerable: true,\n  get: function get() {\n    return _MultiGrid[\"default\"];\n  }\n});\nexports[\"default\"] = void 0;\n\nvar _MultiGrid = _interopRequireDefault(require(\"./MultiGrid\"));\n\nvar _default = _MultiGrid[\"default\"];\nexports[\"default\"] = _default;","\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactLifecyclesCompat = require(\"react-lifecycles-compat\");\n\nvar _CellMeasurerCacheDecorator = _interopRequireDefault(require(\"./CellMeasurerCacheDecorator\"));\n\nvar _Grid = _interopRequireDefault(require(\"../Grid\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar SCROLLBAR_SIZE_BUFFER = 20;\n/**\n * Renders 1, 2, or 4 Grids depending on configuration.\n * A main (body) Grid will always be rendered.\n * Optionally, 1-2 Grids for sticky header rows will also be rendered.\n * If no sticky columns, only 1 sticky header Grid will be rendered.\n * If sticky columns, 2 sticky header Grids will be rendered.\n */\n\nvar MultiGrid =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  (0, _inherits2[\"default\"])(MultiGrid, _React$PureComponent);\n\n  function MultiGrid(props, context) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, MultiGrid);\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(MultiGrid).call(this, props, context));\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"state\", {\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollbarSize: 0,\n      showHorizontalScrollbar: false,\n      showVerticalScrollbar: false\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_deferredInvalidateColumnIndex\", null);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_deferredInvalidateRowIndex\", null);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_bottomLeftGridRef\", function (ref) {\n      _this._bottomLeftGrid = ref;\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_bottomRightGridRef\", function (ref) {\n      _this._bottomRightGrid = ref;\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_cellRendererBottomLeftGrid\", function (_ref) {\n      var rowIndex = _ref.rowIndex,\n          rest = (0, _objectWithoutProperties2[\"default\"])(_ref, [\"rowIndex\"]);\n      var _this$props = _this.props,\n          cellRenderer = _this$props.cellRenderer,\n          fixedRowCount = _this$props.fixedRowCount,\n          rowCount = _this$props.rowCount;\n\n      if (rowIndex === rowCount - fixedRowCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            height: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          parent: (0, _assertThisInitialized2[\"default\"])(_this),\n          rowIndex: rowIndex + fixedRowCount\n        }));\n      }\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_cellRendererBottomRightGrid\", function (_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex,\n          rest = (0, _objectWithoutProperties2[\"default\"])(_ref2, [\"columnIndex\", \"rowIndex\"]);\n      var _this$props2 = _this.props,\n          cellRenderer = _this$props2.cellRenderer,\n          fixedColumnCount = _this$props2.fixedColumnCount,\n          fixedRowCount = _this$props2.fixedRowCount;\n      return cellRenderer(_objectSpread({}, rest, {\n        columnIndex: columnIndex + fixedColumnCount,\n        parent: (0, _assertThisInitialized2[\"default\"])(_this),\n        rowIndex: rowIndex + fixedRowCount\n      }));\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_cellRendererTopRightGrid\", function (_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rest = (0, _objectWithoutProperties2[\"default\"])(_ref3, [\"columnIndex\"]);\n      var _this$props3 = _this.props,\n          cellRenderer = _this$props3.cellRenderer,\n          columnCount = _this$props3.columnCount,\n          fixedColumnCount = _this$props3.fixedColumnCount;\n\n      if (columnIndex === columnCount - fixedColumnCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            width: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          columnIndex: columnIndex + fixedColumnCount,\n          parent: (0, _assertThisInitialized2[\"default\"])(_this)\n        }));\n      }\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_columnWidthRightGrid\", function (_ref4) {\n      var index = _ref4.index;\n      var _this$props4 = _this.props,\n          columnCount = _this$props4.columnCount,\n          fixedColumnCount = _this$props4.fixedColumnCount,\n          columnWidth = _this$props4.columnWidth;\n      var _this$state = _this.state,\n          scrollbarSize = _this$state.scrollbarSize,\n          showHorizontalScrollbar = _this$state.showHorizontalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showHorizontalScrollbar && index === columnCount - fixedColumnCount) {\n        return scrollbarSize;\n      }\n\n      return typeof columnWidth === 'function' ? columnWidth({\n        index: index + fixedColumnCount\n      }) : columnWidth;\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onScroll\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft,\n          scrollTop = scrollInfo.scrollTop;\n\n      _this.setState({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      var onScroll = _this.props.onScroll;\n\n      if (onScroll) {\n        onScroll(scrollInfo);\n      }\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onScrollbarPresenceChange\", function (_ref5) {\n      var horizontal = _ref5.horizontal,\n          size = _ref5.size,\n          vertical = _ref5.vertical;\n      var _this$state2 = _this.state,\n          showHorizontalScrollbar = _this$state2.showHorizontalScrollbar,\n          showVerticalScrollbar = _this$state2.showVerticalScrollbar;\n\n      if (horizontal !== showHorizontalScrollbar || vertical !== showVerticalScrollbar) {\n        _this.setState({\n          scrollbarSize: size,\n          showHorizontalScrollbar: horizontal,\n          showVerticalScrollbar: vertical\n        });\n\n        var onScrollbarPresenceChange = _this.props.onScrollbarPresenceChange;\n\n        if (typeof onScrollbarPresenceChange === 'function') {\n          onScrollbarPresenceChange({\n            horizontal: horizontal,\n            size: size,\n            vertical: vertical\n          });\n        }\n      }\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onScrollLeft\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft;\n\n      _this._onScroll({\n        scrollLeft: scrollLeft,\n        scrollTop: _this.state.scrollTop\n      });\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onScrollTop\", function (scrollInfo) {\n      var scrollTop = scrollInfo.scrollTop;\n\n      _this._onScroll({\n        scrollTop: scrollTop,\n        scrollLeft: _this.state.scrollLeft\n      });\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_rowHeightBottomGrid\", function (_ref6) {\n      var index = _ref6.index;\n      var _this$props5 = _this.props,\n          fixedRowCount = _this$props5.fixedRowCount,\n          rowCount = _this$props5.rowCount,\n          rowHeight = _this$props5.rowHeight;\n      var _this$state3 = _this.state,\n          scrollbarSize = _this$state3.scrollbarSize,\n          showVerticalScrollbar = _this$state3.showVerticalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showVerticalScrollbar && index === rowCount - fixedRowCount) {\n        return scrollbarSize;\n      }\n\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: index + fixedRowCount\n      }) : rowHeight;\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_topLeftGridRef\", function (ref) {\n      _this._topLeftGrid = ref;\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_topRightGridRef\", function (ref) {\n      _this._topRightGrid = ref;\n    });\n    var deferredMeasurementCache = props.deferredMeasurementCache,\n        _fixedColumnCount = props.fixedColumnCount,\n        _fixedRowCount = props.fixedRowCount;\n\n    _this._maybeCalculateCachedStyles(true);\n\n    if (deferredMeasurementCache) {\n      _this._deferredMeasurementCacheBottomLeftGrid = _fixedRowCount > 0 ? new _CellMeasurerCacheDecorator[\"default\"]({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: 0,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheBottomRightGrid = _fixedColumnCount > 0 || _fixedRowCount > 0 ? new _CellMeasurerCacheDecorator[\"default\"]({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheTopRightGrid = _fixedColumnCount > 0 ? new _CellMeasurerCacheDecorator[\"default\"]({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: 0\n      }) : deferredMeasurementCache;\n    }\n\n    return _this;\n  }\n\n  (0, _createClass2[\"default\"])(MultiGrid, [{\n    key: \"forceUpdateGrids\",\n    value: function forceUpdateGrids() {\n      this._bottomLeftGrid && this._bottomLeftGrid.forceUpdate();\n      this._bottomRightGrid && this._bottomRightGrid.forceUpdate();\n      this._topLeftGrid && this._topLeftGrid.forceUpdate();\n      this._topRightGrid && this._topRightGrid.forceUpdate();\n    }\n    /** See Grid#invalidateCellSizeAfterRender */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender() {\n      var _ref7 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref7$columnIndex = _ref7.columnIndex,\n          columnIndex = _ref7$columnIndex === void 0 ? 0 : _ref7$columnIndex,\n          _ref7$rowIndex = _ref7.rowIndex,\n          rowIndex = _ref7$rowIndex === void 0 ? 0 : _ref7$rowIndex;\n\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      this._bottomLeftGrid && this._bottomLeftGrid.measureAllCells();\n      this._bottomRightGrid && this._bottomRightGrid.measureAllCells();\n      this._topLeftGrid && this._topLeftGrid.measureAllCells();\n      this._topRightGrid && this._topRightGrid.measureAllCells();\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref8 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref8$columnIndex = _ref8.columnIndex,\n          columnIndex = _ref8$columnIndex === void 0 ? 0 : _ref8$columnIndex,\n          _ref8$rowIndex = _ref8.rowIndex,\n          rowIndex = _ref8$rowIndex === void 0 ? 0 : _ref8$rowIndex;\n\n      var _this$props6 = this.props,\n          fixedColumnCount = _this$props6.fixedColumnCount,\n          fixedRowCount = _this$props6.fixedRowCount;\n      var adjustedColumnIndex = Math.max(0, columnIndex - fixedColumnCount);\n      var adjustedRowIndex = Math.max(0, rowIndex - fixedRowCount);\n      this._bottomLeftGrid && this._bottomLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._bottomRightGrid && this._bottomRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._topLeftGrid && this._topLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: rowIndex\n      });\n      this._topRightGrid && this._topRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: rowIndex\n      });\n      this._leftGridWidth = null;\n      this._topGridHeight = null;\n\n      this._maybeCalculateCachedStyles(true);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props7 = this.props,\n          scrollLeft = _this$props7.scrollLeft,\n          scrollTop = _this$props7.scrollTop;\n\n      if (scrollLeft > 0 || scrollTop > 0) {\n        var newState = {};\n\n        if (scrollLeft > 0) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop > 0) {\n          newState.scrollTop = scrollTop;\n        }\n\n        this.setState(newState);\n      }\n\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props8 = this.props,\n          onScroll = _this$props8.onScroll,\n          onSectionRendered = _this$props8.onSectionRendered,\n          onScrollbarPresenceChange = _this$props8.onScrollbarPresenceChange,\n          scrollLeftProp = _this$props8.scrollLeft,\n          scrollToColumn = _this$props8.scrollToColumn,\n          scrollTopProp = _this$props8.scrollTop,\n          scrollToRow = _this$props8.scrollToRow,\n          rest = (0, _objectWithoutProperties2[\"default\"])(_this$props8, [\"onScroll\", \"onSectionRendered\", \"onScrollbarPresenceChange\", \"scrollLeft\", \"scrollToColumn\", \"scrollTop\", \"scrollToRow\"]);\n\n      this._prepareForRender(); // Don't render any of our Grids if there are no cells.\n      // This mirrors what Grid does,\n      // And prevents us from recording inaccurage measurements when used with CellMeasurer.\n\n\n      if (this.props.width === 0 || this.props.height === 0) {\n        return null;\n      } // scrollTop and scrollLeft props are explicitly filtered out and ignored\n\n\n      var _this$state4 = this.state,\n          scrollLeft = _this$state4.scrollLeft,\n          scrollTop = _this$state4.scrollTop;\n      return React.createElement(\"div\", {\n        style: this._containerOuterStyle\n      }, React.createElement(\"div\", {\n        style: this._containerTopStyle\n      }, this._renderTopLeftGrid(rest), this._renderTopRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollLeft: scrollLeft\n      }))), React.createElement(\"div\", {\n        style: this._containerBottomStyle\n      }, this._renderBottomLeftGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollTop: scrollTop\n      })), this._renderBottomRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        onSectionRendered: onSectionRendered,\n        scrollLeft: scrollLeft,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow,\n        scrollTop: scrollTop\n      }))));\n    }\n  }, {\n    key: \"_getBottomGridHeight\",\n    value: function _getBottomGridHeight(props) {\n      var height = props.height;\n\n      var topGridHeight = this._getTopGridHeight(props);\n\n      return height - topGridHeight;\n    }\n  }, {\n    key: \"_getLeftGridWidth\",\n    value: function _getLeftGridWidth(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          columnWidth = props.columnWidth;\n\n      if (this._leftGridWidth == null) {\n        if (typeof columnWidth === 'function') {\n          var leftGridWidth = 0;\n\n          for (var index = 0; index < fixedColumnCount; index++) {\n            leftGridWidth += columnWidth({\n              index: index\n            });\n          }\n\n          this._leftGridWidth = leftGridWidth;\n        } else {\n          this._leftGridWidth = columnWidth * fixedColumnCount;\n        }\n      }\n\n      return this._leftGridWidth;\n    }\n  }, {\n    key: \"_getRightGridWidth\",\n    value: function _getRightGridWidth(props) {\n      var width = props.width;\n\n      var leftGridWidth = this._getLeftGridWidth(props);\n\n      return width - leftGridWidth;\n    }\n  }, {\n    key: \"_getTopGridHeight\",\n    value: function _getTopGridHeight(props) {\n      var fixedRowCount = props.fixedRowCount,\n          rowHeight = props.rowHeight;\n\n      if (this._topGridHeight == null) {\n        if (typeof rowHeight === 'function') {\n          var topGridHeight = 0;\n\n          for (var index = 0; index < fixedRowCount; index++) {\n            topGridHeight += rowHeight({\n              index: index\n            });\n          }\n\n          this._topGridHeight = topGridHeight;\n        } else {\n          this._topGridHeight = rowHeight * fixedRowCount;\n        }\n      }\n\n      return this._topGridHeight;\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n        this.forceUpdate();\n      }\n    }\n    /**\n     * Avoid recreating inline styles each render; this bypasses Grid's shallowCompare.\n     * This method recalculates styles only when specific props change.\n     */\n\n  }, {\n    key: \"_maybeCalculateCachedStyles\",\n    value: function _maybeCalculateCachedStyles(resetAll) {\n      var _this$props9 = this.props,\n          columnWidth = _this$props9.columnWidth,\n          enableFixedColumnScroll = _this$props9.enableFixedColumnScroll,\n          enableFixedRowScroll = _this$props9.enableFixedRowScroll,\n          height = _this$props9.height,\n          fixedColumnCount = _this$props9.fixedColumnCount,\n          fixedRowCount = _this$props9.fixedRowCount,\n          rowHeight = _this$props9.rowHeight,\n          style = _this$props9.style,\n          styleBottomLeftGrid = _this$props9.styleBottomLeftGrid,\n          styleBottomRightGrid = _this$props9.styleBottomRightGrid,\n          styleTopLeftGrid = _this$props9.styleTopLeftGrid,\n          styleTopRightGrid = _this$props9.styleTopRightGrid,\n          width = _this$props9.width;\n      var sizeChange = resetAll || height !== this._lastRenderedHeight || width !== this._lastRenderedWidth;\n      var leftSizeChange = resetAll || columnWidth !== this._lastRenderedColumnWidth || fixedColumnCount !== this._lastRenderedFixedColumnCount;\n      var topSizeChange = resetAll || fixedRowCount !== this._lastRenderedFixedRowCount || rowHeight !== this._lastRenderedRowHeight;\n\n      if (resetAll || sizeChange || style !== this._lastRenderedStyle) {\n        this._containerOuterStyle = _objectSpread({\n          height: height,\n          overflow: 'visible',\n          // Let :focus outline show through\n          width: width\n        }, style);\n      }\n\n      if (resetAll || sizeChange || topSizeChange) {\n        this._containerTopStyle = {\n          height: this._getTopGridHeight(this.props),\n          position: 'relative',\n          width: width\n        };\n        this._containerBottomStyle = {\n          height: height - this._getTopGridHeight(this.props),\n          overflow: 'visible',\n          // Let :focus outline show through\n          position: 'relative',\n          width: width\n        };\n      }\n\n      if (resetAll || styleBottomLeftGrid !== this._lastRenderedStyleBottomLeftGrid) {\n        this._bottomLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: enableFixedColumnScroll ? 'auto' : 'hidden',\n          position: 'absolute'\n        }, styleBottomLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleBottomRightGrid !== this._lastRenderedStyleBottomRightGrid) {\n        this._bottomRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          position: 'absolute'\n        }, styleBottomRightGrid);\n      }\n\n      if (resetAll || styleTopLeftGrid !== this._lastRenderedStyleTopLeftGrid) {\n        this._topLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleTopRightGrid !== this._lastRenderedStyleTopRightGrid) {\n        this._topRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          overflowX: enableFixedRowScroll ? 'auto' : 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopRightGrid);\n      }\n\n      this._lastRenderedColumnWidth = columnWidth;\n      this._lastRenderedFixedColumnCount = fixedColumnCount;\n      this._lastRenderedFixedRowCount = fixedRowCount;\n      this._lastRenderedHeight = height;\n      this._lastRenderedRowHeight = rowHeight;\n      this._lastRenderedStyle = style;\n      this._lastRenderedStyleBottomLeftGrid = styleBottomLeftGrid;\n      this._lastRenderedStyleBottomRightGrid = styleBottomRightGrid;\n      this._lastRenderedStyleTopLeftGrid = styleTopLeftGrid;\n      this._lastRenderedStyleTopRightGrid = styleTopRightGrid;\n      this._lastRenderedWidth = width;\n    }\n  }, {\n    key: \"_prepareForRender\",\n    value: function _prepareForRender() {\n      if (this._lastRenderedColumnWidth !== this.props.columnWidth || this._lastRenderedFixedColumnCount !== this.props.fixedColumnCount) {\n        this._leftGridWidth = null;\n      }\n\n      if (this._lastRenderedFixedRowCount !== this.props.fixedRowCount || this._lastRenderedRowHeight !== this.props.rowHeight) {\n        this._topGridHeight = null;\n      }\n\n      this._maybeCalculateCachedStyles();\n\n      this._lastRenderedColumnWidth = this.props.columnWidth;\n      this._lastRenderedFixedColumnCount = this.props.fixedColumnCount;\n      this._lastRenderedFixedRowCount = this.props.fixedRowCount;\n      this._lastRenderedRowHeight = this.props.rowHeight;\n    }\n  }, {\n    key: \"_renderBottomLeftGrid\",\n    value: function _renderBottomLeftGrid(props) {\n      var enableFixedColumnScroll = props.enableFixedColumnScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          hideBottomLeftGridScrollbar = props.hideBottomLeftGridScrollbar;\n      var showVerticalScrollbar = this.state.showVerticalScrollbar;\n\n      if (!fixedColumnCount) {\n        return null;\n      }\n\n      var additionalRowCount = showVerticalScrollbar ? 1 : 0,\n          height = this._getBottomGridHeight(props),\n          width = this._getLeftGridWidth(props),\n          scrollbarSize = this.state.showVerticalScrollbar ? this.state.scrollbarSize : 0,\n          gridWidth = hideBottomLeftGridScrollbar ? width + scrollbarSize : width;\n\n      var bottomLeftGrid = React.createElement(_Grid[\"default\"], (0, _extends2[\"default\"])({}, props, {\n        cellRenderer: this._cellRendererBottomLeftGrid,\n        className: this.props.classNameBottomLeftGrid,\n        columnCount: fixedColumnCount,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomLeftGrid,\n        height: height,\n        onScroll: enableFixedColumnScroll ? this._onScrollTop : undefined,\n        ref: this._bottomLeftGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount) + additionalRowCount,\n        rowHeight: this._rowHeightBottomGrid,\n        style: this._bottomLeftGridStyle,\n        tabIndex: null,\n        width: gridWidth\n      }));\n\n      if (hideBottomLeftGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"BottomLeftGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._bottomLeftGridStyle, {\n            height: height,\n            width: width,\n            overflowY: 'hidden'\n          })\n        }, bottomLeftGrid);\n      }\n\n      return bottomLeftGrid;\n    }\n  }, {\n    key: \"_renderBottomRightGrid\",\n    value: function _renderBottomRightGrid(props) {\n      var columnCount = props.columnCount,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          scrollToColumn = props.scrollToColumn,\n          scrollToRow = props.scrollToRow;\n      return React.createElement(_Grid[\"default\"], (0, _extends2[\"default\"])({}, props, {\n        cellRenderer: this._cellRendererBottomRightGrid,\n        className: this.props.classNameBottomRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount),\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomRightGrid,\n        height: this._getBottomGridHeight(props),\n        onScroll: this._onScroll,\n        onScrollbarPresenceChange: this._onScrollbarPresenceChange,\n        ref: this._bottomRightGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount),\n        rowHeight: this._rowHeightBottomGrid,\n        scrollToColumn: scrollToColumn - fixedColumnCount,\n        scrollToRow: scrollToRow - fixedRowCount,\n        style: this._bottomRightGridStyle,\n        width: this._getRightGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopLeftGrid\",\n    value: function _renderTopLeftGrid(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount;\n\n      if (!fixedColumnCount || !fixedRowCount) {\n        return null;\n      }\n\n      return React.createElement(_Grid[\"default\"], (0, _extends2[\"default\"])({}, props, {\n        className: this.props.classNameTopLeftGrid,\n        columnCount: fixedColumnCount,\n        height: this._getTopGridHeight(props),\n        ref: this._topLeftGridRef,\n        rowCount: fixedRowCount,\n        style: this._topLeftGridStyle,\n        tabIndex: null,\n        width: this._getLeftGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopRightGrid\",\n    value: function _renderTopRightGrid(props) {\n      var columnCount = props.columnCount,\n          enableFixedRowScroll = props.enableFixedRowScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          scrollLeft = props.scrollLeft,\n          hideTopRightGridScrollbar = props.hideTopRightGridScrollbar;\n      var _this$state5 = this.state,\n          showHorizontalScrollbar = _this$state5.showHorizontalScrollbar,\n          scrollbarSize = _this$state5.scrollbarSize;\n\n      if (!fixedRowCount) {\n        return null;\n      }\n\n      var additionalColumnCount = showHorizontalScrollbar ? 1 : 0,\n          height = this._getTopGridHeight(props),\n          width = this._getRightGridWidth(props),\n          additionalHeight = showHorizontalScrollbar ? scrollbarSize : 0;\n\n      var gridHeight = height,\n          style = this._topRightGridStyle;\n\n      if (hideTopRightGridScrollbar) {\n        gridHeight = height + additionalHeight;\n        style = _objectSpread({}, this._topRightGridStyle, {\n          left: 0\n        });\n      }\n\n      var topRightGrid = React.createElement(_Grid[\"default\"], (0, _extends2[\"default\"])({}, props, {\n        cellRenderer: this._cellRendererTopRightGrid,\n        className: this.props.classNameTopRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount) + additionalColumnCount,\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheTopRightGrid,\n        height: gridHeight,\n        onScroll: enableFixedRowScroll ? this._onScrollLeft : undefined,\n        ref: this._topRightGridRef,\n        rowCount: fixedRowCount,\n        scrollLeft: scrollLeft,\n        style: style,\n        tabIndex: null,\n        width: width\n      }));\n\n      if (hideTopRightGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"TopRightGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._topRightGridStyle, {\n            height: height,\n            width: width,\n            overflowX: 'hidden'\n          })\n        }, topRightGrid);\n      }\n\n      return topRightGrid;\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null && nextProps.scrollLeft >= 0 ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null && nextProps.scrollTop >= 0 ? nextProps.scrollTop : prevState.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n  return MultiGrid;\n}(React.PureComponent);\n\n(0, _defineProperty2[\"default\"])(MultiGrid, \"defaultProps\", {\n  classNameBottomLeftGrid: '',\n  classNameBottomRightGrid: '',\n  classNameTopLeftGrid: '',\n  classNameTopRightGrid: '',\n  enableFixedColumnScroll: false,\n  enableFixedRowScroll: false,\n  fixedColumnCount: 0,\n  fixedRowCount: 0,\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  styleBottomLeftGrid: {},\n  styleBottomRightGrid: {},\n  styleTopLeftGrid: {},\n  styleTopRightGrid: {},\n  hideTopRightGridScrollbar: false,\n  hideBottomLeftGridScrollbar: false\n});\nMultiGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  classNameBottomLeftGrid: _propTypes[\"default\"].string.isRequired,\n  classNameBottomRightGrid: _propTypes[\"default\"].string.isRequired,\n  classNameTopLeftGrid: _propTypes[\"default\"].string.isRequired,\n  classNameTopRightGrid: _propTypes[\"default\"].string.isRequired,\n  enableFixedColumnScroll: _propTypes[\"default\"].bool.isRequired,\n  enableFixedRowScroll: _propTypes[\"default\"].bool.isRequired,\n  fixedColumnCount: _propTypes[\"default\"].number.isRequired,\n  fixedRowCount: _propTypes[\"default\"].number.isRequired,\n  onScrollbarPresenceChange: _propTypes[\"default\"].func,\n  style: _propTypes[\"default\"].object.isRequired,\n  styleBottomLeftGrid: _propTypes[\"default\"].object.isRequired,\n  styleBottomRightGrid: _propTypes[\"default\"].object.isRequired,\n  styleTopLeftGrid: _propTypes[\"default\"].object.isRequired,\n  styleTopRightGrid: _propTypes[\"default\"].object.isRequired,\n  hideTopRightGridScrollbar: _propTypes[\"default\"].bool,\n  hideBottomLeftGridScrollbar: _propTypes[\"default\"].bool\n} : {};\n(0, _reactLifecyclesCompat.polyfill)(MultiGrid);\nvar _default = MultiGrid;\nexports[\"default\"] = _default;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _CellMeasurer = require(\"../CellMeasurer\");\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCacheDecorator =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCacheDecorator() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    (0, _classCallCheck2[\"default\"])(this, CellMeasurerCacheDecorator);\n    (0, _defineProperty2[\"default\"])(this, \"_cellMeasurerCache\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_columnIndexOffset\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_rowIndexOffset\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      _this._cellMeasurerCache.columnWidth({\n        index: index + _this._columnIndexOffset\n      });\n    });\n    (0, _defineProperty2[\"default\"])(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      _this._cellMeasurerCache.rowHeight({\n        index: index + _this._rowIndexOffset\n      });\n    });\n    var cellMeasurerCache = params.cellMeasurerCache,\n        _params$columnIndexOf = params.columnIndexOffset,\n        columnIndexOffset = _params$columnIndexOf === void 0 ? 0 : _params$columnIndexOf,\n        _params$rowIndexOffse = params.rowIndexOffset,\n        rowIndexOffset = _params$rowIndexOffse === void 0 ? 0 : _params$rowIndexOffse;\n    this._cellMeasurerCache = cellMeasurerCache;\n    this._columnIndexOffset = columnIndexOffset;\n    this._rowIndexOffset = rowIndexOffset;\n  }\n\n  (0, _createClass2[\"default\"])(CellMeasurerCacheDecorator, [{\n    key: \"clear\",\n    value: function clear(rowIndex, columnIndex) {\n      this._cellMeasurerCache.clear(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellMeasurerCache.clearAll();\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._cellMeasurerCache.hasFixedHeight();\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._cellMeasurerCache.hasFixedWidth();\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getHeight(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getWidth(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.has(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      this._cellMeasurerCache.set(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset, width, height);\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultWidth;\n    }\n  }]);\n  return CellMeasurerCacheDecorator;\n}();\n\nexports[\"default\"] = CellMeasurerCacheDecorator;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"CellMeasurer\", {\n  enumerable: true,\n  get: function get() {\n    return _CellMeasurer[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"CellMeasurerCache\", {\n  enumerable: true,\n  get: function get() {\n    return _CellMeasurerCache[\"default\"];\n  }\n});\nexports[\"default\"] = void 0;\n\nvar _CellMeasurer = _interopRequireDefault(require(\"./CellMeasurer\"));\n\nvar _CellMeasurerCache = _interopRequireDefault(require(\"./CellMeasurerCache\"));\n\nvar _default = _CellMeasurer[\"default\"];\nexports[\"default\"] = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf3 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactDom = require(\"react-dom\");\n\nvar _types = require(\"./types\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _class, _temp;\n\n/**\n * Wraps a cell and measures its rendered content.\n * Measurements are stored in a per-cell cache.\n * Cached-content is not be re-measured.\n */\nvar CellMeasurer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  (0, _inherits2[\"default\"])(CellMeasurer, _React$PureComponent);\n\n  function CellMeasurer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, CellMeasurer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3[\"default\"])(CellMeasurer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_child\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_measure\", function () {\n      var _this$props = _this.props,\n          cache = _this$props.cache,\n          _this$props$columnInd = _this$props.columnIndex,\n          columnIndex = _this$props$columnInd === void 0 ? 0 : _this$props$columnInd,\n          parent = _this$props.parent,\n          _this$props$rowIndex = _this$props.rowIndex,\n          rowIndex = _this$props$rowIndex === void 0 ? _this.props.index || 0 : _this$props$rowIndex;\n\n      var _this$_getCellMeasure = _this._getCellMeasurements(),\n          height = _this$_getCellMeasure.height,\n          width = _this$_getCellMeasure.width;\n\n      if (height !== cache.getHeight(rowIndex, columnIndex) || width !== cache.getWidth(rowIndex, columnIndex)) {\n        cache.set(rowIndex, columnIndex, width, height);\n\n        if (parent && typeof parent.recomputeGridSize === 'function') {\n          parent.recomputeGridSize({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('CellMeasurer registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      if (element) {\n        _this._maybeMeasureCell();\n      }\n    });\n    return _this;\n  }\n\n  (0, _createClass2[\"default\"])(CellMeasurer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return typeof children === 'function' ? children({\n        measure: this._measure,\n        registerChild: this._registerChild\n      }) : children;\n    }\n  }, {\n    key: \"_getCellMeasurements\",\n    value: function _getCellMeasurements() {\n      var cache = this.props.cache;\n      var node = this._child || (0, _reactDom.findDOMNode)(this); // TODO Check for a bad combination of fixedWidth and missing numeric width or vice versa with height\n\n      if (node && node.ownerDocument && node.ownerDocument.defaultView && node instanceof node.ownerDocument.defaultView.HTMLElement) {\n        var styleWidth = node.style.width;\n        var styleHeight = node.style.height; // If we are re-measuring a cell that has already been measured,\n        // It will have a hard-coded width/height from the previous measurement.\n        // The fact that we are measuring indicates this measurement is probably stale,\n        // So explicitly clear it out (eg set to \"auto\") so we can recalculate.\n        // See issue #593 for more info.\n        // Even if we are measuring initially- if we're inside of a MultiGrid component,\n        // Explicitly clear width/height before measuring to avoid being tainted by another Grid.\n        // eg top/left Grid renders before bottom/right Grid\n        // Since the CellMeasurerCache is shared between them this taints derived cell size values.\n\n        if (!cache.hasFixedWidth()) {\n          node.style.width = 'auto';\n        }\n\n        if (!cache.hasFixedHeight()) {\n          node.style.height = 'auto';\n        }\n\n        var height = Math.ceil(node.offsetHeight);\n        var width = Math.ceil(node.offsetWidth); // Reset after measuring to avoid breaking styles; see #660\n\n        if (styleWidth) {\n          node.style.width = styleWidth;\n        }\n\n        if (styleHeight) {\n          node.style.height = styleHeight;\n        }\n\n        return {\n          height: height,\n          width: width\n        };\n      } else {\n        return {\n          height: 0,\n          width: 0\n        };\n      }\n    }\n  }, {\n    key: \"_maybeMeasureCell\",\n    value: function _maybeMeasureCell() {\n      var _this$props2 = this.props,\n          cache = _this$props2.cache,\n          _this$props2$columnIn = _this$props2.columnIndex,\n          columnIndex = _this$props2$columnIn === void 0 ? 0 : _this$props2$columnIn,\n          parent = _this$props2.parent,\n          _this$props2$rowIndex = _this$props2.rowIndex,\n          rowIndex = _this$props2$rowIndex === void 0 ? this.props.index || 0 : _this$props2$rowIndex;\n\n      if (!cache.has(rowIndex, columnIndex)) {\n        var _this$_getCellMeasure2 = this._getCellMeasurements(),\n            height = _this$_getCellMeasure2.height,\n            width = _this$_getCellMeasure2.width;\n\n        cache.set(rowIndex, columnIndex, width, height); // If size has changed, let Grid know to re-render.\n\n        if (parent && typeof parent.invalidateCellSizeAfterRender === 'function') {\n          parent.invalidateCellSizeAfterRender({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    }\n  }]);\n  return CellMeasurer;\n}(React.PureComponent), (0, _defineProperty2[\"default\"])(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"cache\": function cache() {\n    return (typeof _types.bpfrpt_proptype_CellMeasureCache === \"function\" ? _types.bpfrpt_proptype_CellMeasureCache.isRequired ? _types.bpfrpt_proptype_CellMeasureCache.isRequired : _types.bpfrpt_proptype_CellMeasureCache : _propTypes[\"default\"].shape(_types.bpfrpt_proptype_CellMeasureCache).isRequired).apply(this, arguments);\n  },\n  \"children\": _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].func, _propTypes[\"default\"].node]).isRequired,\n  \"columnIndex\": _propTypes[\"default\"].number,\n  \"index\": _propTypes[\"default\"].number,\n  \"parent\": _propTypes[\"default\"].shape({\n    invalidateCellSizeAfterRender: _propTypes[\"default\"].func,\n    recomputeGridSize: _propTypes[\"default\"].func\n  }).isRequired,\n  \"rowIndex\": _propTypes[\"default\"].number\n}), _temp); // Used for DEV mode warning check\n\nexports[\"default\"] = CellMeasurer;\n(0, _defineProperty2[\"default\"])(CellMeasurer, \"__internalCellMeasurerFlag\", false);\n\nif (process.env.NODE_ENV !== 'production') {\n  CellMeasurer.__internalCellMeasurerFlag = true;\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.DEFAULT_WIDTH = exports.DEFAULT_HEIGHT = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _types = require(\"./types\");\n\nvar DEFAULT_HEIGHT = 30;\nexports.DEFAULT_HEIGHT = DEFAULT_HEIGHT;\nvar DEFAULT_WIDTH = 100; // Enables more intelligent mapping of a given column and row index to an item ID.\n// This prevents a cell cache from being invalidated when its parent collection is modified.\n\nexports.DEFAULT_WIDTH = DEFAULT_WIDTH;\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCache =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCache() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    (0, _classCallCheck2[\"default\"])(this, CellMeasurerCache);\n    (0, _defineProperty2[\"default\"])(this, \"_cellHeightCache\", {});\n    (0, _defineProperty2[\"default\"])(this, \"_cellWidthCache\", {});\n    (0, _defineProperty2[\"default\"])(this, \"_columnWidthCache\", {});\n    (0, _defineProperty2[\"default\"])(this, \"_rowHeightCache\", {});\n    (0, _defineProperty2[\"default\"])(this, \"_defaultHeight\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_defaultWidth\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_minHeight\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_minWidth\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_keyMapper\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_hasFixedHeight\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_hasFixedWidth\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_columnCount\", 0);\n    (0, _defineProperty2[\"default\"])(this, \"_rowCount\", 0);\n    (0, _defineProperty2[\"default\"])(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      var key = _this._keyMapper(0, index);\n\n      return _this._columnWidthCache[key] !== undefined ? _this._columnWidthCache[key] : _this._defaultWidth;\n    });\n    (0, _defineProperty2[\"default\"])(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      var key = _this._keyMapper(index, 0);\n\n      return _this._rowHeightCache[key] !== undefined ? _this._rowHeightCache[key] : _this._defaultHeight;\n    });\n    var defaultHeight = params.defaultHeight,\n        defaultWidth = params.defaultWidth,\n        fixedHeight = params.fixedHeight,\n        fixedWidth = params.fixedWidth,\n        keyMapper = params.keyMapper,\n        minHeight = params.minHeight,\n        minWidth = params.minWidth;\n    this._hasFixedHeight = fixedHeight === true;\n    this._hasFixedWidth = fixedWidth === true;\n    this._minHeight = minHeight || 0;\n    this._minWidth = minWidth || 0;\n    this._keyMapper = keyMapper || defaultKeyMapper;\n    this._defaultHeight = Math.max(this._minHeight, typeof defaultHeight === 'number' ? defaultHeight : DEFAULT_HEIGHT);\n    this._defaultWidth = Math.max(this._minWidth, typeof defaultWidth === 'number' ? defaultWidth : DEFAULT_WIDTH);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (this._hasFixedHeight === false && this._hasFixedWidth === false) {\n        console.warn(\"CellMeasurerCache should only measure a cell's width or height. \" + 'You have configured CellMeasurerCache to measure both. ' + 'This will result in poor performance.');\n      }\n\n      if (this._hasFixedHeight === false && this._defaultHeight === 0) {\n        console.warn('Fixed height CellMeasurerCache should specify a :defaultHeight greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n\n      if (this._hasFixedWidth === false && this._defaultWidth === 0) {\n        console.warn('Fixed width CellMeasurerCache should specify a :defaultWidth greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n    }\n  }\n\n  (0, _createClass2[\"default\"])(CellMeasurerCache, [{\n    key: \"clear\",\n    value: function clear(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      delete this._cellHeightCache[key];\n      delete this._cellWidthCache[key];\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellHeightCache = {};\n      this._cellWidthCache = {};\n      this._columnWidthCache = {};\n      this._rowHeightCache = {};\n      this._rowCount = 0;\n      this._columnCount = 0;\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._hasFixedHeight;\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._hasFixedWidth;\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedHeight) {\n        return this._defaultHeight;\n      } else {\n        var _key = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellHeightCache[_key] !== undefined ? Math.max(this._minHeight, this._cellHeightCache[_key]) : this._defaultHeight;\n      }\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedWidth) {\n        return this._defaultWidth;\n      } else {\n        var _key2 = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellWidthCache[_key2] !== undefined ? Math.max(this._minWidth, this._cellWidthCache[_key2]) : this._defaultWidth;\n      }\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      return this._cellHeightCache[key] !== undefined;\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      if (columnIndex >= this._columnCount) {\n        this._columnCount = columnIndex + 1;\n      }\n\n      if (rowIndex >= this._rowCount) {\n        this._rowCount = rowIndex + 1;\n      } // Size is cached per cell so we don't have to re-measure if cells are re-ordered.\n\n\n      this._cellHeightCache[key] = height;\n      this._cellWidthCache[key] = width;\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"_updateCachedColumnAndRowSizes\",\n    value: function _updateCachedColumnAndRowSizes(rowIndex, columnIndex) {\n      // :columnWidth and :rowHeight are derived based on all cells in a column/row.\n      // Pre-cache these derived values for faster lookup later.\n      // Reads are expected to occur more frequently than writes in this case.\n      // Only update non-fixed dimensions though to avoid doing unnecessary work.\n      if (!this._hasFixedWidth) {\n        var columnWidth = 0;\n\n        for (var i = 0; i < this._rowCount; i++) {\n          columnWidth = Math.max(columnWidth, this.getWidth(i, columnIndex));\n        }\n\n        var columnKey = this._keyMapper(0, columnIndex);\n\n        this._columnWidthCache[columnKey] = columnWidth;\n      }\n\n      if (!this._hasFixedHeight) {\n        var rowHeight = 0;\n\n        for (var _i = 0; _i < this._columnCount; _i++) {\n          rowHeight = Math.max(rowHeight, this.getHeight(rowIndex, _i));\n        }\n\n        var rowKey = this._keyMapper(rowIndex, 0);\n\n        this._rowHeightCache[rowKey] = rowHeight;\n      }\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._defaultWidth;\n    }\n  }]);\n  return CellMeasurerCache;\n}();\n\nexports[\"default\"] = CellMeasurerCache;\n\nfunction defaultKeyMapper(rowIndex, columnIndex) {\n  return \"\".concat(rowIndex, \"-\").concat(columnIndex);\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function get() {\n    return _Grid[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"Grid\", {\n  enumerable: true,\n  get: function get() {\n    return _Grid[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"accessibilityOverscanIndicesGetter\", {\n  enumerable: true,\n  get: function get() {\n    return _accessibilityOverscanIndicesGetter[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"defaultCellRangeRenderer\", {\n  enumerable: true,\n  get: function get() {\n    return _defaultCellRangeRenderer[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"defaultOverscanIndicesGetter\", {\n  enumerable: true,\n  get: function get() {\n    return _defaultOverscanIndicesGetter[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"bpfrpt_proptype_NoContentRenderer\", {\n  enumerable: true,\n  get: function get() {\n    return _types.bpfrpt_proptype_NoContentRenderer;\n  }\n});\nObject.defineProperty(exports, \"bpfrpt_proptype_Alignment\", {\n  enumerable: true,\n  get: function get() {\n    return _types.bpfrpt_proptype_Alignment;\n  }\n});\nObject.defineProperty(exports, \"bpfrpt_proptype_CellPosition\", {\n  enumerable: true,\n  get: function get() {\n    return _types.bpfrpt_proptype_CellPosition;\n  }\n});\nObject.defineProperty(exports, \"bpfrpt_proptype_CellSize\", {\n  enumerable: true,\n  get: function get() {\n    return _types.bpfrpt_proptype_CellSize;\n  }\n});\nObject.defineProperty(exports, \"bpfrpt_proptype_OverscanIndicesGetter\", {\n  enumerable: true,\n  get: function get() {\n    return _types.bpfrpt_proptype_OverscanIndicesGetter;\n  }\n});\nObject.defineProperty(exports, \"bpfrpt_proptype_RenderedSection\", {\n  enumerable: true,\n  get: function get() {\n    return _types.bpfrpt_proptype_RenderedSection;\n  }\n});\nObject.defineProperty(exports, \"bpfrpt_proptype_CellRendererParams\", {\n  enumerable: true,\n  get: function get() {\n    return _types.bpfrpt_proptype_CellRendererParams;\n  }\n});\nObject.defineProperty(exports, \"bpfrpt_proptype_Scroll\", {\n  enumerable: true,\n  get: function get() {\n    return _types.bpfrpt_proptype_Scroll;\n  }\n});\n\nvar _Grid = _interopRequireDefault(require(\"./Grid\"));\n\nvar _accessibilityOverscanIndicesGetter = _interopRequireDefault(require(\"./accessibilityOverscanIndicesGetter\"));\n\nvar _defaultCellRangeRenderer = _interopRequireDefault(require(\"./defaultCellRangeRenderer\"));\n\nvar _defaultOverscanIndicesGetter = _interopRequireDefault(require(\"./defaultOverscanIndicesGetter\"));\n\nvar _types = require(\"./types\");","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.DEFAULT_SCROLLING_RESET_TIME_INTERVAL = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\n\nvar _calculateSizeAndPositionDataAndUpdateScrollOffset = _interopRequireDefault(require(\"./utils/calculateSizeAndPositionDataAndUpdateScrollOffset\"));\n\nvar _ScalingCellSizeAndPositionManager = _interopRequireDefault(require(\"./utils/ScalingCellSizeAndPositionManager\"));\n\nvar _createCallbackMemoizer = _interopRequireDefault(require(\"../utils/createCallbackMemoizer\"));\n\nvar _defaultOverscanIndicesGetter = _interopRequireWildcard(require(\"./defaultOverscanIndicesGetter\"));\n\nvar _updateScrollIndexHelper = _interopRequireDefault(require(\"./utils/updateScrollIndexHelper\"));\n\nvar _defaultCellRangeRenderer = _interopRequireDefault(require(\"./defaultCellRangeRenderer\"));\n\nvar _scrollbarSize = _interopRequireDefault(require(\"dom-helpers/scrollbarSize\"));\n\nvar _reactLifecyclesCompat = require(\"react-lifecycles-compat\");\n\nvar _requestAnimationTimeout = require(\"../utils/requestAnimationTimeout\");\n\nvar _types = require(\"./types\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\nvar DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nexports.DEFAULT_SCROLLING_RESET_TIME_INTERVAL = DEFAULT_SCROLLING_RESET_TIME_INTERVAL;\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n\nvar renderNull = function renderNull() {\n  return null;\n};\n\n/**\n * Renders tabular data with virtualization along the vertical and horizontal axes.\n * Row heights and column widths must be known ahead of time and specified as properties.\n */\nvar Grid = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  (0, _inherits2[\"default\"])(Grid, _React$PureComponent);\n\n  // Invokes onSectionRendered callback only when start/stop row or column indices change\n  function Grid(props) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, Grid);\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(Grid).call(this, props));\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onGridRenderedMemoizer\", (0, _createCallbackMemoizer[\"default\"])());\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onScrollMemoizer\", (0, _createCallbackMemoizer[\"default\"])(false));\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_deferredInvalidateColumnIndex\", null);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_deferredInvalidateRowIndex\", null);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_recomputeScrollLeftFlag\", false);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_recomputeScrollTopFlag\", false);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_horizontalScrollBarSize\", 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_verticalScrollBarSize\", 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_scrollbarPresenceChanged\", false);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_scrollingContainer\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_childrenToDisplay\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_columnStartIndex\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_columnStopIndex\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_rowStartIndex\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_rowStopIndex\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_renderedColumnStartIndex\", 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_renderedColumnStopIndex\", 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_renderedRowStartIndex\", 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_renderedRowStopIndex\", 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_initialScrollTop\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_initialScrollLeft\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_disablePointerEventsTimeoutId\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_styleCache\", {});\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_cellCache\", {});\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_debounceScrollEndedCallback\", function () {\n      _this._disablePointerEventsTimeoutId = null; // isScrolling is used to determine if we reset styleCache\n\n      _this.setState({\n        isScrolling: false,\n        needToResetStyleCache: false\n      });\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_invokeOnGridRenderedHelper\", function () {\n      var onSectionRendered = _this.props.onSectionRendered;\n\n      _this._onGridRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          columnOverscanStartIndex: _this._columnStartIndex,\n          columnOverscanStopIndex: _this._columnStopIndex,\n          columnStartIndex: _this._renderedColumnStartIndex,\n          columnStopIndex: _this._renderedColumnStopIndex,\n          rowOverscanStartIndex: _this._rowStartIndex,\n          rowOverscanStopIndex: _this._rowStopIndex,\n          rowStartIndex: _this._renderedRowStartIndex,\n          rowStopIndex: _this._renderedRowStopIndex\n        }\n      });\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target === _this._scrollingContainer) {\n        _this.handleScrollEvent(event.target);\n      }\n    });\n    var columnSizeAndPositionManager = new _ScalingCellSizeAndPositionManager[\"default\"]({\n      cellCount: props.columnCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.columnWidth)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedColumnSize(props)\n    });\n    var rowSizeAndPositionManager = new _ScalingCellSizeAndPositionManager[\"default\"]({\n      cellCount: props.rowCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.rowHeight)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedRowSize(props)\n    });\n    _this.state = {\n      instanceProps: {\n        columnSizeAndPositionManager: columnSizeAndPositionManager,\n        rowSizeAndPositionManager: rowSizeAndPositionManager,\n        prevColumnWidth: props.columnWidth,\n        prevRowHeight: props.rowHeight,\n        prevColumnCount: props.columnCount,\n        prevRowCount: props.rowCount,\n        prevIsScrolling: props.isScrolling === true,\n        prevScrollToColumn: props.scrollToColumn,\n        prevScrollToRow: props.scrollToRow,\n        scrollbarSize: 0,\n        scrollbarSizeMeasured: false\n      },\n      isScrolling: false,\n      scrollDirectionHorizontal: _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD,\n      scrollDirectionVertical: _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollPositionChangeReason: null,\n      needToResetStyleCache: false\n    };\n\n    if (props.scrollToRow > 0) {\n      _this._initialScrollTop = _this._getCalculatedScrollTop(props, _this.state);\n    }\n\n    if (props.scrollToColumn > 0) {\n      _this._initialScrollLeft = _this._getCalculatedScrollLeft(props, _this.state);\n    }\n\n    return _this;\n  }\n  /**\n   * Gets offsets for a given cell and alignment.\n   */\n\n\n  (0, _createClass2[\"default\"])(Grid, [{\n    key: \"getOffsetForCell\",\n    value: function getOffsetForCell() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$alignment = _ref.alignment,\n          alignment = _ref$alignment === void 0 ? this.props.scrollToAlignment : _ref$alignment,\n          _ref$columnIndex = _ref.columnIndex,\n          columnIndex = _ref$columnIndex === void 0 ? this.props.scrollToColumn : _ref$columnIndex,\n          _ref$rowIndex = _ref.rowIndex,\n          rowIndex = _ref$rowIndex === void 0 ? this.props.scrollToRow : _ref$rowIndex;\n\n      var offsetProps = _objectSpread({}, this.props, {\n        scrollToAlignment: alignment,\n        scrollToColumn: columnIndex,\n        scrollToRow: rowIndex\n      });\n\n      return {\n        scrollLeft: this._getCalculatedScrollLeft(offsetProps),\n        scrollTop: this._getCalculatedScrollTop(offsetProps)\n      };\n    }\n    /**\n     * Gets estimated total rows' height.\n     */\n\n  }, {\n    key: \"getTotalRowsHeight\",\n    value: function getTotalRowsHeight() {\n      return this.state.instanceProps.rowSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * Gets estimated total columns' width.\n     */\n\n  }, {\n    key: \"getTotalColumnsWidth\",\n    value: function getTotalColumnsWidth() {\n      return this.state.instanceProps.columnSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * This method handles a scroll event originating from an external scroll control.\n     * It's an advanced method and should probably not be used unless you're implementing a custom scroll-bar solution.\n     */\n\n  }, {\n    key: \"handleScrollEvent\",\n    value: function handleScrollEvent(_ref2) {\n      var _ref2$scrollLeft = _ref2.scrollLeft,\n          scrollLeftParam = _ref2$scrollLeft === void 0 ? 0 : _ref2$scrollLeft,\n          _ref2$scrollTop = _ref2.scrollTop,\n          scrollTopParam = _ref2$scrollTop === void 0 ? 0 : _ref2$scrollTop;\n\n      // On iOS, we can arrive at negative offsets by swiping past the start.\n      // To prevent flicker here, we make playing in the negative offset zone cause nothing to happen.\n      if (scrollTopParam < 0) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      this._debounceScrollEnded();\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          autoWidth = _this$props.autoWidth,\n          height = _this$props.height,\n          width = _this$props.width;\n      var instanceProps = this.state.instanceProps; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollbarSize = instanceProps.scrollbarSize;\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var scrollLeft = Math.min(Math.max(0, totalColumnsWidth - width + scrollbarSize), scrollLeftParam);\n      var scrollTop = Math.min(Math.max(0, totalRowsHeight - height + scrollbarSize), scrollTopParam); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (this.state.scrollLeft !== scrollLeft || this.state.scrollTop !== scrollTop) {\n        // Track scrolling direction so we can more efficiently overscan rows to reduce empty space around the edges while scrolling.\n        // Don't change direction for an axis unless scroll offset has changed.\n        var scrollDirectionHorizontal = scrollLeft !== this.state.scrollLeft ? scrollLeft > this.state.scrollLeft ? _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD : _defaultOverscanIndicesGetter.SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionHorizontal;\n        var scrollDirectionVertical = scrollTop !== this.state.scrollTop ? scrollTop > this.state.scrollTop ? _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD : _defaultOverscanIndicesGetter.SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionVertical;\n        var newState = {\n          isScrolling: true,\n          scrollDirectionHorizontal: scrollDirectionHorizontal,\n          scrollDirectionVertical: scrollDirectionVertical,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.OBSERVED\n        };\n\n        if (!autoHeight) {\n          newState.scrollTop = scrollTop;\n        }\n\n        if (!autoWidth) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        newState.needToResetStyleCache = false;\n        this.setState(newState);\n      }\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalColumnsWidth: totalColumnsWidth,\n        totalRowsHeight: totalRowsHeight\n      });\n    }\n    /**\n     * Invalidate Grid size and recompute visible cells.\n     * This is a deferred wrapper for recomputeGridSize().\n     * It sets a flag to be evaluated on cDM/cDU to avoid unnecessary renders.\n     * This method is intended for advanced use-cases like CellMeasurer.\n     */\n    // @TODO (bvaughn) Add automated test coverage for this.\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rowIndex = _ref3.rowIndex;\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /**\n     * Pre-measure all columns and rows in a Grid.\n     * Typically cells are only measured as needed and estimated sizes are used for cells that have not yet been measured.\n     * This method ensures that the next call to getTotalSize() returns an exact size (as opposed to just an estimated one).\n     */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      var _this$props2 = this.props,\n          columnCount = _this$props2.columnCount,\n          rowCount = _this$props2.rowCount;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.getSizeAndPositionOfCell(columnCount - 1);\n      instanceProps.rowSizeAndPositionManager.getSizeAndPositionOfCell(rowCount - 1);\n    }\n    /**\n     * Forced recompute of row heights and column widths.\n     * This function should be called if dynamic column or row sizes have changed but nothing else has.\n     * Since Grid only receives :columnCount and :rowCount it has no way of detecting when the underlying data changes.\n     */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref4$columnIndex = _ref4.columnIndex,\n          columnIndex = _ref4$columnIndex === void 0 ? 0 : _ref4$columnIndex,\n          _ref4$rowIndex = _ref4.rowIndex,\n          rowIndex = _ref4$rowIndex === void 0 ? 0 : _ref4$rowIndex;\n\n      var _this$props3 = this.props,\n          scrollToColumn = _this$props3.scrollToColumn,\n          scrollToRow = _this$props3.scrollToRow;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.resetCell(columnIndex);\n      instanceProps.rowSizeAndPositionManager.resetCell(rowIndex); // Cell sizes may be determined by a function property.\n      // In this case the cDU handler can't know if they changed.\n      // Store this flag to let the next cDU pass know it needs to recompute the scroll offset.\n\n      this._recomputeScrollLeftFlag = scrollToColumn >= 0 && (this.state.scrollDirectionHorizontal === _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD ? columnIndex <= scrollToColumn : columnIndex >= scrollToColumn);\n      this._recomputeScrollTopFlag = scrollToRow >= 0 && (this.state.scrollDirectionVertical === _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD ? rowIndex <= scrollToRow : rowIndex >= scrollToRow); // Clear cell cache in case we are scrolling;\n      // Invalid row heights likely mean invalid cached content as well.\n\n      this._styleCache = {};\n      this._cellCache = {};\n      this.forceUpdate();\n    }\n    /**\n     * Ensure column and row are visible.\n     */\n\n  }, {\n    key: \"scrollToCell\",\n    value: function scrollToCell(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n      var columnCount = this.props.columnCount;\n      var props = this.props; // Don't adjust scroll offset for single-column grids (eg List, Table).\n      // This can cause a funky scroll offset because of the vertical scrollbar width.\n\n      if (columnCount > 1 && columnIndex !== undefined) {\n        this._updateScrollLeftForScrollToColumn(_objectSpread({}, props, {\n          scrollToColumn: columnIndex\n        }));\n      }\n\n      if (rowIndex !== undefined) {\n        this._updateScrollTopForScrollToRow(_objectSpread({}, props, {\n          scrollToRow: rowIndex\n        }));\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          getScrollbarSize = _this$props4.getScrollbarSize,\n          height = _this$props4.height,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToColumn = _this$props4.scrollToColumn,\n          scrollTop = _this$props4.scrollTop,\n          scrollToRow = _this$props4.scrollToRow,\n          width = _this$props4.width;\n      var instanceProps = this.state.instanceProps; // Reset initial offsets to be ignored in browser\n\n      this._initialScrollTop = 0;\n      this._initialScrollLeft = 0; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n\n      if (!instanceProps.scrollbarSizeMeasured) {\n        this.setState(function (prevState) {\n          var stateUpdate = _objectSpread({}, prevState, {\n            needToResetStyleCache: false\n          });\n\n          stateUpdate.instanceProps.scrollbarSize = getScrollbarSize();\n          stateUpdate.instanceProps.scrollbarSizeMeasured = true;\n          return stateUpdate;\n        });\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 || typeof scrollTop === 'number' && scrollTop >= 0) {\n        var stateUpdate = Grid._getScrollToPositionStateUpdate({\n          prevState: this.state,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        if (stateUpdate) {\n          stateUpdate.needToResetStyleCache = false;\n          this.setState(stateUpdate);\n        }\n      } // refs don't work in `react-test-renderer`\n\n\n      if (this._scrollingContainer) {\n        // setting the ref's scrollLeft and scrollTop.\n        // Somehow in MultiGrid the main grid doesn't trigger a update on mount.\n        if (this._scrollingContainer.scrollLeft !== this.state.scrollLeft) {\n          this._scrollingContainer.scrollLeft = this.state.scrollLeft;\n        }\n\n        if (this._scrollingContainer.scrollTop !== this.state.scrollTop) {\n          this._scrollingContainer.scrollTop = this.state.scrollTop;\n        }\n      } // Don't update scroll offset if the size is 0; we don't render any cells in this case.\n      // Setting a state may cause us to later thing we've updated the offce when we haven't.\n\n\n      var sizeIsBiggerThanZero = height > 0 && width > 0;\n\n      if (scrollToColumn >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollLeftForScrollToColumn();\n      }\n\n      if (scrollToRow >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollTopForScrollToRow();\n      } // Update onRowsRendered callback\n\n\n      this._invokeOnGridRenderedHelper(); // Initialize onScroll callback\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalColumnsWidth: instanceProps.columnSizeAndPositionManager.getTotalSize(),\n        totalRowsHeight: instanceProps.rowSizeAndPositionManager.getTotalSize()\n      });\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) New scroll-to-cell props have been set\n     */\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      var _this$props5 = this.props,\n          autoHeight = _this$props5.autoHeight,\n          autoWidth = _this$props5.autoWidth,\n          columnCount = _this$props5.columnCount,\n          height = _this$props5.height,\n          rowCount = _this$props5.rowCount,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToColumn = _this$props5.scrollToColumn,\n          scrollToRow = _this$props5.scrollToRow,\n          width = _this$props5.width;\n      var _this$state = this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollPositionChangeReason = _this$state.scrollPositionChangeReason,\n          scrollTop = _this$state.scrollTop,\n          instanceProps = _this$state.instanceProps; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // Handle edge case where column or row count has only just increased over 0.\n      // In this case we may have to restore a previously-specified scroll offset.\n      // For more info see bvaughn/react-virtualized/issues/218\n\n\n      var columnOrRowCountJustIncreasedFromZero = columnCount > 0 && prevProps.columnCount === 0 || rowCount > 0 && prevProps.rowCount === 0; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        // @TRICKY :autoHeight and :autoWidth properties instructs Grid to leave :scrollTop and :scrollLeft management to an external HOC (eg WindowScroller).\n        // In this case we should avoid checking scrollingContainer.scrollTop and scrollingContainer.scrollLeft since it forces layout/flow.\n        if (!autoWidth && scrollLeft >= 0 && (scrollLeft !== this._scrollingContainer.scrollLeft || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (!autoHeight && scrollTop >= 0 && (scrollTop !== this._scrollingContainer.scrollTop || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Special case where the previous size was 0:\n      // In this case we don't show any windowed cells at all.\n      // So we should always recalculate offset afterwards.\n\n\n      var sizeJustIncreasedFromZero = (prevProps.width === 0 || prevProps.height === 0) && height > 0 && width > 0; // Update scroll offsets if the current :scrollToColumn or :scrollToRow values requires it\n      // @TODO Do we also need this check or can the one in componentWillUpdate() suffice?\n\n      if (this._recomputeScrollLeftFlag) {\n        this._recomputeScrollLeftFlag = false;\n\n        this._updateScrollLeftForScrollToColumn(this.props);\n      } else {\n        (0, _updateScrollIndexHelper[\"default\"])({\n          cellSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          previousCellsCount: prevProps.columnCount,\n          previousCellSize: prevProps.columnWidth,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToColumn,\n          previousSize: prevProps.width,\n          scrollOffset: scrollLeft,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToColumn,\n          size: width,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollLeftForScrollToColumn(_this2.props);\n          }\n        });\n      }\n\n      if (this._recomputeScrollTopFlag) {\n        this._recomputeScrollTopFlag = false;\n\n        this._updateScrollTopForScrollToRow(this.props);\n      } else {\n        (0, _updateScrollIndexHelper[\"default\"])({\n          cellSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          previousCellsCount: prevProps.rowCount,\n          previousCellSize: prevProps.rowHeight,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToRow,\n          previousSize: prevProps.height,\n          scrollOffset: scrollTop,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToRow,\n          size: height,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollTopForScrollToRow(_this2.props);\n          }\n        });\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnGridRenderedHelper(); // Changes to :scrollLeft or :scrollTop should also notify :onScroll listeners\n\n\n      if (scrollLeft !== prevState.scrollLeft || scrollTop !== prevState.scrollTop) {\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n\n        this._invokeOnScrollMemoizer({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          totalColumnsWidth: totalColumnsWidth,\n          totalRowsHeight: totalRowsHeight\n        });\n      }\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        (0, _requestAnimationTimeout.cancelAnimationTimeout)(this._disablePointerEventsTimeoutId);\n      }\n    }\n    /**\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoContainerWidth = _this$props6.autoContainerWidth,\n          autoHeight = _this$props6.autoHeight,\n          autoWidth = _this$props6.autoWidth,\n          className = _this$props6.className,\n          containerProps = _this$props6.containerProps,\n          containerRole = _this$props6.containerRole,\n          containerStyle = _this$props6.containerStyle,\n          height = _this$props6.height,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          role = _this$props6.role,\n          style = _this$props6.style,\n          tabIndex = _this$props6.tabIndex,\n          width = _this$props6.width;\n      var _this$state2 = this.state,\n          instanceProps = _this$state2.instanceProps,\n          needToResetStyleCache = _this$state2.needToResetStyleCache;\n\n      var isScrolling = this._isScrolling();\n\n      var gridStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        width: autoWidth ? 'auto' : width,\n        WebkitOverflowScrolling: 'touch',\n        willChange: 'transform'\n      };\n\n      if (needToResetStyleCache) {\n        this._styleCache = {};\n      } // calculate _styleCache here\n      // if state.isScrolling (not from _isScrolling) then reset\n\n\n      if (!this.state.isScrolling) {\n        this._resetStyleCache();\n      } // calculate children to render here\n\n\n      this._calculateChildrenToRender(this.props, this.state);\n\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize(); // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n      var horizontalScrollBarSize = totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n\n      if (horizontalScrollBarSize !== this._horizontalScrollBarSize || verticalScrollBarSize !== this._verticalScrollBarSize) {\n        this._horizontalScrollBarSize = horizontalScrollBarSize;\n        this._verticalScrollBarSize = verticalScrollBarSize;\n        this._scrollbarPresenceChanged = true;\n      } // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n\n      gridStyle.overflowX = totalColumnsWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      gridStyle.overflowY = totalRowsHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      var childrenToDisplay = this._childrenToDisplay;\n      var showNoContentRenderer = childrenToDisplay.length === 0 && height > 0 && width > 0;\n      return React.createElement(\"div\", (0, _extends2[\"default\"])({\n        ref: this._setScrollingContainerRef\n      }, containerProps, {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-readonly\": this.props['aria-readonly'],\n        className: (0, _clsx[\"default\"])('ReactVirtualized__Grid', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({}, gridStyle, {}, style),\n        tabIndex: tabIndex\n      }), childrenToDisplay.length > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Grid__innerScrollContainer\",\n        role: containerRole,\n        style: _objectSpread({\n          width: autoContainerWidth ? 'auto' : totalColumnsWidth,\n          height: totalRowsHeight,\n          maxWidth: totalColumnsWidth,\n          maxHeight: totalRowsHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }, containerStyle)\n      }, childrenToDisplay), showNoContentRenderer && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n  }, {\n    key: \"_calculateChildrenToRender\",\n    value: function _calculateChildrenToRender() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      var cellRenderer = props.cellRenderer,\n          cellRangeRenderer = props.cellRangeRenderer,\n          columnCount = props.columnCount,\n          deferredMeasurementCache = props.deferredMeasurementCache,\n          height = props.height,\n          overscanColumnCount = props.overscanColumnCount,\n          overscanIndicesGetter = props.overscanIndicesGetter,\n          overscanRowCount = props.overscanRowCount,\n          rowCount = props.rowCount,\n          width = props.width,\n          isScrollingOptOut = props.isScrollingOptOut;\n      var scrollDirectionHorizontal = state.scrollDirectionHorizontal,\n          scrollDirectionVertical = state.scrollDirectionVertical,\n          instanceProps = state.instanceProps;\n      var scrollTop = this._initialScrollTop > 0 ? this._initialScrollTop : state.scrollTop;\n      var scrollLeft = this._initialScrollLeft > 0 ? this._initialScrollLeft : state.scrollLeft;\n\n      var isScrolling = this._isScrolling(props, state);\n\n      this._childrenToDisplay = []; // Render only enough columns and rows to cover the visible area of the grid.\n\n      if (height > 0 && width > 0) {\n        var visibleColumnIndices = instanceProps.columnSizeAndPositionManager.getVisibleCellRange({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var visibleRowIndices = instanceProps.rowSizeAndPositionManager.getVisibleCellRange({\n          containerSize: height,\n          offset: scrollTop\n        });\n        var horizontalOffsetAdjustment = instanceProps.columnSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var verticalOffsetAdjustment = instanceProps.rowSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: height,\n          offset: scrollTop\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        this._renderedColumnStartIndex = visibleColumnIndices.start;\n        this._renderedColumnStopIndex = visibleColumnIndices.stop;\n        this._renderedRowStartIndex = visibleRowIndices.start;\n        this._renderedRowStopIndex = visibleRowIndices.stop;\n        var overscanColumnIndices = overscanIndicesGetter({\n          direction: 'horizontal',\n          cellCount: columnCount,\n          overscanCellsCount: overscanColumnCount,\n          scrollDirection: scrollDirectionHorizontal,\n          startIndex: typeof visibleColumnIndices.start === 'number' ? visibleColumnIndices.start : 0,\n          stopIndex: typeof visibleColumnIndices.stop === 'number' ? visibleColumnIndices.stop : -1\n        });\n        var overscanRowIndices = overscanIndicesGetter({\n          direction: 'vertical',\n          cellCount: rowCount,\n          overscanCellsCount: overscanRowCount,\n          scrollDirection: scrollDirectionVertical,\n          startIndex: typeof visibleRowIndices.start === 'number' ? visibleRowIndices.start : 0,\n          stopIndex: typeof visibleRowIndices.stop === 'number' ? visibleRowIndices.stop : -1\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        var columnStartIndex = overscanColumnIndices.overscanStartIndex;\n        var columnStopIndex = overscanColumnIndices.overscanStopIndex;\n        var rowStartIndex = overscanRowIndices.overscanStartIndex;\n        var rowStopIndex = overscanRowIndices.overscanStopIndex; // Advanced use-cases (eg CellMeasurer) require batched measurements to determine accurate sizes.\n\n        if (deferredMeasurementCache) {\n          // If rows have a dynamic height, scan the rows we are about to render.\n          // If any have not yet been measured, then we need to render all columns initially,\n          // Because the height of the row is equal to the tallest cell within that row,\n          // (And so we can't know the height without measuring all column-cells first).\n          if (!deferredMeasurementCache.hasFixedHeight()) {\n            for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n              if (!deferredMeasurementCache.has(rowIndex, 0)) {\n                columnStartIndex = 0;\n                columnStopIndex = columnCount - 1;\n                break;\n              }\n            }\n          } // If columns have a dynamic width, scan the columns we are about to render.\n          // If any have not yet been measured, then we need to render all rows initially,\n          // Because the width of the column is equal to the widest cell within that column,\n          // (And so we can't know the width without measuring all row-cells first).\n\n\n          if (!deferredMeasurementCache.hasFixedWidth()) {\n            for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n              if (!deferredMeasurementCache.has(0, columnIndex)) {\n                rowStartIndex = 0;\n                rowStopIndex = rowCount - 1;\n                break;\n              }\n            }\n          }\n        }\n\n        this._childrenToDisplay = cellRangeRenderer({\n          cellCache: this._cellCache,\n          cellRenderer: cellRenderer,\n          columnSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          columnStartIndex: columnStartIndex,\n          columnStopIndex: columnStopIndex,\n          deferredMeasurementCache: deferredMeasurementCache,\n          horizontalOffsetAdjustment: horizontalOffsetAdjustment,\n          isScrolling: isScrolling,\n          isScrollingOptOut: isScrollingOptOut,\n          parent: this,\n          rowSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          rowStartIndex: rowStartIndex,\n          rowStopIndex: rowStopIndex,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          styleCache: this._styleCache,\n          verticalOffsetAdjustment: verticalOffsetAdjustment,\n          visibleColumnIndices: visibleColumnIndices,\n          visibleRowIndices: visibleRowIndices\n        }); // update the indices\n\n        this._columnStartIndex = columnStartIndex;\n        this._columnStopIndex = columnStopIndex;\n        this._rowStartIndex = rowStartIndex;\n        this._rowStopIndex = rowStopIndex;\n      }\n    }\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Grid.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_debounceScrollEnded\",\n    value: function _debounceScrollEnded() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._disablePointerEventsTimeoutId) {\n        (0, _requestAnimationTimeout.cancelAnimationTimeout)(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = (0, _requestAnimationTimeout.requestAnimationTimeout)(this._debounceScrollEndedCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n\n    /**\n     * Check for batched CellMeasurer size invalidations.\n     * This will occur the first time one or more previously unmeasured cells are rendered.\n     */\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number' && typeof this._deferredInvalidateRowIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n      }\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref6) {\n      var _this3 = this;\n\n      var scrollLeft = _ref6.scrollLeft,\n          scrollTop = _ref6.scrollTop,\n          totalColumnsWidth = _ref6.totalColumnsWidth,\n          totalRowsHeight = _ref6.totalRowsHeight;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref7) {\n          var scrollLeft = _ref7.scrollLeft,\n              scrollTop = _ref7.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalRowsHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalColumnsWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_isScrolling\",\n    value: function _isScrolling() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      // If isScrolling is defined in props, use it to override the value in state\n      // This is a performance optimization for WindowScroller + Grid\n      return Object.hasOwnProperty.call(props, 'isScrolling') ? Boolean(props.isScrolling) : Boolean(state.isScrolling);\n    }\n  }, {\n    key: \"_maybeCallOnScrollbarPresenceChange\",\n    value: function _maybeCallOnScrollbarPresenceChange() {\n      if (this._scrollbarPresenceChanged) {\n        var onScrollbarPresenceChange = this.props.onScrollbarPresenceChange;\n        this._scrollbarPresenceChanged = false;\n        onScrollbarPresenceChange({\n          horizontal: this._horizontalScrollBarSize > 0,\n          size: this.state.instanceProps.scrollbarSize,\n          vertical: this._verticalScrollBarSize > 0\n        });\n      }\n    }\n  }, {\n    key: \"scrollToPosition\",\n\n    /**\n     * Scroll to the specified offset(s).\n     * Useful for animating position changes.\n     */\n    value: function scrollToPosition(_ref8) {\n      var scrollLeft = _ref8.scrollLeft,\n          scrollTop = _ref8.scrollTop;\n\n      var stateUpdate = Grid._getScrollToPositionStateUpdate({\n        prevState: this.state,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollLeft(props, state);\n    }\n  }, {\n    key: \"_updateScrollLeftForScrollToColumn\",\n    value: function _updateScrollLeftForScrollToColumn() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollLeftForScrollToColumnStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollTop(props, state);\n    }\n  }, {\n    key: \"_resetStyleCache\",\n    value: function _resetStyleCache() {\n      var styleCache = this._styleCache;\n      var cellCache = this._cellCache;\n      var isScrollingOptOut = this.props.isScrollingOptOut; // Reset cell and style caches once scrolling stops.\n      // This makes Grid simpler to use (since cells commonly change).\n      // And it keeps the caches from growing too large.\n      // Performance is most sensitive when a user is scrolling.\n      // Don't clear visible cells from cellCache if isScrollingOptOut is specified.\n      // This keeps the cellCache to a resonable size.\n\n      this._cellCache = {};\n      this._styleCache = {}; // Copy over the visible cell styles so avoid unnecessary re-render.\n\n      for (var rowIndex = this._rowStartIndex; rowIndex <= this._rowStopIndex; rowIndex++) {\n        for (var columnIndex = this._columnStartIndex; columnIndex <= this._columnStopIndex; columnIndex++) {\n          var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n          this._styleCache[key] = styleCache[key];\n\n          if (isScrollingOptOut) {\n            this._cellCache[key] = cellCache[key];\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_updateScrollTopForScrollToRow\",\n    value: function _updateScrollTopForScrollToRow() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollTopForScrollToRowStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var newState = {};\n\n      if (nextProps.columnCount === 0 && prevState.scrollLeft !== 0 || nextProps.rowCount === 0 && prevState.scrollTop !== 0) {\n        newState.scrollLeft = 0;\n        newState.scrollTop = 0; // only use scroll{Left,Top} from props if scrollTo{Column,Row} isn't specified\n        // scrollTo{Column,Row} should override scroll{Left,Top}\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft && nextProps.scrollToColumn < 0 || nextProps.scrollTop !== prevState.scrollTop && nextProps.scrollToRow < 0) {\n        Object.assign(newState, Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: nextProps.scrollLeft,\n          scrollTop: nextProps.scrollTop\n        }));\n      }\n\n      var instanceProps = prevState.instanceProps; // Initially we should not clearStyleCache\n\n      newState.needToResetStyleCache = false;\n\n      if (nextProps.columnWidth !== instanceProps.prevColumnWidth || nextProps.rowHeight !== instanceProps.prevRowHeight) {\n        // Reset cache. set it to {} in render\n        newState.needToResetStyleCache = true;\n      }\n\n      instanceProps.columnSizeAndPositionManager.configure({\n        cellCount: nextProps.columnCount,\n        estimatedCellSize: Grid._getEstimatedColumnSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.columnWidth)\n      });\n      instanceProps.rowSizeAndPositionManager.configure({\n        cellCount: nextProps.rowCount,\n        estimatedCellSize: Grid._getEstimatedRowSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.rowHeight)\n      });\n\n      if (instanceProps.prevColumnCount === 0 || instanceProps.prevRowCount === 0) {\n        instanceProps.prevColumnCount = 0;\n        instanceProps.prevRowCount = 0;\n      } // If scrolling is controlled outside this component, clear cache when scrolling stops\n\n\n      if (nextProps.autoHeight && nextProps.isScrolling === false && instanceProps.prevIsScrolling === true) {\n        Object.assign(newState, {\n          isScrolling: false\n        });\n      }\n\n      var maybeStateA;\n      var maybeStateB;\n      (0, _calculateSizeAndPositionDataAndUpdateScrollOffset[\"default\"])({\n        cellCount: instanceProps.prevColumnCount,\n        cellSize: typeof instanceProps.prevColumnWidth === 'number' ? instanceProps.prevColumnWidth : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.columnSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.columnCount,\n        nextCellSize: typeof nextProps.columnWidth === 'number' ? nextProps.columnWidth : null,\n        nextScrollToIndex: nextProps.scrollToColumn,\n        scrollToIndex: instanceProps.prevScrollToColumn,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateA = Grid._getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState);\n        }\n      });\n      (0, _calculateSizeAndPositionDataAndUpdateScrollOffset[\"default\"])({\n        cellCount: instanceProps.prevRowCount,\n        cellSize: typeof instanceProps.prevRowHeight === 'number' ? instanceProps.prevRowHeight : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.rowSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.rowCount,\n        nextCellSize: typeof nextProps.rowHeight === 'number' ? nextProps.rowHeight : null,\n        nextScrollToIndex: nextProps.scrollToRow,\n        scrollToIndex: instanceProps.prevScrollToRow,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateB = Grid._getScrollTopForScrollToRowStateUpdate(nextProps, prevState);\n        }\n      });\n      instanceProps.prevColumnCount = nextProps.columnCount;\n      instanceProps.prevColumnWidth = nextProps.columnWidth;\n      instanceProps.prevIsScrolling = nextProps.isScrolling === true;\n      instanceProps.prevRowCount = nextProps.rowCount;\n      instanceProps.prevRowHeight = nextProps.rowHeight;\n      instanceProps.prevScrollToColumn = nextProps.scrollToColumn;\n      instanceProps.prevScrollToRow = nextProps.scrollToRow; // getting scrollBarSize (moved from componentWillMount)\n\n      instanceProps.scrollbarSize = nextProps.getScrollbarSize();\n\n      if (instanceProps.scrollbarSize === undefined) {\n        instanceProps.scrollbarSizeMeasured = false;\n        instanceProps.scrollbarSize = 0;\n      } else {\n        instanceProps.scrollbarSizeMeasured = true;\n      }\n\n      newState.instanceProps = instanceProps;\n      return _objectSpread({}, newState, {}, maybeStateA, {}, maybeStateB);\n    }\n  }, {\n    key: \"_getEstimatedColumnSize\",\n    value: function _getEstimatedColumnSize(props) {\n      return typeof props.columnWidth === 'number' ? props.columnWidth : props.estimatedColumnSize;\n    }\n  }, {\n    key: \"_getEstimatedRowSize\",\n    value: function _getEstimatedRowSize(props) {\n      return typeof props.rowHeight === 'number' ? props.rowHeight : props.estimatedRowSize;\n    }\n  }, {\n    key: \"_getScrollToPositionStateUpdate\",\n\n    /**\n     * Get the updated state after scrolling to\n     * scrollLeft and scrollTop\n     */\n    value: function _getScrollToPositionStateUpdate(_ref9) {\n      var prevState = _ref9.prevState,\n          scrollLeft = _ref9.scrollLeft,\n          scrollTop = _ref9.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0) {\n        newState.scrollDirectionHorizontal = scrollLeft > prevState.scrollLeft ? _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD : _defaultOverscanIndicesGetter.SCROLL_DIRECTION_BACKWARD;\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (typeof scrollTop === 'number' && scrollTop >= 0) {\n        newState.scrollDirectionVertical = scrollTop > prevState.scrollTop ? _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD : _defaultOverscanIndicesGetter.SCROLL_DIRECTION_BACKWARD;\n        newState.scrollTop = scrollTop;\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft || typeof scrollTop === 'number' && scrollTop >= 0 && scrollTop !== prevState.scrollTop) {\n        return newState;\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_wrapSizeGetter\",\n    value: function _wrapSizeGetter(value) {\n      return typeof value === 'function' ? value : function () {\n        return value;\n      };\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft(nextProps, prevState) {\n      var columnCount = nextProps.columnCount,\n          height = nextProps.height,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToColumn = nextProps.scrollToColumn,\n          width = nextProps.width;\n      var scrollLeft = prevState.scrollLeft,\n          instanceProps = prevState.instanceProps;\n\n      if (columnCount > 0) {\n        var finalColumn = columnCount - 1;\n        var targetIndex = scrollToColumn < 0 ? finalColumn : Math.min(finalColumn, scrollToColumn);\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n        return instanceProps.columnSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: width - scrollBarSize,\n          currentOffset: scrollLeft,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollLeftForScrollToColumnStateUpdate\",\n    value: function _getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState) {\n      var scrollLeft = prevState.scrollLeft;\n\n      var calculatedScrollLeft = Grid._getCalculatedScrollLeft(nextProps, prevState);\n\n      if (typeof calculatedScrollLeft === 'number' && calculatedScrollLeft >= 0 && scrollLeft !== calculatedScrollLeft) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: calculatedScrollLeft,\n          scrollTop: -1\n        });\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop(nextProps, prevState) {\n      var height = nextProps.height,\n          rowCount = nextProps.rowCount,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToRow = nextProps.scrollToRow,\n          width = nextProps.width;\n      var scrollTop = prevState.scrollTop,\n          instanceProps = prevState.instanceProps;\n\n      if (rowCount > 0) {\n        var finalRow = rowCount - 1;\n        var targetIndex = scrollToRow < 0 ? finalRow : Math.min(finalRow, scrollToRow);\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n        return instanceProps.rowSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: height - scrollBarSize,\n          currentOffset: scrollTop,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollTopForScrollToRowStateUpdate\",\n    value: function _getScrollTopForScrollToRowStateUpdate(nextProps, prevState) {\n      var scrollTop = prevState.scrollTop;\n\n      var calculatedScrollTop = Grid._getCalculatedScrollTop(nextProps, prevState);\n\n      if (typeof calculatedScrollTop === 'number' && calculatedScrollTop >= 0 && scrollTop !== calculatedScrollTop) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: -1,\n          scrollTop: calculatedScrollTop\n        });\n      }\n\n      return {};\n    }\n  }]);\n  return Grid;\n}(React.PureComponent), (0, _defineProperty2[\"default\"])(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": _propTypes[\"default\"].string.isRequired,\n  \"aria-readonly\": _propTypes[\"default\"].bool,\n\n  /**\n   * Set the width of the inner scrollable container to 'auto'.\n   * This is useful for single-column Grids to ensure that the column doesn't extend below a vertical scrollbar.\n   */\n  \"autoContainerWidth\": _propTypes[\"default\"].bool.isRequired,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoHeight\": _propTypes[\"default\"].bool.isRequired,\n\n  /**\n   * Removes fixed width from the scrollingContainer so that the total width of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoWidth\": _propTypes[\"default\"].bool.isRequired,\n\n  /** Responsible for rendering a cell given an row and column index.  */\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof _types.bpfrpt_proptype_CellRenderer === \"function\" ? _types.bpfrpt_proptype_CellRenderer.isRequired ? _types.bpfrpt_proptype_CellRenderer.isRequired : _types.bpfrpt_proptype_CellRenderer : _propTypes[\"default\"].shape(_types.bpfrpt_proptype_CellRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a group of cells given their index ranges.  */\n  \"cellRangeRenderer\": function cellRangeRenderer() {\n    return (typeof _types.bpfrpt_proptype_CellRangeRenderer === \"function\" ? _types.bpfrpt_proptype_CellRangeRenderer.isRequired ? _types.bpfrpt_proptype_CellRangeRenderer.isRequired : _types.bpfrpt_proptype_CellRangeRenderer : _propTypes[\"default\"].shape(_types.bpfrpt_proptype_CellRangeRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Optional custom CSS class name to attach to root Grid element.  */\n  \"className\": _propTypes[\"default\"].string,\n\n  /** Number of columns in grid.  */\n  \"columnCount\": _propTypes[\"default\"].number.isRequired,\n\n  /** Either a fixed column width (number) or a function that returns the width of a column given its index.  */\n  \"columnWidth\": function columnWidth() {\n    return (typeof _types.bpfrpt_proptype_CellSize === \"function\" ? _types.bpfrpt_proptype_CellSize.isRequired ? _types.bpfrpt_proptype_CellSize.isRequired : _types.bpfrpt_proptype_CellSize : _propTypes[\"default\"].shape(_types.bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Unfiltered props for the Grid container. */\n  \"containerProps\": _propTypes[\"default\"].object,\n\n  /** ARIA role for the cell-container.  */\n  \"containerRole\": _propTypes[\"default\"].string.isRequired,\n\n  /** Optional inline style applied to inner cell-container */\n  \"containerStyle\": _propTypes[\"default\"].object.isRequired,\n\n  /**\n   * If CellMeasurer is used to measure this Grid's children, this should be a pointer to its CellMeasurerCache.\n   * A shared CellMeasurerCache reference enables Grid and CellMeasurer to share measurement data.\n   */\n  \"deferredMeasurementCache\": _propTypes[\"default\"].object,\n\n  /**\n   * Used to estimate the total width of a Grid before all of its columns have actually been measured.\n   * The estimated total width is adjusted as columns are rendered.\n   */\n  \"estimatedColumnSize\": _propTypes[\"default\"].number.isRequired,\n\n  /**\n   * Used to estimate the total height of a Grid before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": _propTypes[\"default\"].number.isRequired,\n\n  /** Exposed for testing purposes only.  */\n  \"getScrollbarSize\": _propTypes[\"default\"].func.isRequired,\n\n  /** Height of Grid; this property determines the number of visible (vs virtualized) rows.  */\n  \"height\": _propTypes[\"default\"].number.isRequired,\n\n  /** Optional custom id to attach to root Grid element.  */\n  \"id\": _propTypes[\"default\"].string,\n\n  /**\n   * Override internal is-scrolling state tracking.\n   * This property is primarily intended for use with the WindowScroller component.\n   */\n  \"isScrolling\": _propTypes[\"default\"].bool,\n\n  /**\n   * Opt-out of isScrolling param passed to cellRangeRenderer.\n   * To avoid the extra render when scroll stops.\n   */\n  \"isScrollingOptOut\": _propTypes[\"default\"].bool.isRequired,\n\n  /** Optional renderer to be used in place of rows when either :rowCount or :columnCount is 0.  */\n  \"noContentRenderer\": function noContentRenderer() {\n    return (typeof _types.bpfrpt_proptype_NoContentRenderer === \"function\" ? _types.bpfrpt_proptype_NoContentRenderer.isRequired ? _types.bpfrpt_proptype_NoContentRenderer.isRequired : _types.bpfrpt_proptype_NoContentRenderer : _propTypes[\"default\"].shape(_types.bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": _propTypes[\"default\"].func.isRequired,\n\n  /**\n   * Called whenever a horizontal or vertical scrollbar is added or removed.\n   * This prop is not intended for end-user use;\n   * It is used by MultiGrid to support fixed-row/fixed-column scroll syncing.\n   */\n  \"onScrollbarPresenceChange\": _propTypes[\"default\"].func.isRequired,\n\n  /** Callback invoked with information about the section of the Grid that was just rendered.  */\n  \"onSectionRendered\": _propTypes[\"default\"].func.isRequired,\n\n  /**\n   * Number of columns to render before/after the visible section of the grid.\n   * These columns can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanColumnCount\": _propTypes[\"default\"].number.isRequired,\n\n  /**\n   * Calculates the number of cells to overscan before and after a specified range.\n   * This function ensures that overscanning doesn't exceed the available cells.\n   */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof _types.bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? _types.bpfrpt_proptype_OverscanIndicesGetter.isRequired ? _types.bpfrpt_proptype_OverscanIndicesGetter.isRequired : _types.bpfrpt_proptype_OverscanIndicesGetter : _propTypes[\"default\"].shape(_types.bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible section of the grid.\n   * These rows can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanRowCount\": _propTypes[\"default\"].number.isRequired,\n\n  /** ARIA role for the grid element.  */\n  \"role\": _propTypes[\"default\"].string.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * Should implement the following interface: ({ index: number }): number\n   */\n  \"rowHeight\": function rowHeight() {\n    return (typeof _types.bpfrpt_proptype_CellSize === \"function\" ? _types.bpfrpt_proptype_CellSize.isRequired ? _types.bpfrpt_proptype_CellSize.isRequired : _types.bpfrpt_proptype_CellSize : _propTypes[\"default\"].shape(_types.bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in grid.  */\n  \"rowCount\": _propTypes[\"default\"].number.isRequired,\n\n  /** Wait this amount of time after the last scroll event before resetting Grid `pointer-events`. */\n  \"scrollingResetTimeInterval\": _propTypes[\"default\"].number.isRequired,\n\n  /** Horizontal offset. */\n  \"scrollLeft\": _propTypes[\"default\"].number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof _types.bpfrpt_proptype_Alignment === \"function\" ? _types.bpfrpt_proptype_Alignment.isRequired ? _types.bpfrpt_proptype_Alignment.isRequired : _types.bpfrpt_proptype_Alignment : _propTypes[\"default\"].shape(_types.bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Column index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToColumn\": _propTypes[\"default\"].number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": _propTypes[\"default\"].number,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToRow\": _propTypes[\"default\"].number.isRequired,\n\n  /** Optional inline style */\n  \"style\": _propTypes[\"default\"].object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": _propTypes[\"default\"].number,\n\n  /** Width of Grid; this property determines the number of visible (vs virtualized) columns.  */\n  \"width\": _propTypes[\"default\"].number.isRequired\n}), _temp);\n(0, _defineProperty2[\"default\"])(Grid, \"defaultProps\", {\n  'aria-label': 'grid',\n  'aria-readonly': true,\n  autoContainerWidth: false,\n  autoHeight: false,\n  autoWidth: false,\n  cellRangeRenderer: _defaultCellRangeRenderer[\"default\"],\n  containerRole: 'rowgroup',\n  containerStyle: {},\n  estimatedColumnSize: 100,\n  estimatedRowSize: 30,\n  getScrollbarSize: _scrollbarSize[\"default\"],\n  noContentRenderer: renderNull,\n  onScroll: function onScroll() {},\n  onScrollbarPresenceChange: function onScrollbarPresenceChange() {},\n  onSectionRendered: function onSectionRendered() {},\n  overscanColumnCount: 0,\n  overscanIndicesGetter: _defaultOverscanIndicesGetter[\"default\"],\n  overscanRowCount: 10,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  scrollToAlignment: 'auto',\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  tabIndex: 0,\n  isScrollingOptOut: false\n});\n(0, _reactLifecyclesCompat.polyfill)(Grid);\nvar _default = Grid;\nexports[\"default\"] = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = calculateSizeAndPositionDataAndUpdateScrollOffset;\n\n/**\n * Helper method that determines when to recalculate row or column metadata.\n */\nfunction calculateSizeAndPositionDataAndUpdateScrollOffset(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSize = _ref.cellSize,\n      computeMetadataCallback = _ref.computeMetadataCallback,\n      computeMetadataCallbackProps = _ref.computeMetadataCallbackProps,\n      nextCellsCount = _ref.nextCellsCount,\n      nextCellSize = _ref.nextCellSize,\n      nextScrollToIndex = _ref.nextScrollToIndex,\n      scrollToIndex = _ref.scrollToIndex,\n      updateScrollOffsetForScrollToIndex = _ref.updateScrollOffsetForScrollToIndex;\n\n  // Don't compare cell sizes if they are functions because inline functions would cause infinite loops.\n  // In that event users should use the manual recompute methods to inform of changes.\n  if (cellCount !== nextCellsCount || (typeof cellSize === 'number' || typeof nextCellSize === 'number') && cellSize !== nextCellSize) {\n    computeMetadataCallback(computeMetadataCallbackProps); // Updated cell metadata may have hidden the previous scrolled-to item.\n    // In this case we should also update the scrollTop to ensure it stays visible.\n\n    if (scrollToIndex >= 0 && scrollToIndex === nextScrollToIndex) {\n      updateScrollOffsetForScrollToIndex();\n    }\n  }\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _types = require(\"../types\");\n\n/**\n * Just-in-time calculates and caches size and position information for a collection of cells.\n */\nvar CellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  // Cache of size and position data for cells, mapped by cell index.\n  // Note that invalid values may exist in this map so only rely on cells up to this._lastMeasuredIndex\n  // Measurements for cells up to this index can be trusted; cells afterward should be estimated.\n  // Used in deferred mode to track which cells have been queued for measurement.\n  function CellSizeAndPositionManager(_ref) {\n    var cellCount = _ref.cellCount,\n        cellSizeGetter = _ref.cellSizeGetter,\n        estimatedCellSize = _ref.estimatedCellSize;\n    (0, _classCallCheck2[\"default\"])(this, CellSizeAndPositionManager);\n    (0, _defineProperty2[\"default\"])(this, \"_cellSizeAndPositionData\", {});\n    (0, _defineProperty2[\"default\"])(this, \"_lastMeasuredIndex\", -1);\n    (0, _defineProperty2[\"default\"])(this, \"_lastBatchedIndex\", -1);\n    (0, _defineProperty2[\"default\"])(this, \"_cellCount\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_cellSizeGetter\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_estimatedCellSize\", void 0);\n    this._cellSizeGetter = cellSizeGetter;\n    this._cellCount = cellCount;\n    this._estimatedCellSize = estimatedCellSize;\n  }\n\n  (0, _createClass2[\"default\"])(CellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return false;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(_ref2) {\n      var cellCount = _ref2.cellCount,\n          estimatedCellSize = _ref2.estimatedCellSize,\n          cellSizeGetter = _ref2.cellSizeGetter;\n      this._cellCount = cellCount;\n      this._estimatedCellSize = estimatedCellSize;\n      this._cellSizeGetter = cellSizeGetter;\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellCount;\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._estimatedCellSize;\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._lastMeasuredIndex;\n    }\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment() {\n      return 0;\n    }\n    /**\n     * This method returns the size and position for the cell at the specified index.\n     * It just-in-time calculates (or used cached values) for cells leading up to the index.\n     */\n\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      if (index < 0 || index >= this._cellCount) {\n        throw Error(\"Requested index \".concat(index, \" is outside of range 0..\").concat(this._cellCount));\n      }\n\n      if (index > this._lastMeasuredIndex) {\n        var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n        var offset = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n\n        for (var i = this._lastMeasuredIndex + 1; i <= index; i++) {\n          var size = this._cellSizeGetter({\n            index: i\n          }); // undefined or NaN probably means a logic error in the size getter.\n          // null means we're using CellMeasurer and haven't yet measured a given index.\n\n\n          if (size === undefined || isNaN(size)) {\n            throw Error(\"Invalid size returned for cell \".concat(i, \" of value \").concat(size));\n          } else if (size === null) {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: 0\n            };\n            this._lastBatchedIndex = index;\n          } else {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: size\n            };\n            offset += size;\n            this._lastMeasuredIndex = index;\n          }\n        }\n      }\n\n      return this._cellSizeAndPositionData[index];\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._lastMeasuredIndex >= 0 ? this._cellSizeAndPositionData[this._lastMeasuredIndex] : {\n        offset: 0,\n        size: 0\n      };\n    }\n    /**\n     * Total size of all cells being measured.\n     * This value will be completely estimated initially.\n     * As cells are measured, the estimate will be updated.\n     */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var totalSizeOfMeasuredCells = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n      var numUnmeasuredCells = this._cellCount - this._lastMeasuredIndex - 1;\n      var totalSizeOfUnmeasuredCells = numUnmeasuredCells * this._estimatedCellSize;\n      return totalSizeOfMeasuredCells + totalSizeOfUnmeasuredCells;\n    }\n    /**\n     * Determines a new offset that ensures a certain cell is visible, given the current offset.\n     * If the cell is already visible then the current offset will be returned.\n     * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n     *\n     * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n     * @param containerSize Size (width or height) of the container viewport\n     * @param currentOffset Container's current (x or y) offset\n     * @param totalSize Total size (width or height) of all cells\n     * @return Offset to use to ensure the specified cell is visible\n     */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n\n      if (containerSize <= 0) {\n        return 0;\n      }\n\n      var datum = this.getSizeAndPositionOfCell(targetIndex);\n      var maxOffset = datum.offset;\n      var minOffset = maxOffset - containerSize + datum.size;\n      var idealOffset;\n\n      switch (align) {\n        case 'start':\n          idealOffset = maxOffset;\n          break;\n\n        case 'end':\n          idealOffset = minOffset;\n          break;\n\n        case 'center':\n          idealOffset = maxOffset - (containerSize - datum.size) / 2;\n          break;\n\n        default:\n          idealOffset = Math.max(minOffset, Math.min(maxOffset, currentOffset));\n          break;\n      }\n\n      var totalSize = this.getTotalSize();\n      return Math.max(0, Math.min(totalSize - containerSize, idealOffset));\n    }\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(params) {\n      var containerSize = params.containerSize,\n          offset = params.offset;\n      var totalSize = this.getTotalSize();\n\n      if (totalSize === 0) {\n        return {};\n      }\n\n      var maxOffset = offset + containerSize;\n\n      var start = this._findNearestCell(offset);\n\n      var datum = this.getSizeAndPositionOfCell(start);\n      offset = datum.offset + datum.size;\n      var stop = start;\n\n      while (offset < maxOffset && stop < this._cellCount - 1) {\n        stop++;\n        offset += this.getSizeAndPositionOfCell(stop).size;\n      }\n\n      return {\n        start: start,\n        stop: stop\n      };\n    }\n    /**\n     * Clear all cached values for cells after the specified index.\n     * This method should be called for any cell that has changed its size.\n     * It will not immediately perform any calculations; they'll be performed the next time getSizeAndPositionOfCell() is called.\n     */\n\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._lastMeasuredIndex = Math.min(this._lastMeasuredIndex, index - 1);\n    }\n  }, {\n    key: \"_binarySearch\",\n    value: function _binarySearch(high, low, offset) {\n      while (low <= high) {\n        var middle = low + Math.floor((high - low) / 2);\n        var currentOffset = this.getSizeAndPositionOfCell(middle).offset;\n\n        if (currentOffset === offset) {\n          return middle;\n        } else if (currentOffset < offset) {\n          low = middle + 1;\n        } else if (currentOffset > offset) {\n          high = middle - 1;\n        }\n      }\n\n      if (low > 0) {\n        return low - 1;\n      } else {\n        return 0;\n      }\n    }\n  }, {\n    key: \"_exponentialSearch\",\n    value: function _exponentialSearch(index, offset) {\n      var interval = 1;\n\n      while (index < this._cellCount && this.getSizeAndPositionOfCell(index).offset < offset) {\n        index += interval;\n        interval *= 2;\n      }\n\n      return this._binarySearch(Math.min(index, this._cellCount - 1), Math.floor(index / 2), offset);\n    }\n    /**\n     * Searches for the cell (index) nearest the specified offset.\n     *\n     * If no exact match is found the next lowest cell index will be returned.\n     * This allows partially visible cells (with offsets just before/above the fold) to be visible.\n     */\n\n  }, {\n    key: \"_findNearestCell\",\n    value: function _findNearestCell(offset) {\n      if (isNaN(offset)) {\n        throw Error(\"Invalid offset \".concat(offset, \" specified\"));\n      } // Our search algorithms find the nearest match at or below the specified offset.\n      // So make sure the offset is at least 0 or no match will be found.\n\n\n      offset = Math.max(0, offset);\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var lastMeasuredIndex = Math.max(0, this._lastMeasuredIndex);\n\n      if (lastMeasuredCellSizeAndPosition.offset >= offset) {\n        // If we've already measured cells within this range just use a binary search as it's faster.\n        return this._binarySearch(lastMeasuredIndex, 0, offset);\n      } else {\n        // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n        // The exponential search avoids pre-computing sizes for the full set of cells as a binary search would.\n        // The overall complexity for this approach is O(log n).\n        return this._exponentialSearch(lastMeasuredIndex, offset);\n      }\n    }\n  }]);\n  return CellSizeAndPositionManager;\n}();\n\nexports[\"default\"] = CellSizeAndPositionManager;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getMaxElementSize = void 0;\nvar DEFAULT_MAX_ELEMENT_SIZE = 1500000;\nvar CHROME_MAX_ELEMENT_SIZE = 1.67771e7;\n\nvar isBrowser = function isBrowser() {\n  return typeof window !== 'undefined';\n};\n\nvar isChrome = function isChrome() {\n  return !!window.chrome;\n};\n\nvar getMaxElementSize = function getMaxElementSize() {\n  if (isBrowser()) {\n    if (isChrome()) {\n      return CHROME_MAX_ELEMENT_SIZE;\n    }\n  }\n\n  return DEFAULT_MAX_ELEMENT_SIZE;\n};\n\nexports.getMaxElementSize = getMaxElementSize;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = createCallbackMemoizer;\n\n/**\n * Helper utility that updates the specified callback whenever any of the specified indices have changed.\n */\nfunction createCallbackMemoizer() {\n  var requireAllKeys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  var cachedIndices = {};\n  return function (_ref) {\n    var callback = _ref.callback,\n        indices = _ref.indices;\n    var keys = Object.keys(indices);\n    var allInitialized = !requireAllKeys || keys.every(function (key) {\n      var value = indices[key];\n      return Array.isArray(value) ? value.length > 0 : value >= 0;\n    });\n    var indexChanged = keys.length !== Object.keys(cachedIndices).length || keys.some(function (key) {\n      var cachedValue = cachedIndices[key];\n      var value = indices[key];\n      return Array.isArray(value) ? cachedValue.join(',') !== value.join(',') : cachedValue !== value;\n    });\n    cachedIndices = indices;\n\n    if (allInitialized && indexChanged) {\n      callback(indices);\n    }\n  };\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = updateScrollIndexHelper;\n\nvar _ScalingCellSizeAndPositionManager = _interopRequireDefault(require(\"./ScalingCellSizeAndPositionManager.js\"));\n\nvar _types = require(\"../types\");\n\nfunction updateScrollIndexHelper(_ref) {\n  var cellSize = _ref.cellSize,\n      cellSizeAndPositionManager = _ref.cellSizeAndPositionManager,\n      previousCellsCount = _ref.previousCellsCount,\n      previousCellSize = _ref.previousCellSize,\n      previousScrollToAlignment = _ref.previousScrollToAlignment,\n      previousScrollToIndex = _ref.previousScrollToIndex,\n      previousSize = _ref.previousSize,\n      scrollOffset = _ref.scrollOffset,\n      scrollToAlignment = _ref.scrollToAlignment,\n      scrollToIndex = _ref.scrollToIndex,\n      size = _ref.size,\n      sizeJustIncreasedFromZero = _ref.sizeJustIncreasedFromZero,\n      updateScrollIndexCallback = _ref.updateScrollIndexCallback;\n  var cellCount = cellSizeAndPositionManager.getCellCount();\n  var hasScrollToIndex = scrollToIndex >= 0 && scrollToIndex < cellCount;\n  var sizeHasChanged = size !== previousSize || sizeJustIncreasedFromZero || !previousCellSize || typeof cellSize === 'number' && cellSize !== previousCellSize; // If we have a new scroll target OR if height/row-height has changed,\n  // We should ensure that the scroll target is visible.\n\n  if (hasScrollToIndex && (sizeHasChanged || scrollToAlignment !== previousScrollToAlignment || scrollToIndex !== previousScrollToIndex)) {\n    updateScrollIndexCallback(scrollToIndex); // If we don't have a selected item but list size or number of children have decreased,\n    // Make sure we aren't scrolled too far past the current content.\n  } else if (!hasScrollToIndex && cellCount > 0 && (size < previousSize || cellCount < previousCellsCount)) {\n    // We need to ensure that the current scroll offset is still within the collection's range.\n    // To do this, we don't need to measure everything; CellMeasurer would perform poorly.\n    // Just check to make sure we're still okay.\n    // Only adjust the scroll position if we've scrolled below the last set of rows.\n    if (scrollOffset > cellSizeAndPositionManager.getTotalSize() - size) {\n      updateScrollIndexCallback(cellCount - 1);\n    }\n  }\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bpfrpt_proptype_AnimationTimeoutId = exports.requestAnimationTimeout = exports.cancelAnimationTimeout = void 0;\n\nvar _animationFrame = require(\"./animationFrame\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar bpfrpt_proptype_AnimationTimeoutId = process.env.NODE_ENV === 'production' ? null : {\n  \"id\": _propTypes[\"default\"].number.isRequired\n};\nexports.bpfrpt_proptype_AnimationTimeoutId = bpfrpt_proptype_AnimationTimeoutId;\n\nvar cancelAnimationTimeout = function cancelAnimationTimeout(frame) {\n  return (0, _animationFrame.caf)(frame.id);\n};\n/**\n * Recursively calls requestAnimationFrame until a specified delay has been met or exceeded.\n * When the delay time has been reached the function you're timing out will be called.\n *\n * Credit: Joe Lambert (https://gist.github.com/joelambert/1002116#file-requesttimeout-js)\n */\n\n\nexports.cancelAnimationTimeout = cancelAnimationTimeout;\n\nvar requestAnimationTimeout = function requestAnimationTimeout(callback, delay) {\n  var start; // wait for end of processing current event handler, because event handler may be long\n\n  Promise.resolve().then(function () {\n    start = Date.now();\n  });\n\n  var timeout = function timeout() {\n    if (Date.now() - start >= delay) {\n      callback.call();\n    } else {\n      frame.id = (0, _animationFrame.raf)(timeout);\n    }\n  };\n\n  var frame = {\n    id: (0, _animationFrame.raf)(timeout)\n  };\n  return frame;\n};\n\nexports.requestAnimationTimeout = requestAnimationTimeout;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.caf = exports.raf = void 0;\n// Properly handle server-side rendering.\nvar win;\n\nif (typeof window !== 'undefined') {\n  win = window;\n} else if (typeof self !== 'undefined') {\n  win = self;\n} else {\n  win = {};\n} // requestAnimationFrame() shim by Paul Irish\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\nvar request = win.requestAnimationFrame || win.webkitRequestAnimationFrame || win.mozRequestAnimationFrame || win.oRequestAnimationFrame || win.msRequestAnimationFrame || function (callback) {\n  return win.setTimeout(callback, 1000 / 60);\n};\n\nvar cancel = win.cancelAnimationFrame || win.webkitCancelAnimationFrame || win.mozCancelAnimationFrame || win.oCancelAnimationFrame || win.msCancelAnimationFrame || function (id) {\n  win.clearTimeout(id);\n};\n\nvar raf = request;\nexports.raf = raf;\nvar caf = cancel;\nexports.caf = caf;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = defaultOverscanIndicesGetter;\nexports.SCROLL_DIRECTION_VERTICAL = exports.SCROLL_DIRECTION_HORIZONTAL = exports.SCROLL_DIRECTION_FORWARD = exports.SCROLL_DIRECTION_BACKWARD = void 0;\n\nvar _types = require(\"./types\");\n\nvar SCROLL_DIRECTION_BACKWARD = -1;\nexports.SCROLL_DIRECTION_BACKWARD = SCROLL_DIRECTION_BACKWARD;\nvar SCROLL_DIRECTION_FORWARD = 1;\nexports.SCROLL_DIRECTION_FORWARD = SCROLL_DIRECTION_FORWARD;\nvar SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexports.SCROLL_DIRECTION_HORIZONTAL = SCROLL_DIRECTION_HORIZONTAL;\nvar SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexports.SCROLL_DIRECTION_VERTICAL = SCROLL_DIRECTION_VERTICAL;\n\nfunction defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n  // Make sure we render at least 1 cell extra before and after (except near boundaries)\n  // This is necessary in order to support keyboard navigation (TAB/SHIFT+TAB) in some cases\n  // For more info see issues #625\n  overscanCellsCount = Math.max(1, overscanCellsCount);\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - 1),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + 1)\n    };\n  }\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calcColumnWidth = calcColumnWidth;\nfunction calcColumnWidth(index, columns, tableWidth) {\n  var column = columns[index];\n\n  var width = getDeterministicColumnWidth(column, tableWidth);\n\n  if (width) {\n    return width;\n  }\n\n  var totalAllocatedWidth = columns.reduce(function (result, c) {\n    return result + (getDeterministicColumnWidth(c, tableWidth) || 0);\n  }, 0);\n\n  // Evenly distribute remaining width amoungst columns (accounting for minWidths)\n  var variableWidthColumns = columns.filter(function (c) {\n    return typeof c.width !== 'number' && typeof c.width !== 'string';\n  });\n  var initialDistributedWidthPerColumn = (tableWidth - totalAllocatedWidth) / variableWidthColumns.length;\n  var activeMinWidthColumns = variableWidthColumns.filter(function (c) {\n    return c.minWidth > initialDistributedWidthPerColumn ? c.minWidth : 0;\n  });\n  var allocatedMinWidth = activeMinWidthColumns.reduce(function (result, c) {\n    return result + c.minWidth;\n  }, 0);\n  var remainingWidth = tableWidth - totalAllocatedWidth - allocatedMinWidth;\n\n  return Math.max(column.minWidth || 0, remainingWidth / (variableWidthColumns.length - activeMinWidthColumns.length));\n}\n\nfunction getDeterministicColumnWidth(column, tableWidth) {\n  if (typeof column.width === 'number') {\n    // Fixed width\n    return column.width;\n  } else if (typeof column.width === 'string') {\n    // Percentage width\n    var percentageBasedWidth = percentToFixedWidth(column.width, tableWidth);\n    return Math.max(percentageBasedWidth, column.minWidth || 0);\n  } else {\n    // Variable width\n    return null;\n  }\n}\n\nfunction percentToFixedWidth(percentAsString, tableWidth) {\n  return parseFloat(percentAsString) / 100 * tableWidth;\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf3 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _detectElementResize = _interopRequireDefault(require(\"../vendor/detectElementResize\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar AutoSizer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inherits2[\"default\"])(AutoSizer, _React$Component);\n\n  function AutoSizer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, AutoSizer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3[\"default\"])(AutoSizer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"state\", {\n      height: _this.props.defaultHeight || 0,\n      width: _this.props.defaultWidth || 0\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_parentNode\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_autoSizer\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_window\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_detectElementResize\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onResize\", function () {\n      var _this$props = _this.props,\n          disableHeight = _this$props.disableHeight,\n          disableWidth = _this$props.disableWidth,\n          onResize = _this$props.onResize;\n\n      if (_this._parentNode) {\n        // Guard against AutoSizer component being removed from the DOM immediately after being added.\n        // This can result in invalid style values which can result in NaN values if we don't handle them.\n        // See issue #150 for more context.\n        var height = _this._parentNode.offsetHeight || 0;\n        var width = _this._parentNode.offsetWidth || 0;\n        var win = _this._window || window;\n        var style = win.getComputedStyle(_this._parentNode) || {};\n        var paddingLeft = parseInt(style.paddingLeft, 10) || 0;\n        var paddingRight = parseInt(style.paddingRight, 10) || 0;\n        var paddingTop = parseInt(style.paddingTop, 10) || 0;\n        var paddingBottom = parseInt(style.paddingBottom, 10) || 0;\n        var newHeight = height - paddingTop - paddingBottom;\n        var newWidth = width - paddingLeft - paddingRight;\n\n        if (!disableHeight && _this.state.height !== newHeight || !disableWidth && _this.state.width !== newWidth) {\n          _this.setState({\n            height: height - paddingTop - paddingBottom,\n            width: width - paddingLeft - paddingRight\n          });\n\n          onResize({\n            height: height,\n            width: width\n          });\n        }\n      }\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_setRef\", function (autoSizer) {\n      _this._autoSizer = autoSizer;\n    });\n    return _this;\n  }\n\n  (0, _createClass2[\"default\"])(AutoSizer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var nonce = this.props.nonce;\n\n      if (this._autoSizer && this._autoSizer.parentNode && this._autoSizer.parentNode.ownerDocument && this._autoSizer.parentNode.ownerDocument.defaultView && this._autoSizer.parentNode instanceof this._autoSizer.parentNode.ownerDocument.defaultView.HTMLElement) {\n        // Delay access of parentNode until mount.\n        // This handles edge-cases where the component has already been unmounted before its ref has been set,\n        // As well as libraries like react-lite which have a slightly different lifecycle.\n        this._parentNode = this._autoSizer.parentNode;\n        this._window = this._autoSizer.parentNode.ownerDocument.defaultView; // Defer requiring resize handler in order to support server-side rendering.\n        // See issue #41\n\n        this._detectElementResize = (0, _detectElementResize[\"default\"])(nonce, this._window);\n\n        this._detectElementResize.addResizeListener(this._parentNode, this._onResize);\n\n        this._onResize();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._detectElementResize && this._parentNode) {\n        this._detectElementResize.removeResizeListener(this._parentNode, this._onResize);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          className = _this$props2.className,\n          disableHeight = _this$props2.disableHeight,\n          disableWidth = _this$props2.disableWidth,\n          style = _this$props2.style;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width; // Outer div should not force width/height since that may prevent containers from shrinking.\n      // Inner component should overflow and use calculated width/height.\n      // See issue #68 for more information.\n\n      var outerStyle = {\n        overflow: 'visible'\n      };\n      var childParams = {};\n\n      if (!disableHeight) {\n        outerStyle.height = 0;\n        childParams.height = height;\n      }\n\n      if (!disableWidth) {\n        outerStyle.width = 0;\n        childParams.width = width;\n      }\n      /**\n       * TODO: Avoid rendering children before the initial measurements have been collected.\n       * At best this would just be wasting cycles.\n       * Add this check into version 10 though as it could break too many ref callbacks in version 9.\n       * Note that if default width/height props were provided this would still work with SSR.\n      if (\n        height !== 0 &&\n        width !== 0\n      ) {\n        child = children({ height, width })\n      }\n      */\n\n\n      return React.createElement(\"div\", {\n        className: className,\n        ref: this._setRef,\n        style: _objectSpread({}, outerStyle, {}, style)\n      }, children(childParams));\n    }\n  }]);\n  return AutoSizer;\n}(React.Component), (0, _defineProperty2[\"default\"])(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /** Function responsible for rendering children.*/\n  \"children\": _propTypes[\"default\"].func.isRequired,\n\n  /** Optional custom CSS class name to attach to root AutoSizer element.  */\n  \"className\": _propTypes[\"default\"].string,\n\n  /** Default height to use for initial render; useful for SSR */\n  \"defaultHeight\": _propTypes[\"default\"].number,\n\n  /** Default width to use for initial render; useful for SSR */\n  \"defaultWidth\": _propTypes[\"default\"].number,\n\n  /** Disable dynamic :height property */\n  \"disableHeight\": _propTypes[\"default\"].bool.isRequired,\n\n  /** Disable dynamic :width property */\n  \"disableWidth\": _propTypes[\"default\"].bool.isRequired,\n\n  /** Nonce of the inlined stylesheet for Content Security Policy */\n  \"nonce\": _propTypes[\"default\"].string,\n\n  /** Callback to be invoked on-resize */\n  \"onResize\": _propTypes[\"default\"].func.isRequired,\n\n  /** Optional inline style */\n  \"style\": _propTypes[\"default\"].object\n}), _temp);\nexports[\"default\"] = AutoSizer;\n(0, _defineProperty2[\"default\"])(AutoSizer, \"defaultProps\", {\n  onResize: function onResize() {},\n  disableHeight: false,\n  disableWidth: false,\n  style: {}\n});","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = createDetectElementResize;\n\n/**\n * Detect Element Resize.\n * https://github.com/sdecima/javascript-detect-element-resize\n * Sebastian Decima\n *\n * Forked from version 0.5.3; includes the following modifications:\n * 1) Guard against unsafe 'window' and 'document' references (to support SSR).\n * 2) Defer initialization code via a top-level function wrapper (to support SSR).\n * 3) Avoid unnecessary reflows by not measuring size for scroll events bubbling from children.\n * 4) Add nonce for style element.\n * 5) Added support for injecting custom window object\n **/\nfunction createDetectElementResize(nonce, hostWindow) {\n  // Check `document` and `window` in case of server-side rendering\n  var _window;\n\n  if (typeof hostWindow !== 'undefined') {\n    _window = hostWindow;\n  } else if (typeof window !== 'undefined') {\n    _window = window;\n  } else if (typeof self !== 'undefined') {\n    _window = self;\n  } else {\n    _window = global;\n  }\n\n  var attachEvent = typeof _window.document !== 'undefined' && _window.document.attachEvent;\n\n  if (!attachEvent) {\n    var requestFrame = function () {\n      var raf = _window.requestAnimationFrame || _window.mozRequestAnimationFrame || _window.webkitRequestAnimationFrame || function (fn) {\n        return _window.setTimeout(fn, 20);\n      };\n\n      return function (fn) {\n        return raf(fn);\n      };\n    }();\n\n    var cancelFrame = function () {\n      var cancel = _window.cancelAnimationFrame || _window.mozCancelAnimationFrame || _window.webkitCancelAnimationFrame || _window.clearTimeout;\n      return function (id) {\n        return cancel(id);\n      };\n    }();\n\n    var resetTriggers = function resetTriggers(element) {\n      var triggers = element.__resizeTriggers__,\n          expand = triggers.firstElementChild,\n          contract = triggers.lastElementChild,\n          expandChild = expand.firstElementChild;\n      contract.scrollLeft = contract.scrollWidth;\n      contract.scrollTop = contract.scrollHeight;\n      expandChild.style.width = expand.offsetWidth + 1 + 'px';\n      expandChild.style.height = expand.offsetHeight + 1 + 'px';\n      expand.scrollLeft = expand.scrollWidth;\n      expand.scrollTop = expand.scrollHeight;\n    };\n\n    var checkTriggers = function checkTriggers(element) {\n      return element.offsetWidth != element.__resizeLast__.width || element.offsetHeight != element.__resizeLast__.height;\n    };\n\n    var scrollListener = function scrollListener(e) {\n      // Don't measure (which forces) reflow for scrolls that happen inside of children!\n      if (e.target.className && typeof e.target.className.indexOf === 'function' && e.target.className.indexOf('contract-trigger') < 0 && e.target.className.indexOf('expand-trigger') < 0) {\n        return;\n      }\n\n      var element = this;\n      resetTriggers(this);\n\n      if (this.__resizeRAF__) {\n        cancelFrame(this.__resizeRAF__);\n      }\n\n      this.__resizeRAF__ = requestFrame(function () {\n        if (checkTriggers(element)) {\n          element.__resizeLast__.width = element.offsetWidth;\n          element.__resizeLast__.height = element.offsetHeight;\n\n          element.__resizeListeners__.forEach(function (fn) {\n            fn.call(element, e);\n          });\n        }\n      });\n    };\n    /* Detect CSS Animations support to detect element display/re-attach */\n\n\n    var animation = false,\n        keyframeprefix = '',\n        animationstartevent = 'animationstart',\n        domPrefixes = 'Webkit Moz O ms'.split(' '),\n        startEvents = 'webkitAnimationStart animationstart oAnimationStart MSAnimationStart'.split(' '),\n        pfx = '';\n    {\n      var elm = _window.document.createElement('fakeelement');\n\n      if (elm.style.animationName !== undefined) {\n        animation = true;\n      }\n\n      if (animation === false) {\n        for (var i = 0; i < domPrefixes.length; i++) {\n          if (elm.style[domPrefixes[i] + 'AnimationName'] !== undefined) {\n            pfx = domPrefixes[i];\n            keyframeprefix = '-' + pfx.toLowerCase() + '-';\n            animationstartevent = startEvents[i];\n            animation = true;\n            break;\n          }\n        }\n      }\n    }\n    var animationName = 'resizeanim';\n    var animationKeyframes = '@' + keyframeprefix + 'keyframes ' + animationName + ' { from { opacity: 0; } to { opacity: 0; } } ';\n    var animationStyle = keyframeprefix + 'animation: 1ms ' + animationName + '; ';\n  }\n\n  var createStyles = function createStyles(doc) {\n    if (!doc.getElementById('detectElementResize')) {\n      //opacity:0 works around a chrome bug https://code.google.com/p/chromium/issues/detail?id=286360\n      var css = (animationKeyframes ? animationKeyframes : '') + '.resize-triggers { ' + (animationStyle ? animationStyle : '') + 'visibility: hidden; opacity: 0; } ' + '.resize-triggers, .resize-triggers > div, .contract-trigger:before { content: \" \"; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; z-index: -1; } .resize-triggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',\n          head = doc.head || doc.getElementsByTagName('head')[0],\n          style = doc.createElement('style');\n      style.id = 'detectElementResize';\n      style.type = 'text/css';\n\n      if (nonce != null) {\n        style.setAttribute('nonce', nonce);\n      }\n\n      if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n      } else {\n        style.appendChild(doc.createTextNode(css));\n      }\n\n      head.appendChild(style);\n    }\n  };\n\n  var addResizeListener = function addResizeListener(element, fn) {\n    if (attachEvent) {\n      element.attachEvent('onresize', fn);\n    } else {\n      if (!element.__resizeTriggers__) {\n        var doc = element.ownerDocument;\n\n        var elementStyle = _window.getComputedStyle(element);\n\n        if (elementStyle && elementStyle.position == 'static') {\n          element.style.position = 'relative';\n        }\n\n        createStyles(doc);\n        element.__resizeLast__ = {};\n        element.__resizeListeners__ = [];\n        (element.__resizeTriggers__ = doc.createElement('div')).className = 'resize-triggers';\n        element.__resizeTriggers__.innerHTML = '<div class=\"expand-trigger\"><div></div></div>' + '<div class=\"contract-trigger\"></div>';\n        element.appendChild(element.__resizeTriggers__);\n        resetTriggers(element);\n        element.addEventListener('scroll', scrollListener, true);\n        /* Listen for a css animation to detect element display/re-attach */\n\n        if (animationstartevent) {\n          element.__resizeTriggers__.__animationListener__ = function animationListener(e) {\n            if (e.animationName == animationName) {\n              resetTriggers(element);\n            }\n          };\n\n          element.__resizeTriggers__.addEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n        }\n      }\n\n      element.__resizeListeners__.push(fn);\n    }\n  };\n\n  var removeResizeListener = function removeResizeListener(element, fn) {\n    if (attachEvent) {\n      element.detachEvent('onresize', fn);\n    } else {\n      element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n\n      if (!element.__resizeListeners__.length) {\n        element.removeEventListener('scroll', scrollListener, true);\n\n        if (element.__resizeTriggers__.__animationListener__) {\n          element.__resizeTriggers__.removeEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n\n          element.__resizeTriggers__.__animationListener__ = null;\n        }\n\n        try {\n          element.__resizeTriggers__ = !element.removeChild(element.__resizeTriggers__);\n        } catch (e) {// Preact compat; see developit/preact-compat/issues/228\n        }\n      }\n    }\n  };\n\n  return {\n    addResizeListener: addResizeListener,\n    removeResizeListener: removeResizeListener\n  };\n}","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;","/**\n * Helper method that determines when to recalculate row or column metadata.\n */\nexport default function calculateSizeAndPositionDataAndUpdateScrollOffset(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSize = _ref.cellSize,\n      computeMetadataCallback = _ref.computeMetadataCallback,\n      computeMetadataCallbackProps = _ref.computeMetadataCallbackProps,\n      nextCellsCount = _ref.nextCellsCount,\n      nextCellSize = _ref.nextCellSize,\n      nextScrollToIndex = _ref.nextScrollToIndex,\n      scrollToIndex = _ref.scrollToIndex,\n      updateScrollOffsetForScrollToIndex = _ref.updateScrollOffsetForScrollToIndex;\n\n  // Don't compare cell sizes if they are functions because inline functions would cause infinite loops.\n  // In that event users should use the manual recompute methods to inform of changes.\n  if (cellCount !== nextCellsCount || (typeof cellSize === 'number' || typeof nextCellSize === 'number') && cellSize !== nextCellSize) {\n    computeMetadataCallback(computeMetadataCallbackProps); // Updated cell metadata may have hidden the previous scrolled-to item.\n    // In this case we should also update the scrollTop to ensure it stays visible.\n\n    if (scrollToIndex >= 0 && scrollToIndex === nextScrollToIndex) {\n      updateScrollOffsetForScrollToIndex();\n    }\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\n/**\n * Just-in-time calculates and caches size and position information for a collection of cells.\n */\nvar CellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  // Cache of size and position data for cells, mapped by cell index.\n  // Note that invalid values may exist in this map so only rely on cells up to this._lastMeasuredIndex\n  // Measurements for cells up to this index can be trusted; cells afterward should be estimated.\n  // Used in deferred mode to track which cells have been queued for measurement.\n  function CellSizeAndPositionManager(_ref) {\n    var cellCount = _ref.cellCount,\n        cellSizeGetter = _ref.cellSizeGetter,\n        estimatedCellSize = _ref.estimatedCellSize;\n\n    _classCallCheck(this, CellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionData\", {});\n\n    _defineProperty(this, \"_lastMeasuredIndex\", -1);\n\n    _defineProperty(this, \"_lastBatchedIndex\", -1);\n\n    _defineProperty(this, \"_cellCount\", void 0);\n\n    _defineProperty(this, \"_cellSizeGetter\", void 0);\n\n    _defineProperty(this, \"_estimatedCellSize\", void 0);\n\n    this._cellSizeGetter = cellSizeGetter;\n    this._cellCount = cellCount;\n    this._estimatedCellSize = estimatedCellSize;\n  }\n\n  _createClass(CellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return false;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(_ref2) {\n      var cellCount = _ref2.cellCount,\n          estimatedCellSize = _ref2.estimatedCellSize,\n          cellSizeGetter = _ref2.cellSizeGetter;\n      this._cellCount = cellCount;\n      this._estimatedCellSize = estimatedCellSize;\n      this._cellSizeGetter = cellSizeGetter;\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellCount;\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._estimatedCellSize;\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._lastMeasuredIndex;\n    }\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment() {\n      return 0;\n    }\n    /**\n     * This method returns the size and position for the cell at the specified index.\n     * It just-in-time calculates (or used cached values) for cells leading up to the index.\n     */\n\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      if (index < 0 || index >= this._cellCount) {\n        throw Error(\"Requested index \".concat(index, \" is outside of range 0..\").concat(this._cellCount));\n      }\n\n      if (index > this._lastMeasuredIndex) {\n        var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n        var offset = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n\n        for (var i = this._lastMeasuredIndex + 1; i <= index; i++) {\n          var size = this._cellSizeGetter({\n            index: i\n          }); // undefined or NaN probably means a logic error in the size getter.\n          // null means we're using CellMeasurer and haven't yet measured a given index.\n\n\n          if (size === undefined || isNaN(size)) {\n            throw Error(\"Invalid size returned for cell \".concat(i, \" of value \").concat(size));\n          } else if (size === null) {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: 0\n            };\n            this._lastBatchedIndex = index;\n          } else {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: size\n            };\n            offset += size;\n            this._lastMeasuredIndex = index;\n          }\n        }\n      }\n\n      return this._cellSizeAndPositionData[index];\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._lastMeasuredIndex >= 0 ? this._cellSizeAndPositionData[this._lastMeasuredIndex] : {\n        offset: 0,\n        size: 0\n      };\n    }\n    /**\n     * Total size of all cells being measured.\n     * This value will be completely estimated initially.\n     * As cells are measured, the estimate will be updated.\n     */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var totalSizeOfMeasuredCells = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n      var numUnmeasuredCells = this._cellCount - this._lastMeasuredIndex - 1;\n      var totalSizeOfUnmeasuredCells = numUnmeasuredCells * this._estimatedCellSize;\n      return totalSizeOfMeasuredCells + totalSizeOfUnmeasuredCells;\n    }\n    /**\n     * Determines a new offset that ensures a certain cell is visible, given the current offset.\n     * If the cell is already visible then the current offset will be returned.\n     * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n     *\n     * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n     * @param containerSize Size (width or height) of the container viewport\n     * @param currentOffset Container's current (x or y) offset\n     * @param totalSize Total size (width or height) of all cells\n     * @return Offset to use to ensure the specified cell is visible\n     */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n\n      if (containerSize <= 0) {\n        return 0;\n      }\n\n      var datum = this.getSizeAndPositionOfCell(targetIndex);\n      var maxOffset = datum.offset;\n      var minOffset = maxOffset - containerSize + datum.size;\n      var idealOffset;\n\n      switch (align) {\n        case 'start':\n          idealOffset = maxOffset;\n          break;\n\n        case 'end':\n          idealOffset = minOffset;\n          break;\n\n        case 'center':\n          idealOffset = maxOffset - (containerSize - datum.size) / 2;\n          break;\n\n        default:\n          idealOffset = Math.max(minOffset, Math.min(maxOffset, currentOffset));\n          break;\n      }\n\n      var totalSize = this.getTotalSize();\n      return Math.max(0, Math.min(totalSize - containerSize, idealOffset));\n    }\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(params) {\n      var containerSize = params.containerSize,\n          offset = params.offset;\n      var totalSize = this.getTotalSize();\n\n      if (totalSize === 0) {\n        return {};\n      }\n\n      var maxOffset = offset + containerSize;\n\n      var start = this._findNearestCell(offset);\n\n      var datum = this.getSizeAndPositionOfCell(start);\n      offset = datum.offset + datum.size;\n      var stop = start;\n\n      while (offset < maxOffset && stop < this._cellCount - 1) {\n        stop++;\n        offset += this.getSizeAndPositionOfCell(stop).size;\n      }\n\n      return {\n        start: start,\n        stop: stop\n      };\n    }\n    /**\n     * Clear all cached values for cells after the specified index.\n     * This method should be called for any cell that has changed its size.\n     * It will not immediately perform any calculations; they'll be performed the next time getSizeAndPositionOfCell() is called.\n     */\n\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._lastMeasuredIndex = Math.min(this._lastMeasuredIndex, index - 1);\n    }\n  }, {\n    key: \"_binarySearch\",\n    value: function _binarySearch(high, low, offset) {\n      while (low <= high) {\n        var middle = low + Math.floor((high - low) / 2);\n        var currentOffset = this.getSizeAndPositionOfCell(middle).offset;\n\n        if (currentOffset === offset) {\n          return middle;\n        } else if (currentOffset < offset) {\n          low = middle + 1;\n        } else if (currentOffset > offset) {\n          high = middle - 1;\n        }\n      }\n\n      if (low > 0) {\n        return low - 1;\n      } else {\n        return 0;\n      }\n    }\n  }, {\n    key: \"_exponentialSearch\",\n    value: function _exponentialSearch(index, offset) {\n      var interval = 1;\n\n      while (index < this._cellCount && this.getSizeAndPositionOfCell(index).offset < offset) {\n        index += interval;\n        interval *= 2;\n      }\n\n      return this._binarySearch(Math.min(index, this._cellCount - 1), Math.floor(index / 2), offset);\n    }\n    /**\n     * Searches for the cell (index) nearest the specified offset.\n     *\n     * If no exact match is found the next lowest cell index will be returned.\n     * This allows partially visible cells (with offsets just before/above the fold) to be visible.\n     */\n\n  }, {\n    key: \"_findNearestCell\",\n    value: function _findNearestCell(offset) {\n      if (isNaN(offset)) {\n        throw Error(\"Invalid offset \".concat(offset, \" specified\"));\n      } // Our search algorithms find the nearest match at or below the specified offset.\n      // So make sure the offset is at least 0 or no match will be found.\n\n\n      offset = Math.max(0, offset);\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var lastMeasuredIndex = Math.max(0, this._lastMeasuredIndex);\n\n      if (lastMeasuredCellSizeAndPosition.offset >= offset) {\n        // If we've already measured cells within this range just use a binary search as it's faster.\n        return this._binarySearch(lastMeasuredIndex, 0, offset);\n      } else {\n        // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n        // The exponential search avoids pre-computing sizes for the full set of cells as a binary search would.\n        // The overall complexity for this approach is O(log n).\n        return this._exponentialSearch(lastMeasuredIndex, offset);\n      }\n    }\n  }]);\n\n  return CellSizeAndPositionManager;\n}();\n\nexport { CellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","var DEFAULT_MAX_ELEMENT_SIZE = 1500000;\nvar CHROME_MAX_ELEMENT_SIZE = 1.67771e7;\n\nvar isBrowser = function isBrowser() {\n  return typeof window !== 'undefined';\n};\n\nvar isChrome = function isChrome() {\n  return !!window.chrome;\n};\n\nexport var getMaxElementSize = function getMaxElementSize() {\n  if (isBrowser()) {\n    if (isChrome()) {\n      return CHROME_MAX_ELEMENT_SIZE;\n    }\n  }\n\n  return DEFAULT_MAX_ELEMENT_SIZE;\n};","import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport CellSizeAndPositionManager from './CellSizeAndPositionManager';\nimport { getMaxElementSize } from './maxElementSize.js';\n\n/**\n * Extends CellSizeAndPositionManager and adds scaling behavior for lists that are too large to fit within a browser's native limits.\n */\nvar ScalingCellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  function ScalingCellSizeAndPositionManager(_ref) {\n    var _ref$maxScrollSize = _ref.maxScrollSize,\n        maxScrollSize = _ref$maxScrollSize === void 0 ? getMaxElementSize() : _ref$maxScrollSize,\n        params = _objectWithoutProperties(_ref, [\"maxScrollSize\"]);\n\n    _classCallCheck(this, ScalingCellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionManager\", void 0);\n\n    _defineProperty(this, \"_maxScrollSize\", void 0);\n\n    // Favor composition over inheritance to simplify IE10 support\n    this._cellSizeAndPositionManager = new CellSizeAndPositionManager(params);\n    this._maxScrollSize = maxScrollSize;\n  }\n\n  _createClass(ScalingCellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return this._cellSizeAndPositionManager.getTotalSize() > this._maxScrollSize;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(params) {\n      this._cellSizeAndPositionManager.configure(params);\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellSizeAndPositionManager.getCellCount();\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._cellSizeAndPositionManager.getEstimatedCellSize();\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._cellSizeAndPositionManager.getLastMeasuredIndex();\n    }\n    /**\n     * Number of pixels a cell at the given position (offset) should be shifted in order to fit within the scaled container.\n     * The offset passed to this function is scaled (safe) as well.\n     */\n\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment(_ref2) {\n      var containerSize = _ref2.containerSize,\n          offset = _ref2.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      var offsetPercentage = this._getOffsetPercentage({\n        containerSize: containerSize,\n        offset: offset,\n        totalSize: safeTotalSize\n      });\n\n      return Math.round(offsetPercentage * (safeTotalSize - totalSize));\n    }\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfCell(index);\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfLastMeasuredCell();\n    }\n    /** See CellSizeAndPositionManager#getTotalSize */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return Math.min(this._maxScrollSize, this._cellSizeAndPositionManager.getTotalSize());\n    }\n    /** See CellSizeAndPositionManager#getUpdatedOffsetForIndex */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n      currentOffset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: currentOffset\n      });\n\n      var offset = this._cellSizeAndPositionManager.getUpdatedOffsetForIndex({\n        align: align,\n        containerSize: containerSize,\n        currentOffset: currentOffset,\n        targetIndex: targetIndex\n      });\n\n      return this._offsetToSafeOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n    /** See CellSizeAndPositionManager#getVisibleCellRange */\n\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(_ref4) {\n      var containerSize = _ref4.containerSize,\n          offset = _ref4.offset;\n      offset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n      return this._cellSizeAndPositionManager.getVisibleCellRange({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._cellSizeAndPositionManager.resetCell(index);\n    }\n  }, {\n    key: \"_getOffsetPercentage\",\n    value: function _getOffsetPercentage(_ref5) {\n      var containerSize = _ref5.containerSize,\n          offset = _ref5.offset,\n          totalSize = _ref5.totalSize;\n      return totalSize <= containerSize ? 0 : offset / (totalSize - containerSize);\n    }\n  }, {\n    key: \"_offsetToSafeOffset\",\n    value: function _offsetToSafeOffset(_ref6) {\n      var containerSize = _ref6.containerSize,\n          offset = _ref6.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: totalSize\n        });\n\n        return Math.round(offsetPercentage * (safeTotalSize - containerSize));\n      }\n    }\n  }, {\n    key: \"_safeOffsetToOffset\",\n    value: function _safeOffsetToOffset(_ref7) {\n      var containerSize = _ref7.containerSize,\n          offset = _ref7.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: safeTotalSize\n        });\n\n        return Math.round(offsetPercentage * (totalSize - containerSize));\n      }\n    }\n  }]);\n\n  return ScalingCellSizeAndPositionManager;\n}();\n\nexport { ScalingCellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","/**\n * Helper utility that updates the specified callback whenever any of the specified indices have changed.\n */\nexport default function createCallbackMemoizer() {\n  var requireAllKeys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  var cachedIndices = {};\n  return function (_ref) {\n    var callback = _ref.callback,\n        indices = _ref.indices;\n    var keys = Object.keys(indices);\n    var allInitialized = !requireAllKeys || keys.every(function (key) {\n      var value = indices[key];\n      return Array.isArray(value) ? value.length > 0 : value >= 0;\n    });\n    var indexChanged = keys.length !== Object.keys(cachedIndices).length || keys.some(function (key) {\n      var cachedValue = cachedIndices[key];\n      var value = indices[key];\n      return Array.isArray(value) ? cachedValue.join(',') !== value.join(',') : cachedValue !== value;\n    });\n    cachedIndices = indices;\n\n    if (allInitialized && indexChanged) {\n      callback(indices);\n    }\n  };\n}","import ScalingCellSizeAndPositionManager from './ScalingCellSizeAndPositionManager.js';\n/**\n * Helper function that determines when to update scroll offsets to ensure that a scroll-to-index remains visible.\n * This function also ensures that the scroll ofset isn't past the last column/row of cells.\n */\n\nexport default function updateScrollIndexHelper(_ref) {\n  var cellSize = _ref.cellSize,\n      cellSizeAndPositionManager = _ref.cellSizeAndPositionManager,\n      previousCellsCount = _ref.previousCellsCount,\n      previousCellSize = _ref.previousCellSize,\n      previousScrollToAlignment = _ref.previousScrollToAlignment,\n      previousScrollToIndex = _ref.previousScrollToIndex,\n      previousSize = _ref.previousSize,\n      scrollOffset = _ref.scrollOffset,\n      scrollToAlignment = _ref.scrollToAlignment,\n      scrollToIndex = _ref.scrollToIndex,\n      size = _ref.size,\n      sizeJustIncreasedFromZero = _ref.sizeJustIncreasedFromZero,\n      updateScrollIndexCallback = _ref.updateScrollIndexCallback;\n  var cellCount = cellSizeAndPositionManager.getCellCount();\n  var hasScrollToIndex = scrollToIndex >= 0 && scrollToIndex < cellCount;\n  var sizeHasChanged = size !== previousSize || sizeJustIncreasedFromZero || !previousCellSize || typeof cellSize === 'number' && cellSize !== previousCellSize; // If we have a new scroll target OR if height/row-height has changed,\n  // We should ensure that the scroll target is visible.\n\n  if (hasScrollToIndex && (sizeHasChanged || scrollToAlignment !== previousScrollToAlignment || scrollToIndex !== previousScrollToIndex)) {\n    updateScrollIndexCallback(scrollToIndex); // If we don't have a selected item but list size or number of children have decreased,\n    // Make sure we aren't scrolled too far past the current content.\n  } else if (!hasScrollToIndex && cellCount > 0 && (size < previousSize || cellCount < previousCellsCount)) {\n    // We need to ensure that the current scroll offset is still within the collection's range.\n    // To do this, we don't need to measure everything; CellMeasurer would perform poorly.\n    // Just check to make sure we're still okay.\n    // Only adjust the scroll position if we've scrolled below the last set of rows.\n    if (scrollOffset > cellSizeAndPositionManager.getTotalSize() - size) {\n      updateScrollIndexCallback(cellCount - 1);\n    }\n  }\n}\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSize } from \"../types\";","// Properly handle server-side rendering.\nvar win;\n\nif (typeof window !== 'undefined') {\n  win = window;\n} else if (typeof self !== 'undefined') {\n  win = self;\n} else {\n  win = {};\n} // requestAnimationFrame() shim by Paul Irish\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\nvar request = win.requestAnimationFrame || win.webkitRequestAnimationFrame || win.mozRequestAnimationFrame || win.oRequestAnimationFrame || win.msRequestAnimationFrame || function (callback) {\n  return win.setTimeout(callback, 1000 / 60);\n};\n\nvar cancel = win.cancelAnimationFrame || win.webkitCancelAnimationFrame || win.mozCancelAnimationFrame || win.oCancelAnimationFrame || win.msCancelAnimationFrame || function (id) {\n  win.clearTimeout(id);\n};\n\nexport var raf = request;\nexport var caf = cancel;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport calculateSizeAndPositionDataAndUpdateScrollOffset from './utils/calculateSizeAndPositionDataAndUpdateScrollOffset';\nimport ScalingCellSizeAndPositionManager from './utils/ScalingCellSizeAndPositionManager';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport defaultOverscanIndicesGetter, { SCROLL_DIRECTION_BACKWARD, SCROLL_DIRECTION_FORWARD } from './defaultOverscanIndicesGetter';\nimport updateScrollIndexHelper from './utils/updateScrollIndexHelper';\nimport defaultCellRangeRenderer from './defaultCellRangeRenderer';\nimport scrollbarSize from 'dom-helpers/scrollbarSize';\nimport { polyfill } from 'react-lifecycles-compat';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n\nvar renderNull = function renderNull() {\n  return null;\n};\n\n/**\n * Renders tabular data with virtualization along the vertical and horizontal axes.\n * Row heights and column widths must be known ahead of time and specified as properties.\n */\nvar Grid = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Grid, _React$PureComponent);\n\n  // Invokes onSectionRendered callback only when start/stop row or column indices change\n  function Grid(props) {\n    var _this;\n\n    _classCallCheck(this, Grid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Grid).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"_onGridRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollLeftFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollTopFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_horizontalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_verticalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollbarPresenceChanged\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollingContainer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_childrenToDisplay\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollTop\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollLeft\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_disablePointerEventsTimeoutId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_styleCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceScrollEndedCallback\", function () {\n      _this._disablePointerEventsTimeoutId = null; // isScrolling is used to determine if we reset styleCache\n\n      _this.setState({\n        isScrolling: false,\n        needToResetStyleCache: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnGridRenderedHelper\", function () {\n      var onSectionRendered = _this.props.onSectionRendered;\n\n      _this._onGridRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          columnOverscanStartIndex: _this._columnStartIndex,\n          columnOverscanStopIndex: _this._columnStopIndex,\n          columnStartIndex: _this._renderedColumnStartIndex,\n          columnStopIndex: _this._renderedColumnStopIndex,\n          rowOverscanStartIndex: _this._rowStartIndex,\n          rowOverscanStopIndex: _this._rowStopIndex,\n          rowStartIndex: _this._renderedRowStartIndex,\n          rowStopIndex: _this._renderedRowStopIndex\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target === _this._scrollingContainer) {\n        _this.handleScrollEvent(event.target);\n      }\n    });\n\n    var columnSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.columnCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.columnWidth)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedColumnSize(props)\n    });\n    var rowSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.rowCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.rowHeight)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedRowSize(props)\n    });\n    _this.state = {\n      instanceProps: {\n        columnSizeAndPositionManager: columnSizeAndPositionManager,\n        rowSizeAndPositionManager: rowSizeAndPositionManager,\n        prevColumnWidth: props.columnWidth,\n        prevRowHeight: props.rowHeight,\n        prevColumnCount: props.columnCount,\n        prevRowCount: props.rowCount,\n        prevIsScrolling: props.isScrolling === true,\n        prevScrollToColumn: props.scrollToColumn,\n        prevScrollToRow: props.scrollToRow,\n        scrollbarSize: 0,\n        scrollbarSizeMeasured: false\n      },\n      isScrolling: false,\n      scrollDirectionHorizontal: SCROLL_DIRECTION_FORWARD,\n      scrollDirectionVertical: SCROLL_DIRECTION_FORWARD,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollPositionChangeReason: null,\n      needToResetStyleCache: false\n    };\n\n    if (props.scrollToRow > 0) {\n      _this._initialScrollTop = _this._getCalculatedScrollTop(props, _this.state);\n    }\n\n    if (props.scrollToColumn > 0) {\n      _this._initialScrollLeft = _this._getCalculatedScrollLeft(props, _this.state);\n    }\n\n    return _this;\n  }\n  /**\n   * Gets offsets for a given cell and alignment.\n   */\n\n\n  _createClass(Grid, [{\n    key: \"getOffsetForCell\",\n    value: function getOffsetForCell() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$alignment = _ref.alignment,\n          alignment = _ref$alignment === void 0 ? this.props.scrollToAlignment : _ref$alignment,\n          _ref$columnIndex = _ref.columnIndex,\n          columnIndex = _ref$columnIndex === void 0 ? this.props.scrollToColumn : _ref$columnIndex,\n          _ref$rowIndex = _ref.rowIndex,\n          rowIndex = _ref$rowIndex === void 0 ? this.props.scrollToRow : _ref$rowIndex;\n\n      var offsetProps = _objectSpread({}, this.props, {\n        scrollToAlignment: alignment,\n        scrollToColumn: columnIndex,\n        scrollToRow: rowIndex\n      });\n\n      return {\n        scrollLeft: this._getCalculatedScrollLeft(offsetProps),\n        scrollTop: this._getCalculatedScrollTop(offsetProps)\n      };\n    }\n    /**\n     * Gets estimated total rows' height.\n     */\n\n  }, {\n    key: \"getTotalRowsHeight\",\n    value: function getTotalRowsHeight() {\n      return this.state.instanceProps.rowSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * Gets estimated total columns' width.\n     */\n\n  }, {\n    key: \"getTotalColumnsWidth\",\n    value: function getTotalColumnsWidth() {\n      return this.state.instanceProps.columnSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * This method handles a scroll event originating from an external scroll control.\n     * It's an advanced method and should probably not be used unless you're implementing a custom scroll-bar solution.\n     */\n\n  }, {\n    key: \"handleScrollEvent\",\n    value: function handleScrollEvent(_ref2) {\n      var _ref2$scrollLeft = _ref2.scrollLeft,\n          scrollLeftParam = _ref2$scrollLeft === void 0 ? 0 : _ref2$scrollLeft,\n          _ref2$scrollTop = _ref2.scrollTop,\n          scrollTopParam = _ref2$scrollTop === void 0 ? 0 : _ref2$scrollTop;\n\n      // On iOS, we can arrive at negative offsets by swiping past the start.\n      // To prevent flicker here, we make playing in the negative offset zone cause nothing to happen.\n      if (scrollTopParam < 0) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      this._debounceScrollEnded();\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          autoWidth = _this$props.autoWidth,\n          height = _this$props.height,\n          width = _this$props.width;\n      var instanceProps = this.state.instanceProps; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollbarSize = instanceProps.scrollbarSize;\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var scrollLeft = Math.min(Math.max(0, totalColumnsWidth - width + scrollbarSize), scrollLeftParam);\n      var scrollTop = Math.min(Math.max(0, totalRowsHeight - height + scrollbarSize), scrollTopParam); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (this.state.scrollLeft !== scrollLeft || this.state.scrollTop !== scrollTop) {\n        // Track scrolling direction so we can more efficiently overscan rows to reduce empty space around the edges while scrolling.\n        // Don't change direction for an axis unless scroll offset has changed.\n        var scrollDirectionHorizontal = scrollLeft !== this.state.scrollLeft ? scrollLeft > this.state.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionHorizontal;\n        var scrollDirectionVertical = scrollTop !== this.state.scrollTop ? scrollTop > this.state.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionVertical;\n        var newState = {\n          isScrolling: true,\n          scrollDirectionHorizontal: scrollDirectionHorizontal,\n          scrollDirectionVertical: scrollDirectionVertical,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.OBSERVED\n        };\n\n        if (!autoHeight) {\n          newState.scrollTop = scrollTop;\n        }\n\n        if (!autoWidth) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        newState.needToResetStyleCache = false;\n        this.setState(newState);\n      }\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalColumnsWidth: totalColumnsWidth,\n        totalRowsHeight: totalRowsHeight\n      });\n    }\n    /**\n     * Invalidate Grid size and recompute visible cells.\n     * This is a deferred wrapper for recomputeGridSize().\n     * It sets a flag to be evaluated on cDM/cDU to avoid unnecessary renders.\n     * This method is intended for advanced use-cases like CellMeasurer.\n     */\n    // @TODO (bvaughn) Add automated test coverage for this.\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rowIndex = _ref3.rowIndex;\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /**\n     * Pre-measure all columns and rows in a Grid.\n     * Typically cells are only measured as needed and estimated sizes are used for cells that have not yet been measured.\n     * This method ensures that the next call to getTotalSize() returns an exact size (as opposed to just an estimated one).\n     */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      var _this$props2 = this.props,\n          columnCount = _this$props2.columnCount,\n          rowCount = _this$props2.rowCount;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.getSizeAndPositionOfCell(columnCount - 1);\n      instanceProps.rowSizeAndPositionManager.getSizeAndPositionOfCell(rowCount - 1);\n    }\n    /**\n     * Forced recompute of row heights and column widths.\n     * This function should be called if dynamic column or row sizes have changed but nothing else has.\n     * Since Grid only receives :columnCount and :rowCount it has no way of detecting when the underlying data changes.\n     */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref4$columnIndex = _ref4.columnIndex,\n          columnIndex = _ref4$columnIndex === void 0 ? 0 : _ref4$columnIndex,\n          _ref4$rowIndex = _ref4.rowIndex,\n          rowIndex = _ref4$rowIndex === void 0 ? 0 : _ref4$rowIndex;\n\n      var _this$props3 = this.props,\n          scrollToColumn = _this$props3.scrollToColumn,\n          scrollToRow = _this$props3.scrollToRow;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.resetCell(columnIndex);\n      instanceProps.rowSizeAndPositionManager.resetCell(rowIndex); // Cell sizes may be determined by a function property.\n      // In this case the cDU handler can't know if they changed.\n      // Store this flag to let the next cDU pass know it needs to recompute the scroll offset.\n\n      this._recomputeScrollLeftFlag = scrollToColumn >= 0 && (this.state.scrollDirectionHorizontal === SCROLL_DIRECTION_FORWARD ? columnIndex <= scrollToColumn : columnIndex >= scrollToColumn);\n      this._recomputeScrollTopFlag = scrollToRow >= 0 && (this.state.scrollDirectionVertical === SCROLL_DIRECTION_FORWARD ? rowIndex <= scrollToRow : rowIndex >= scrollToRow); // Clear cell cache in case we are scrolling;\n      // Invalid row heights likely mean invalid cached content as well.\n\n      this._styleCache = {};\n      this._cellCache = {};\n      this.forceUpdate();\n    }\n    /**\n     * Ensure column and row are visible.\n     */\n\n  }, {\n    key: \"scrollToCell\",\n    value: function scrollToCell(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n      var columnCount = this.props.columnCount;\n      var props = this.props; // Don't adjust scroll offset for single-column grids (eg List, Table).\n      // This can cause a funky scroll offset because of the vertical scrollbar width.\n\n      if (columnCount > 1 && columnIndex !== undefined) {\n        this._updateScrollLeftForScrollToColumn(_objectSpread({}, props, {\n          scrollToColumn: columnIndex\n        }));\n      }\n\n      if (rowIndex !== undefined) {\n        this._updateScrollTopForScrollToRow(_objectSpread({}, props, {\n          scrollToRow: rowIndex\n        }));\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          getScrollbarSize = _this$props4.getScrollbarSize,\n          height = _this$props4.height,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToColumn = _this$props4.scrollToColumn,\n          scrollTop = _this$props4.scrollTop,\n          scrollToRow = _this$props4.scrollToRow,\n          width = _this$props4.width;\n      var instanceProps = this.state.instanceProps; // Reset initial offsets to be ignored in browser\n\n      this._initialScrollTop = 0;\n      this._initialScrollLeft = 0; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n\n      if (!instanceProps.scrollbarSizeMeasured) {\n        this.setState(function (prevState) {\n          var stateUpdate = _objectSpread({}, prevState, {\n            needToResetStyleCache: false\n          });\n\n          stateUpdate.instanceProps.scrollbarSize = getScrollbarSize();\n          stateUpdate.instanceProps.scrollbarSizeMeasured = true;\n          return stateUpdate;\n        });\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 || typeof scrollTop === 'number' && scrollTop >= 0) {\n        var stateUpdate = Grid._getScrollToPositionStateUpdate({\n          prevState: this.state,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        if (stateUpdate) {\n          stateUpdate.needToResetStyleCache = false;\n          this.setState(stateUpdate);\n        }\n      } // refs don't work in `react-test-renderer`\n\n\n      if (this._scrollingContainer) {\n        // setting the ref's scrollLeft and scrollTop.\n        // Somehow in MultiGrid the main grid doesn't trigger a update on mount.\n        if (this._scrollingContainer.scrollLeft !== this.state.scrollLeft) {\n          this._scrollingContainer.scrollLeft = this.state.scrollLeft;\n        }\n\n        if (this._scrollingContainer.scrollTop !== this.state.scrollTop) {\n          this._scrollingContainer.scrollTop = this.state.scrollTop;\n        }\n      } // Don't update scroll offset if the size is 0; we don't render any cells in this case.\n      // Setting a state may cause us to later thing we've updated the offce when we haven't.\n\n\n      var sizeIsBiggerThanZero = height > 0 && width > 0;\n\n      if (scrollToColumn >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollLeftForScrollToColumn();\n      }\n\n      if (scrollToRow >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollTopForScrollToRow();\n      } // Update onRowsRendered callback\n\n\n      this._invokeOnGridRenderedHelper(); // Initialize onScroll callback\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalColumnsWidth: instanceProps.columnSizeAndPositionManager.getTotalSize(),\n        totalRowsHeight: instanceProps.rowSizeAndPositionManager.getTotalSize()\n      });\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) New scroll-to-cell props have been set\n     */\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      var _this$props5 = this.props,\n          autoHeight = _this$props5.autoHeight,\n          autoWidth = _this$props5.autoWidth,\n          columnCount = _this$props5.columnCount,\n          height = _this$props5.height,\n          rowCount = _this$props5.rowCount,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToColumn = _this$props5.scrollToColumn,\n          scrollToRow = _this$props5.scrollToRow,\n          width = _this$props5.width;\n      var _this$state = this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollPositionChangeReason = _this$state.scrollPositionChangeReason,\n          scrollTop = _this$state.scrollTop,\n          instanceProps = _this$state.instanceProps; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // Handle edge case where column or row count has only just increased over 0.\n      // In this case we may have to restore a previously-specified scroll offset.\n      // For more info see bvaughn/react-virtualized/issues/218\n\n\n      var columnOrRowCountJustIncreasedFromZero = columnCount > 0 && prevProps.columnCount === 0 || rowCount > 0 && prevProps.rowCount === 0; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        // @TRICKY :autoHeight and :autoWidth properties instructs Grid to leave :scrollTop and :scrollLeft management to an external HOC (eg WindowScroller).\n        // In this case we should avoid checking scrollingContainer.scrollTop and scrollingContainer.scrollLeft since it forces layout/flow.\n        if (!autoWidth && scrollLeft >= 0 && (scrollLeft !== this._scrollingContainer.scrollLeft || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (!autoHeight && scrollTop >= 0 && (scrollTop !== this._scrollingContainer.scrollTop || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Special case where the previous size was 0:\n      // In this case we don't show any windowed cells at all.\n      // So we should always recalculate offset afterwards.\n\n\n      var sizeJustIncreasedFromZero = (prevProps.width === 0 || prevProps.height === 0) && height > 0 && width > 0; // Update scroll offsets if the current :scrollToColumn or :scrollToRow values requires it\n      // @TODO Do we also need this check or can the one in componentWillUpdate() suffice?\n\n      if (this._recomputeScrollLeftFlag) {\n        this._recomputeScrollLeftFlag = false;\n\n        this._updateScrollLeftForScrollToColumn(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          previousCellsCount: prevProps.columnCount,\n          previousCellSize: prevProps.columnWidth,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToColumn,\n          previousSize: prevProps.width,\n          scrollOffset: scrollLeft,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToColumn,\n          size: width,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollLeftForScrollToColumn(_this2.props);\n          }\n        });\n      }\n\n      if (this._recomputeScrollTopFlag) {\n        this._recomputeScrollTopFlag = false;\n\n        this._updateScrollTopForScrollToRow(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          previousCellsCount: prevProps.rowCount,\n          previousCellSize: prevProps.rowHeight,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToRow,\n          previousSize: prevProps.height,\n          scrollOffset: scrollTop,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToRow,\n          size: height,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollTopForScrollToRow(_this2.props);\n          }\n        });\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnGridRenderedHelper(); // Changes to :scrollLeft or :scrollTop should also notify :onScroll listeners\n\n\n      if (scrollLeft !== prevState.scrollLeft || scrollTop !== prevState.scrollTop) {\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n\n        this._invokeOnScrollMemoizer({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          totalColumnsWidth: totalColumnsWidth,\n          totalRowsHeight: totalRowsHeight\n        });\n      }\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n    /**\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoContainerWidth = _this$props6.autoContainerWidth,\n          autoHeight = _this$props6.autoHeight,\n          autoWidth = _this$props6.autoWidth,\n          className = _this$props6.className,\n          containerProps = _this$props6.containerProps,\n          containerRole = _this$props6.containerRole,\n          containerStyle = _this$props6.containerStyle,\n          height = _this$props6.height,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          role = _this$props6.role,\n          style = _this$props6.style,\n          tabIndex = _this$props6.tabIndex,\n          width = _this$props6.width;\n      var _this$state2 = this.state,\n          instanceProps = _this$state2.instanceProps,\n          needToResetStyleCache = _this$state2.needToResetStyleCache;\n\n      var isScrolling = this._isScrolling();\n\n      var gridStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        width: autoWidth ? 'auto' : width,\n        WebkitOverflowScrolling: 'touch',\n        willChange: 'transform'\n      };\n\n      if (needToResetStyleCache) {\n        this._styleCache = {};\n      } // calculate _styleCache here\n      // if state.isScrolling (not from _isScrolling) then reset\n\n\n      if (!this.state.isScrolling) {\n        this._resetStyleCache();\n      } // calculate children to render here\n\n\n      this._calculateChildrenToRender(this.props, this.state);\n\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize(); // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n      var horizontalScrollBarSize = totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n\n      if (horizontalScrollBarSize !== this._horizontalScrollBarSize || verticalScrollBarSize !== this._verticalScrollBarSize) {\n        this._horizontalScrollBarSize = horizontalScrollBarSize;\n        this._verticalScrollBarSize = verticalScrollBarSize;\n        this._scrollbarPresenceChanged = true;\n      } // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n\n      gridStyle.overflowX = totalColumnsWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      gridStyle.overflowY = totalRowsHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      var childrenToDisplay = this._childrenToDisplay;\n      var showNoContentRenderer = childrenToDisplay.length === 0 && height > 0 && width > 0;\n      return React.createElement(\"div\", _extends({\n        ref: this._setScrollingContainerRef\n      }, containerProps, {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-readonly\": this.props['aria-readonly'],\n        className: clsx('ReactVirtualized__Grid', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({}, gridStyle, {}, style),\n        tabIndex: tabIndex\n      }), childrenToDisplay.length > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Grid__innerScrollContainer\",\n        role: containerRole,\n        style: _objectSpread({\n          width: autoContainerWidth ? 'auto' : totalColumnsWidth,\n          height: totalRowsHeight,\n          maxWidth: totalColumnsWidth,\n          maxHeight: totalRowsHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }, containerStyle)\n      }, childrenToDisplay), showNoContentRenderer && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n  }, {\n    key: \"_calculateChildrenToRender\",\n    value: function _calculateChildrenToRender() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      var cellRenderer = props.cellRenderer,\n          cellRangeRenderer = props.cellRangeRenderer,\n          columnCount = props.columnCount,\n          deferredMeasurementCache = props.deferredMeasurementCache,\n          height = props.height,\n          overscanColumnCount = props.overscanColumnCount,\n          overscanIndicesGetter = props.overscanIndicesGetter,\n          overscanRowCount = props.overscanRowCount,\n          rowCount = props.rowCount,\n          width = props.width,\n          isScrollingOptOut = props.isScrollingOptOut;\n      var scrollDirectionHorizontal = state.scrollDirectionHorizontal,\n          scrollDirectionVertical = state.scrollDirectionVertical,\n          instanceProps = state.instanceProps;\n      var scrollTop = this._initialScrollTop > 0 ? this._initialScrollTop : state.scrollTop;\n      var scrollLeft = this._initialScrollLeft > 0 ? this._initialScrollLeft : state.scrollLeft;\n\n      var isScrolling = this._isScrolling(props, state);\n\n      this._childrenToDisplay = []; // Render only enough columns and rows to cover the visible area of the grid.\n\n      if (height > 0 && width > 0) {\n        var visibleColumnIndices = instanceProps.columnSizeAndPositionManager.getVisibleCellRange({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var visibleRowIndices = instanceProps.rowSizeAndPositionManager.getVisibleCellRange({\n          containerSize: height,\n          offset: scrollTop\n        });\n        var horizontalOffsetAdjustment = instanceProps.columnSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var verticalOffsetAdjustment = instanceProps.rowSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: height,\n          offset: scrollTop\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        this._renderedColumnStartIndex = visibleColumnIndices.start;\n        this._renderedColumnStopIndex = visibleColumnIndices.stop;\n        this._renderedRowStartIndex = visibleRowIndices.start;\n        this._renderedRowStopIndex = visibleRowIndices.stop;\n        var overscanColumnIndices = overscanIndicesGetter({\n          direction: 'horizontal',\n          cellCount: columnCount,\n          overscanCellsCount: overscanColumnCount,\n          scrollDirection: scrollDirectionHorizontal,\n          startIndex: typeof visibleColumnIndices.start === 'number' ? visibleColumnIndices.start : 0,\n          stopIndex: typeof visibleColumnIndices.stop === 'number' ? visibleColumnIndices.stop : -1\n        });\n        var overscanRowIndices = overscanIndicesGetter({\n          direction: 'vertical',\n          cellCount: rowCount,\n          overscanCellsCount: overscanRowCount,\n          scrollDirection: scrollDirectionVertical,\n          startIndex: typeof visibleRowIndices.start === 'number' ? visibleRowIndices.start : 0,\n          stopIndex: typeof visibleRowIndices.stop === 'number' ? visibleRowIndices.stop : -1\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        var columnStartIndex = overscanColumnIndices.overscanStartIndex;\n        var columnStopIndex = overscanColumnIndices.overscanStopIndex;\n        var rowStartIndex = overscanRowIndices.overscanStartIndex;\n        var rowStopIndex = overscanRowIndices.overscanStopIndex; // Advanced use-cases (eg CellMeasurer) require batched measurements to determine accurate sizes.\n\n        if (deferredMeasurementCache) {\n          // If rows have a dynamic height, scan the rows we are about to render.\n          // If any have not yet been measured, then we need to render all columns initially,\n          // Because the height of the row is equal to the tallest cell within that row,\n          // (And so we can't know the height without measuring all column-cells first).\n          if (!deferredMeasurementCache.hasFixedHeight()) {\n            for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n              if (!deferredMeasurementCache.has(rowIndex, 0)) {\n                columnStartIndex = 0;\n                columnStopIndex = columnCount - 1;\n                break;\n              }\n            }\n          } // If columns have a dynamic width, scan the columns we are about to render.\n          // If any have not yet been measured, then we need to render all rows initially,\n          // Because the width of the column is equal to the widest cell within that column,\n          // (And so we can't know the width without measuring all row-cells first).\n\n\n          if (!deferredMeasurementCache.hasFixedWidth()) {\n            for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n              if (!deferredMeasurementCache.has(0, columnIndex)) {\n                rowStartIndex = 0;\n                rowStopIndex = rowCount - 1;\n                break;\n              }\n            }\n          }\n        }\n\n        this._childrenToDisplay = cellRangeRenderer({\n          cellCache: this._cellCache,\n          cellRenderer: cellRenderer,\n          columnSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          columnStartIndex: columnStartIndex,\n          columnStopIndex: columnStopIndex,\n          deferredMeasurementCache: deferredMeasurementCache,\n          horizontalOffsetAdjustment: horizontalOffsetAdjustment,\n          isScrolling: isScrolling,\n          isScrollingOptOut: isScrollingOptOut,\n          parent: this,\n          rowSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          rowStartIndex: rowStartIndex,\n          rowStopIndex: rowStopIndex,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          styleCache: this._styleCache,\n          verticalOffsetAdjustment: verticalOffsetAdjustment,\n          visibleColumnIndices: visibleColumnIndices,\n          visibleRowIndices: visibleRowIndices\n        }); // update the indices\n\n        this._columnStartIndex = columnStartIndex;\n        this._columnStopIndex = columnStopIndex;\n        this._rowStartIndex = rowStartIndex;\n        this._rowStopIndex = rowStopIndex;\n      }\n    }\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Grid.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_debounceScrollEnded\",\n    value: function _debounceScrollEnded() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = requestAnimationTimeout(this._debounceScrollEndedCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n\n    /**\n     * Check for batched CellMeasurer size invalidations.\n     * This will occur the first time one or more previously unmeasured cells are rendered.\n     */\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number' && typeof this._deferredInvalidateRowIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n      }\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref6) {\n      var _this3 = this;\n\n      var scrollLeft = _ref6.scrollLeft,\n          scrollTop = _ref6.scrollTop,\n          totalColumnsWidth = _ref6.totalColumnsWidth,\n          totalRowsHeight = _ref6.totalRowsHeight;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref7) {\n          var scrollLeft = _ref7.scrollLeft,\n              scrollTop = _ref7.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalRowsHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalColumnsWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_isScrolling\",\n    value: function _isScrolling() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      // If isScrolling is defined in props, use it to override the value in state\n      // This is a performance optimization for WindowScroller + Grid\n      return Object.hasOwnProperty.call(props, 'isScrolling') ? Boolean(props.isScrolling) : Boolean(state.isScrolling);\n    }\n  }, {\n    key: \"_maybeCallOnScrollbarPresenceChange\",\n    value: function _maybeCallOnScrollbarPresenceChange() {\n      if (this._scrollbarPresenceChanged) {\n        var onScrollbarPresenceChange = this.props.onScrollbarPresenceChange;\n        this._scrollbarPresenceChanged = false;\n        onScrollbarPresenceChange({\n          horizontal: this._horizontalScrollBarSize > 0,\n          size: this.state.instanceProps.scrollbarSize,\n          vertical: this._verticalScrollBarSize > 0\n        });\n      }\n    }\n  }, {\n    key: \"scrollToPosition\",\n\n    /**\n     * Scroll to the specified offset(s).\n     * Useful for animating position changes.\n     */\n    value: function scrollToPosition(_ref8) {\n      var scrollLeft = _ref8.scrollLeft,\n          scrollTop = _ref8.scrollTop;\n\n      var stateUpdate = Grid._getScrollToPositionStateUpdate({\n        prevState: this.state,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollLeft(props, state);\n    }\n  }, {\n    key: \"_updateScrollLeftForScrollToColumn\",\n    value: function _updateScrollLeftForScrollToColumn() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollLeftForScrollToColumnStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollTop(props, state);\n    }\n  }, {\n    key: \"_resetStyleCache\",\n    value: function _resetStyleCache() {\n      var styleCache = this._styleCache;\n      var cellCache = this._cellCache;\n      var isScrollingOptOut = this.props.isScrollingOptOut; // Reset cell and style caches once scrolling stops.\n      // This makes Grid simpler to use (since cells commonly change).\n      // And it keeps the caches from growing too large.\n      // Performance is most sensitive when a user is scrolling.\n      // Don't clear visible cells from cellCache if isScrollingOptOut is specified.\n      // This keeps the cellCache to a resonable size.\n\n      this._cellCache = {};\n      this._styleCache = {}; // Copy over the visible cell styles so avoid unnecessary re-render.\n\n      for (var rowIndex = this._rowStartIndex; rowIndex <= this._rowStopIndex; rowIndex++) {\n        for (var columnIndex = this._columnStartIndex; columnIndex <= this._columnStopIndex; columnIndex++) {\n          var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n          this._styleCache[key] = styleCache[key];\n\n          if (isScrollingOptOut) {\n            this._cellCache[key] = cellCache[key];\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_updateScrollTopForScrollToRow\",\n    value: function _updateScrollTopForScrollToRow() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollTopForScrollToRowStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var newState = {};\n\n      if (nextProps.columnCount === 0 && prevState.scrollLeft !== 0 || nextProps.rowCount === 0 && prevState.scrollTop !== 0) {\n        newState.scrollLeft = 0;\n        newState.scrollTop = 0; // only use scroll{Left,Top} from props if scrollTo{Column,Row} isn't specified\n        // scrollTo{Column,Row} should override scroll{Left,Top}\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft && nextProps.scrollToColumn < 0 || nextProps.scrollTop !== prevState.scrollTop && nextProps.scrollToRow < 0) {\n        Object.assign(newState, Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: nextProps.scrollLeft,\n          scrollTop: nextProps.scrollTop\n        }));\n      }\n\n      var instanceProps = prevState.instanceProps; // Initially we should not clearStyleCache\n\n      newState.needToResetStyleCache = false;\n\n      if (nextProps.columnWidth !== instanceProps.prevColumnWidth || nextProps.rowHeight !== instanceProps.prevRowHeight) {\n        // Reset cache. set it to {} in render\n        newState.needToResetStyleCache = true;\n      }\n\n      instanceProps.columnSizeAndPositionManager.configure({\n        cellCount: nextProps.columnCount,\n        estimatedCellSize: Grid._getEstimatedColumnSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.columnWidth)\n      });\n      instanceProps.rowSizeAndPositionManager.configure({\n        cellCount: nextProps.rowCount,\n        estimatedCellSize: Grid._getEstimatedRowSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.rowHeight)\n      });\n\n      if (instanceProps.prevColumnCount === 0 || instanceProps.prevRowCount === 0) {\n        instanceProps.prevColumnCount = 0;\n        instanceProps.prevRowCount = 0;\n      } // If scrolling is controlled outside this component, clear cache when scrolling stops\n\n\n      if (nextProps.autoHeight && nextProps.isScrolling === false && instanceProps.prevIsScrolling === true) {\n        Object.assign(newState, {\n          isScrolling: false\n        });\n      }\n\n      var maybeStateA;\n      var maybeStateB;\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevColumnCount,\n        cellSize: typeof instanceProps.prevColumnWidth === 'number' ? instanceProps.prevColumnWidth : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.columnSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.columnCount,\n        nextCellSize: typeof nextProps.columnWidth === 'number' ? nextProps.columnWidth : null,\n        nextScrollToIndex: nextProps.scrollToColumn,\n        scrollToIndex: instanceProps.prevScrollToColumn,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateA = Grid._getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState);\n        }\n      });\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevRowCount,\n        cellSize: typeof instanceProps.prevRowHeight === 'number' ? instanceProps.prevRowHeight : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.rowSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.rowCount,\n        nextCellSize: typeof nextProps.rowHeight === 'number' ? nextProps.rowHeight : null,\n        nextScrollToIndex: nextProps.scrollToRow,\n        scrollToIndex: instanceProps.prevScrollToRow,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateB = Grid._getScrollTopForScrollToRowStateUpdate(nextProps, prevState);\n        }\n      });\n      instanceProps.prevColumnCount = nextProps.columnCount;\n      instanceProps.prevColumnWidth = nextProps.columnWidth;\n      instanceProps.prevIsScrolling = nextProps.isScrolling === true;\n      instanceProps.prevRowCount = nextProps.rowCount;\n      instanceProps.prevRowHeight = nextProps.rowHeight;\n      instanceProps.prevScrollToColumn = nextProps.scrollToColumn;\n      instanceProps.prevScrollToRow = nextProps.scrollToRow; // getting scrollBarSize (moved from componentWillMount)\n\n      instanceProps.scrollbarSize = nextProps.getScrollbarSize();\n\n      if (instanceProps.scrollbarSize === undefined) {\n        instanceProps.scrollbarSizeMeasured = false;\n        instanceProps.scrollbarSize = 0;\n      } else {\n        instanceProps.scrollbarSizeMeasured = true;\n      }\n\n      newState.instanceProps = instanceProps;\n      return _objectSpread({}, newState, {}, maybeStateA, {}, maybeStateB);\n    }\n  }, {\n    key: \"_getEstimatedColumnSize\",\n    value: function _getEstimatedColumnSize(props) {\n      return typeof props.columnWidth === 'number' ? props.columnWidth : props.estimatedColumnSize;\n    }\n  }, {\n    key: \"_getEstimatedRowSize\",\n    value: function _getEstimatedRowSize(props) {\n      return typeof props.rowHeight === 'number' ? props.rowHeight : props.estimatedRowSize;\n    }\n  }, {\n    key: \"_getScrollToPositionStateUpdate\",\n\n    /**\n     * Get the updated state after scrolling to\n     * scrollLeft and scrollTop\n     */\n    value: function _getScrollToPositionStateUpdate(_ref9) {\n      var prevState = _ref9.prevState,\n          scrollLeft = _ref9.scrollLeft,\n          scrollTop = _ref9.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0) {\n        newState.scrollDirectionHorizontal = scrollLeft > prevState.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (typeof scrollTop === 'number' && scrollTop >= 0) {\n        newState.scrollDirectionVertical = scrollTop > prevState.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollTop = scrollTop;\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft || typeof scrollTop === 'number' && scrollTop >= 0 && scrollTop !== prevState.scrollTop) {\n        return newState;\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_wrapSizeGetter\",\n    value: function _wrapSizeGetter(value) {\n      return typeof value === 'function' ? value : function () {\n        return value;\n      };\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft(nextProps, prevState) {\n      var columnCount = nextProps.columnCount,\n          height = nextProps.height,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToColumn = nextProps.scrollToColumn,\n          width = nextProps.width;\n      var scrollLeft = prevState.scrollLeft,\n          instanceProps = prevState.instanceProps;\n\n      if (columnCount > 0) {\n        var finalColumn = columnCount - 1;\n        var targetIndex = scrollToColumn < 0 ? finalColumn : Math.min(finalColumn, scrollToColumn);\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n        return instanceProps.columnSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: width - scrollBarSize,\n          currentOffset: scrollLeft,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollLeftForScrollToColumnStateUpdate\",\n    value: function _getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState) {\n      var scrollLeft = prevState.scrollLeft;\n\n      var calculatedScrollLeft = Grid._getCalculatedScrollLeft(nextProps, prevState);\n\n      if (typeof calculatedScrollLeft === 'number' && calculatedScrollLeft >= 0 && scrollLeft !== calculatedScrollLeft) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: calculatedScrollLeft,\n          scrollTop: -1\n        });\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop(nextProps, prevState) {\n      var height = nextProps.height,\n          rowCount = nextProps.rowCount,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToRow = nextProps.scrollToRow,\n          width = nextProps.width;\n      var scrollTop = prevState.scrollTop,\n          instanceProps = prevState.instanceProps;\n\n      if (rowCount > 0) {\n        var finalRow = rowCount - 1;\n        var targetIndex = scrollToRow < 0 ? finalRow : Math.min(finalRow, scrollToRow);\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n        return instanceProps.rowSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: height - scrollBarSize,\n          currentOffset: scrollTop,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollTopForScrollToRowStateUpdate\",\n    value: function _getScrollTopForScrollToRowStateUpdate(nextProps, prevState) {\n      var scrollTop = prevState.scrollTop;\n\n      var calculatedScrollTop = Grid._getCalculatedScrollTop(nextProps, prevState);\n\n      if (typeof calculatedScrollTop === 'number' && calculatedScrollTop >= 0 && scrollTop !== calculatedScrollTop) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: -1,\n          scrollTop: calculatedScrollTop\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return Grid;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string.isRequired,\n  \"aria-readonly\": PropTypes.bool,\n\n  /**\n   * Set the width of the inner scrollable container to 'auto'.\n   * This is useful for single-column Grids to ensure that the column doesn't extend below a vertical scrollbar.\n   */\n  \"autoContainerWidth\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed width from the scrollingContainer so that the total width of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoWidth\": PropTypes.bool.isRequired,\n\n  /** Responsible for rendering a cell given an row and column index.  */\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof bpfrpt_proptype_CellRenderer === \"function\" ? bpfrpt_proptype_CellRenderer.isRequired ? bpfrpt_proptype_CellRenderer.isRequired : bpfrpt_proptype_CellRenderer : PropTypes.shape(bpfrpt_proptype_CellRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a group of cells given their index ranges.  */\n  \"cellRangeRenderer\": function cellRangeRenderer() {\n    return (typeof bpfrpt_proptype_CellRangeRenderer === \"function\" ? bpfrpt_proptype_CellRangeRenderer.isRequired ? bpfrpt_proptype_CellRangeRenderer.isRequired : bpfrpt_proptype_CellRangeRenderer : PropTypes.shape(bpfrpt_proptype_CellRangeRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Optional custom CSS class name to attach to root Grid element.  */\n  \"className\": PropTypes.string,\n\n  /** Number of columns in grid.  */\n  \"columnCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed column width (number) or a function that returns the width of a column given its index.  */\n  \"columnWidth\": function columnWidth() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Unfiltered props for the Grid container. */\n  \"containerProps\": PropTypes.object,\n\n  /** ARIA role for the cell-container.  */\n  \"containerRole\": PropTypes.string.isRequired,\n\n  /** Optional inline style applied to inner cell-container */\n  \"containerStyle\": PropTypes.object.isRequired,\n\n  /**\n   * If CellMeasurer is used to measure this Grid's children, this should be a pointer to its CellMeasurerCache.\n   * A shared CellMeasurerCache reference enables Grid and CellMeasurer to share measurement data.\n   */\n  \"deferredMeasurementCache\": PropTypes.object,\n\n  /**\n   * Used to estimate the total width of a Grid before all of its columns have actually been measured.\n   * The estimated total width is adjusted as columns are rendered.\n   */\n  \"estimatedColumnSize\": PropTypes.number.isRequired,\n\n  /**\n   * Used to estimate the total height of a Grid before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Exposed for testing purposes only.  */\n  \"getScrollbarSize\": PropTypes.func.isRequired,\n\n  /** Height of Grid; this property determines the number of visible (vs virtualized) rows.  */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional custom id to attach to root Grid element.  */\n  \"id\": PropTypes.string,\n\n  /**\n   * Override internal is-scrolling state tracking.\n   * This property is primarily intended for use with the WindowScroller component.\n   */\n  \"isScrolling\": PropTypes.bool,\n\n  /**\n   * Opt-out of isScrolling param passed to cellRangeRenderer.\n   * To avoid the extra render when scroll stops.\n   */\n  \"isScrollingOptOut\": PropTypes.bool.isRequired,\n\n  /** Optional renderer to be used in place of rows when either :rowCount or :columnCount is 0.  */\n  \"noContentRenderer\": function noContentRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /**\n   * Called whenever a horizontal or vertical scrollbar is added or removed.\n   * This prop is not intended for end-user use;\n   * It is used by MultiGrid to support fixed-row/fixed-column scroll syncing.\n   */\n  \"onScrollbarPresenceChange\": PropTypes.func.isRequired,\n\n  /** Callback invoked with information about the section of the Grid that was just rendered.  */\n  \"onSectionRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Number of columns to render before/after the visible section of the grid.\n   * These columns can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanColumnCount\": PropTypes.number.isRequired,\n\n  /**\n   * Calculates the number of cells to overscan before and after a specified range.\n   * This function ensures that overscanning doesn't exceed the available cells.\n   */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible section of the grid.\n   * These rows can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** ARIA role for the grid element.  */\n  \"role\": PropTypes.string.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * Should implement the following interface: ({ index: number }): number\n   */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in grid.  */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** Wait this amount of time after the last scroll event before resetting Grid `pointer-events`. */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Horizontal offset. */\n  \"scrollLeft\": PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Column index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToColumn\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToRow\": PropTypes.number.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of Grid; this property determines the number of visible (vs virtualized) columns.  */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(Grid, \"defaultProps\", {\n  'aria-label': 'grid',\n  'aria-readonly': true,\n  autoContainerWidth: false,\n  autoHeight: false,\n  autoWidth: false,\n  cellRangeRenderer: defaultCellRangeRenderer,\n  containerRole: 'rowgroup',\n  containerStyle: {},\n  estimatedColumnSize: 100,\n  estimatedRowSize: 30,\n  getScrollbarSize: scrollbarSize,\n  noContentRenderer: renderNull,\n  onScroll: function onScroll() {},\n  onScrollbarPresenceChange: function onScrollbarPresenceChange() {},\n  onSectionRendered: function onSectionRendered() {},\n  overscanColumnCount: 0,\n  overscanIndicesGetter: defaultOverscanIndicesGetter,\n  overscanRowCount: 10,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  scrollToAlignment: 'auto',\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  tabIndex: 0,\n  isScrollingOptOut: false\n});\n\npolyfill(Grid);\nexport default Grid;\nimport { bpfrpt_proptype_CellRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellRangeRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellPosition } from \"./types\";\nimport { bpfrpt_proptype_CellSize } from \"./types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"./types\";\nimport { bpfrpt_proptype_NoContentRenderer } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport { bpfrpt_proptype_ScrollbarPresenceChange } from \"./types\";\nimport { bpfrpt_proptype_RenderedSection } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"./types\";\nimport { bpfrpt_proptype_Alignment } from \"./types\";\nimport { bpfrpt_proptype_CellCache } from \"./types\";\nimport { bpfrpt_proptype_StyleCache } from \"./types\";\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";","import { caf, raf } from './animationFrame';\nvar bpfrpt_proptype_AnimationTimeoutId = process.env.NODE_ENV === 'production' ? null : {\n  \"id\": PropTypes.number.isRequired\n};\nexport var cancelAnimationTimeout = function cancelAnimationTimeout(frame) {\n  return caf(frame.id);\n};\n/**\n * Recursively calls requestAnimationFrame until a specified delay has been met or exceeded.\n * When the delay time has been reached the function you're timing out will be called.\n *\n * Credit: Joe Lambert (https://gist.github.com/joelambert/1002116#file-requesttimeout-js)\n */\n\nexport var requestAnimationTimeout = function requestAnimationTimeout(callback, delay) {\n  var start; // wait for end of processing current event handler, because event handler may be long\n\n  Promise.resolve().then(function () {\n    start = Date.now();\n  });\n\n  var timeout = function timeout() {\n    if (Date.now() - start >= delay) {\n      callback.call();\n    } else {\n      frame.id = raf(timeout);\n    }\n  };\n\n  var frame = {\n    id: raf(timeout)\n  };\n  return frame;\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_AnimationTimeoutId };","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","/**\n * Default implementation of cellRangeRenderer used by Grid.\n * This renderer supports cell-caching while the user is scrolling.\n */\nexport default function defaultCellRangeRenderer(_ref) {\n  var cellCache = _ref.cellCache,\n      cellRenderer = _ref.cellRenderer,\n      columnSizeAndPositionManager = _ref.columnSizeAndPositionManager,\n      columnStartIndex = _ref.columnStartIndex,\n      columnStopIndex = _ref.columnStopIndex,\n      deferredMeasurementCache = _ref.deferredMeasurementCache,\n      horizontalOffsetAdjustment = _ref.horizontalOffsetAdjustment,\n      isScrolling = _ref.isScrolling,\n      isScrollingOptOut = _ref.isScrollingOptOut,\n      parent = _ref.parent,\n      rowSizeAndPositionManager = _ref.rowSizeAndPositionManager,\n      rowStartIndex = _ref.rowStartIndex,\n      rowStopIndex = _ref.rowStopIndex,\n      styleCache = _ref.styleCache,\n      verticalOffsetAdjustment = _ref.verticalOffsetAdjustment,\n      visibleColumnIndices = _ref.visibleColumnIndices,\n      visibleRowIndices = _ref.visibleRowIndices;\n  var renderedCells = []; // Browsers have native size limits for elements (eg Chrome 33M pixels, IE 1.5M pixes).\n  // User cannot scroll beyond these size limitations.\n  // In order to work around this, ScalingCellSizeAndPositionManager compresses offsets.\n  // We should never cache styles for compressed offsets though as this can lead to bugs.\n  // See issue #576 for more.\n\n  var areOffsetsAdjusted = columnSizeAndPositionManager.areOffsetsAdjusted() || rowSizeAndPositionManager.areOffsetsAdjusted();\n  var canCacheStyle = !isScrolling && !areOffsetsAdjusted;\n\n  for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n    var rowDatum = rowSizeAndPositionManager.getSizeAndPositionOfCell(rowIndex);\n\n    for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n      var columnDatum = columnSizeAndPositionManager.getSizeAndPositionOfCell(columnIndex);\n      var isVisible = columnIndex >= visibleColumnIndices.start && columnIndex <= visibleColumnIndices.stop && rowIndex >= visibleRowIndices.start && rowIndex <= visibleRowIndices.stop;\n      var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n      var style = void 0; // Cache style objects so shallow-compare doesn't re-render unnecessarily.\n\n      if (canCacheStyle && styleCache[key]) {\n        style = styleCache[key];\n      } else {\n        // In deferred mode, cells will be initially rendered before we know their size.\n        // Don't interfere with CellMeasurer's measurements by setting an invalid size.\n        if (deferredMeasurementCache && !deferredMeasurementCache.has(rowIndex, columnIndex)) {\n          // Position not-yet-measured cells at top/left 0,0,\n          // And give them width/height of 'auto' so they can grow larger than the parent Grid if necessary.\n          // Positioning them further to the right/bottom influences their measured size.\n          style = {\n            height: 'auto',\n            left: 0,\n            position: 'absolute',\n            top: 0,\n            width: 'auto'\n          };\n        } else {\n          style = {\n            height: rowDatum.size,\n            left: columnDatum.offset + horizontalOffsetAdjustment,\n            position: 'absolute',\n            top: rowDatum.offset + verticalOffsetAdjustment,\n            width: columnDatum.size\n          };\n          styleCache[key] = style;\n        }\n      }\n\n      var cellRendererParams = {\n        columnIndex: columnIndex,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent,\n        rowIndex: rowIndex,\n        style: style\n      };\n      var renderedCell = void 0; // Avoid re-creating cells while scrolling.\n      // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n      // If a scroll is in progress- cache and reuse cells.\n      // This cache will be thrown away once scrolling completes.\n      // However if we are scaling scroll positions and sizes, we should also avoid caching.\n      // This is because the offset changes slightly as scroll position changes and caching leads to stale values.\n      // For more info refer to issue #395\n      //\n      // If isScrollingOptOut is specified, we always cache cells.\n      // For more info refer to issue #1028\n\n      if ((isScrollingOptOut || isScrolling) && !horizontalOffsetAdjustment && !verticalOffsetAdjustment) {\n        if (!cellCache[key]) {\n          cellCache[key] = cellRenderer(cellRendererParams);\n        }\n\n        renderedCell = cellCache[key]; // If the user is no longer scrolling, don't cache cells.\n        // This makes dynamic cell content difficult for users and would also lead to a heavier memory footprint.\n      } else {\n        renderedCell = cellRenderer(cellRendererParams);\n      }\n\n      if (renderedCell == null || renderedCell === false) {\n        continue;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        warnAboutMissingStyle(parent, renderedCell);\n      }\n\n      renderedCells.push(renderedCell);\n    }\n  }\n\n  return renderedCells;\n}\n\nfunction warnAboutMissingStyle(parent, renderedCell) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (renderedCell) {\n      // If the direct child is a CellMeasurer, then we should check its child\n      // See issue #611\n      if (renderedCell.type && renderedCell.type.__internalCellMeasurerFlag) {\n        renderedCell = renderedCell.props.children;\n      }\n\n      if (renderedCell && renderedCell.props && renderedCell.props.style === undefined && parent.__warnedAboutMissingStyle !== true) {\n        parent.__warnedAboutMissingStyle = true;\n        console.warn('Rendered cell should include style property for positioning.');\n      }\n    }\n  }\n}\n\nimport { bpfrpt_proptype_CellRangeRendererParams } from \"./types\";","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n  // Make sure we render at least 1 cell extra before and after (except near boundaries)\n  // This is necessary in order to support keyboard navigation (TAB/SHIFT+TAB) in some cases\n  // For more info see issues #625\n  overscanCellsCount = Math.max(1, overscanCellsCount);\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - 1),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + 1)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","var bpfrpt_proptype_ScrollIndices = process.env.NODE_ENV === 'production' ? null : {\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_ScrollIndices };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\n/**\n * This HOC decorates a virtualized component and responds to arrow-key events by scrolling one row or column at a time.\n */\n\nvar ArrowKeyStepper = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ArrowKeyStepper, _React$PureComponent);\n\n  function ArrowKeyStepper() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ArrowKeyStepper);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ArrowKeyStepper)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollToColumn: 0,\n      scrollToRow: 0,\n      instanceProps: {\n        prevScrollToColumn: 0,\n        prevScrollToRow: 0\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onKeyDown\", function (event) {\n      var _this$props = _this.props,\n          columnCount = _this$props.columnCount,\n          disabled = _this$props.disabled,\n          mode = _this$props.mode,\n          rowCount = _this$props.rowCount;\n\n      if (disabled) {\n        return;\n      }\n\n      var _this$_getScrollState = _this._getScrollState(),\n          scrollToColumnPrevious = _this$_getScrollState.scrollToColumn,\n          scrollToRowPrevious = _this$_getScrollState.scrollToRow;\n\n      var _this$_getScrollState2 = _this._getScrollState(),\n          scrollToColumn = _this$_getScrollState2.scrollToColumn,\n          scrollToRow = _this$_getScrollState2.scrollToRow; // The above cases all prevent default event event behavior.\n      // This is to keep the grid from scrolling after the snap-to update.\n\n\n      switch (event.key) {\n        case 'ArrowDown':\n          scrollToRow = mode === 'cells' ? Math.min(scrollToRow + 1, rowCount - 1) : Math.min(_this._rowStopIndex + 1, rowCount - 1);\n          break;\n\n        case 'ArrowLeft':\n          scrollToColumn = mode === 'cells' ? Math.max(scrollToColumn - 1, 0) : Math.max(_this._columnStartIndex - 1, 0);\n          break;\n\n        case 'ArrowRight':\n          scrollToColumn = mode === 'cells' ? Math.min(scrollToColumn + 1, columnCount - 1) : Math.min(_this._columnStopIndex + 1, columnCount - 1);\n          break;\n\n        case 'ArrowUp':\n          scrollToRow = mode === 'cells' ? Math.max(scrollToRow - 1, 0) : Math.max(_this._rowStartIndex - 1, 0);\n          break;\n      }\n\n      if (scrollToColumn !== scrollToColumnPrevious || scrollToRow !== scrollToRowPrevious) {\n        event.preventDefault();\n\n        _this._updateScrollState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref) {\n      var columnStartIndex = _ref.columnStartIndex,\n          columnStopIndex = _ref.columnStopIndex,\n          rowStartIndex = _ref.rowStartIndex,\n          rowStopIndex = _ref.rowStopIndex;\n      _this._columnStartIndex = columnStartIndex;\n      _this._columnStopIndex = columnStopIndex;\n      _this._rowStartIndex = rowStartIndex;\n      _this._rowStopIndex = rowStopIndex;\n    });\n\n    return _this;\n  }\n\n  _createClass(ArrowKeyStepper, [{\n    key: \"setScrollIndexes\",\n    value: function setScrollIndexes(_ref2) {\n      var scrollToColumn = _ref2.scrollToColumn,\n          scrollToRow = _ref2.scrollToRow;\n      this.setState({\n        scrollToRow: scrollToRow,\n        scrollToColumn: scrollToColumn\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          className = _this$props2.className,\n          children = _this$props2.children;\n\n      var _this$_getScrollState3 = this._getScrollState(),\n          scrollToColumn = _this$_getScrollState3.scrollToColumn,\n          scrollToRow = _this$_getScrollState3.scrollToRow;\n\n      return React.createElement(\"div\", {\n        className: className,\n        onKeyDown: this._onKeyDown\n      }, children({\n        onSectionRendered: this._onSectionRendered,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow\n      }));\n    }\n  }, {\n    key: \"_getScrollState\",\n    value: function _getScrollState() {\n      return this.props.isControlled ? this.props : this.state;\n    }\n  }, {\n    key: \"_updateScrollState\",\n    value: function _updateScrollState(_ref3) {\n      var scrollToColumn = _ref3.scrollToColumn,\n          scrollToRow = _ref3.scrollToRow;\n      var _this$props3 = this.props,\n          isControlled = _this$props3.isControlled,\n          onScrollToChange = _this$props3.onScrollToChange;\n\n      if (typeof onScrollToChange === 'function') {\n        onScrollToChange({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n\n      if (!isControlled) {\n        this.setState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.isControlled) {\n        return {};\n      }\n\n      if (nextProps.scrollToColumn !== prevState.instanceProps.prevScrollToColumn || nextProps.scrollToRow !== prevState.instanceProps.prevScrollToRow) {\n        return _objectSpread({}, prevState, {\n          scrollToColumn: nextProps.scrollToColumn,\n          scrollToRow: nextProps.scrollToRow,\n          instanceProps: {\n            prevScrollToColumn: nextProps.scrollToColumn,\n            prevScrollToRow: nextProps.scrollToRow\n          }\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return ArrowKeyStepper;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"children\": PropTypes.func.isRequired,\n  \"className\": PropTypes.string,\n  \"columnCount\": PropTypes.number.isRequired,\n  \"disabled\": PropTypes.bool.isRequired,\n  \"isControlled\": PropTypes.bool.isRequired,\n  \"mode\": PropTypes.oneOf([\"cells\", \"edges\"]).isRequired,\n  \"onScrollToChange\": PropTypes.func,\n  \"rowCount\": PropTypes.number.isRequired,\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(ArrowKeyStepper, \"defaultProps\", {\n  disabled: false,\n  isControlled: false,\n  mode: 'edges',\n  scrollToColumn: 0,\n  scrollToRow: 0\n});\n\npolyfill(ArrowKeyStepper);\nexport default ArrowKeyStepper;\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_ScrollIndices } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport createDetectElementResize from '../vendor/detectElementResize';\nvar AutoSizer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AutoSizer, _React$Component);\n\n  function AutoSizer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AutoSizer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AutoSizer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      height: _this.props.defaultHeight || 0,\n      width: _this.props.defaultWidth || 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_parentNode\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_autoSizer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      var _this$props = _this.props,\n          disableHeight = _this$props.disableHeight,\n          disableWidth = _this$props.disableWidth,\n          onResize = _this$props.onResize;\n\n      if (_this._parentNode) {\n        // Guard against AutoSizer component being removed from the DOM immediately after being added.\n        // This can result in invalid style values which can result in NaN values if we don't handle them.\n        // See issue #150 for more context.\n        var height = _this._parentNode.offsetHeight || 0;\n        var width = _this._parentNode.offsetWidth || 0;\n        var win = _this._window || window;\n        var style = win.getComputedStyle(_this._parentNode) || {};\n        var paddingLeft = parseInt(style.paddingLeft, 10) || 0;\n        var paddingRight = parseInt(style.paddingRight, 10) || 0;\n        var paddingTop = parseInt(style.paddingTop, 10) || 0;\n        var paddingBottom = parseInt(style.paddingBottom, 10) || 0;\n        var newHeight = height - paddingTop - paddingBottom;\n        var newWidth = width - paddingLeft - paddingRight;\n\n        if (!disableHeight && _this.state.height !== newHeight || !disableWidth && _this.state.width !== newWidth) {\n          _this.setState({\n            height: height - paddingTop - paddingBottom,\n            width: width - paddingLeft - paddingRight\n          });\n\n          onResize({\n            height: height,\n            width: width\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (autoSizer) {\n      _this._autoSizer = autoSizer;\n    });\n\n    return _this;\n  }\n\n  _createClass(AutoSizer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var nonce = this.props.nonce;\n\n      if (this._autoSizer && this._autoSizer.parentNode && this._autoSizer.parentNode.ownerDocument && this._autoSizer.parentNode.ownerDocument.defaultView && this._autoSizer.parentNode instanceof this._autoSizer.parentNode.ownerDocument.defaultView.HTMLElement) {\n        // Delay access of parentNode until mount.\n        // This handles edge-cases where the component has already been unmounted before its ref has been set,\n        // As well as libraries like react-lite which have a slightly different lifecycle.\n        this._parentNode = this._autoSizer.parentNode;\n        this._window = this._autoSizer.parentNode.ownerDocument.defaultView; // Defer requiring resize handler in order to support server-side rendering.\n        // See issue #41\n\n        this._detectElementResize = createDetectElementResize(nonce, this._window);\n\n        this._detectElementResize.addResizeListener(this._parentNode, this._onResize);\n\n        this._onResize();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._detectElementResize && this._parentNode) {\n        this._detectElementResize.removeResizeListener(this._parentNode, this._onResize);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          className = _this$props2.className,\n          disableHeight = _this$props2.disableHeight,\n          disableWidth = _this$props2.disableWidth,\n          style = _this$props2.style;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width; // Outer div should not force width/height since that may prevent containers from shrinking.\n      // Inner component should overflow and use calculated width/height.\n      // See issue #68 for more information.\n\n      var outerStyle = {\n        overflow: 'visible'\n      };\n      var childParams = {};\n\n      if (!disableHeight) {\n        outerStyle.height = 0;\n        childParams.height = height;\n      }\n\n      if (!disableWidth) {\n        outerStyle.width = 0;\n        childParams.width = width;\n      }\n      /**\n       * TODO: Avoid rendering children before the initial measurements have been collected.\n       * At best this would just be wasting cycles.\n       * Add this check into version 10 though as it could break too many ref callbacks in version 9.\n       * Note that if default width/height props were provided this would still work with SSR.\n      if (\n        height !== 0 &&\n        width !== 0\n      ) {\n        child = children({ height, width })\n      }\n      */\n\n\n      return React.createElement(\"div\", {\n        className: className,\n        ref: this._setRef,\n        style: _objectSpread({}, outerStyle, {}, style)\n      }, children(childParams));\n    }\n  }]);\n\n  return AutoSizer;\n}(React.Component), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /** Function responsible for rendering children.*/\n  \"children\": PropTypes.func.isRequired,\n\n  /** Optional custom CSS class name to attach to root AutoSizer element.  */\n  \"className\": PropTypes.string,\n\n  /** Default height to use for initial render; useful for SSR */\n  \"defaultHeight\": PropTypes.number,\n\n  /** Default width to use for initial render; useful for SSR */\n  \"defaultWidth\": PropTypes.number,\n\n  /** Disable dynamic :height property */\n  \"disableHeight\": PropTypes.bool.isRequired,\n\n  /** Disable dynamic :width property */\n  \"disableWidth\": PropTypes.bool.isRequired,\n\n  /** Nonce of the inlined stylesheet for Content Security Policy */\n  \"nonce\": PropTypes.string,\n\n  /** Callback to be invoked on-resize */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object\n}), _temp);\n\n_defineProperty(AutoSizer, \"defaultProps\", {\n  onResize: function onResize() {},\n  disableHeight: false,\n  disableWidth: false,\n  style: {}\n});\n\nexport { AutoSizer as default };\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\n\n/**\n * Wraps a cell and measures its rendered content.\n * Measurements are stored in a per-cell cache.\n * Cached-content is not be re-measured.\n */\nvar CellMeasurer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CellMeasurer, _React$PureComponent);\n\n  function CellMeasurer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CellMeasurer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CellMeasurer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_measure\", function () {\n      var _this$props = _this.props,\n          cache = _this$props.cache,\n          _this$props$columnInd = _this$props.columnIndex,\n          columnIndex = _this$props$columnInd === void 0 ? 0 : _this$props$columnInd,\n          parent = _this$props.parent,\n          _this$props$rowIndex = _this$props.rowIndex,\n          rowIndex = _this$props$rowIndex === void 0 ? _this.props.index || 0 : _this$props$rowIndex;\n\n      var _this$_getCellMeasure = _this._getCellMeasurements(),\n          height = _this$_getCellMeasure.height,\n          width = _this$_getCellMeasure.width;\n\n      if (height !== cache.getHeight(rowIndex, columnIndex) || width !== cache.getWidth(rowIndex, columnIndex)) {\n        cache.set(rowIndex, columnIndex, width, height);\n\n        if (parent && typeof parent.recomputeGridSize === 'function') {\n          parent.recomputeGridSize({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('CellMeasurer registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      if (element) {\n        _this._maybeMeasureCell();\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(CellMeasurer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return typeof children === 'function' ? children({\n        measure: this._measure,\n        registerChild: this._registerChild\n      }) : children;\n    }\n  }, {\n    key: \"_getCellMeasurements\",\n    value: function _getCellMeasurements() {\n      var cache = this.props.cache;\n      var node = this._child || findDOMNode(this); // TODO Check for a bad combination of fixedWidth and missing numeric width or vice versa with height\n\n      if (node && node.ownerDocument && node.ownerDocument.defaultView && node instanceof node.ownerDocument.defaultView.HTMLElement) {\n        var styleWidth = node.style.width;\n        var styleHeight = node.style.height; // If we are re-measuring a cell that has already been measured,\n        // It will have a hard-coded width/height from the previous measurement.\n        // The fact that we are measuring indicates this measurement is probably stale,\n        // So explicitly clear it out (eg set to \"auto\") so we can recalculate.\n        // See issue #593 for more info.\n        // Even if we are measuring initially- if we're inside of a MultiGrid component,\n        // Explicitly clear width/height before measuring to avoid being tainted by another Grid.\n        // eg top/left Grid renders before bottom/right Grid\n        // Since the CellMeasurerCache is shared between them this taints derived cell size values.\n\n        if (!cache.hasFixedWidth()) {\n          node.style.width = 'auto';\n        }\n\n        if (!cache.hasFixedHeight()) {\n          node.style.height = 'auto';\n        }\n\n        var height = Math.ceil(node.offsetHeight);\n        var width = Math.ceil(node.offsetWidth); // Reset after measuring to avoid breaking styles; see #660\n\n        if (styleWidth) {\n          node.style.width = styleWidth;\n        }\n\n        if (styleHeight) {\n          node.style.height = styleHeight;\n        }\n\n        return {\n          height: height,\n          width: width\n        };\n      } else {\n        return {\n          height: 0,\n          width: 0\n        };\n      }\n    }\n  }, {\n    key: \"_maybeMeasureCell\",\n    value: function _maybeMeasureCell() {\n      var _this$props2 = this.props,\n          cache = _this$props2.cache,\n          _this$props2$columnIn = _this$props2.columnIndex,\n          columnIndex = _this$props2$columnIn === void 0 ? 0 : _this$props2$columnIn,\n          parent = _this$props2.parent,\n          _this$props2$rowIndex = _this$props2.rowIndex,\n          rowIndex = _this$props2$rowIndex === void 0 ? this.props.index || 0 : _this$props2$rowIndex;\n\n      if (!cache.has(rowIndex, columnIndex)) {\n        var _this$_getCellMeasure2 = this._getCellMeasurements(),\n            height = _this$_getCellMeasure2.height,\n            width = _this$_getCellMeasure2.width;\n\n        cache.set(rowIndex, columnIndex, width, height); // If size has changed, let Grid know to re-render.\n\n        if (parent && typeof parent.invalidateCellSizeAfterRender === 'function') {\n          parent.invalidateCellSizeAfterRender({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    }\n  }]);\n\n  return CellMeasurer;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"cache\": function cache() {\n    return (typeof bpfrpt_proptype_CellMeasureCache === \"function\" ? bpfrpt_proptype_CellMeasureCache.isRequired ? bpfrpt_proptype_CellMeasureCache.isRequired : bpfrpt_proptype_CellMeasureCache : PropTypes.shape(bpfrpt_proptype_CellMeasureCache).isRequired).apply(this, arguments);\n  },\n  \"children\": PropTypes.oneOfType([PropTypes.func, PropTypes.node]).isRequired,\n  \"columnIndex\": PropTypes.number,\n  \"index\": PropTypes.number,\n  \"parent\": PropTypes.shape({\n    invalidateCellSizeAfterRender: PropTypes.func,\n    recomputeGridSize: PropTypes.func\n  }).isRequired,\n  \"rowIndex\": PropTypes.number\n}), _temp); // Used for DEV mode warning check\n\n_defineProperty(CellMeasurer, \"__internalCellMeasurerFlag\", false);\n\nexport { CellMeasurer as default };\n\nif (process.env.NODE_ENV !== 'production') {\n  CellMeasurer.__internalCellMeasurerFlag = true;\n}\n\nimport { bpfrpt_proptype_CellMeasureCache } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nexport var DEFAULT_HEIGHT = 30;\nexport var DEFAULT_WIDTH = 100; // Enables more intelligent mapping of a given column and row index to an item ID.\n// This prevents a cell cache from being invalidated when its parent collection is modified.\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCache =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCache() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCache);\n\n    _defineProperty(this, \"_cellHeightCache\", {});\n\n    _defineProperty(this, \"_cellWidthCache\", {});\n\n    _defineProperty(this, \"_columnWidthCache\", {});\n\n    _defineProperty(this, \"_rowHeightCache\", {});\n\n    _defineProperty(this, \"_defaultHeight\", void 0);\n\n    _defineProperty(this, \"_defaultWidth\", void 0);\n\n    _defineProperty(this, \"_minHeight\", void 0);\n\n    _defineProperty(this, \"_minWidth\", void 0);\n\n    _defineProperty(this, \"_keyMapper\", void 0);\n\n    _defineProperty(this, \"_hasFixedHeight\", void 0);\n\n    _defineProperty(this, \"_hasFixedWidth\", void 0);\n\n    _defineProperty(this, \"_columnCount\", 0);\n\n    _defineProperty(this, \"_rowCount\", 0);\n\n    _defineProperty(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      var key = _this._keyMapper(0, index);\n\n      return _this._columnWidthCache[key] !== undefined ? _this._columnWidthCache[key] : _this._defaultWidth;\n    });\n\n    _defineProperty(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      var key = _this._keyMapper(index, 0);\n\n      return _this._rowHeightCache[key] !== undefined ? _this._rowHeightCache[key] : _this._defaultHeight;\n    });\n\n    var defaultHeight = params.defaultHeight,\n        defaultWidth = params.defaultWidth,\n        fixedHeight = params.fixedHeight,\n        fixedWidth = params.fixedWidth,\n        keyMapper = params.keyMapper,\n        minHeight = params.minHeight,\n        minWidth = params.minWidth;\n    this._hasFixedHeight = fixedHeight === true;\n    this._hasFixedWidth = fixedWidth === true;\n    this._minHeight = minHeight || 0;\n    this._minWidth = minWidth || 0;\n    this._keyMapper = keyMapper || defaultKeyMapper;\n    this._defaultHeight = Math.max(this._minHeight, typeof defaultHeight === 'number' ? defaultHeight : DEFAULT_HEIGHT);\n    this._defaultWidth = Math.max(this._minWidth, typeof defaultWidth === 'number' ? defaultWidth : DEFAULT_WIDTH);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (this._hasFixedHeight === false && this._hasFixedWidth === false) {\n        console.warn(\"CellMeasurerCache should only measure a cell's width or height. \" + 'You have configured CellMeasurerCache to measure both. ' + 'This will result in poor performance.');\n      }\n\n      if (this._hasFixedHeight === false && this._defaultHeight === 0) {\n        console.warn('Fixed height CellMeasurerCache should specify a :defaultHeight greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n\n      if (this._hasFixedWidth === false && this._defaultWidth === 0) {\n        console.warn('Fixed width CellMeasurerCache should specify a :defaultWidth greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n    }\n  }\n\n  _createClass(CellMeasurerCache, [{\n    key: \"clear\",\n    value: function clear(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      delete this._cellHeightCache[key];\n      delete this._cellWidthCache[key];\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellHeightCache = {};\n      this._cellWidthCache = {};\n      this._columnWidthCache = {};\n      this._rowHeightCache = {};\n      this._rowCount = 0;\n      this._columnCount = 0;\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._hasFixedHeight;\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._hasFixedWidth;\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedHeight) {\n        return this._defaultHeight;\n      } else {\n        var _key = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellHeightCache[_key] !== undefined ? Math.max(this._minHeight, this._cellHeightCache[_key]) : this._defaultHeight;\n      }\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedWidth) {\n        return this._defaultWidth;\n      } else {\n        var _key2 = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellWidthCache[_key2] !== undefined ? Math.max(this._minWidth, this._cellWidthCache[_key2]) : this._defaultWidth;\n      }\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      return this._cellHeightCache[key] !== undefined;\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      if (columnIndex >= this._columnCount) {\n        this._columnCount = columnIndex + 1;\n      }\n\n      if (rowIndex >= this._rowCount) {\n        this._rowCount = rowIndex + 1;\n      } // Size is cached per cell so we don't have to re-measure if cells are re-ordered.\n\n\n      this._cellHeightCache[key] = height;\n      this._cellWidthCache[key] = width;\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"_updateCachedColumnAndRowSizes\",\n    value: function _updateCachedColumnAndRowSizes(rowIndex, columnIndex) {\n      // :columnWidth and :rowHeight are derived based on all cells in a column/row.\n      // Pre-cache these derived values for faster lookup later.\n      // Reads are expected to occur more frequently than writes in this case.\n      // Only update non-fixed dimensions though to avoid doing unnecessary work.\n      if (!this._hasFixedWidth) {\n        var columnWidth = 0;\n\n        for (var i = 0; i < this._rowCount; i++) {\n          columnWidth = Math.max(columnWidth, this.getWidth(i, columnIndex));\n        }\n\n        var columnKey = this._keyMapper(0, columnIndex);\n\n        this._columnWidthCache[columnKey] = columnWidth;\n      }\n\n      if (!this._hasFixedHeight) {\n        var rowHeight = 0;\n\n        for (var _i = 0; _i < this._columnCount; _i++) {\n          rowHeight = Math.max(rowHeight, this.getHeight(rowIndex, _i));\n        }\n\n        var rowKey = this._keyMapper(rowIndex, 0);\n\n        this._rowHeightCache[rowKey] = rowHeight;\n      }\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCache;\n}();\n\nexport { CellMeasurerCache as default };\n\nfunction defaultKeyMapper(rowIndex, columnIndex) {\n  return \"\".concat(rowIndex, \"-\").concat(columnIndex);\n}\n\nimport { bpfrpt_proptype_CellMeasureCache } from \"./types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize'; // @TODO Merge Collection and CollectionView\n\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nvar IS_SCROLLING_TIMEOUT = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n/**\n * Monitors changes in properties (eg. cellCount) and state (eg. scroll offsets) to determine when rendering needs to occur.\n * This component does not render any visible content itself; it defers to the specified :cellLayoutManager.\n */\n\nvar CollectionView =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CollectionView, _React$PureComponent);\n\n  // Invokes callbacks only when their values have changed.\n  function CollectionView() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CollectionView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CollectionView)).call.apply(_getPrototypeOf2, [this].concat(args))); // If this component is being rendered server-side, getScrollbarSize() will return undefined.\n    // We handle this case in componentDidMount()\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_calculateSizeAndPositionDataOnNextUpdate\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnSectionRenderedHelper\", function () {\n      var _this$props = _this.props,\n          cellLayoutManager = _this$props.cellLayoutManager,\n          onSectionRendered = _this$props.onSectionRendered;\n\n      _this._onSectionRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          indices: cellLayoutManager.getLastRenderedIndices()\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_updateScrollPositionForScrollToCell\", function () {\n      var _this$props2 = _this.props,\n          cellLayoutManager = _this$props2.cellLayoutManager,\n          height = _this$props2.height,\n          scrollToAlignment = _this$props2.scrollToAlignment,\n          scrollToCell = _this$props2.scrollToCell,\n          width = _this$props2.width;\n      var _this$state = _this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop;\n\n      if (scrollToCell >= 0) {\n        var scrollPosition = cellLayoutManager.getScrollPositionForCell({\n          align: scrollToAlignment,\n          cellIndex: scrollToCell,\n          height: height,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          width: width\n        });\n\n        if (scrollPosition.scrollLeft !== scrollLeft || scrollPosition.scrollTop !== scrollTop) {\n          _this._setScrollPosition(scrollPosition);\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target !== _this._scrollingContainer) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._enablePointerEventsAfterDelay(); // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scrollTop never exceeds the total height.\n\n\n      var _this$props3 = _this.props,\n          cellLayoutManager = _this$props3.cellLayoutManager,\n          height = _this$props3.height,\n          isScrollingChange = _this$props3.isScrollingChange,\n          width = _this$props3.width;\n      var scrollbarSize = _this._scrollbarSize;\n\n      var _cellLayoutManager$ge = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge.height,\n          totalWidth = _cellLayoutManager$ge.width;\n\n      var scrollLeft = Math.max(0, Math.min(totalWidth - width + scrollbarSize, event.target.scrollLeft));\n      var scrollTop = Math.max(0, Math.min(totalHeight - height + scrollbarSize, event.target.scrollTop)); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (_this.state.scrollLeft !== scrollLeft || _this.state.scrollTop !== scrollTop) {\n        // Browsers with cancelable scroll events (eg. Firefox) interrupt scrolling animations if scrollTop/scrollLeft is set.\n        // Other browsers (eg. Safari) don't scroll as well without the help under certain conditions (DOM or style changes during scrolling).\n        // All things considered, this seems to be the best current work around that I'm aware of.\n        // For more information see https://github.com/bvaughn/react-virtualized/pull/124\n        var scrollPositionChangeReason = event.cancelable ? SCROLL_POSITION_CHANGE_REASONS.OBSERVED : SCROLL_POSITION_CHANGE_REASONS.REQUESTED; // Synchronously set :isScrolling the first time (since _setNextState will reschedule its animation frame each time it's called)\n\n        if (!_this.state.isScrolling) {\n          isScrollingChange(true);\n        }\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollPositionChangeReason: scrollPositionChangeReason,\n          scrollTop: scrollTop\n        });\n      }\n\n      _this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalWidth: totalWidth,\n        totalHeight: totalHeight\n      });\n    });\n\n    _this._scrollbarSize = getScrollbarSize();\n\n    if (_this._scrollbarSize === undefined) {\n      _this._scrollbarSizeMeasured = false;\n      _this._scrollbarSize = 0;\n    } else {\n      _this._scrollbarSizeMeasured = true;\n    }\n\n    return _this;\n  }\n  /**\n   * Forced recompute of cell sizes and positions.\n   * This function should be called if cell sizes have changed but nothing else has.\n   * Since cell positions are calculated by callbacks, the collection view has no way of detecting when the underlying data has changed.\n   */\n\n\n  _createClass(CollectionView, [{\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._calculateSizeAndPositionDataOnNextUpdate = true;\n      this.forceUpdate();\n    }\n    /* ---------------------------- Component lifecycle methods ---------------------------- */\n\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          cellLayoutManager = _this$props4.cellLayoutManager,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToCell = _this$props4.scrollToCell,\n          scrollTop = _this$props4.scrollTop; // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n      if (!this._scrollbarSizeMeasured) {\n        this._scrollbarSize = getScrollbarSize();\n        this._scrollbarSizeMeasured = true;\n        this.setState({});\n      }\n\n      if (scrollToCell >= 0) {\n        this._updateScrollPositionForScrollToCell();\n      } else if (scrollLeft >= 0 || scrollTop >= 0) {\n        this._setScrollPosition({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      } // Update onSectionRendered callback.\n\n\n      this._invokeOnSectionRenderedHelper();\n\n      var _cellLayoutManager$ge2 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge2.height,\n          totalWidth = _cellLayoutManager$ge2.width; // Initialize onScroll callback.\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalHeight: totalHeight,\n        totalWidth: totalWidth\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this$props5 = this.props,\n          height = _this$props5.height,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToCell = _this$props5.scrollToCell,\n          width = _this$props5.width;\n      var _this$state2 = this.state,\n          scrollLeft = _this$state2.scrollLeft,\n          scrollPositionChangeReason = _this$state2.scrollPositionChangeReason,\n          scrollTop = _this$state2.scrollTop; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        if (scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft && scrollLeft !== this._scrollingContainer.scrollLeft) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop >= 0 && scrollTop !== prevState.scrollTop && scrollTop !== this._scrollingContainer.scrollTop) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Update scroll offsets if the current :scrollToCell values requires it\n\n\n      if (height !== prevProps.height || scrollToAlignment !== prevProps.scrollToAlignment || scrollToCell !== prevProps.scrollToCell || width !== prevProps.width) {\n        this._updateScrollPositionForScrollToCell();\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnSectionRenderedHelper();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoHeight = _this$props6.autoHeight,\n          cellCount = _this$props6.cellCount,\n          cellLayoutManager = _this$props6.cellLayoutManager,\n          className = _this$props6.className,\n          height = _this$props6.height,\n          horizontalOverscanSize = _this$props6.horizontalOverscanSize,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          style = _this$props6.style,\n          verticalOverscanSize = _this$props6.verticalOverscanSize,\n          width = _this$props6.width;\n      var _this$state3 = this.state,\n          isScrolling = _this$state3.isScrolling,\n          scrollLeft = _this$state3.scrollLeft,\n          scrollTop = _this$state3.scrollTop; // Memoization reset\n\n      if (this._lastRenderedCellCount !== cellCount || this._lastRenderedCellLayoutManager !== cellLayoutManager || this._calculateSizeAndPositionDataOnNextUpdate) {\n        this._lastRenderedCellCount = cellCount;\n        this._lastRenderedCellLayoutManager = cellLayoutManager;\n        this._calculateSizeAndPositionDataOnNextUpdate = false;\n        cellLayoutManager.calculateSizeAndPositionData();\n      }\n\n      var _cellLayoutManager$ge3 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge3.height,\n          totalWidth = _cellLayoutManager$ge3.width; // Safely expand the rendered area by the specified overscan amount\n\n\n      var left = Math.max(0, scrollLeft - horizontalOverscanSize);\n      var top = Math.max(0, scrollTop - verticalOverscanSize);\n      var right = Math.min(totalWidth, scrollLeft + width + horizontalOverscanSize);\n      var bottom = Math.min(totalHeight, scrollTop + height + verticalOverscanSize);\n      var childrenToDisplay = height > 0 && width > 0 ? cellLayoutManager.cellRenderers({\n        height: bottom - top,\n        isScrolling: isScrolling,\n        width: right - left,\n        x: left,\n        y: top\n      }) : [];\n      var collectionStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        WebkitOverflowScrolling: 'touch',\n        width: width,\n        willChange: 'transform'\n      }; // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalHeight > height ? this._scrollbarSize : 0;\n      var horizontalScrollBarSize = totalWidth > width ? this._scrollbarSize : 0; // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n      collectionStyle.overflowX = totalWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      collectionStyle.overflowY = totalHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Collection', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: \"grid\",\n        style: _objectSpread({}, collectionStyle, {}, style),\n        tabIndex: 0\n      }, cellCount > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Collection__innerScrollContainer\",\n        style: {\n          height: totalHeight,\n          maxHeight: totalHeight,\n          maxWidth: totalWidth,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          width: totalWidth\n        }\n      }, childrenToDisplay), cellCount === 0 && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Collection.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_enablePointerEventsAfterDelay\",\n    value: function _enablePointerEventsAfterDelay() {\n      var _this2 = this;\n\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = setTimeout(function () {\n        var isScrollingChange = _this2.props.isScrollingChange;\n        isScrollingChange(false);\n        _this2._disablePointerEventsTimeoutId = null;\n\n        _this2.setState({\n          isScrolling: false\n        });\n      }, IS_SCROLLING_TIMEOUT);\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref) {\n      var _this3 = this;\n\n      var scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          totalHeight = _ref.totalHeight,\n          totalWidth = _ref.totalWidth;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref2) {\n          var scrollLeft = _ref2.scrollLeft,\n              scrollTop = _ref2.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_setScrollPosition\",\n    value: function _setScrollPosition(_ref3) {\n      var scrollLeft = _ref3.scrollLeft,\n          scrollTop = _ref3.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (scrollLeft >= 0) {\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (scrollTop >= 0) {\n        newState.scrollTop = scrollTop;\n      }\n\n      if (scrollLeft >= 0 && scrollLeft !== this.state.scrollLeft || scrollTop >= 0 && scrollTop !== this.state.scrollTop) {\n        this.setState(newState);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.cellCount === 0 && (prevState.scrollLeft !== 0 || prevState.scrollTop !== 0)) {\n        return {\n          scrollLeft: 0,\n          scrollTop: 0,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null ? nextProps.scrollTop : prevState.scrollTop,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return CollectionView;\n}(React.PureComponent);\n\n_defineProperty(CollectionView, \"defaultProps\", {\n  'aria-label': 'grid',\n  horizontalOverscanSize: 0,\n  noContentRenderer: function noContentRenderer() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  onSectionRendered: function onSectionRendered() {\n    return null;\n  },\n  scrollToAlignment: 'auto',\n  scrollToCell: -1,\n  style: {},\n  verticalOverscanSize: 0\n});\n\nCollectionView.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /**\n   * Number of cells in collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Calculates cell sizes and positions and manages rendering the appropriate cells given a specified window.\n   */\n  cellLayoutManager: PropTypes.object.isRequired,\n\n  /**\n   * Optional custom CSS class name to attach to root Collection element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * Height of Collection; this property determines the number of visible (vs virtualized) rows.\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Optional custom id to attach to root Collection element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Enables the `Collection` to horiontally \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  horizontalOverscanSize: PropTypes.number.isRequired,\n  isScrollingChange: PropTypes.func,\n\n  /**\n   * Optional renderer to be used in place of rows when either :rowCount or :cellCount is 0.\n   */\n  noContentRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, clientWidth, scrollHeight, scrollLeft, scrollTop, scrollWidth }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked with information about the section of the Collection that was just rendered.\n   * This callback is passed a named :indices parameter which is an Array of the most recently rendered section indices.\n   */\n  onSectionRendered: PropTypes.func.isRequired,\n\n  /**\n   * Horizontal offset.\n   */\n  scrollLeft: PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /**\n   * Cell index to ensure visible (by forcefully scrolling if necessary).\n   */\n  scrollToCell: PropTypes.number.isRequired,\n\n  /**\n   * Vertical offset.\n   */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Optional custom inline style to attach to root Collection element.\n   */\n  style: PropTypes.object,\n\n  /**\n   * Enables the `Collection` to vertically \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  verticalOverscanSize: PropTypes.number.isRequired,\n\n  /**\n   * Width of Collection; this property determines the number of visible (vs virtualized) columns.\n   */\n  width: PropTypes.number.isRequired\n} : {};\npolyfill(CollectionView);\nexport default CollectionView;","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * A section of the Window.\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * Sections have a fixed size and contain 0 to many cells (tracked by their indices).\n */\nvar Section =\n/*#__PURE__*/\nfunction () {\n  function Section(_ref) {\n    var height = _ref.height,\n        width = _ref.width,\n        x = _ref.x,\n        y = _ref.y;\n\n    _classCallCheck(this, Section);\n\n    this.height = height;\n    this.width = width;\n    this.x = x;\n    this.y = y;\n    this._indexMap = {};\n    this._indices = [];\n  }\n  /** Add a cell to this section. */\n\n\n  _createClass(Section, [{\n    key: \"addCellIndex\",\n    value: function addCellIndex(_ref2) {\n      var index = _ref2.index;\n\n      if (!this._indexMap[index]) {\n        this._indexMap[index] = true;\n\n        this._indices.push(index);\n      }\n    }\n    /** Get all cell indices that have been added to this section. */\n\n  }, {\n    key: \"getCellIndices\",\n    value: function getCellIndices() {\n      return this._indices;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.x, \",\").concat(this.y, \" \").concat(this.width, \"x\").concat(this.height);\n    }\n  }]);\n\n  return Section;\n}();\n\nexport { Section as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * \n */\nimport Section from './Section';\nvar SECTION_SIZE = 100;\n\n/**\n * Contains 0 to many Sections.\n * Grows (and adds Sections) dynamically as cells are registered.\n * Automatically adds cells to the appropriate Section(s).\n */\nvar SectionManager =\n/*#__PURE__*/\nfunction () {\n  function SectionManager() {\n    var sectionSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SECTION_SIZE;\n\n    _classCallCheck(this, SectionManager);\n\n    this._sectionSize = sectionSize;\n    this._cellMetadata = [];\n    this._sections = {};\n  }\n  /**\n   * Gets all cell indices contained in the specified region.\n   * A region may encompass 1 or more Sections.\n   */\n\n\n  _createClass(SectionManager, [{\n    key: \"getCellIndices\",\n    value: function getCellIndices(_ref) {\n      var height = _ref.height,\n          width = _ref.width,\n          x = _ref.x,\n          y = _ref.y;\n      var indices = {};\n      this.getSections({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      }).forEach(function (section) {\n        return section.getCellIndices().forEach(function (index) {\n          indices[index] = index;\n        });\n      }); // Object keys are strings; this function returns numbers\n\n      return Object.keys(indices).map(function (index) {\n        return indices[index];\n      });\n    }\n    /** Get size and position information for the cell specified. */\n\n  }, {\n    key: \"getCellMetadata\",\n    value: function getCellMetadata(_ref2) {\n      var index = _ref2.index;\n      return this._cellMetadata[index];\n    }\n    /** Get all Sections overlapping the specified region. */\n\n  }, {\n    key: \"getSections\",\n    value: function getSections(_ref3) {\n      var height = _ref3.height,\n          width = _ref3.width,\n          x = _ref3.x,\n          y = _ref3.y;\n      var sectionXStart = Math.floor(x / this._sectionSize);\n      var sectionXStop = Math.floor((x + width - 1) / this._sectionSize);\n      var sectionYStart = Math.floor(y / this._sectionSize);\n      var sectionYStop = Math.floor((y + height - 1) / this._sectionSize);\n      var sections = [];\n\n      for (var sectionX = sectionXStart; sectionX <= sectionXStop; sectionX++) {\n        for (var sectionY = sectionYStart; sectionY <= sectionYStop; sectionY++) {\n          var key = \"\".concat(sectionX, \".\").concat(sectionY);\n\n          if (!this._sections[key]) {\n            this._sections[key] = new Section({\n              height: this._sectionSize,\n              width: this._sectionSize,\n              x: sectionX * this._sectionSize,\n              y: sectionY * this._sectionSize\n            });\n          }\n\n          sections.push(this._sections[key]);\n        }\n      }\n\n      return sections;\n    }\n    /** Total number of Sections based on the currently registered cells. */\n\n  }, {\n    key: \"getTotalSectionCount\",\n    value: function getTotalSectionCount() {\n      return Object.keys(this._sections).length;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var _this = this;\n\n      return Object.keys(this._sections).map(function (index) {\n        return _this._sections[index].toString();\n      });\n    }\n    /** Adds a cell to the appropriate Sections and registers it metadata for later retrievable. */\n\n  }, {\n    key: \"registerCell\",\n    value: function registerCell(_ref4) {\n      var cellMetadatum = _ref4.cellMetadatum,\n          index = _ref4.index;\n      this._cellMetadata[index] = cellMetadatum;\n      this.getSections(cellMetadatum).forEach(function (section) {\n        return section.addCellIndex({\n          index: index\n        });\n      });\n    }\n  }]);\n\n  return SectionManager;\n}();\n\nexport { SectionManager as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","/**\n * Determines a new offset that ensures a certain cell is visible, given the current offset.\n * If the cell is already visible then the current offset will be returned.\n * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n *\n * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n * @param cellOffset Offset (x or y) position for cell\n * @param cellSize Size (width or height) of cell\n * @param containerSize Total size (width or height) of the container\n * @param currentOffset Container's current (x or y) offset\n * @return Offset to use to ensure the specified cell is visible\n */\nexport default function getUpdatedOffsetForIndex(_ref) {\n  var _ref$align = _ref.align,\n      align = _ref$align === void 0 ? 'auto' : _ref$align,\n      cellOffset = _ref.cellOffset,\n      cellSize = _ref.cellSize,\n      containerSize = _ref.containerSize,\n      currentOffset = _ref.currentOffset;\n  var maxOffset = cellOffset;\n  var minOffset = maxOffset - containerSize + cellSize;\n\n  switch (align) {\n    case 'start':\n      return maxOffset;\n\n    case 'end':\n      return minOffset;\n\n    case 'center':\n      return maxOffset - (containerSize - cellSize) / 2;\n\n    default:\n      return Math.max(minOffset, Math.min(maxOffset, currentOffset));\n  }\n}","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport CollectionView from './CollectionView';\nimport _calculateSizeAndPositionData from './utils/calculateSizeAndPositionData';\nimport getUpdatedOffsetForIndex from '../utils/getUpdatedOffsetForIndex';\n\n/**\n * Renders scattered or non-linear data.\n * Unlike Grid, which renders checkerboard data, Collection can render arbitrarily positioned- even overlapping- data.\n */\nvar Collection =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Collection, _React$PureComponent);\n\n  function Collection(props, context) {\n    var _this;\n\n    _classCallCheck(this, Collection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Collection).call(this, props, context));\n    _this._cellMetadata = [];\n    _this._lastRenderedCellIndices = []; // Cell cache during scroll (for performance)\n\n    _this._cellCache = [];\n    _this._isScrollingChange = _this._isScrollingChange.bind(_assertThisInitialized(_this));\n    _this._setCollectionViewRef = _this._setCollectionViewRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Collection, [{\n    key: \"forceUpdate\",\n    value: function forceUpdate() {\n      if (this._collectionView !== undefined) {\n        this._collectionView.forceUpdate();\n      }\n    }\n    /** See Collection#recomputeCellSizesAndPositions */\n\n  }, {\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._cellCache = [];\n\n      this._collectionView.recomputeCellSizesAndPositions();\n    }\n    /** React lifecycle methods */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = _extends({}, this.props);\n\n      return React.createElement(CollectionView, _extends({\n        cellLayoutManager: this,\n        isScrollingChange: this._isScrollingChange,\n        ref: this._setCollectionViewRef\n      }, props));\n    }\n    /** CellLayoutManager interface */\n\n  }, {\n    key: \"calculateSizeAndPositionData\",\n    value: function calculateSizeAndPositionData() {\n      var _this$props = this.props,\n          cellCount = _this$props.cellCount,\n          cellSizeAndPositionGetter = _this$props.cellSizeAndPositionGetter,\n          sectionSize = _this$props.sectionSize;\n\n      var data = _calculateSizeAndPositionData({\n        cellCount: cellCount,\n        cellSizeAndPositionGetter: cellSizeAndPositionGetter,\n        sectionSize: sectionSize\n      });\n\n      this._cellMetadata = data.cellMetadata;\n      this._sectionManager = data.sectionManager;\n      this._height = data.height;\n      this._width = data.width;\n    }\n    /**\n     * Returns the most recently rendered set of cell indices.\n     */\n\n  }, {\n    key: \"getLastRenderedIndices\",\n    value: function getLastRenderedIndices() {\n      return this._lastRenderedCellIndices;\n    }\n    /**\n     * Calculates the minimum amount of change from the current scroll position to ensure the specified cell is (fully) visible.\n     */\n\n  }, {\n    key: \"getScrollPositionForCell\",\n    value: function getScrollPositionForCell(_ref) {\n      var align = _ref.align,\n          cellIndex = _ref.cellIndex,\n          height = _ref.height,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          width = _ref.width;\n      var cellCount = this.props.cellCount;\n\n      if (cellIndex >= 0 && cellIndex < cellCount) {\n        var cellMetadata = this._cellMetadata[cellIndex];\n        scrollLeft = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.x,\n          cellSize: cellMetadata.width,\n          containerSize: width,\n          currentOffset: scrollLeft,\n          targetIndex: cellIndex\n        });\n        scrollTop = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.y,\n          cellSize: cellMetadata.height,\n          containerSize: height,\n          currentOffset: scrollTop,\n          targetIndex: cellIndex\n        });\n      }\n\n      return {\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      };\n    }\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return {\n        height: this._height,\n        width: this._width\n      };\n    }\n  }, {\n    key: \"cellRenderers\",\n    value: function cellRenderers(_ref2) {\n      var _this2 = this;\n\n      var height = _ref2.height,\n          isScrolling = _ref2.isScrolling,\n          width = _ref2.width,\n          x = _ref2.x,\n          y = _ref2.y;\n      var _this$props2 = this.props,\n          cellGroupRenderer = _this$props2.cellGroupRenderer,\n          cellRenderer = _this$props2.cellRenderer; // Store for later calls to getLastRenderedIndices()\n\n      this._lastRenderedCellIndices = this._sectionManager.getCellIndices({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      });\n      return cellGroupRenderer({\n        cellCache: this._cellCache,\n        cellRenderer: cellRenderer,\n        cellSizeAndPositionGetter: function cellSizeAndPositionGetter(_ref3) {\n          var index = _ref3.index;\n          return _this2._sectionManager.getCellMetadata({\n            index: index\n          });\n        },\n        indices: this._lastRenderedCellIndices,\n        isScrolling: isScrolling\n      });\n    }\n  }, {\n    key: \"_isScrollingChange\",\n    value: function _isScrollingChange(isScrolling) {\n      if (!isScrolling) {\n        this._cellCache = [];\n      }\n    }\n  }, {\n    key: \"_setCollectionViewRef\",\n    value: function _setCollectionViewRef(ref) {\n      this._collectionView = ref;\n    }\n  }]);\n\n  return Collection;\n}(React.PureComponent);\n\n_defineProperty(Collection, \"defaultProps\", {\n  'aria-label': 'grid',\n  cellGroupRenderer: defaultCellGroupRenderer\n});\n\nexport { Collection as default };\nCollection.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Number of cells in Collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a group of cells given their indices.\n   * Should implement the following interface: ({\n   *   cellSizeAndPositionGetter:Function,\n   *   indices: Array<number>,\n   *   cellRenderer: Function\n   * }): Array<PropTypes.node>\n   */\n  cellGroupRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Responsible for rendering a cell given an row and column index.\n   * Should implement the following interface: ({ index: number, key: string, style: object }): PropTypes.element\n   */\n  cellRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback responsible for returning size and offset/position information for a given cell (index).\n   * ({ index: number }): { height: number, width: number, x: number, y: number }\n   */\n  cellSizeAndPositionGetter: PropTypes.func.isRequired,\n\n  /**\n   * Optionally override the size of the sections a Collection's cells are split into.\n   */\n  sectionSize: PropTypes.number\n} : {};\n\nfunction defaultCellGroupRenderer(_ref4) {\n  var cellCache = _ref4.cellCache,\n      cellRenderer = _ref4.cellRenderer,\n      cellSizeAndPositionGetter = _ref4.cellSizeAndPositionGetter,\n      indices = _ref4.indices,\n      isScrolling = _ref4.isScrolling;\n  return indices.map(function (index) {\n    var cellMetadata = cellSizeAndPositionGetter({\n      index: index\n    });\n    var cellRendererProps = {\n      index: index,\n      isScrolling: isScrolling,\n      key: index,\n      style: {\n        height: cellMetadata.height,\n        left: cellMetadata.x,\n        position: 'absolute',\n        top: cellMetadata.y,\n        width: cellMetadata.width\n      }\n    }; // Avoid re-creating cells while scrolling.\n    // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n    // If a scroll is in progress- cache and reuse cells.\n    // This cache will be thrown away once scrolling complets.\n\n    if (isScrolling) {\n      if (!(index in cellCache)) {\n        cellCache[index] = cellRenderer(cellRendererProps);\n      }\n\n      return cellCache[index];\n    } else {\n      return cellRenderer(cellRendererProps);\n    }\n  }).filter(function (renderedCell) {\n    return !!renderedCell;\n  });\n}\n\nimport { bpfrpt_proptype_ScrollPosition } from \"./types\";\nimport { bpfrpt_proptype_SizeInfo } from \"./types\";","import SectionManager from '../SectionManager';\nexport default function calculateSizeAndPositionData(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSizeAndPositionGetter = _ref.cellSizeAndPositionGetter,\n      sectionSize = _ref.sectionSize;\n  var cellMetadata = [];\n  var sectionManager = new SectionManager(sectionSize);\n  var height = 0;\n  var width = 0;\n\n  for (var index = 0; index < cellCount; index++) {\n    var cellMetadatum = cellSizeAndPositionGetter({\n      index: index\n    });\n\n    if (cellMetadatum.height == null || isNaN(cellMetadatum.height) || cellMetadatum.width == null || isNaN(cellMetadatum.width) || cellMetadatum.x == null || isNaN(cellMetadatum.x) || cellMetadatum.y == null || isNaN(cellMetadatum.y)) {\n      throw Error(\"Invalid metadata returned for cell \".concat(index, \":\\n        x:\").concat(cellMetadatum.x, \", y:\").concat(cellMetadatum.y, \", width:\").concat(cellMetadatum.width, \", height:\").concat(cellMetadatum.height));\n    }\n\n    height = Math.max(height, cellMetadatum.y + cellMetadatum.height);\n    width = Math.max(width, cellMetadatum.x + cellMetadatum.width);\n    cellMetadata[index] = cellMetadatum;\n    sectionManager.registerCell({\n      cellMetadatum: cellMetadatum,\n      index: index\n    });\n  }\n\n  return {\n    cellMetadata: cellMetadata,\n    height: height,\n    sectionManager: sectionManager,\n    width: width\n  };\n}","import Collection from './Collection';\nexport default Collection;\nexport { Collection };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * High-order component that auto-calculates column-widths for `Grid` cells.\n */\n\nvar ColumnSizer =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ColumnSizer, _React$PureComponent);\n\n  function ColumnSizer(props, context) {\n    var _this;\n\n    _classCallCheck(this, ColumnSizer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ColumnSizer).call(this, props, context));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ColumnSizer, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props = this.props,\n          columnMaxWidth = _this$props.columnMaxWidth,\n          columnMinWidth = _this$props.columnMinWidth,\n          columnCount = _this$props.columnCount,\n          width = _this$props.width;\n\n      if (columnMaxWidth !== prevProps.columnMaxWidth || columnMinWidth !== prevProps.columnMinWidth || columnCount !== prevProps.columnCount || width !== prevProps.width) {\n        if (this._registeredChild) {\n          this._registeredChild.recomputeGridSize();\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          columnMaxWidth = _this$props2.columnMaxWidth,\n          columnMinWidth = _this$props2.columnMinWidth,\n          columnCount = _this$props2.columnCount,\n          width = _this$props2.width;\n      var safeColumnMinWidth = columnMinWidth || 1;\n      var safeColumnMaxWidth = columnMaxWidth ? Math.min(columnMaxWidth, width) : width;\n      var columnWidth = width / columnCount;\n      columnWidth = Math.max(safeColumnMinWidth, columnWidth);\n      columnWidth = Math.min(safeColumnMaxWidth, columnWidth);\n      columnWidth = Math.floor(columnWidth);\n      var adjustedWidth = Math.min(width, columnWidth * columnCount);\n      return children({\n        adjustedWidth: adjustedWidth,\n        columnWidth: columnWidth,\n        getColumnWidth: function getColumnWidth() {\n          return columnWidth;\n        },\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(child) {\n      if (child && typeof child.recomputeGridSize !== 'function') {\n        throw Error('Unexpected child type registered; only Grid/MultiGrid children are supported.');\n      }\n\n      this._registeredChild = child;\n\n      if (this._registeredChild) {\n        this._registeredChild.recomputeGridSize();\n      }\n    }\n  }]);\n\n  return ColumnSizer;\n}(React.PureComponent);\n\nexport { ColumnSizer as default };\nColumnSizer.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized Grid.\n   * This function should implement the following signature:\n   * ({ adjustedWidth, getColumnWidth, registerChild }) => PropTypes.element\n   *\n   * The specified :getColumnWidth function should be passed to the Grid's :columnWidth property.\n   * The :registerChild should be passed to the Grid's :ref property.\n   * The :adjustedWidth property is optional; it reflects the lesser of the overall width or the width of all columns.\n   */\n  children: PropTypes.func.isRequired,\n\n  /** Optional maximum allowed column width */\n  columnMaxWidth: PropTypes.number,\n\n  /** Optional minimum allowed column width */\n  columnMinWidth: PropTypes.number,\n\n  /** Number of columns in Grid or Table child */\n  columnCount: PropTypes.number.isRequired,\n\n  /** Width of Grid or Table child */\n  width: PropTypes.number.isRequired\n} : {};","import ColumnSizer from './ColumnSizer';\nexport default ColumnSizer;\nexport { ColumnSizer };","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\n/**\n * Higher-order component that manages lazy-loading for \"infinite\" data.\n * This component decorates a virtual component and just-in-time prefetches rows as a user scrolls.\n * It is intended as a convenience component; fork it if you'd like finer-grained control over data-loading.\n */\n\nvar InfiniteLoader =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(InfiniteLoader, _React$PureComponent);\n\n  function InfiniteLoader(props, context) {\n    var _this;\n\n    _classCallCheck(this, InfiniteLoader);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InfiniteLoader).call(this, props, context));\n    _this._loadMoreRowsMemoizer = createCallbackMemoizer();\n    _this._onRowsRendered = _this._onRowsRendered.bind(_assertThisInitialized(_this));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(InfiniteLoader, [{\n    key: \"resetLoadMoreRowsCache\",\n    value: function resetLoadMoreRowsCache(autoReload) {\n      this._loadMoreRowsMemoizer = createCallbackMemoizer();\n\n      if (autoReload) {\n        this._doStuff(this._lastRenderedStartIndex, this._lastRenderedStopIndex);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return children({\n        onRowsRendered: this._onRowsRendered,\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_loadUnloadedRanges\",\n    value: function _loadUnloadedRanges(unloadedRanges) {\n      var _this2 = this;\n\n      var loadMoreRows = this.props.loadMoreRows;\n      unloadedRanges.forEach(function (unloadedRange) {\n        var promise = loadMoreRows(unloadedRange);\n\n        if (promise) {\n          promise.then(function () {\n            // Refresh the visible rows if any of them have just been loaded.\n            // Otherwise they will remain in their unloaded visual state.\n            if (isRangeVisible({\n              lastRenderedStartIndex: _this2._lastRenderedStartIndex,\n              lastRenderedStopIndex: _this2._lastRenderedStopIndex,\n              startIndex: unloadedRange.startIndex,\n              stopIndex: unloadedRange.stopIndex\n            })) {\n              if (_this2._registeredChild) {\n                forceUpdateReactVirtualizedComponent(_this2._registeredChild, _this2._lastRenderedStartIndex);\n              }\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_onRowsRendered\",\n    value: function _onRowsRendered(_ref) {\n      var startIndex = _ref.startIndex,\n          stopIndex = _ref.stopIndex;\n      this._lastRenderedStartIndex = startIndex;\n      this._lastRenderedStopIndex = stopIndex;\n\n      this._doStuff(startIndex, stopIndex);\n    }\n  }, {\n    key: \"_doStuff\",\n    value: function _doStuff(startIndex, stopIndex) {\n      var _ref2,\n          _this3 = this;\n\n      var _this$props = this.props,\n          isRowLoaded = _this$props.isRowLoaded,\n          minimumBatchSize = _this$props.minimumBatchSize,\n          rowCount = _this$props.rowCount,\n          threshold = _this$props.threshold;\n      var unloadedRanges = scanForUnloadedRanges({\n        isRowLoaded: isRowLoaded,\n        minimumBatchSize: minimumBatchSize,\n        rowCount: rowCount,\n        startIndex: Math.max(0, startIndex - threshold),\n        stopIndex: Math.min(rowCount - 1, stopIndex + threshold)\n      }); // For memoize comparison\n\n      var squashedUnloadedRanges = (_ref2 = []).concat.apply(_ref2, _toConsumableArray(unloadedRanges.map(function (_ref3) {\n        var startIndex = _ref3.startIndex,\n            stopIndex = _ref3.stopIndex;\n        return [startIndex, stopIndex];\n      })));\n\n      this._loadMoreRowsMemoizer({\n        callback: function callback() {\n          _this3._loadUnloadedRanges(unloadedRanges);\n        },\n        indices: {\n          squashedUnloadedRanges: squashedUnloadedRanges\n        }\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(registeredChild) {\n      this._registeredChild = registeredChild;\n    }\n  }]);\n\n  return InfiniteLoader;\n}(React.PureComponent);\n/**\n * Determines if the specified start/stop range is visible based on the most recently rendered range.\n */\n\n\n_defineProperty(InfiniteLoader, \"defaultProps\", {\n  minimumBatchSize: 10,\n  rowCount: 0,\n  threshold: 15\n});\n\nexport { InfiniteLoader as default };\nInfiniteLoader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized component.\n   * This function should implement the following signature:\n   * ({ onRowsRendered, registerChild }) => PropTypes.element\n   *\n   * The specified :onRowsRendered function should be passed through to the child's :onRowsRendered property.\n   * The :registerChild callback should be set as the virtualized component's :ref.\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Function responsible for tracking the loaded state of each row.\n   * It should implement the following signature: ({ index: number }): boolean\n   */\n  isRowLoaded: PropTypes.func.isRequired,\n\n  /**\n   * Callback to be invoked when more rows must be loaded.\n   * It should implement the following signature: ({ startIndex, stopIndex }): Promise\n   * The returned Promise should be resolved once row data has finished loading.\n   * It will be used to determine when to refresh the list with the newly-loaded data.\n   * This callback may be called multiple times in reaction to a single scroll event.\n   */\n  loadMoreRows: PropTypes.func.isRequired,\n\n  /**\n   * Minimum number of rows to be loaded at a time.\n   * This property can be used to batch requests to reduce HTTP requests.\n   */\n  minimumBatchSize: PropTypes.number.isRequired,\n\n  /**\n   * Number of rows in list; can be arbitrary high number if actual number is unknown.\n   */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Threshold at which to pre-fetch data.\n   * A threshold X means that data will start loading when a user scrolls within X rows.\n   * This value defaults to 15.\n   */\n  threshold: PropTypes.number.isRequired\n} : {};\nexport function isRangeVisible(_ref4) {\n  var lastRenderedStartIndex = _ref4.lastRenderedStartIndex,\n      lastRenderedStopIndex = _ref4.lastRenderedStopIndex,\n      startIndex = _ref4.startIndex,\n      stopIndex = _ref4.stopIndex;\n  return !(startIndex > lastRenderedStopIndex || stopIndex < lastRenderedStartIndex);\n}\n/**\n * Returns all of the ranges within a larger range that contain unloaded rows.\n */\n\nexport function scanForUnloadedRanges(_ref5) {\n  var isRowLoaded = _ref5.isRowLoaded,\n      minimumBatchSize = _ref5.minimumBatchSize,\n      rowCount = _ref5.rowCount,\n      startIndex = _ref5.startIndex,\n      stopIndex = _ref5.stopIndex;\n  var unloadedRanges = [];\n  var rangeStartIndex = null;\n  var rangeStopIndex = null;\n\n  for (var index = startIndex; index <= stopIndex; index++) {\n    var loaded = isRowLoaded({\n      index: index\n    });\n\n    if (!loaded) {\n      rangeStopIndex = index;\n\n      if (rangeStartIndex === null) {\n        rangeStartIndex = index;\n      }\n    } else if (rangeStopIndex !== null) {\n      unloadedRanges.push({\n        startIndex: rangeStartIndex,\n        stopIndex: rangeStopIndex\n      });\n      rangeStartIndex = rangeStopIndex = null;\n    }\n  } // If :rangeStopIndex is not null it means we haven't ran out of unloaded rows.\n  // Scan forward to try filling our :minimumBatchSize.\n\n\n  if (rangeStopIndex !== null) {\n    var potentialStopIndex = Math.min(Math.max(rangeStopIndex, rangeStartIndex + minimumBatchSize - 1), rowCount - 1);\n\n    for (var _index = rangeStopIndex + 1; _index <= potentialStopIndex; _index++) {\n      if (!isRowLoaded({\n        index: _index\n      })) {\n        rangeStopIndex = _index;\n      } else {\n        break;\n      }\n    }\n\n    unloadedRanges.push({\n      startIndex: rangeStartIndex,\n      stopIndex: rangeStopIndex\n    });\n  } // Check to see if our first range ended prematurely.\n  // In this case we should scan backwards to try filling our :minimumBatchSize.\n\n\n  if (unloadedRanges.length) {\n    var firstUnloadedRange = unloadedRanges[0];\n\n    while (firstUnloadedRange.stopIndex - firstUnloadedRange.startIndex + 1 < minimumBatchSize && firstUnloadedRange.startIndex > 0) {\n      var _index2 = firstUnloadedRange.startIndex - 1;\n\n      if (!isRowLoaded({\n        index: _index2\n      })) {\n        firstUnloadedRange.startIndex = _index2;\n      } else {\n        break;\n      }\n    }\n  }\n\n  return unloadedRanges;\n}\n/**\n * Since RV components use shallowCompare we need to force a render (even though props haven't changed).\n * However InfiniteLoader may wrap a Grid or it may wrap a Table or List.\n * In the first case the built-in React forceUpdate() method is sufficient to force a re-render,\n * But in the latter cases we need to use the RV-specific forceUpdateGrid() method.\n * Else the inner Grid will not be re-rendered and visuals may be stale.\n *\n * Additionally, while a Grid is scrolling the cells can be cached,\n * So it's important to invalidate that cache by recalculating sizes\n * before forcing a rerender.\n */\n\nexport function forceUpdateReactVirtualizedComponent(component) {\n  var currentIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var recomputeSize = typeof component.recomputeGridSize === 'function' ? component.recomputeGridSize : component.recomputeRowHeights;\n\n  if (recomputeSize) {\n    recomputeSize.call(component, currentIndex);\n  } else {\n    component.forceUpdate();\n  }\n}","import InfiniteLoader from './InfiniteLoader';\nexport default InfiniteLoader;\nexport { InfiniteLoader };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport * as React from 'react';\nimport clsx from 'clsx';\n/**\n * It is inefficient to create and manage a large list of DOM elements within a scrolling container\n * if only a few of those elements are visible. The primary purpose of this component is to improve\n * performance by only rendering the DOM nodes that a user is able to see based on their current\n * scroll position.\n *\n * This component renders a virtualized list of elements with either fixed or dynamic heights.\n */\n\nvar List = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(List, _React$PureComponent);\n\n  function List() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, List);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(List)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"Grid\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRenderer\", function (_ref) {\n      var parent = _ref.parent,\n          rowIndex = _ref.rowIndex,\n          style = _ref.style,\n          isScrolling = _ref.isScrolling,\n          isVisible = _ref.isVisible,\n          key = _ref.key;\n      var rowRenderer = _this.props.rowRenderer; // TRICKY The style object is sometimes cached by Grid.\n      // This prevents new style objects from bypassing shallowCompare().\n      // However as of React 16, style props are auto-frozen (at least in dev mode)\n      // Check to make sure we can still modify the style before proceeding.\n      // https://github.com/facebook/react/commit/977357765b44af8ff0cfea327866861073095c12#commitcomment-20648713\n\n      var widthDescriptor = Object.getOwnPropertyDescriptor(style, 'width');\n\n      if (widthDescriptor && widthDescriptor.writable) {\n        // By default, List cells should be 100% width.\n        // This prevents them from flowing under a scrollbar (if present).\n        style.width = '100%';\n      }\n\n      return rowRenderer({\n        index: rowIndex,\n        style: style,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (ref) {\n      _this.Grid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (_ref2) {\n      var clientHeight = _ref2.clientHeight,\n          scrollHeight = _ref2.scrollHeight,\n          scrollTop = _ref2.scrollTop;\n      var onScroll = _this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref3) {\n      var rowOverscanStartIndex = _ref3.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref3.rowOverscanStopIndex,\n          rowStartIndex = _ref3.rowStartIndex,\n          rowStopIndex = _ref3.rowStopIndex;\n      var onRowsRendered = _this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref4) {\n      var alignment = _ref4.alignment,\n          index = _ref4.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index,\n          columnIndex: 0\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref6 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref6$columnIndex = _ref6.columnIndex,\n          columnIndex = _ref6$columnIndex === void 0 ? 0 : _ref6$columnIndex,\n          _ref6$rowIndex = _ref6.rowIndex,\n          rowIndex = _ref6$rowIndex === void 0 ? 0 : _ref6$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index,\n          columnIndex: 0\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          scrollToIndex = _this$props.scrollToIndex,\n          width = _this$props.width;\n      var classNames = clsx('ReactVirtualized__List', className);\n      return React.createElement(Grid, _extends({}, this.props, {\n        autoContainerWidth: true,\n        cellRenderer: this._cellRenderer,\n        className: classNames,\n        columnWidth: width,\n        columnCount: 1,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        scrollToRow: scrollToIndex\n      }));\n    }\n  }]);\n\n  return List;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /** Optional CSS class name */\n  \"className\": PropTypes.string,\n\n  /**\n   * Used to estimate the total height of a List before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Height constraint for list (determines how many actual rows are rendered) */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional renderer to be used in place of rows when rowCount is 0 */\n  \"noRowsRenderer\": function noRowsRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Callback invoked with information about the slice of rows that were just rendered.  */\n  \"onRowsRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed row height (number) or a function that returns the height of a row given its index.  */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a row given an index; ({ index: number }): node */\n  \"rowRenderer\": function rowRenderer() {\n    return (typeof bpfrpt_proptype_RowRenderer === \"function\" ? bpfrpt_proptype_RowRenderer.isRequired ? bpfrpt_proptype_RowRenderer.isRequired : bpfrpt_proptype_RowRenderer : PropTypes.shape(bpfrpt_proptype_RowRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in list. */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** See Grid#scrollToAlignment */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToIndex\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of list */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(List, \"defaultProps\", {\n  autoHeight: false,\n  estimatedRowSize: 30,\n  onScroll: function onScroll() {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {},\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { List as default };\nimport { bpfrpt_proptype_NoContentRenderer } from \"../Grid\";\nimport { bpfrpt_proptype_Alignment } from \"../Grid\";\nimport { bpfrpt_proptype_CellSize } from \"../Grid\";\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"../Grid\";\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_CellRendererParams } from \"../Grid\";\nimport { bpfrpt_proptype_Scroll as bpfrpt_proptype_GridScroll } from \"../Grid\";\nimport { bpfrpt_proptype_RowRenderer } from \"./types\";\nimport { bpfrpt_proptype_RenderedRows } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport PropTypes from \"prop-types\";","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/binary-search-bounds\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nfunction _GEA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x >= y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GEP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) >= 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _GTA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x > y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GTP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) > 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LTA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x < y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LTP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) < 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LEA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x <= y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LEP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) <= 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _EQA(a, l, h, y) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x === y) {\n      return m;\n    } else if (x <= y) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction _EQP(a, l, h, y, c) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n    var p = c(x, y);\n\n    if (p === 0) {\n      return m;\n    } else if (p <= 0) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction dispatchBsearchEQ(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _EQP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _EQA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nexport default {\n  ge: dispatchBsearchGE,\n  gt: dispatchBsearchGT,\n  lt: dispatchBsearchLT,\n  le: dispatchBsearchLE,\n  eq: dispatchBsearchEQ\n};","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/interval-tree-1d\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax in an upstream dependency.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nimport bounds from './binarySearchBounds';\nvar NOT_FOUND = 0;\nvar SUCCESS = 1;\nvar EMPTY = 2;\n\nfunction IntervalTreeNode(mid, left, right, leftPoints, rightPoints) {\n  this.mid = mid;\n  this.left = left;\n  this.right = right;\n  this.leftPoints = leftPoints;\n  this.rightPoints = rightPoints;\n  this.count = (left ? left.count : 0) + (right ? right.count : 0) + leftPoints.length;\n}\n\nvar proto = IntervalTreeNode.prototype;\n\nfunction copy(a, b) {\n  a.mid = b.mid;\n  a.left = b.left;\n  a.right = b.right;\n  a.leftPoints = b.leftPoints;\n  a.rightPoints = b.rightPoints;\n  a.count = b.count;\n}\n\nfunction rebuild(node, intervals) {\n  var ntree = createIntervalTree(intervals);\n  node.mid = ntree.mid;\n  node.left = ntree.left;\n  node.right = ntree.right;\n  node.leftPoints = ntree.leftPoints;\n  node.rightPoints = ntree.rightPoints;\n  node.count = ntree.count;\n}\n\nfunction rebuildWithInterval(node, interval) {\n  var intervals = node.intervals([]);\n  intervals.push(interval);\n  rebuild(node, intervals);\n}\n\nfunction rebuildWithoutInterval(node, interval) {\n  var intervals = node.intervals([]);\n  var idx = intervals.indexOf(interval);\n\n  if (idx < 0) {\n    return NOT_FOUND;\n  }\n\n  intervals.splice(idx, 1);\n  rebuild(node, intervals);\n  return SUCCESS;\n}\n\nproto.intervals = function (result) {\n  result.push.apply(result, this.leftPoints);\n\n  if (this.left) {\n    this.left.intervals(result);\n  }\n\n  if (this.right) {\n    this.right.intervals(result);\n  }\n\n  return result;\n};\n\nproto.insert = function (interval) {\n  var weight = this.count - this.leftPoints.length;\n  this.count += 1;\n\n  if (interval[1] < this.mid) {\n    if (this.left) {\n      if (4 * (this.left.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.left.insert(interval);\n      }\n    } else {\n      this.left = createIntervalTree([interval]);\n    }\n  } else if (interval[0] > this.mid) {\n    if (this.right) {\n      if (4 * (this.right.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.right.insert(interval);\n      }\n    } else {\n      this.right = createIntervalTree([interval]);\n    }\n  } else {\n    var l = bounds.ge(this.leftPoints, interval, compareBegin);\n    var r = bounds.ge(this.rightPoints, interval, compareEnd);\n    this.leftPoints.splice(l, 0, interval);\n    this.rightPoints.splice(r, 0, interval);\n  }\n};\n\nproto.remove = function (interval) {\n  var weight = this.count - this.leftPoints;\n\n  if (interval[1] < this.mid) {\n    if (!this.left) {\n      return NOT_FOUND;\n    }\n\n    var rw = this.right ? this.right.count : 0;\n\n    if (4 * rw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.left.remove(interval);\n\n    if (r === EMPTY) {\n      this.left = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else if (interval[0] > this.mid) {\n    if (!this.right) {\n      return NOT_FOUND;\n    }\n\n    var lw = this.left ? this.left.count : 0;\n\n    if (4 * lw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.right.remove(interval);\n\n    if (r === EMPTY) {\n      this.right = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else {\n    if (this.count === 1) {\n      if (this.leftPoints[0] === interval) {\n        return EMPTY;\n      } else {\n        return NOT_FOUND;\n      }\n    }\n\n    if (this.leftPoints.length === 1 && this.leftPoints[0] === interval) {\n      if (this.left && this.right) {\n        var p = this;\n        var n = this.left;\n\n        while (n.right) {\n          p = n;\n          n = n.right;\n        }\n\n        if (p === this) {\n          n.right = this.right;\n        } else {\n          var l = this.left;\n          var r = this.right;\n          p.count -= n.count;\n          p.right = n.left;\n          n.left = l;\n          n.right = r;\n        }\n\n        copy(this, n);\n        this.count = (this.left ? this.left.count : 0) + (this.right ? this.right.count : 0) + this.leftPoints.length;\n      } else if (this.left) {\n        copy(this, this.left);\n      } else {\n        copy(this, this.right);\n      }\n\n      return SUCCESS;\n    }\n\n    for (var l = bounds.ge(this.leftPoints, interval, compareBegin); l < this.leftPoints.length; ++l) {\n      if (this.leftPoints[l][0] !== interval[0]) {\n        break;\n      }\n\n      if (this.leftPoints[l] === interval) {\n        this.count -= 1;\n        this.leftPoints.splice(l, 1);\n\n        for (var r = bounds.ge(this.rightPoints, interval, compareEnd); r < this.rightPoints.length; ++r) {\n          if (this.rightPoints[r][1] !== interval[1]) {\n            break;\n          } else if (this.rightPoints[r] === interval) {\n            this.rightPoints.splice(r, 1);\n            return SUCCESS;\n          }\n        }\n      }\n    }\n\n    return NOT_FOUND;\n  }\n};\n\nfunction reportLeftRange(arr, hi, cb) {\n  for (var i = 0; i < arr.length && arr[i][0] <= hi; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRightRange(arr, lo, cb) {\n  for (var i = arr.length - 1; i >= 0 && arr[i][1] >= lo; --i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRange(arr, cb) {\n  for (var i = 0; i < arr.length; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nproto.queryPoint = function (x, cb) {\n  if (x < this.mid) {\n    if (this.left) {\n      var r = this.left.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportLeftRange(this.leftPoints, x, cb);\n  } else if (x > this.mid) {\n    if (this.right) {\n      var r = this.right.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportRightRange(this.rightPoints, x, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nproto.queryInterval = function (lo, hi, cb) {\n  if (lo < this.mid && this.left) {\n    var r = this.left.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi > this.mid && this.right) {\n    var r = this.right.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi < this.mid) {\n    return reportLeftRange(this.leftPoints, hi, cb);\n  } else if (lo > this.mid) {\n    return reportRightRange(this.rightPoints, lo, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\nfunction compareBegin(a, b) {\n  var d = a[0] - b[0];\n\n  if (d) {\n    return d;\n  }\n\n  return a[1] - b[1];\n}\n\nfunction compareEnd(a, b) {\n  var d = a[1] - b[1];\n\n  if (d) {\n    return d;\n  }\n\n  return a[0] - b[0];\n}\n\nfunction createIntervalTree(intervals) {\n  if (intervals.length === 0) {\n    return null;\n  }\n\n  var pts = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    pts.push(intervals[i][0], intervals[i][1]);\n  }\n\n  pts.sort(compareNumbers);\n  var mid = pts[pts.length >> 1];\n  var leftIntervals = [];\n  var rightIntervals = [];\n  var centerIntervals = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    var s = intervals[i];\n\n    if (s[1] < mid) {\n      leftIntervals.push(s);\n    } else if (mid < s[0]) {\n      rightIntervals.push(s);\n    } else {\n      centerIntervals.push(s);\n    }\n  } //Split center intervals\n\n\n  var leftPoints = centerIntervals;\n  var rightPoints = centerIntervals.slice();\n  leftPoints.sort(compareBegin);\n  rightPoints.sort(compareEnd);\n  return new IntervalTreeNode(mid, createIntervalTree(leftIntervals), createIntervalTree(rightIntervals), leftPoints, rightPoints);\n} //User friendly wrapper that makes it possible to support empty trees\n\n\nfunction IntervalTree(root) {\n  this.root = root;\n}\n\nvar tproto = IntervalTree.prototype;\n\ntproto.insert = function (interval) {\n  if (this.root) {\n    this.root.insert(interval);\n  } else {\n    this.root = new IntervalTreeNode(interval[0], null, null, [interval], [interval]);\n  }\n};\n\ntproto.remove = function (interval) {\n  if (this.root) {\n    var r = this.root.remove(interval);\n\n    if (r === EMPTY) {\n      this.root = null;\n    }\n\n    return r !== NOT_FOUND;\n  }\n\n  return false;\n};\n\ntproto.queryPoint = function (p, cb) {\n  if (this.root) {\n    return this.root.queryPoint(p, cb);\n  }\n};\n\ntproto.queryInterval = function (lo, hi, cb) {\n  if (lo <= hi && this.root) {\n    return this.root.queryInterval(lo, hi, cb);\n  }\n};\n\nObject.defineProperty(tproto, 'count', {\n  get: function get() {\n    if (this.root) {\n      return this.root.count;\n    }\n\n    return 0;\n  }\n});\nObject.defineProperty(tproto, 'intervals', {\n  get: function get() {\n    if (this.root) {\n      return this.root.intervals([]);\n    }\n\n    return [];\n  }\n});\nexport default function createWrapper(intervals) {\n  if (!intervals || intervals.length === 0) {\n    return new IntervalTree(null);\n  }\n\n  return new IntervalTree(createIntervalTree(intervals));\n}","import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport createIntervalTree from '../vendor/intervalTree';\n\n// Position cache requirements:\n//   O(log(n)) lookup of cells to render for a given viewport size\n//   O(1) lookup of shortest measured column (so we know when to enter phase 1)\nvar PositionCache =\n/*#__PURE__*/\nfunction () {\n  function PositionCache() {\n    _classCallCheck(this, PositionCache);\n\n    _defineProperty(this, \"_columnSizeMap\", {});\n\n    _defineProperty(this, \"_intervalTree\", createIntervalTree());\n\n    _defineProperty(this, \"_leftMap\", {});\n  }\n\n  _createClass(PositionCache, [{\n    key: \"estimateTotalHeight\",\n    value: function estimateTotalHeight(cellCount, columnCount, defaultCellHeight) {\n      var unmeasuredCellCount = cellCount - this.count;\n      return this.tallestColumnSize + Math.ceil(unmeasuredCellCount / columnCount) * defaultCellHeight;\n    } // Render all cells visible within the viewport range defined.\n\n  }, {\n    key: \"range\",\n    value: function range(scrollTop, clientHeight, renderCallback) {\n      var _this = this;\n\n      this._intervalTree.queryInterval(scrollTop, scrollTop + clientHeight, function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 3),\n            top = _ref2[0],\n            _ = _ref2[1],\n            index = _ref2[2];\n\n        return renderCallback(index, _this._leftMap[index], top);\n      });\n    }\n  }, {\n    key: \"setPosition\",\n    value: function setPosition(index, left, top, height) {\n      this._intervalTree.insert([top, top + height, index]);\n\n      this._leftMap[index] = left;\n      var columnSizeMap = this._columnSizeMap;\n      var columnHeight = columnSizeMap[left];\n\n      if (columnHeight === undefined) {\n        columnSizeMap[left] = top + height;\n      } else {\n        columnSizeMap[left] = Math.max(columnHeight, top + height);\n      }\n    }\n  }, {\n    key: \"count\",\n    get: function get() {\n      return this._intervalTree.count;\n    }\n  }, {\n    key: \"shortestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = size === 0 ? height : Math.min(size, height);\n      }\n\n      return size;\n    }\n  }, {\n    key: \"tallestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = Math.max(size, height);\n      }\n\n      return size;\n    }\n  }]);\n\n  return PositionCache;\n}();\n\nexport { PositionCache as default };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport PositionCache from './PositionCache';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\nvar emptyObject = {};\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * This component efficiently displays arbitrarily positioned cells using windowing techniques.\n * Cell position is determined by an injected `cellPositioner` property.\n * Windowing is vertical; this component does not support horizontal scrolling.\n *\n * Rendering occurs in two phases:\n * 1) First pass uses estimated cell sizes (provided by the cache) to determine how many cells to measure in a batch.\n *    Batch size is chosen using a fast, naive layout algorithm that stacks images in order until the viewport has been filled.\n *    After measurement is complete (componentDidMount or componentDidUpdate) this component evaluates positioned cells\n *    in order to determine if another measurement pass is required (eg if actual cell sizes were less than estimated sizes).\n *    All measurements are permanently cached (keyed by `keyMapper`) for performance purposes.\n * 2) Second pass uses the external `cellPositioner` to layout cells.\n *    At this time the positioner has access to cached size measurements for all cells.\n *    The positions it returns are cached by Masonry for fast access later.\n *    Phase one is repeated if the user scrolls beyond the current layout's bounds.\n *    If the layout is invalidated due to eg a resize, cached positions can be cleared using `recomputeCellPositions()`.\n *\n * Animation constraints:\n *   Simple animations are supported (eg translate/slide into place on initial reveal).\n *   More complex animations are not (eg flying from one position to another on resize).\n *\n * Layout constraints:\n *   This component supports multi-column layout.\n *   The height of each item may vary.\n *   The width of each item must not exceed the width of the column it is \"in\".\n *   The left position of all items within a column must align.\n *   (Items may not span multiple columns.)\n */\n\nvar Masonry = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Masonry, _React$PureComponent);\n\n  function Masonry() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Masonry);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Masonry)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStartIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionCache\", new PositionCache());\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingCallback\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      var height = _this.props.height;\n      var eventScrollTop = event.currentTarget.scrollTop; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollTop = Math.min(Math.max(0, _this._getEstimatedTotalHeight() - height), eventScrollTop); // On iOS, we can arrive at negative offsets by swiping past the start or end.\n      // Avoid re-rendering in this case as it can cause problems; see #532 for more.\n\n      if (eventScrollTop !== scrollTop) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._debounceResetIsScrolling(); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n\n      if (_this.state.scrollTop !== scrollTop) {\n        _this.setState({\n          isScrolling: true,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Masonry, [{\n    key: \"clearCellPositions\",\n    value: function clearCellPositions() {\n      this._positionCache = new PositionCache();\n      this.forceUpdate();\n    } // HACK This method signature was intended for Grid\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref) {\n      var index = _ref.rowIndex;\n\n      if (this._invalidateOnUpdateStartIndex === null) {\n        this._invalidateOnUpdateStartIndex = index;\n        this._invalidateOnUpdateStopIndex = index;\n      } else {\n        this._invalidateOnUpdateStartIndex = Math.min(this._invalidateOnUpdateStartIndex, index);\n        this._invalidateOnUpdateStopIndex = Math.max(this._invalidateOnUpdateStopIndex, index);\n      }\n    }\n  }, {\n    key: \"recomputeCellPositions\",\n    value: function recomputeCellPositions() {\n      var stopIndex = this._positionCache.count - 1;\n      this._positionCache = new PositionCache();\n\n      this._populatePositionCache(0, stopIndex);\n\n      this.forceUpdate();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n\n      if (this.props.scrollTop !== prevProps.scrollTop) {\n        this._debounceResetIsScrolling();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          cellCount = _this$props.cellCount,\n          cellMeasurerCache = _this$props.cellMeasurerCache,\n          cellRenderer = _this$props.cellRenderer,\n          className = _this$props.className,\n          height = _this$props.height,\n          id = _this$props.id,\n          keyMapper = _this$props.keyMapper,\n          overscanByPixels = _this$props.overscanByPixels,\n          role = _this$props.role,\n          style = _this$props.style,\n          tabIndex = _this$props.tabIndex,\n          width = _this$props.width,\n          rowDirection = _this$props.rowDirection;\n      var _this$state = this.state,\n          isScrolling = _this$state.isScrolling,\n          scrollTop = _this$state.scrollTop;\n      var children = [];\n\n      var estimateTotalHeight = this._getEstimatedTotalHeight();\n\n      var shortestColumnSize = this._positionCache.shortestColumnSize;\n      var measuredCellCount = this._positionCache.count;\n      var startIndex = 0;\n      var stopIndex;\n\n      this._positionCache.range(Math.max(0, scrollTop - overscanByPixels), height + overscanByPixels * 2, function (index, left, top) {\n        var _style;\n\n        if (typeof stopIndex === 'undefined') {\n          startIndex = index;\n          stopIndex = index;\n        } else {\n          startIndex = Math.min(startIndex, index);\n          stopIndex = Math.max(stopIndex, index);\n        }\n\n        children.push(cellRenderer({\n          index: index,\n          isScrolling: isScrolling,\n          key: keyMapper(index),\n          parent: _this2,\n          style: (_style = {\n            height: cellMeasurerCache.getHeight(index)\n          }, _defineProperty(_style, rowDirection === 'ltr' ? 'left' : 'right', left), _defineProperty(_style, \"position\", 'absolute'), _defineProperty(_style, \"top\", top), _defineProperty(_style, \"width\", cellMeasurerCache.getWidth(index)), _style)\n        }));\n      }); // We need to measure additional cells for this layout\n\n\n      if (shortestColumnSize < scrollTop + height + overscanByPixels && measuredCellCount < cellCount) {\n        var batchSize = Math.min(cellCount - measuredCellCount, Math.ceil((scrollTop + height + overscanByPixels - shortestColumnSize) / cellMeasurerCache.defaultHeight * width / cellMeasurerCache.defaultWidth));\n\n        for (var _index = measuredCellCount; _index < measuredCellCount + batchSize; _index++) {\n          stopIndex = _index;\n          children.push(cellRenderer({\n            index: _index,\n            isScrolling: isScrolling,\n            key: keyMapper(_index),\n            parent: this,\n            style: {\n              width: cellMeasurerCache.getWidth(_index)\n            }\n          }));\n        }\n      }\n\n      this._startIndex = startIndex;\n      this._stopIndex = stopIndex;\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Masonry', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({\n          boxSizing: 'border-box',\n          direction: 'ltr',\n          height: autoHeight ? 'auto' : height,\n          overflowX: 'hidden',\n          overflowY: estimateTotalHeight < height ? 'hidden' : 'auto',\n          position: 'relative',\n          width: width,\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform'\n        }, style),\n        tabIndex: tabIndex\n      }, React.createElement(\"div\", {\n        className: \"ReactVirtualized__Masonry__innerScrollContainer\",\n        style: {\n          width: '100%',\n          height: estimateTotalHeight,\n          maxWidth: '100%',\n          maxHeight: estimateTotalHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }\n      }, children));\n    }\n  }, {\n    key: \"_checkInvalidateOnUpdate\",\n    value: function _checkInvalidateOnUpdate() {\n      if (typeof this._invalidateOnUpdateStartIndex === 'number') {\n        var startIndex = this._invalidateOnUpdateStartIndex;\n        var stopIndex = this._invalidateOnUpdateStopIndex;\n        this._invalidateOnUpdateStartIndex = null;\n        this._invalidateOnUpdateStopIndex = null; // Query external layout logic for position of newly-measured cells\n\n        this._populatePositionCache(startIndex, stopIndex);\n\n        this.forceUpdate();\n      }\n    }\n  }, {\n    key: \"_debounceResetIsScrolling\",\n    value: function _debounceResetIsScrolling() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n\n      this._debounceResetIsScrollingId = requestAnimationTimeout(this._debounceResetIsScrollingCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_getEstimatedTotalHeight\",\n    value: function _getEstimatedTotalHeight() {\n      var _this$props2 = this.props,\n          cellCount = _this$props2.cellCount,\n          cellMeasurerCache = _this$props2.cellMeasurerCache,\n          width = _this$props2.width;\n      var estimatedColumnCount = Math.max(1, Math.floor(width / cellMeasurerCache.defaultWidth));\n      return this._positionCache.estimateTotalHeight(cellCount, estimatedColumnCount, cellMeasurerCache.defaultHeight);\n    }\n  }, {\n    key: \"_invokeOnScrollCallback\",\n    value: function _invokeOnScrollCallback() {\n      var _this$props3 = this.props,\n          height = _this$props3.height,\n          onScroll = _this$props3.onScroll;\n      var scrollTop = this.state.scrollTop;\n\n      if (this._onScrollMemoized !== scrollTop) {\n        onScroll({\n          clientHeight: height,\n          scrollHeight: this._getEstimatedTotalHeight(),\n          scrollTop: scrollTop\n        });\n        this._onScrollMemoized = scrollTop;\n      }\n    }\n  }, {\n    key: \"_invokeOnCellsRenderedCallback\",\n    value: function _invokeOnCellsRenderedCallback() {\n      if (this._startIndexMemoized !== this._startIndex || this._stopIndexMemoized !== this._stopIndex) {\n        var onCellsRendered = this.props.onCellsRendered;\n        onCellsRendered({\n          startIndex: this._startIndex,\n          stopIndex: this._stopIndex\n        });\n        this._startIndexMemoized = this._startIndex;\n        this._stopIndexMemoized = this._stopIndex;\n      }\n    }\n  }, {\n    key: \"_populatePositionCache\",\n    value: function _populatePositionCache(startIndex, stopIndex) {\n      var _this$props4 = this.props,\n          cellMeasurerCache = _this$props4.cellMeasurerCache,\n          cellPositioner = _this$props4.cellPositioner;\n\n      for (var _index2 = startIndex; _index2 <= stopIndex; _index2++) {\n        var _cellPositioner = cellPositioner(_index2),\n            left = _cellPositioner.left,\n            top = _cellPositioner.top;\n\n        this._positionCache.setPosition(_index2, left, top, cellMeasurerCache.getHeight(_index2));\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollTop !== undefined && prevState.scrollTop !== nextProps.scrollTop) {\n        return {\n          isScrolling: true,\n          scrollTop: nextProps.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Masonry;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"autoHeight\": PropTypes.bool.isRequired,\n  \"cellCount\": PropTypes.number.isRequired,\n  \"cellMeasurerCache\": function cellMeasurerCache() {\n    return (typeof CellMeasurerCache === \"function\" ? PropTypes.instanceOf(CellMeasurerCache).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellPositioner\": function cellPositioner() {\n    return (typeof Positioner === \"function\" ? PropTypes.instanceOf(Positioner).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof CellRenderer === \"function\" ? PropTypes.instanceOf(CellRenderer).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"className\": PropTypes.string,\n  \"height\": PropTypes.number.isRequired,\n  \"id\": PropTypes.string,\n  \"keyMapper\": function keyMapper() {\n    return (typeof KeyMapper === \"function\" ? PropTypes.instanceOf(KeyMapper).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"onCellsRendered\": function onCellsRendered() {\n    return (typeof OnCellsRenderedCallback === \"function\" ? PropTypes.instanceOf(OnCellsRenderedCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"onScroll\": function onScroll() {\n    return (typeof OnScrollCallback === \"function\" ? PropTypes.instanceOf(OnScrollCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"overscanByPixels\": PropTypes.number.isRequired,\n  \"role\": PropTypes.string.isRequired,\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n  \"style\": function style(props, propName, componentName) {\n    if (!Object.prototype.hasOwnProperty.call(props, propName)) {\n      throw new Error(\"Prop `\".concat(propName, \"` has type 'any' or 'mixed', but was not provided to `\").concat(componentName, \"`. Pass undefined or any other value.\"));\n    }\n  },\n  \"tabIndex\": PropTypes.number.isRequired,\n  \"width\": PropTypes.number.isRequired,\n  \"rowDirection\": PropTypes.string.isRequired,\n  \"scrollTop\": PropTypes.number\n}), _temp);\n\n_defineProperty(Masonry, \"defaultProps\", {\n  autoHeight: false,\n  keyMapper: identity,\n  onCellsRendered: noop,\n  onScroll: noop,\n  overscanByPixels: 20,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  style: emptyObject,\n  tabIndex: 0,\n  rowDirection: 'ltr'\n});\n\nfunction identity(value) {\n  return value;\n}\n\nfunction noop() {}\n\nvar bpfrpt_proptype_CellMeasurerCache = process.env.NODE_ENV === 'production' ? null : {\n  \"defaultHeight\": PropTypes.number.isRequired,\n  \"defaultWidth\": PropTypes.number.isRequired,\n  \"getHeight\": PropTypes.func.isRequired,\n  \"getWidth\": PropTypes.func.isRequired\n};\npolyfill(Masonry);\nexport default Masonry;\nvar bpfrpt_proptype_Positioner = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_CellMeasurerCache };\nexport { bpfrpt_proptype_Positioner };","import createCellPositioner from './createCellPositioner';\nimport Masonry from './Masonry';\nexport default Masonry;\nexport { createCellPositioner, Masonry };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { CellMeasurerCache } from '../CellMeasurer';\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCacheDecorator =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCacheDecorator() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCacheDecorator);\n\n    _defineProperty(this, \"_cellMeasurerCache\", void 0);\n\n    _defineProperty(this, \"_columnIndexOffset\", void 0);\n\n    _defineProperty(this, \"_rowIndexOffset\", void 0);\n\n    _defineProperty(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      _this._cellMeasurerCache.columnWidth({\n        index: index + _this._columnIndexOffset\n      });\n    });\n\n    _defineProperty(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      _this._cellMeasurerCache.rowHeight({\n        index: index + _this._rowIndexOffset\n      });\n    });\n\n    var cellMeasurerCache = params.cellMeasurerCache,\n        _params$columnIndexOf = params.columnIndexOffset,\n        columnIndexOffset = _params$columnIndexOf === void 0 ? 0 : _params$columnIndexOf,\n        _params$rowIndexOffse = params.rowIndexOffset,\n        rowIndexOffset = _params$rowIndexOffse === void 0 ? 0 : _params$rowIndexOffse;\n    this._cellMeasurerCache = cellMeasurerCache;\n    this._columnIndexOffset = columnIndexOffset;\n    this._rowIndexOffset = rowIndexOffset;\n  }\n\n  _createClass(CellMeasurerCacheDecorator, [{\n    key: \"clear\",\n    value: function clear(rowIndex, columnIndex) {\n      this._cellMeasurerCache.clear(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellMeasurerCache.clearAll();\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._cellMeasurerCache.hasFixedHeight();\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._cellMeasurerCache.hasFixedWidth();\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getHeight(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getWidth(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.has(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      this._cellMeasurerCache.set(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset, width, height);\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCacheDecorator;\n}();\n\nexport { CellMeasurerCacheDecorator as default };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport CellMeasurerCacheDecorator from './CellMeasurerCacheDecorator';\nimport Grid from '../Grid';\nvar SCROLLBAR_SIZE_BUFFER = 20;\n/**\n * Renders 1, 2, or 4 Grids depending on configuration.\n * A main (body) Grid will always be rendered.\n * Optionally, 1-2 Grids for sticky header rows will also be rendered.\n * If no sticky columns, only 1 sticky header Grid will be rendered.\n * If sticky columns, 2 sticky header Grids will be rendered.\n */\n\nvar MultiGrid =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(MultiGrid, _React$PureComponent);\n\n  function MultiGrid(props, context) {\n    var _this;\n\n    _classCallCheck(this, MultiGrid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MultiGrid).call(this, props, context));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollbarSize: 0,\n      showHorizontalScrollbar: false,\n      showVerticalScrollbar: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomLeftGridRef\", function (ref) {\n      _this._bottomLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomRightGridRef\", function (ref) {\n      _this._bottomRightGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomLeftGrid\", function (_ref) {\n      var rowIndex = _ref.rowIndex,\n          rest = _objectWithoutProperties(_ref, [\"rowIndex\"]);\n\n      var _this$props = _this.props,\n          cellRenderer = _this$props.cellRenderer,\n          fixedRowCount = _this$props.fixedRowCount,\n          rowCount = _this$props.rowCount;\n\n      if (rowIndex === rowCount - fixedRowCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            height: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          parent: _assertThisInitialized(_this),\n          rowIndex: rowIndex + fixedRowCount\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomRightGrid\", function (_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex,\n          rest = _objectWithoutProperties(_ref2, [\"columnIndex\", \"rowIndex\"]);\n\n      var _this$props2 = _this.props,\n          cellRenderer = _this$props2.cellRenderer,\n          fixedColumnCount = _this$props2.fixedColumnCount,\n          fixedRowCount = _this$props2.fixedRowCount;\n      return cellRenderer(_objectSpread({}, rest, {\n        columnIndex: columnIndex + fixedColumnCount,\n        parent: _assertThisInitialized(_this),\n        rowIndex: rowIndex + fixedRowCount\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererTopRightGrid\", function (_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rest = _objectWithoutProperties(_ref3, [\"columnIndex\"]);\n\n      var _this$props3 = _this.props,\n          cellRenderer = _this$props3.cellRenderer,\n          columnCount = _this$props3.columnCount,\n          fixedColumnCount = _this$props3.fixedColumnCount;\n\n      if (columnIndex === columnCount - fixedColumnCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            width: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          columnIndex: columnIndex + fixedColumnCount,\n          parent: _assertThisInitialized(_this)\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnWidthRightGrid\", function (_ref4) {\n      var index = _ref4.index;\n      var _this$props4 = _this.props,\n          columnCount = _this$props4.columnCount,\n          fixedColumnCount = _this$props4.fixedColumnCount,\n          columnWidth = _this$props4.columnWidth;\n      var _this$state = _this.state,\n          scrollbarSize = _this$state.scrollbarSize,\n          showHorizontalScrollbar = _this$state.showHorizontalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showHorizontalScrollbar && index === columnCount - fixedColumnCount) {\n        return scrollbarSize;\n      }\n\n      return typeof columnWidth === 'function' ? columnWidth({\n        index: index + fixedColumnCount\n      }) : columnWidth;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft,\n          scrollTop = scrollInfo.scrollTop;\n\n      _this.setState({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      var onScroll = _this.props.onScroll;\n\n      if (onScroll) {\n        onScroll(scrollInfo);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollbarPresenceChange\", function (_ref5) {\n      var horizontal = _ref5.horizontal,\n          size = _ref5.size,\n          vertical = _ref5.vertical;\n      var _this$state2 = _this.state,\n          showHorizontalScrollbar = _this$state2.showHorizontalScrollbar,\n          showVerticalScrollbar = _this$state2.showVerticalScrollbar;\n\n      if (horizontal !== showHorizontalScrollbar || vertical !== showVerticalScrollbar) {\n        _this.setState({\n          scrollbarSize: size,\n          showHorizontalScrollbar: horizontal,\n          showVerticalScrollbar: vertical\n        });\n\n        var onScrollbarPresenceChange = _this.props.onScrollbarPresenceChange;\n\n        if (typeof onScrollbarPresenceChange === 'function') {\n          onScrollbarPresenceChange({\n            horizontal: horizontal,\n            size: size,\n            vertical: vertical\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollLeft\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft;\n\n      _this._onScroll({\n        scrollLeft: scrollLeft,\n        scrollTop: _this.state.scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollTop\", function (scrollInfo) {\n      var scrollTop = scrollInfo.scrollTop;\n\n      _this._onScroll({\n        scrollTop: scrollTop,\n        scrollLeft: _this.state.scrollLeft\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowHeightBottomGrid\", function (_ref6) {\n      var index = _ref6.index;\n      var _this$props5 = _this.props,\n          fixedRowCount = _this$props5.fixedRowCount,\n          rowCount = _this$props5.rowCount,\n          rowHeight = _this$props5.rowHeight;\n      var _this$state3 = _this.state,\n          scrollbarSize = _this$state3.scrollbarSize,\n          showVerticalScrollbar = _this$state3.showVerticalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showVerticalScrollbar && index === rowCount - fixedRowCount) {\n        return scrollbarSize;\n      }\n\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: index + fixedRowCount\n      }) : rowHeight;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topLeftGridRef\", function (ref) {\n      _this._topLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topRightGridRef\", function (ref) {\n      _this._topRightGrid = ref;\n    });\n\n    var deferredMeasurementCache = props.deferredMeasurementCache,\n        _fixedColumnCount = props.fixedColumnCount,\n        _fixedRowCount = props.fixedRowCount;\n\n    _this._maybeCalculateCachedStyles(true);\n\n    if (deferredMeasurementCache) {\n      _this._deferredMeasurementCacheBottomLeftGrid = _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: 0,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheBottomRightGrid = _fixedColumnCount > 0 || _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheTopRightGrid = _fixedColumnCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: 0\n      }) : deferredMeasurementCache;\n    }\n\n    return _this;\n  }\n\n  _createClass(MultiGrid, [{\n    key: \"forceUpdateGrids\",\n    value: function forceUpdateGrids() {\n      this._bottomLeftGrid && this._bottomLeftGrid.forceUpdate();\n      this._bottomRightGrid && this._bottomRightGrid.forceUpdate();\n      this._topLeftGrid && this._topLeftGrid.forceUpdate();\n      this._topRightGrid && this._topRightGrid.forceUpdate();\n    }\n    /** See Grid#invalidateCellSizeAfterRender */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender() {\n      var _ref7 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref7$columnIndex = _ref7.columnIndex,\n          columnIndex = _ref7$columnIndex === void 0 ? 0 : _ref7$columnIndex,\n          _ref7$rowIndex = _ref7.rowIndex,\n          rowIndex = _ref7$rowIndex === void 0 ? 0 : _ref7$rowIndex;\n\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      this._bottomLeftGrid && this._bottomLeftGrid.measureAllCells();\n      this._bottomRightGrid && this._bottomRightGrid.measureAllCells();\n      this._topLeftGrid && this._topLeftGrid.measureAllCells();\n      this._topRightGrid && this._topRightGrid.measureAllCells();\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref8 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref8$columnIndex = _ref8.columnIndex,\n          columnIndex = _ref8$columnIndex === void 0 ? 0 : _ref8$columnIndex,\n          _ref8$rowIndex = _ref8.rowIndex,\n          rowIndex = _ref8$rowIndex === void 0 ? 0 : _ref8$rowIndex;\n\n      var _this$props6 = this.props,\n          fixedColumnCount = _this$props6.fixedColumnCount,\n          fixedRowCount = _this$props6.fixedRowCount;\n      var adjustedColumnIndex = Math.max(0, columnIndex - fixedColumnCount);\n      var adjustedRowIndex = Math.max(0, rowIndex - fixedRowCount);\n      this._bottomLeftGrid && this._bottomLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._bottomRightGrid && this._bottomRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._topLeftGrid && this._topLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: rowIndex\n      });\n      this._topRightGrid && this._topRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: rowIndex\n      });\n      this._leftGridWidth = null;\n      this._topGridHeight = null;\n\n      this._maybeCalculateCachedStyles(true);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props7 = this.props,\n          scrollLeft = _this$props7.scrollLeft,\n          scrollTop = _this$props7.scrollTop;\n\n      if (scrollLeft > 0 || scrollTop > 0) {\n        var newState = {};\n\n        if (scrollLeft > 0) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop > 0) {\n          newState.scrollTop = scrollTop;\n        }\n\n        this.setState(newState);\n      }\n\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props8 = this.props,\n          onScroll = _this$props8.onScroll,\n          onSectionRendered = _this$props8.onSectionRendered,\n          onScrollbarPresenceChange = _this$props8.onScrollbarPresenceChange,\n          scrollLeftProp = _this$props8.scrollLeft,\n          scrollToColumn = _this$props8.scrollToColumn,\n          scrollTopProp = _this$props8.scrollTop,\n          scrollToRow = _this$props8.scrollToRow,\n          rest = _objectWithoutProperties(_this$props8, [\"onScroll\", \"onSectionRendered\", \"onScrollbarPresenceChange\", \"scrollLeft\", \"scrollToColumn\", \"scrollTop\", \"scrollToRow\"]);\n\n      this._prepareForRender(); // Don't render any of our Grids if there are no cells.\n      // This mirrors what Grid does,\n      // And prevents us from recording inaccurage measurements when used with CellMeasurer.\n\n\n      if (this.props.width === 0 || this.props.height === 0) {\n        return null;\n      } // scrollTop and scrollLeft props are explicitly filtered out and ignored\n\n\n      var _this$state4 = this.state,\n          scrollLeft = _this$state4.scrollLeft,\n          scrollTop = _this$state4.scrollTop;\n      return React.createElement(\"div\", {\n        style: this._containerOuterStyle\n      }, React.createElement(\"div\", {\n        style: this._containerTopStyle\n      }, this._renderTopLeftGrid(rest), this._renderTopRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollLeft: scrollLeft\n      }))), React.createElement(\"div\", {\n        style: this._containerBottomStyle\n      }, this._renderBottomLeftGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollTop: scrollTop\n      })), this._renderBottomRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        onSectionRendered: onSectionRendered,\n        scrollLeft: scrollLeft,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow,\n        scrollTop: scrollTop\n      }))));\n    }\n  }, {\n    key: \"_getBottomGridHeight\",\n    value: function _getBottomGridHeight(props) {\n      var height = props.height;\n\n      var topGridHeight = this._getTopGridHeight(props);\n\n      return height - topGridHeight;\n    }\n  }, {\n    key: \"_getLeftGridWidth\",\n    value: function _getLeftGridWidth(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          columnWidth = props.columnWidth;\n\n      if (this._leftGridWidth == null) {\n        if (typeof columnWidth === 'function') {\n          var leftGridWidth = 0;\n\n          for (var index = 0; index < fixedColumnCount; index++) {\n            leftGridWidth += columnWidth({\n              index: index\n            });\n          }\n\n          this._leftGridWidth = leftGridWidth;\n        } else {\n          this._leftGridWidth = columnWidth * fixedColumnCount;\n        }\n      }\n\n      return this._leftGridWidth;\n    }\n  }, {\n    key: \"_getRightGridWidth\",\n    value: function _getRightGridWidth(props) {\n      var width = props.width;\n\n      var leftGridWidth = this._getLeftGridWidth(props);\n\n      return width - leftGridWidth;\n    }\n  }, {\n    key: \"_getTopGridHeight\",\n    value: function _getTopGridHeight(props) {\n      var fixedRowCount = props.fixedRowCount,\n          rowHeight = props.rowHeight;\n\n      if (this._topGridHeight == null) {\n        if (typeof rowHeight === 'function') {\n          var topGridHeight = 0;\n\n          for (var index = 0; index < fixedRowCount; index++) {\n            topGridHeight += rowHeight({\n              index: index\n            });\n          }\n\n          this._topGridHeight = topGridHeight;\n        } else {\n          this._topGridHeight = rowHeight * fixedRowCount;\n        }\n      }\n\n      return this._topGridHeight;\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n        this.forceUpdate();\n      }\n    }\n    /**\n     * Avoid recreating inline styles each render; this bypasses Grid's shallowCompare.\n     * This method recalculates styles only when specific props change.\n     */\n\n  }, {\n    key: \"_maybeCalculateCachedStyles\",\n    value: function _maybeCalculateCachedStyles(resetAll) {\n      var _this$props9 = this.props,\n          columnWidth = _this$props9.columnWidth,\n          enableFixedColumnScroll = _this$props9.enableFixedColumnScroll,\n          enableFixedRowScroll = _this$props9.enableFixedRowScroll,\n          height = _this$props9.height,\n          fixedColumnCount = _this$props9.fixedColumnCount,\n          fixedRowCount = _this$props9.fixedRowCount,\n          rowHeight = _this$props9.rowHeight,\n          style = _this$props9.style,\n          styleBottomLeftGrid = _this$props9.styleBottomLeftGrid,\n          styleBottomRightGrid = _this$props9.styleBottomRightGrid,\n          styleTopLeftGrid = _this$props9.styleTopLeftGrid,\n          styleTopRightGrid = _this$props9.styleTopRightGrid,\n          width = _this$props9.width;\n      var sizeChange = resetAll || height !== this._lastRenderedHeight || width !== this._lastRenderedWidth;\n      var leftSizeChange = resetAll || columnWidth !== this._lastRenderedColumnWidth || fixedColumnCount !== this._lastRenderedFixedColumnCount;\n      var topSizeChange = resetAll || fixedRowCount !== this._lastRenderedFixedRowCount || rowHeight !== this._lastRenderedRowHeight;\n\n      if (resetAll || sizeChange || style !== this._lastRenderedStyle) {\n        this._containerOuterStyle = _objectSpread({\n          height: height,\n          overflow: 'visible',\n          // Let :focus outline show through\n          width: width\n        }, style);\n      }\n\n      if (resetAll || sizeChange || topSizeChange) {\n        this._containerTopStyle = {\n          height: this._getTopGridHeight(this.props),\n          position: 'relative',\n          width: width\n        };\n        this._containerBottomStyle = {\n          height: height - this._getTopGridHeight(this.props),\n          overflow: 'visible',\n          // Let :focus outline show through\n          position: 'relative',\n          width: width\n        };\n      }\n\n      if (resetAll || styleBottomLeftGrid !== this._lastRenderedStyleBottomLeftGrid) {\n        this._bottomLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: enableFixedColumnScroll ? 'auto' : 'hidden',\n          position: 'absolute'\n        }, styleBottomLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleBottomRightGrid !== this._lastRenderedStyleBottomRightGrid) {\n        this._bottomRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          position: 'absolute'\n        }, styleBottomRightGrid);\n      }\n\n      if (resetAll || styleTopLeftGrid !== this._lastRenderedStyleTopLeftGrid) {\n        this._topLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleTopRightGrid !== this._lastRenderedStyleTopRightGrid) {\n        this._topRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          overflowX: enableFixedRowScroll ? 'auto' : 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopRightGrid);\n      }\n\n      this._lastRenderedColumnWidth = columnWidth;\n      this._lastRenderedFixedColumnCount = fixedColumnCount;\n      this._lastRenderedFixedRowCount = fixedRowCount;\n      this._lastRenderedHeight = height;\n      this._lastRenderedRowHeight = rowHeight;\n      this._lastRenderedStyle = style;\n      this._lastRenderedStyleBottomLeftGrid = styleBottomLeftGrid;\n      this._lastRenderedStyleBottomRightGrid = styleBottomRightGrid;\n      this._lastRenderedStyleTopLeftGrid = styleTopLeftGrid;\n      this._lastRenderedStyleTopRightGrid = styleTopRightGrid;\n      this._lastRenderedWidth = width;\n    }\n  }, {\n    key: \"_prepareForRender\",\n    value: function _prepareForRender() {\n      if (this._lastRenderedColumnWidth !== this.props.columnWidth || this._lastRenderedFixedColumnCount !== this.props.fixedColumnCount) {\n        this._leftGridWidth = null;\n      }\n\n      if (this._lastRenderedFixedRowCount !== this.props.fixedRowCount || this._lastRenderedRowHeight !== this.props.rowHeight) {\n        this._topGridHeight = null;\n      }\n\n      this._maybeCalculateCachedStyles();\n\n      this._lastRenderedColumnWidth = this.props.columnWidth;\n      this._lastRenderedFixedColumnCount = this.props.fixedColumnCount;\n      this._lastRenderedFixedRowCount = this.props.fixedRowCount;\n      this._lastRenderedRowHeight = this.props.rowHeight;\n    }\n  }, {\n    key: \"_renderBottomLeftGrid\",\n    value: function _renderBottomLeftGrid(props) {\n      var enableFixedColumnScroll = props.enableFixedColumnScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          hideBottomLeftGridScrollbar = props.hideBottomLeftGridScrollbar;\n      var showVerticalScrollbar = this.state.showVerticalScrollbar;\n\n      if (!fixedColumnCount) {\n        return null;\n      }\n\n      var additionalRowCount = showVerticalScrollbar ? 1 : 0,\n          height = this._getBottomGridHeight(props),\n          width = this._getLeftGridWidth(props),\n          scrollbarSize = this.state.showVerticalScrollbar ? this.state.scrollbarSize : 0,\n          gridWidth = hideBottomLeftGridScrollbar ? width + scrollbarSize : width;\n\n      var bottomLeftGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomLeftGrid,\n        className: this.props.classNameBottomLeftGrid,\n        columnCount: fixedColumnCount,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomLeftGrid,\n        height: height,\n        onScroll: enableFixedColumnScroll ? this._onScrollTop : undefined,\n        ref: this._bottomLeftGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount) + additionalRowCount,\n        rowHeight: this._rowHeightBottomGrid,\n        style: this._bottomLeftGridStyle,\n        tabIndex: null,\n        width: gridWidth\n      }));\n\n      if (hideBottomLeftGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"BottomLeftGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._bottomLeftGridStyle, {\n            height: height,\n            width: width,\n            overflowY: 'hidden'\n          })\n        }, bottomLeftGrid);\n      }\n\n      return bottomLeftGrid;\n    }\n  }, {\n    key: \"_renderBottomRightGrid\",\n    value: function _renderBottomRightGrid(props) {\n      var columnCount = props.columnCount,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          scrollToColumn = props.scrollToColumn,\n          scrollToRow = props.scrollToRow;\n      return React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomRightGrid,\n        className: this.props.classNameBottomRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount),\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomRightGrid,\n        height: this._getBottomGridHeight(props),\n        onScroll: this._onScroll,\n        onScrollbarPresenceChange: this._onScrollbarPresenceChange,\n        ref: this._bottomRightGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount),\n        rowHeight: this._rowHeightBottomGrid,\n        scrollToColumn: scrollToColumn - fixedColumnCount,\n        scrollToRow: scrollToRow - fixedRowCount,\n        style: this._bottomRightGridStyle,\n        width: this._getRightGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopLeftGrid\",\n    value: function _renderTopLeftGrid(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount;\n\n      if (!fixedColumnCount || !fixedRowCount) {\n        return null;\n      }\n\n      return React.createElement(Grid, _extends({}, props, {\n        className: this.props.classNameTopLeftGrid,\n        columnCount: fixedColumnCount,\n        height: this._getTopGridHeight(props),\n        ref: this._topLeftGridRef,\n        rowCount: fixedRowCount,\n        style: this._topLeftGridStyle,\n        tabIndex: null,\n        width: this._getLeftGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopRightGrid\",\n    value: function _renderTopRightGrid(props) {\n      var columnCount = props.columnCount,\n          enableFixedRowScroll = props.enableFixedRowScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          scrollLeft = props.scrollLeft,\n          hideTopRightGridScrollbar = props.hideTopRightGridScrollbar;\n      var _this$state5 = this.state,\n          showHorizontalScrollbar = _this$state5.showHorizontalScrollbar,\n          scrollbarSize = _this$state5.scrollbarSize;\n\n      if (!fixedRowCount) {\n        return null;\n      }\n\n      var additionalColumnCount = showHorizontalScrollbar ? 1 : 0,\n          height = this._getTopGridHeight(props),\n          width = this._getRightGridWidth(props),\n          additionalHeight = showHorizontalScrollbar ? scrollbarSize : 0;\n\n      var gridHeight = height,\n          style = this._topRightGridStyle;\n\n      if (hideTopRightGridScrollbar) {\n        gridHeight = height + additionalHeight;\n        style = _objectSpread({}, this._topRightGridStyle, {\n          left: 0\n        });\n      }\n\n      var topRightGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererTopRightGrid,\n        className: this.props.classNameTopRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount) + additionalColumnCount,\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheTopRightGrid,\n        height: gridHeight,\n        onScroll: enableFixedRowScroll ? this._onScrollLeft : undefined,\n        ref: this._topRightGridRef,\n        rowCount: fixedRowCount,\n        scrollLeft: scrollLeft,\n        style: style,\n        tabIndex: null,\n        width: width\n      }));\n\n      if (hideTopRightGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"TopRightGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._topRightGridStyle, {\n            height: height,\n            width: width,\n            overflowX: 'hidden'\n          })\n        }, topRightGrid);\n      }\n\n      return topRightGrid;\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null && nextProps.scrollLeft >= 0 ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null && nextProps.scrollTop >= 0 ? nextProps.scrollTop : prevState.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return MultiGrid;\n}(React.PureComponent);\n\n_defineProperty(MultiGrid, \"defaultProps\", {\n  classNameBottomLeftGrid: '',\n  classNameBottomRightGrid: '',\n  classNameTopLeftGrid: '',\n  classNameTopRightGrid: '',\n  enableFixedColumnScroll: false,\n  enableFixedRowScroll: false,\n  fixedColumnCount: 0,\n  fixedRowCount: 0,\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  styleBottomLeftGrid: {},\n  styleBottomRightGrid: {},\n  styleTopLeftGrid: {},\n  styleTopRightGrid: {},\n  hideTopRightGridScrollbar: false,\n  hideBottomLeftGridScrollbar: false\n});\n\nMultiGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  classNameBottomLeftGrid: PropTypes.string.isRequired,\n  classNameBottomRightGrid: PropTypes.string.isRequired,\n  classNameTopLeftGrid: PropTypes.string.isRequired,\n  classNameTopRightGrid: PropTypes.string.isRequired,\n  enableFixedColumnScroll: PropTypes.bool.isRequired,\n  enableFixedRowScroll: PropTypes.bool.isRequired,\n  fixedColumnCount: PropTypes.number.isRequired,\n  fixedRowCount: PropTypes.number.isRequired,\n  onScrollbarPresenceChange: PropTypes.func,\n  style: PropTypes.object.isRequired,\n  styleBottomLeftGrid: PropTypes.object.isRequired,\n  styleBottomRightGrid: PropTypes.object.isRequired,\n  styleTopLeftGrid: PropTypes.object.isRequired,\n  styleTopRightGrid: PropTypes.object.isRequired,\n  hideTopRightGridScrollbar: PropTypes.bool,\n  hideBottomLeftGridScrollbar: PropTypes.bool\n} : {};\npolyfill(MultiGrid);\nexport default MultiGrid;","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * HOC that simplifies the process of synchronizing scrolling between two or more virtualized components.\n */\n\nvar ScrollSync =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ScrollSync, _React$PureComponent);\n\n  function ScrollSync(props, context) {\n    var _this;\n\n    _classCallCheck(this, ScrollSync);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ScrollSync).call(this, props, context));\n    _this.state = {\n      clientHeight: 0,\n      clientWidth: 0,\n      scrollHeight: 0,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollWidth: 0\n    };\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ScrollSync, [{\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state = this.state,\n          clientHeight = _this$state.clientHeight,\n          clientWidth = _this$state.clientWidth,\n          scrollHeight = _this$state.scrollHeight,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop,\n          scrollWidth = _this$state.scrollWidth;\n      return children({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        onScroll: this._onScroll,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref) {\n      var clientHeight = _ref.clientHeight,\n          clientWidth = _ref.clientWidth,\n          scrollHeight = _ref.scrollHeight,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          scrollWidth = _ref.scrollWidth;\n      this.setState({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }]);\n\n  return ScrollSync;\n}(React.PureComponent);\n\nexport { ScrollSync as default };\nScrollSync.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering 2 or more virtualized components.\n   * This function should implement the following signature:\n   * ({ onScroll, scrollLeft, scrollTop }) => PropTypes.element\n   */\n  children: PropTypes.func.isRequired\n} : {};","import * as React from 'react';\nexport default function defaultHeaderRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      style = _ref.style;\n  return React.createElement(\"div\", {\n    className: className,\n    role: \"row\",\n    style: style\n  }, columns);\n}\ndefaultHeaderRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRowRendererParams;\nimport { bpfrpt_proptype_HeaderRowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","var SortDirection = {\n  /**\n   * Sort items in ascending order.\n   * This means arranging from the lowest value to the highest (e.g. a-z, 0-9).\n   */\n  ASC: 'ASC',\n\n  /**\n   * Sort items in descending order.\n   * This means arranging from the highest value to the lowest (e.g. z-a, 9-0).\n   */\n  DESC: 'DESC'\n};\nexport default SortDirection;","import clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport SortDirection from './SortDirection';\n/**\n * Displayed beside a header to indicate that a Table is currently sorted by this column.\n */\n\nexport default function SortIndicator(_ref) {\n  var sortDirection = _ref.sortDirection;\n  var classNames = clsx('ReactVirtualized__Table__sortableHeaderIcon', {\n    'ReactVirtualized__Table__sortableHeaderIcon--ASC': sortDirection === SortDirection.ASC,\n    'ReactVirtualized__Table__sortableHeaderIcon--DESC': sortDirection === SortDirection.DESC\n  });\n  return React.createElement(\"svg\", {\n    className: classNames,\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 24 24\"\n  }, sortDirection === SortDirection.ASC ? React.createElement(\"path\", {\n    d: \"M7 14l5-5 5 5z\"\n  }) : React.createElement(\"path\", {\n    d: \"M7 10l5 5 5-5z\"\n  }), React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  }));\n}\nSortIndicator.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC])\n} : {};","import * as React from 'react';\nimport SortIndicator from './SortIndicator';\n\n/**\n * Default table header renderer.\n */\nexport default function defaultHeaderRenderer(_ref) {\n  var dataKey = _ref.dataKey,\n      label = _ref.label,\n      sortBy = _ref.sortBy,\n      sortDirection = _ref.sortDirection;\n  var showSortIndicator = sortBy === dataKey;\n  var children = [React.createElement(\"span\", {\n    className: \"ReactVirtualized__Table__headerTruncatedText\",\n    key: \"label\",\n    title: typeof label === 'string' ? label : null\n  }, label)];\n\n  if (showSortIndicator) {\n    children.push(React.createElement(SortIndicator, {\n      key: \"SortIndicator\",\n      sortDirection: sortDirection\n    }));\n  }\n\n  return children;\n}\ndefaultHeaderRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRendererParams;\nimport { bpfrpt_proptype_HeaderRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\n\n/**\n * Default row renderer for Table.\n */\nexport default function defaultRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      index = _ref.index,\n      key = _ref.key,\n      onRowClick = _ref.onRowClick,\n      onRowDoubleClick = _ref.onRowDoubleClick,\n      onRowMouseOut = _ref.onRowMouseOut,\n      onRowMouseOver = _ref.onRowMouseOver,\n      onRowRightClick = _ref.onRowRightClick,\n      rowData = _ref.rowData,\n      style = _ref.style;\n  var a11yProps = {\n    'aria-rowindex': index + 1\n  };\n\n  if (onRowClick || onRowDoubleClick || onRowMouseOut || onRowMouseOver || onRowRightClick) {\n    a11yProps['aria-label'] = 'row';\n    a11yProps.tabIndex = 0;\n\n    if (onRowClick) {\n      a11yProps.onClick = function (event) {\n        return onRowClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowDoubleClick) {\n      a11yProps.onDoubleClick = function (event) {\n        return onRowDoubleClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOut) {\n      a11yProps.onMouseOut = function (event) {\n        return onRowMouseOut({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOver) {\n      a11yProps.onMouseOver = function (event) {\n        return onRowMouseOver({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowRightClick) {\n      a11yProps.onContextMenu = function (event) {\n        return onRowRightClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n  }\n\n  return React.createElement(\"div\", _extends({}, a11yProps, {\n    className: className,\n    key: key,\n    role: \"row\",\n    style: style\n  }), columns);\n}\ndefaultRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_RowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_RowRendererParams;\nimport { bpfrpt_proptype_RowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport SortDirection from './SortDirection';\n/**\n * Describes the header and cell contents of a table column.\n */\n\nvar Column =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Column, _React$Component);\n\n  function Column() {\n    _classCallCheck(this, Column);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Column).apply(this, arguments));\n  }\n\n  return Column;\n}(React.Component);\n\n_defineProperty(Column, \"defaultProps\", {\n  cellDataGetter: defaultCellDataGetter,\n  cellRenderer: defaultCellRenderer,\n  defaultSortDirection: SortDirection.ASC,\n  flexGrow: 0,\n  flexShrink: 1,\n  headerRenderer: defaultHeaderRenderer,\n  style: {}\n});\n\nexport { Column as default };\nColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Optional aria-label value to set on the column header */\n  'aria-label': PropTypes.string,\n\n  /**\n   * Callback responsible for returning a cell's data, given its :dataKey\n   * ({ columnData: any, dataKey: string, rowData: any }): any\n   */\n  cellDataGetter: PropTypes.func,\n\n  /**\n   * Callback responsible for rendering a cell's contents.\n   * ({ cellData: any, columnData: any, dataKey: string, rowData: any, rowIndex: number }): node\n   */\n  cellRenderer: PropTypes.func,\n\n  /** Optional CSS class to apply to cell */\n  className: PropTypes.string,\n\n  /** Optional additional data passed to this column's :cellDataGetter */\n  columnData: PropTypes.object,\n\n  /** Uniquely identifies the row-data attribute corresponding to this cell */\n  dataKey: PropTypes.any.isRequired,\n\n  /** Optional direction to be used when clicked the first time */\n  defaultSortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** If sort is enabled for the table at large, disable it for this column */\n  disableSort: PropTypes.bool,\n\n  /** Flex grow style; defaults to 0 */\n  flexGrow: PropTypes.number,\n\n  /** Flex shrink style; defaults to 1 */\n  flexShrink: PropTypes.number,\n\n  /** Optional CSS class to apply to this column's header */\n  headerClassName: PropTypes.string,\n\n  /**\n   * Optional callback responsible for rendering a column header contents.\n   * ({ columnData: object, dataKey: string, disableSort: boolean, label: node, sortBy: string, sortDirection: string }): PropTypes.node\n   */\n  headerRenderer: PropTypes.func.isRequired,\n\n  /** Optional inline style to apply to this column's header */\n  headerStyle: PropTypes.object,\n\n  /** Optional id to set on the column header */\n  id: PropTypes.string,\n\n  /** Header label for this column */\n  label: PropTypes.node,\n\n  /** Maximum width of column; this property will only be used if :flexGrow is > 0. */\n  maxWidth: PropTypes.number,\n\n  /** Minimum width of column. */\n  minWidth: PropTypes.number,\n\n  /** Optional inline style to apply to cell */\n  style: PropTypes.object,\n\n  /** Flex basis (width) for this column; This value can grow or shrink based on :flexGrow and :flexShrink properties. */\n  width: PropTypes.number.isRequired\n} : {};","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport Column from './Column';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer';\nimport SortDirection from './SortDirection';\n/**\n * Table component with fixed headers and virtualized rows for improved performance with large data sets.\n * This component expects explicit width, height, and padding parameters.\n */\n\nvar Table =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Table, _React$PureComponent);\n\n  function Table(props) {\n    var _this;\n\n    _classCallCheck(this, Table);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Table).call(this, props));\n    _this.state = {\n      scrollbarWidth: 0\n    };\n    _this._createColumn = _this._createColumn.bind(_assertThisInitialized(_this));\n    _this._createRow = _this._createRow.bind(_assertThisInitialized(_this));\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    _this._onSectionRendered = _this._onSectionRendered.bind(_assertThisInitialized(_this));\n    _this._setRef = _this._setRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Table, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref) {\n      var alignment = _ref.alignment,\n          index = _ref.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref3$columnIndex = _ref3.columnIndex,\n          columnIndex = _ref3$columnIndex === void 0 ? 0 : _ref3$columnIndex,\n          _ref3$rowIndex = _ref3.rowIndex,\n          rowIndex = _ref3$rowIndex === void 0 ? 0 : _ref3$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"getScrollbarWidth\",\n    value: function getScrollbarWidth() {\n      if (this.Grid) {\n        var _Grid = findDOMNode(this.Grid);\n\n        var clientWidth = _Grid.clientWidth || 0;\n        var offsetWidth = _Grid.offsetWidth || 0;\n        return offsetWidth - clientWidth;\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          children = _this$props.children,\n          className = _this$props.className,\n          disableHeader = _this$props.disableHeader,\n          gridClassName = _this$props.gridClassName,\n          gridStyle = _this$props.gridStyle,\n          headerHeight = _this$props.headerHeight,\n          headerRowRenderer = _this$props.headerRowRenderer,\n          height = _this$props.height,\n          id = _this$props.id,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          rowClassName = _this$props.rowClassName,\n          rowStyle = _this$props.rowStyle,\n          scrollToIndex = _this$props.scrollToIndex,\n          style = _this$props.style,\n          width = _this$props.width;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var availableRowsHeight = disableHeader ? height : height - headerHeight;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: -1\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: -1\n      }) : rowStyle; // Precompute and cache column styles before rendering rows and columns to speed things up\n\n      this._cachedColumnStyles = [];\n      React.Children.toArray(children).forEach(function (column, index) {\n        var flexStyles = _this2._getFlexStyleForColumn(column, column.props.style);\n\n        _this2._cachedColumnStyles[index] = _objectSpread({\n          overflow: 'hidden'\n        }, flexStyles);\n      }); // Note that we specify :rowCount, :scrollbarWidth, :sortBy, and :sortDirection as properties on Grid even though these have nothing to do with Grid.\n      // This is done because Grid is a pure component and won't update unless its properties or state has changed.\n      // Any property that should trigger a re-render of Grid then is specified here to avoid a stale display.\n\n      return React.createElement(\"div\", {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-labelledby\": this.props['aria-labelledby'],\n        \"aria-colcount\": React.Children.toArray(children).length,\n        \"aria-rowcount\": this.props.rowCount,\n        className: clsx('ReactVirtualized__Table', className),\n        id: id,\n        role: \"grid\",\n        style: style\n      }, !disableHeader && headerRowRenderer({\n        className: clsx('ReactVirtualized__Table__headerRow', rowClass),\n        columns: this._getHeaderColumns(),\n        style: _objectSpread({\n          height: headerHeight,\n          overflow: 'hidden',\n          paddingRight: scrollbarWidth,\n          width: width\n        }, rowStyleObject)\n      }), React.createElement(Grid, _extends({}, this.props, {\n        \"aria-readonly\": null,\n        autoContainerWidth: true,\n        className: clsx('ReactVirtualized__Table__Grid', gridClassName),\n        cellRenderer: this._createRow,\n        columnWidth: width,\n        columnCount: 1,\n        height: availableRowsHeight,\n        id: undefined,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        role: \"rowgroup\",\n        scrollbarWidth: scrollbarWidth,\n        scrollToRow: scrollToIndex,\n        style: _objectSpread({}, gridStyle, {\n          overflowX: 'hidden'\n        })\n      })));\n    }\n  }, {\n    key: \"_createColumn\",\n    value: function _createColumn(_ref4) {\n      var column = _ref4.column,\n          columnIndex = _ref4.columnIndex,\n          isScrolling = _ref4.isScrolling,\n          parent = _ref4.parent,\n          rowData = _ref4.rowData,\n          rowIndex = _ref4.rowIndex;\n      var onColumnClick = this.props.onColumnClick;\n      var _column$props = column.props,\n          cellDataGetter = _column$props.cellDataGetter,\n          cellRenderer = _column$props.cellRenderer,\n          className = _column$props.className,\n          columnData = _column$props.columnData,\n          dataKey = _column$props.dataKey,\n          id = _column$props.id;\n      var cellData = cellDataGetter({\n        columnData: columnData,\n        dataKey: dataKey,\n        rowData: rowData\n      });\n      var renderedCell = cellRenderer({\n        cellData: cellData,\n        columnData: columnData,\n        columnIndex: columnIndex,\n        dataKey: dataKey,\n        isScrolling: isScrolling,\n        parent: parent,\n        rowData: rowData,\n        rowIndex: rowIndex\n      });\n\n      var onClick = function onClick(event) {\n        onColumnClick && onColumnClick({\n          columnData: columnData,\n          dataKey: dataKey,\n          event: event\n        });\n      };\n\n      var style = this._cachedColumnStyles[columnIndex];\n      var title = typeof renderedCell === 'string' ? renderedCell : null; // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n      return React.createElement(\"div\", {\n        \"aria-colindex\": columnIndex + 1,\n        \"aria-describedby\": id,\n        className: clsx('ReactVirtualized__Table__rowColumn', className),\n        key: 'Row' + rowIndex + '-' + 'Col' + columnIndex,\n        onClick: onClick,\n        role: \"gridcell\",\n        style: style,\n        title: title\n      }, renderedCell);\n    }\n  }, {\n    key: \"_createHeader\",\n    value: function _createHeader(_ref5) {\n      var column = _ref5.column,\n          index = _ref5.index;\n      var _this$props2 = this.props,\n          headerClassName = _this$props2.headerClassName,\n          headerStyle = _this$props2.headerStyle,\n          onHeaderClick = _this$props2.onHeaderClick,\n          sort = _this$props2.sort,\n          sortBy = _this$props2.sortBy,\n          sortDirection = _this$props2.sortDirection;\n      var _column$props2 = column.props,\n          columnData = _column$props2.columnData,\n          dataKey = _column$props2.dataKey,\n          defaultSortDirection = _column$props2.defaultSortDirection,\n          disableSort = _column$props2.disableSort,\n          headerRenderer = _column$props2.headerRenderer,\n          id = _column$props2.id,\n          label = _column$props2.label;\n      var sortEnabled = !disableSort && sort;\n      var classNames = clsx('ReactVirtualized__Table__headerColumn', headerClassName, column.props.headerClassName, {\n        ReactVirtualized__Table__sortableHeaderColumn: sortEnabled\n      });\n\n      var style = this._getFlexStyleForColumn(column, _objectSpread({}, headerStyle, {}, column.props.headerStyle));\n\n      var renderedHeader = headerRenderer({\n        columnData: columnData,\n        dataKey: dataKey,\n        disableSort: disableSort,\n        label: label,\n        sortBy: sortBy,\n        sortDirection: sortDirection\n      });\n      var headerOnClick, headerOnKeyDown, headerTabIndex, headerAriaSort, headerAriaLabel;\n\n      if (sortEnabled || onHeaderClick) {\n        // If this is a sortable header, clicking it should update the table data's sorting.\n        var isFirstTimeSort = sortBy !== dataKey; // If this is the firstTime sort of this column, use the column default sort order.\n        // Otherwise, invert the direction of the sort.\n\n        var newSortDirection = isFirstTimeSort ? defaultSortDirection : sortDirection === SortDirection.DESC ? SortDirection.ASC : SortDirection.DESC;\n\n        var onClick = function onClick(event) {\n          sortEnabled && sort({\n            defaultSortDirection: defaultSortDirection,\n            event: event,\n            sortBy: dataKey,\n            sortDirection: newSortDirection\n          });\n          onHeaderClick && onHeaderClick({\n            columnData: columnData,\n            dataKey: dataKey,\n            event: event\n          });\n        };\n\n        var onKeyDown = function onKeyDown(event) {\n          if (event.key === 'Enter' || event.key === ' ') {\n            onClick(event);\n          }\n        };\n\n        headerAriaLabel = column.props['aria-label'] || label || dataKey;\n        headerAriaSort = 'none';\n        headerTabIndex = 0;\n        headerOnClick = onClick;\n        headerOnKeyDown = onKeyDown;\n      }\n\n      if (sortBy === dataKey) {\n        headerAriaSort = sortDirection === SortDirection.ASC ? 'ascending' : 'descending';\n      } // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n\n      return React.createElement(\"div\", {\n        \"aria-label\": headerAriaLabel,\n        \"aria-sort\": headerAriaSort,\n        className: classNames,\n        id: id,\n        key: 'Header-Col' + index,\n        onClick: headerOnClick,\n        onKeyDown: headerOnKeyDown,\n        role: \"columnheader\",\n        style: style,\n        tabIndex: headerTabIndex\n      }, renderedHeader);\n    }\n  }, {\n    key: \"_createRow\",\n    value: function _createRow(_ref6) {\n      var _this3 = this;\n\n      var index = _ref6.rowIndex,\n          isScrolling = _ref6.isScrolling,\n          key = _ref6.key,\n          parent = _ref6.parent,\n          style = _ref6.style;\n      var _this$props3 = this.props,\n          children = _this$props3.children,\n          onRowClick = _this$props3.onRowClick,\n          onRowDoubleClick = _this$props3.onRowDoubleClick,\n          onRowRightClick = _this$props3.onRowRightClick,\n          onRowMouseOver = _this$props3.onRowMouseOver,\n          onRowMouseOut = _this$props3.onRowMouseOut,\n          rowClassName = _this$props3.rowClassName,\n          rowGetter = _this$props3.rowGetter,\n          rowRenderer = _this$props3.rowRenderer,\n          rowStyle = _this$props3.rowStyle;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: index\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: index\n      }) : rowStyle;\n      var rowData = rowGetter({\n        index: index\n      });\n      var columns = React.Children.toArray(children).map(function (column, columnIndex) {\n        return _this3._createColumn({\n          column: column,\n          columnIndex: columnIndex,\n          isScrolling: isScrolling,\n          parent: parent,\n          rowData: rowData,\n          rowIndex: index,\n          scrollbarWidth: scrollbarWidth\n        });\n      });\n      var className = clsx('ReactVirtualized__Table__row', rowClass);\n\n      var flattenedStyle = _objectSpread({}, style, {\n        height: this._getRowHeight(index),\n        overflow: 'hidden',\n        paddingRight: scrollbarWidth\n      }, rowStyleObject);\n\n      return rowRenderer({\n        className: className,\n        columns: columns,\n        index: index,\n        isScrolling: isScrolling,\n        key: key,\n        onRowClick: onRowClick,\n        onRowDoubleClick: onRowDoubleClick,\n        onRowRightClick: onRowRightClick,\n        onRowMouseOver: onRowMouseOver,\n        onRowMouseOut: onRowMouseOut,\n        rowData: rowData,\n        style: flattenedStyle\n      });\n    }\n    /**\n     * Determines the flex-shrink, flex-grow, and width values for a cell (header or column).\n     */\n\n  }, {\n    key: \"_getFlexStyleForColumn\",\n    value: function _getFlexStyleForColumn(column) {\n      var customStyle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var flexValue = \"\".concat(column.props.flexGrow, \" \").concat(column.props.flexShrink, \" \").concat(column.props.width, \"px\");\n\n      var style = _objectSpread({}, customStyle, {\n        flex: flexValue,\n        msFlex: flexValue,\n        WebkitFlex: flexValue\n      });\n\n      if (column.props.maxWidth) {\n        style.maxWidth = column.props.maxWidth;\n      }\n\n      if (column.props.minWidth) {\n        style.minWidth = column.props.minWidth;\n      }\n\n      return style;\n    }\n  }, {\n    key: \"_getHeaderColumns\",\n    value: function _getHeaderColumns() {\n      var _this4 = this;\n\n      var _this$props4 = this.props,\n          children = _this$props4.children,\n          disableHeader = _this$props4.disableHeader;\n      var items = disableHeader ? [] : React.Children.toArray(children);\n      return items.map(function (column, index) {\n        return _this4._createHeader({\n          column: column,\n          index: index\n        });\n      });\n    }\n  }, {\n    key: \"_getRowHeight\",\n    value: function _getRowHeight(rowIndex) {\n      var rowHeight = this.props.rowHeight;\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: rowIndex\n      }) : rowHeight;\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref7) {\n      var clientHeight = _ref7.clientHeight,\n          scrollHeight = _ref7.scrollHeight,\n          scrollTop = _ref7.scrollTop;\n      var onScroll = this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    }\n  }, {\n    key: \"_onSectionRendered\",\n    value: function _onSectionRendered(_ref8) {\n      var rowOverscanStartIndex = _ref8.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref8.rowOverscanStopIndex,\n          rowStartIndex = _ref8.rowStartIndex,\n          rowStopIndex = _ref8.rowStopIndex;\n      var onRowsRendered = this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    }\n  }, {\n    key: \"_setRef\",\n    value: function _setRef(ref) {\n      this.Grid = ref;\n    }\n  }, {\n    key: \"_setScrollbarWidth\",\n    value: function _setScrollbarWidth() {\n      var scrollbarWidth = this.getScrollbarWidth();\n      this.setState({\n        scrollbarWidth: scrollbarWidth\n      });\n    }\n  }]);\n\n  return Table;\n}(React.PureComponent);\n\n_defineProperty(Table, \"defaultProps\", {\n  disableHeader: false,\n  estimatedRowSize: 30,\n  headerHeight: 0,\n  headerStyle: {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  rowRenderer: defaultRowRenderer,\n  headerRowRenderer: defaultHeaderRowRenderer,\n  rowStyle: {},\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { Table as default };\nTable.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** This is just set on the grid top element. */\n  'aria-label': PropTypes.string,\n\n  /** This is just set on the grid top element. */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /** One or more Columns describing the data displayed in this row */\n  children: function children(props) {\n    var children = React.Children.toArray(props.children);\n\n    for (var i = 0; i < children.length; i++) {\n      var childType = children[i].type;\n\n      if (childType !== Column && !(childType.prototype instanceof Column)) {\n        return new Error('Table only accepts children of type Column');\n      }\n    }\n  },\n\n  /** Optional CSS class name */\n  className: PropTypes.string,\n\n  /** Disable rendering the header at all */\n  disableHeader: PropTypes.bool,\n\n  /**\n   * Used to estimate the total height of a Table before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  estimatedRowSize: PropTypes.number.isRequired,\n\n  /** Optional custom CSS class name to attach to inner Grid element. */\n  gridClassName: PropTypes.string,\n\n  /** Optional inline style to attach to inner Grid element. */\n  gridStyle: PropTypes.object,\n\n  /** Optional CSS class to apply to all column headers */\n  headerClassName: PropTypes.string,\n\n  /** Fixed height of header row */\n  headerHeight: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: any[],\n   *   style: any\n   * }): PropTypes.node\n   */\n  headerRowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table header columns. */\n  headerStyle: PropTypes.object,\n\n  /** Fixed/available height for out DOM element */\n  height: PropTypes.number.isRequired,\n\n  /** Optional id */\n  id: PropTypes.string,\n\n  /** Optional renderer to be used in place of table body rows when rowCount is 0 */\n  noRowsRenderer: PropTypes.func,\n\n  /**\n   * Optional callback when a column is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onColumnClick: PropTypes.func,\n\n  /**\n   * Optional callback when a column's header is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onHeaderClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user double-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowDoubleClick: PropTypes.func,\n\n  /**\n   * Callback invoked when the mouse leaves a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOut: PropTypes.func,\n\n  /**\n   * Callback invoked when a user moves the mouse over a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOver: PropTypes.func,\n\n  /**\n   * Callback invoked when a user right-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowRightClick: PropTypes.func,\n\n  /**\n   * Callback invoked with information about the slice of rows that were just rendered.\n   * ({ startIndex, stopIndex }): void\n   */\n  onRowsRendered: PropTypes.func,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, scrollHeight, scrollTop }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  overscanIndicesGetter: PropTypes.func.isRequired,\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  overscanRowCount: PropTypes.number.isRequired,\n\n  /**\n   * Optional CSS class to apply to all table rows (including the header row).\n   * This property can be a CSS class name (string) or a function that returns a class name.\n   * If a function is provided its signature should be: ({ index: number }): string\n   */\n  rowClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n\n  /**\n   * Callback responsible for returning a data row given an index.\n   * ({ index: number }): any\n   */\n  rowGetter: PropTypes.func.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * ({ index: number }): number\n   */\n  rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n\n  /** Number of rows in table. */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: Array,\n   *   index: number,\n   *   isScrolling: boolean,\n   *   onRowClick: ?Function,\n   *   onRowDoubleClick: ?Function,\n   *   onRowMouseOver: ?Function,\n   *   onRowMouseOut: ?Function,\n   *   rowData: any,\n   *   style: any\n   * }): PropTypes.node\n   */\n  rowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table rows. */\n  rowStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n\n  /** See Grid#scrollToAlignment */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  scrollToIndex: PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Sort function to be called if a sortable header is clicked.\n   * Should implement the following interface: ({\n   *   defaultSortDirection: 'ASC' | 'DESC',\n   *   event: MouseEvent,\n   *   sortBy: string,\n   *   sortDirection: SortDirection\n   * }): void\n   */\n  sort: PropTypes.func,\n\n  /** Table data is currently sorted by this :dataKey (if it is sorted at all) */\n  sortBy: PropTypes.string,\n\n  /** Table data is currently sorted in this direction (if it is sorted at all) */\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** Optional inline style */\n  style: PropTypes.object,\n\n  /** Tab index for focus */\n  tabIndex: PropTypes.number,\n\n  /** Width of list */\n  width: PropTypes.number.isRequired\n} : {};\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";","/**\n * Default accessor for returning a cell value for a given attribute.\n * This function expects to operate on either a vanilla Object or an Immutable Map.\n * You should override the column's cellDataGetter if your data is some other type of object.\n */\nexport default function defaultCellDataGetter(_ref) {\n  var dataKey = _ref.dataKey,\n      rowData = _ref.rowData;\n\n  if (typeof rowData.get === 'function') {\n    return rowData.get(dataKey);\n  } else {\n    return rowData[dataKey];\n  }\n}\nimport { bpfrpt_proptype_CellDataGetterParams } from \"./types\";","/**\n * Default cell renderer that displays an attribute as a simple string\n * You should override the column's cellRenderer if your data is some other type of object.\n */\nexport default function defaultCellRenderer(_ref) {\n  var cellData = _ref.cellData;\n\n  if (cellData == null) {\n    return '';\n  } else {\n    return String(cellData);\n  }\n}\nimport { bpfrpt_proptype_CellRendererParams } from \"./types\";","import createMultiSort from './createMultiSort';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer.js';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport Column from './Column';\nimport SortDirection from './SortDirection';\nimport SortIndicator from './SortIndicator';\nimport Table from './Table';\nexport default Table;\nexport { createMultiSort, defaultCellDataGetter, defaultCellRenderer, defaultHeaderRowRenderer, defaultHeaderRenderer, defaultRowRenderer, Column, SortDirection, SortIndicator, Table };","import { requestAnimationTimeout, cancelAnimationTimeout } from '../../utils/requestAnimationTimeout';\nvar mountedInstances = [];\nvar originalBodyPointerEvents = null;\nvar disablePointerEventsTimeoutId = null;\n\nfunction enablePointerEventsIfDisabled() {\n  if (disablePointerEventsTimeoutId) {\n    disablePointerEventsTimeoutId = null;\n\n    if (document.body && originalBodyPointerEvents != null) {\n      document.body.style.pointerEvents = originalBodyPointerEvents;\n    }\n\n    originalBodyPointerEvents = null;\n  }\n}\n\nfunction enablePointerEventsAfterDelayCallback() {\n  enablePointerEventsIfDisabled();\n  mountedInstances.forEach(function (instance) {\n    return instance.__resetIsScrolling();\n  });\n}\n\nfunction enablePointerEventsAfterDelay() {\n  if (disablePointerEventsTimeoutId) {\n    cancelAnimationTimeout(disablePointerEventsTimeoutId);\n  }\n\n  var maximumTimeout = 0;\n  mountedInstances.forEach(function (instance) {\n    maximumTimeout = Math.max(maximumTimeout, instance.props.scrollingResetTimeInterval);\n  });\n  disablePointerEventsTimeoutId = requestAnimationTimeout(enablePointerEventsAfterDelayCallback, maximumTimeout);\n}\n\nfunction onScrollWindow(event) {\n  if (event.currentTarget === window && originalBodyPointerEvents == null && document.body) {\n    originalBodyPointerEvents = document.body.style.pointerEvents;\n    document.body.style.pointerEvents = 'none';\n  }\n\n  enablePointerEventsAfterDelay();\n  mountedInstances.forEach(function (instance) {\n    if (instance.props.scrollElement === event.currentTarget) {\n      instance.__handleWindowScrollEvent();\n    }\n  });\n}\n\nexport function registerScrollListener(component, element) {\n  if (!mountedInstances.some(function (instance) {\n    return instance.props.scrollElement === element;\n  })) {\n    element.addEventListener('scroll', onScrollWindow);\n  }\n\n  mountedInstances.push(component);\n}\nexport function unregisterScrollListener(component, element) {\n  mountedInstances = mountedInstances.filter(function (instance) {\n    return instance !== component;\n  });\n\n  if (!mountedInstances.length) {\n    element.removeEventListener('scroll', onScrollWindow);\n\n    if (disablePointerEventsTimeoutId) {\n      cancelAnimationTimeout(disablePointerEventsTimeoutId);\n      enablePointerEventsIfDisabled();\n    }\n  }\n}\nimport { bpfrpt_proptype_WindowScroller } from \"../WindowScroller.js\";","/**\n * Gets the dimensions of the element, accounting for API differences between\n * `window` and other DOM elements.\n */\n// TODO Move this into WindowScroller and import from there\nvar isWindow = function isWindow(element) {\n  return element === window;\n};\n\nvar getBoundingBox = function getBoundingBox(element) {\n  return element.getBoundingClientRect();\n};\n\nexport function getDimensions(scrollElement, props) {\n  if (!scrollElement) {\n    return {\n      height: props.serverHeight,\n      width: props.serverWidth\n    };\n  } else if (isWindow(scrollElement)) {\n    var _window = window,\n        innerHeight = _window.innerHeight,\n        innerWidth = _window.innerWidth;\n    return {\n      height: typeof innerHeight === 'number' ? innerHeight : 0,\n      width: typeof innerWidth === 'number' ? innerWidth : 0\n    };\n  } else {\n    return getBoundingBox(scrollElement);\n  }\n}\n/**\n * Gets the vertical and horizontal position of an element within its scroll container.\n * Elements that have been “scrolled past” return negative values.\n * Handles edge-case where a user is navigating back (history) from an already-scrolled page.\n * In this case the body’s top or left position will be a negative number and this element’s top or left will be increased (by that amount).\n */\n\nexport function getPositionOffset(element, container) {\n  if (isWindow(container) && document.documentElement) {\n    var containerElement = document.documentElement;\n    var elementRect = getBoundingBox(element);\n    var containerRect = getBoundingBox(containerElement);\n    return {\n      top: elementRect.top - containerRect.top,\n      left: elementRect.left - containerRect.left\n    };\n  } else {\n    var scrollOffset = getScrollOffset(container);\n\n    var _elementRect = getBoundingBox(element);\n\n    var _containerRect = getBoundingBox(container);\n\n    return {\n      top: _elementRect.top + scrollOffset.top - _containerRect.top,\n      left: _elementRect.left + scrollOffset.left - _containerRect.left\n    };\n  }\n}\n/**\n * Gets the vertical and horizontal scroll amount of the element, accounting for IE compatibility\n * and API differences between `window` and other DOM elements.\n */\n\nexport function getScrollOffset(element) {\n  if (isWindow(element) && document.documentElement) {\n    return {\n      top: 'scrollY' in window ? window.scrollY : document.documentElement.scrollTop,\n      left: 'scrollX' in window ? window.scrollX : document.documentElement.scrollLeft\n    };\n  } else {\n    return {\n      top: element.scrollTop,\n      left: element.scrollLeft\n    };\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { registerScrollListener, unregisterScrollListener } from './utils/onScroll';\nimport { getDimensions, getPositionOffset, getScrollOffset } from './utils/dimensions';\nimport createDetectElementResize from '../vendor/detectElementResize';\n\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\nexport var IS_SCROLLING_TIMEOUT = 150;\n\nvar getWindow = function getWindow() {\n  return typeof window !== 'undefined' ? window : undefined;\n};\n\nvar WindowScroller = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(WindowScroller, _React$PureComponent);\n\n  function WindowScroller() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, WindowScroller);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(WindowScroller)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", getWindow());\n\n    _defineProperty(_assertThisInitialized(_this), \"_isMounted\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromTop\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromLeft\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", _objectSpread({}, getDimensions(_this.props.scrollElement, _this.props), {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    }));\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('WindowScroller registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onChildScroll\", function (_ref) {\n      var scrollTop = _ref.scrollTop;\n\n      if (_this.state.scrollTop === scrollTop) {\n        return;\n      }\n\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        if (typeof scrollElement.scrollTo === 'function') {\n          scrollElement.scrollTo(0, scrollTop + _this._positionFromTop);\n        } else {\n          scrollElement.scrollTop = scrollTop + _this._positionFromTop;\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerResizeListener\", function (element) {\n      if (element === window) {\n        window.addEventListener('resize', _this._onResize, false);\n      } else {\n        _this._detectElementResize.addResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_unregisterResizeListener\", function (element) {\n      if (element === window) {\n        window.removeEventListener('resize', _this._onResize, false);\n      } else if (element) {\n        _this._detectElementResize.removeResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__handleWindowScrollEvent\", function () {\n      if (!_this._isMounted) {\n        return;\n      }\n\n      var onScroll = _this.props.onScroll;\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        var scrollOffset = getScrollOffset(scrollElement);\n        var scrollLeft = Math.max(0, scrollOffset.left - _this._positionFromLeft);\n        var scrollTop = Math.max(0, scrollOffset.top - _this._positionFromTop);\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        onScroll({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__resetIsScrolling\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(WindowScroller, [{\n    key: \"updatePosition\",\n    value: function updatePosition() {\n      var scrollElement = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.scrollElement;\n      var onResize = this.props.onResize;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width;\n      var thisNode = this._child || ReactDOM.findDOMNode(this);\n\n      if (thisNode instanceof Element && scrollElement) {\n        var offset = getPositionOffset(thisNode, scrollElement);\n        this._positionFromTop = offset.top;\n        this._positionFromLeft = offset.left;\n      }\n\n      var dimensions = getDimensions(scrollElement, this.props);\n\n      if (height !== dimensions.height || width !== dimensions.width) {\n        this.setState({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n        onResize({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var scrollElement = this.props.scrollElement;\n      this._detectElementResize = createDetectElementResize();\n      this.updatePosition(scrollElement);\n\n      if (scrollElement) {\n        registerScrollListener(this, scrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n\n      this._isMounted = true;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var scrollElement = this.props.scrollElement;\n      var prevScrollElement = prevProps.scrollElement;\n\n      if (prevScrollElement !== scrollElement && prevScrollElement != null && scrollElement != null) {\n        this.updatePosition(scrollElement);\n        unregisterScrollListener(this, prevScrollElement);\n        registerScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(prevScrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var scrollElement = this.props.scrollElement;\n\n      if (scrollElement) {\n        unregisterScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(scrollElement);\n      }\n\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state2 = this.state,\n          isScrolling = _this$state2.isScrolling,\n          scrollTop = _this$state2.scrollTop,\n          scrollLeft = _this$state2.scrollLeft,\n          height = _this$state2.height,\n          width = _this$state2.width;\n      return children({\n        onChildScroll: this._onChildScroll,\n        registerChild: this._registerChild,\n        height: height,\n        isScrolling: isScrolling,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        width: width\n      });\n    }\n  }]);\n\n  return WindowScroller;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /**\n   * Function responsible for rendering children.\n   * This function should implement the following signature:\n   * ({ height, isScrolling, scrollLeft, scrollTop, width }) => PropTypes.element\n   */\n  \"children\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-resize: ({ height, width }) */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-scroll: ({ scrollLeft, scrollTop }) */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** Element to attach scroll event listeners. Defaults to window. */\n  \"scrollElement\": PropTypes.oneOfType([PropTypes.any, function () {\n    return (typeof Element === \"function\" ? PropTypes.instanceOf(Element) : PropTypes.any).apply(this, arguments);\n  }]),\n\n  /**\n   * Wait this amount of time after the last scroll event before resetting child `pointer-events`.\n   */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Height used for server-side rendering */\n  \"serverHeight\": PropTypes.number.isRequired,\n\n  /** Width used for server-side rendering */\n  \"serverWidth\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(WindowScroller, \"defaultProps\", {\n  onResize: function onResize() {},\n  onScroll: function onScroll() {},\n  scrollingResetTimeInterval: IS_SCROLLING_TIMEOUT,\n  scrollElement: getWindow(),\n  serverHeight: 0,\n  serverWidth: 0\n});\n\nexport { WindowScroller as default };\nimport PropTypes from \"prop-types\";","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport useTheme from '../styles/useTheme';\nimport IconButton from '../IconButton';\n/**\n * @ignore - internal component.\n */\n\nvar _ref = /*#__PURE__*/React.createElement(KeyboardArrowRight, null);\n\nvar _ref2 = /*#__PURE__*/React.createElement(KeyboardArrowLeft, null);\n\nvar _ref3 = /*#__PURE__*/React.createElement(KeyboardArrowLeft, null);\n\nvar _ref4 = /*#__PURE__*/React.createElement(KeyboardArrowRight, null);\n\nvar TablePaginationActions = /*#__PURE__*/React.forwardRef(function TablePaginationActions(props, ref) {\n  var backIconButtonProps = props.backIconButtonProps,\n      count = props.count,\n      nextIconButtonProps = props.nextIconButtonProps,\n      onChangePage = props.onChangePage,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      other = _objectWithoutProperties(props, [\"backIconButtonProps\", \"count\", \"nextIconButtonProps\", \"onChangePage\", \"page\", \"rowsPerPage\"]);\n\n  var theme = useTheme();\n\n  var handleBackButtonClick = function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  };\n\n  var handleNextButtonClick = function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(IconButton, _extends({\n    onClick: handleBackButtonClick,\n    disabled: page === 0,\n    color: \"inherit\"\n  }, backIconButtonProps), theme.direction === 'rtl' ? _ref : _ref2), /*#__PURE__*/React.createElement(IconButton, _extends({\n    onClick: handleNextButtonClick,\n    disabled: count !== -1 ? page >= Math.ceil(count / rowsPerPage) - 1 : false,\n    color: \"inherit\"\n  }, nextIconButtonProps), theme.direction === 'rtl' ? _ref3 : _ref4));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePaginationActions.propTypes = {\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) element.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onChangePage: PropTypes.func.isRequired,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: PropTypes.number.isRequired,\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired\n} : void 0;\nexport default TablePaginationActions;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@material-ui/utils';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport InputBase from '../InputBase';\nimport MenuItem from '../MenuItem';\nimport Select from '../Select';\nimport TableCell from '../TableCell';\nimport Toolbar from '../Toolbar';\nimport Typography from '../Typography';\nimport TablePaginationActions from './TablePaginationActions';\nimport useId from '../utils/unstable_useId';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.primary,\n      fontSize: theme.typography.pxToRem(14),\n      overflow: 'auto',\n      // Increase the specificity to override TableCell.\n      '&:last-child': {\n        padding: 0\n      }\n    },\n\n    /* Styles applied to the Toolbar component. */\n    toolbar: {\n      minHeight: 52,\n      paddingRight: 2\n    },\n\n    /* Styles applied to the spacer element. */\n    spacer: {\n      flex: '1 1 100%'\n    },\n\n    /* Styles applied to the caption Typography components if `variant=\"caption\"`. */\n    caption: {\n      flexShrink: 0\n    },\n    // TODO v5: `.selectRoot` should be merged with `.input`\n\n    /* Styles applied to the Select component root element. */\n    selectRoot: {\n      marginRight: 32,\n      marginLeft: 8\n    },\n\n    /* Styles applied to the Select component `select` class. */\n    select: {\n      paddingLeft: 8,\n      paddingRight: 24,\n      textAlign: 'right',\n      textAlignLast: 'right' // Align <select> on Chrome.\n\n    },\n    // TODO v5: remove\n\n    /* Styles applied to the Select component `icon` class. */\n    selectIcon: {},\n\n    /* Styles applied to the `InputBase` component. */\n    input: {\n      color: 'inherit',\n      fontSize: 'inherit',\n      flexShrink: 0\n    },\n\n    /* Styles applied to the MenuItem component. */\n    menuItem: {},\n\n    /* Styles applied to the internal `TablePaginationActions` component. */\n    actions: {\n      flexShrink: 0,\n      marginLeft: 20\n    }\n  };\n};\n\nvar defaultLabelDisplayedRows = function defaultLabelDisplayedRows(_ref) {\n  var from = _ref.from,\n      to = _ref.to,\n      count = _ref.count;\n  return \"\".concat(from, \"-\").concat(to, \" of \").concat(count !== -1 ? count : \"more than \".concat(to));\n};\n\nvar defaultRowsPerPageOptions = [10, 25, 50, 100];\n/**\n * A `TableCell` based component for placing inside `TableFooter` for pagination.\n */\n\nvar TablePagination = /*#__PURE__*/React.forwardRef(function TablePagination(props, ref) {\n  var _props$ActionsCompone = props.ActionsComponent,\n      ActionsComponent = _props$ActionsCompone === void 0 ? TablePaginationActions : _props$ActionsCompone,\n      backIconButtonProps = props.backIconButtonProps,\n      _props$backIconButton = props.backIconButtonText,\n      backIconButtonText = _props$backIconButton === void 0 ? 'Previous page' : _props$backIconButton,\n      classes = props.classes,\n      className = props.className,\n      colSpanProp = props.colSpan,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? TableCell : _props$component,\n      count = props.count,\n      _props$labelDisplayed = props.labelDisplayedRows,\n      labelDisplayedRows = _props$labelDisplayed === void 0 ? defaultLabelDisplayedRows : _props$labelDisplayed,\n      _props$labelRowsPerPa = props.labelRowsPerPage,\n      labelRowsPerPage = _props$labelRowsPerPa === void 0 ? 'Rows per page:' : _props$labelRowsPerPa,\n      nextIconButtonProps = props.nextIconButtonProps,\n      _props$nextIconButton = props.nextIconButtonText,\n      nextIconButtonText = _props$nextIconButton === void 0 ? 'Next page' : _props$nextIconButton,\n      onChangePage = props.onChangePage,\n      onChangeRowsPerPage = props.onChangeRowsPerPage,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      _props$rowsPerPageOpt = props.rowsPerPageOptions,\n      rowsPerPageOptions = _props$rowsPerPageOpt === void 0 ? defaultRowsPerPageOptions : _props$rowsPerPageOpt,\n      _props$SelectProps = props.SelectProps,\n      SelectProps = _props$SelectProps === void 0 ? {} : _props$SelectProps,\n      other = _objectWithoutProperties(props, [\"ActionsComponent\", \"backIconButtonProps\", \"backIconButtonText\", \"classes\", \"className\", \"colSpan\", \"component\", \"count\", \"labelDisplayedRows\", \"labelRowsPerPage\", \"nextIconButtonProps\", \"nextIconButtonText\", \"onChangePage\", \"onChangeRowsPerPage\", \"page\", \"rowsPerPage\", \"rowsPerPageOptions\", \"SelectProps\"]);\n\n  var colSpan;\n\n  if (Component === TableCell || Component === 'td') {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n\n  var selectId = useId();\n  var labelId = useId();\n  var MenuItemComponent = SelectProps.native ? 'option' : MenuItem;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    colSpan: colSpan,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(Toolbar, {\n    className: classes.toolbar\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.spacer\n  }), rowsPerPageOptions.length > 1 && /*#__PURE__*/React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"body2\",\n    className: classes.caption,\n    id: labelId\n  }, labelRowsPerPage), rowsPerPageOptions.length > 1 && /*#__PURE__*/React.createElement(Select, _extends({\n    classes: {\n      select: classes.select,\n      icon: classes.selectIcon\n    },\n    input: /*#__PURE__*/React.createElement(InputBase, {\n      className: clsx(classes.input, classes.selectRoot)\n    }),\n    value: rowsPerPage,\n    onChange: onChangeRowsPerPage,\n    id: selectId,\n    labelId: labelId\n  }, SelectProps), rowsPerPageOptions.map(function (rowsPerPageOption) {\n    return /*#__PURE__*/React.createElement(MenuItemComponent, {\n      className: classes.menuItem,\n      key: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption,\n      value: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption\n    }, rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption);\n  })), /*#__PURE__*/React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"body2\",\n    className: classes.caption\n  }, labelDisplayedRows({\n    from: count === 0 ? 0 : page * rowsPerPage + 1,\n    to: count !== -1 ? Math.min(count, (page + 1) * rowsPerPage) : (page + 1) * rowsPerPage,\n    count: count === -1 ? -1 : count,\n    page: page\n  })), /*#__PURE__*/React.createElement(ActionsComponent, {\n    className: classes.actions,\n    backIconButtonProps: _extends({\n      title: backIconButtonText,\n      'aria-label': backIconButtonText\n    }, backIconButtonProps),\n    count: count,\n    nextIconButtonProps: _extends({\n      title: nextIconButtonText,\n      'aria-label': nextIconButtonText\n    }, nextIconButtonProps),\n    onChangePage: onChangePage,\n    page: page,\n    rowsPerPage: rowsPerPage\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePagination.propTypes = {\n  /**\n   * The component used for displaying the actions.\n   * Either a string to use a HTML element or a component.\n   */\n  ActionsComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) component.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * Text label for the back arrow icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  backIconButtonText: PropTypes.string,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * The total number of rows.\n   *\n   * To enable server side pagination for an unknown number of items, provide -1.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`\n   * object.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  labelDisplayedRows: PropTypes.func,\n\n  /**\n   * Customize the rows per page label.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  labelRowsPerPage: PropTypes.node,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Text label for the next arrow icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  nextIconButtonText: PropTypes.string,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onChangePage: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onChangeRowsPerPage: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(PropTypes.number.isRequired, function (props) {\n    var count = props.count,\n        page = props.page,\n        rowsPerPage = props.rowsPerPage;\n\n    if (count === -1) {\n      return null;\n    }\n\n    var newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n\n    if (page < 0 || page > newLastPage) {\n      return new Error('Material-UI: The page prop of a TablePagination is out of range ' + \"(0 to \".concat(newLastPage, \", but page is \").concat(page, \").\"));\n    }\n\n    return null;\n  }),\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired,\n\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   */\n  rowsPerPageOptions: PropTypes.array,\n\n  /**\n   * Props applied to the rows per page [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTablePagination'\n})(TablePagination);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport ArrowDownwardIcon from '../internal/svg-icons/ArrowDownward';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      cursor: 'pointer',\n      display: 'inline-flex',\n      justifyContent: 'flex-start',\n      flexDirection: 'inherit',\n      alignItems: 'center',\n      '&:focus': {\n        color: theme.palette.text.secondary\n      },\n      '&:hover': {\n        color: theme.palette.text.secondary,\n        '& $icon': {\n          opacity: 0.5\n        }\n      },\n      '&$active': {\n        color: theme.palette.text.primary,\n        // && instead of & is a workaround for https://github.com/cssinjs/jss/issues/1045\n        '&& $icon': {\n          opacity: 1,\n          color: theme.palette.text.secondary\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the root element if `active={true}`. */\n    active: {},\n\n    /* Styles applied to the icon component. */\n    icon: {\n      fontSize: 18,\n      marginRight: 4,\n      marginLeft: 4,\n      opacity: 0,\n      transition: theme.transitions.create(['opacity', 'transform'], {\n        duration: theme.transitions.duration.shorter\n      }),\n      userSelect: 'none'\n    },\n\n    /* Styles applied to the icon component if `direction=\"desc\"`. */\n    iconDirectionDesc: {\n      transform: 'rotate(0deg)'\n    },\n\n    /* Styles applied to the icon component if `direction=\"asc\"`. */\n    iconDirectionAsc: {\n      transform: 'rotate(180deg)'\n    }\n  };\n};\n/**\n * A button based label for placing inside `TableCell` for column sorting.\n */\n\nvar TableSortLabel = /*#__PURE__*/React.forwardRef(function TableSortLabel(props, ref) {\n  var _props$active = props.active,\n      active = _props$active === void 0 ? false : _props$active,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'asc' : _props$direction,\n      _props$hideSortIcon = props.hideSortIcon,\n      hideSortIcon = _props$hideSortIcon === void 0 ? false : _props$hideSortIcon,\n      _props$IconComponent = props.IconComponent,\n      IconComponent = _props$IconComponent === void 0 ? ArrowDownwardIcon : _props$IconComponent,\n      other = _objectWithoutProperties(props, [\"active\", \"children\", \"classes\", \"className\", \"direction\", \"hideSortIcon\", \"IconComponent\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className, active && classes.active),\n    component: \"span\",\n    disableRipple: true,\n    ref: ref\n  }, other), children, hideSortIcon && !active ? null : /*#__PURE__*/React.createElement(IconComponent, {\n    className: clsx(classes.icon, classes[\"iconDirection\".concat(capitalize(direction))])\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableSortLabel.propTypes = {\n  /**\n   * If `true`, the label will have the active styling (should be true for the sorted column).\n   */\n  active: PropTypes.bool,\n\n  /**\n   * Label contents, the arrow will be appended automatically.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The current sort direction.\n   */\n  direction: PropTypes.oneOf(['asc', 'desc']),\n\n  /**\n   * Hide sort icon when active is false.\n   */\n  hideSortIcon: PropTypes.bool,\n\n  /**\n   * Sort icon to use.\n   */\n  IconComponent: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableSortLabel'\n})(TableSortLabel);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport TableContext from './TableContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'table',\n      width: '100%',\n      borderCollapse: 'collapse',\n      borderSpacing: 0,\n      '& caption': _extends({}, theme.typography.body2, {\n        padding: theme.spacing(2),\n        color: theme.palette.text.secondary,\n        textAlign: 'left',\n        captionSide: 'bottom'\n      })\n    },\n\n    /* Styles applied to the root element if `stickyHeader={true}`. */\n    stickyHeader: {\n      borderCollapse: 'separate'\n    }\n  };\n};\nvar defaultComponent = 'table';\nvar Table = /*#__PURE__*/React.forwardRef(function Table(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      _props$padding = props.padding,\n      padding = _props$padding === void 0 ? 'default' : _props$padding,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$stickyHeader = props.stickyHeader,\n      stickyHeader = _props$stickyHeader === void 0 ? false : _props$stickyHeader,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"padding\", \"size\", \"stickyHeader\"]);\n\n  var table = React.useMemo(function () {\n    return {\n      padding: padding,\n      size: size,\n      stickyHeader: stickyHeader\n    };\n  }, [padding, size, stickyHeader]);\n  return /*#__PURE__*/React.createElement(TableContext.Provider, {\n    value: table\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    role: Component === defaultComponent ? null : 'table',\n    ref: ref,\n    className: clsx(classes.root, className, stickyHeader && classes.stickyHeader)\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Table.propTypes = {\n  /**\n   * The content of the table, normally `TableHead` and `TableBody`.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Allows TableCells to inherit padding of the Table.\n   */\n  padding: PropTypes.oneOf(['default', 'checkbox', 'none']),\n\n  /**\n   * Allows TableCells to inherit size of the Table.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * Set the header sticky.\n   *\n   * ⚠️ It doesn't work with IE 11.\n   */\n  stickyHeader: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTable'\n})(Table);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table-footer-group'\n  }\n};\nvar tablelvl2 = {\n  variant: 'footer'\n};\nvar defaultComponent = 'tfoot';\nvar TableFooter = /*#__PURE__*/React.forwardRef(function TableFooter(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Tablelvl2Context.Provider, {\n    value: tablelvl2\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: Component === defaultComponent ? null : 'rowgroup'\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableFooter.propTypes = {\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableFooter'\n})(TableFooter);","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import { deepmerge } from '@material-ui/utils';\nimport createMuiTheme from './createMuiTheme';\nexport default function createMuiStrictModeTheme(options) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  return createMuiTheme.apply(void 0, [deepmerge({\n    unstable_strictMode: true\n  }, options)].concat(args));\n}","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nexport function isUnitless(value) {\n  return String(parseFloat(value)).length === String(value).length;\n} // Ported from Compass\n// https://github.com/Compass/compass/blob/master/core/stylesheets/compass/typography/_units.scss\n// Emulate the sass function \"unit\"\n\nexport function getUnit(input) {\n  return String(input).match(/[\\d.\\-+]*\\s*(.*)/)[1] || '';\n} // Emulate the sass function \"unitless\"\n\nexport function toUnitless(length) {\n  return parseFloat(length);\n} // Convert any CSS <length> or <percentage> value to any another.\n// From https://github.com/KyleAMathews/convert-css-length\n\nexport function convertLength(baseFontSize) {\n  return function (length, toUnit) {\n    var fromUnit = getUnit(length); // Optimize for cases where `from` and `to` units are accidentally the same.\n\n    if (fromUnit === toUnit) {\n      return length;\n    } // Convert input length to pixels.\n\n\n    var pxLength = toUnitless(length);\n\n    if (fromUnit !== 'px') {\n      if (fromUnit === 'em') {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n      } else if (fromUnit === 'rem') {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n        return length;\n      }\n    } // Convert length in pixels to the output unit\n\n\n    var outputLength = pxLength;\n\n    if (toUnit !== 'px') {\n      if (toUnit === 'em') {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else if (toUnit === 'rem') {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else {\n        return length;\n      }\n    }\n\n    return parseFloat(outputLength.toFixed(5)) + toUnit;\n  };\n}\nexport function alignProperty(_ref) {\n  var size = _ref.size,\n      grid = _ref.grid;\n  var sizeBelow = size - size % grid;\n  var sizeAbove = sizeBelow + grid;\n  return size - sizeBelow < sizeAbove - size ? sizeBelow : sizeAbove;\n} // fontGrid finds a minimal grid (in rem) for the fontSize values so that the\n// lineHeight falls under a x pixels grid, 4px in the case of Material Design,\n// without changing the relative line height\n\nexport function fontGrid(_ref2) {\n  var lineHeight = _ref2.lineHeight,\n      pixels = _ref2.pixels,\n      htmlFontSize = _ref2.htmlFontSize;\n  return pixels / (lineHeight * htmlFontSize);\n}\n/**\n * generate a responsive version of a given CSS property\n * @example\n * responsiveProperty({\n *   cssProperty: 'fontSize',\n *   min: 15,\n *   max: 20,\n *   unit: 'px',\n *   breakpoints: [300, 600],\n * })\n *\n * // this returns\n *\n * {\n *   fontSize: '15px',\n *   '@media (min-width:300px)': {\n *     fontSize: '17.5px',\n *   },\n *   '@media (min-width:600px)': {\n *     fontSize: '20px',\n *   },\n * }\n *\n * @param {Object} params\n * @param {string} params.cssProperty - The CSS property to be made responsive\n * @param {number} params.min - The smallest value of the CSS property\n * @param {number} params.max - The largest value of the CSS property\n * @param {string} [params.unit] - The unit to be used for the CSS property\n * @param {Array.number} [params.breakpoints]  - An array of breakpoints\n * @param {number} [params.alignStep] - Round scaled value to fall under this grid\n * @returns {Object} responsive styles for {params.cssProperty}\n */\n\nexport function responsiveProperty(_ref3) {\n  var cssProperty = _ref3.cssProperty,\n      min = _ref3.min,\n      max = _ref3.max,\n      _ref3$unit = _ref3.unit,\n      unit = _ref3$unit === void 0 ? 'rem' : _ref3$unit,\n      _ref3$breakpoints = _ref3.breakpoints,\n      breakpoints = _ref3$breakpoints === void 0 ? [600, 960, 1280] : _ref3$breakpoints,\n      _ref3$transform = _ref3.transform,\n      transform = _ref3$transform === void 0 ? null : _ref3$transform;\n\n  var output = _defineProperty({}, cssProperty, \"\".concat(min).concat(unit));\n\n  var factor = (max - min) / breakpoints[breakpoints.length - 1];\n  breakpoints.forEach(function (breakpoint) {\n    var value = min + factor * breakpoint;\n\n    if (transform !== null) {\n      value = transform(value);\n    }\n\n    output[\"@media (min-width:\".concat(breakpoint, \"px)\")] = _defineProperty({}, cssProperty, \"\".concat(Math.round(value * 10000) / 10000).concat(unit));\n  });\n  return output;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@material-ui/utils\";\nimport { isUnitless, convertLength, responsiveProperty, alignProperty, fontGrid } from './cssUtils';\nexport default function responsiveFontSizes(themeInput) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$breakpoints = options.breakpoints,\n      breakpoints = _options$breakpoints === void 0 ? ['sm', 'md', 'lg'] : _options$breakpoints,\n      _options$disableAlign = options.disableAlign,\n      disableAlign = _options$disableAlign === void 0 ? false : _options$disableAlign,\n      _options$factor = options.factor,\n      factor = _options$factor === void 0 ? 2 : _options$factor,\n      _options$variants = options.variants,\n      variants = _options$variants === void 0 ? ['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline'] : _options$variants;\n\n  var theme = _extends({}, themeInput);\n\n  theme.typography = _extends({}, theme.typography);\n  var typography = theme.typography; // Convert between css lengths e.g. em->px or px->rem\n  // Set the baseFontSize for your project. Defaults to 16px (also the browser default).\n\n  var convert = convertLength(typography.htmlFontSize);\n  var breakpointValues = breakpoints.map(function (x) {\n    return theme.breakpoints.values[x];\n  });\n  variants.forEach(function (variant) {\n    var style = typography[variant];\n    var remFontSize = parseFloat(convert(style.fontSize, 'rem'));\n\n    if (remFontSize <= 1) {\n      return;\n    }\n\n    var maxFontSize = remFontSize;\n    var minFontSize = 1 + (maxFontSize - 1) / factor;\n    var lineHeight = style.lineHeight;\n\n    if (!isUnitless(lineHeight) && !disableAlign) {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? \"Material-UI: Unsupported non-unitless line height with grid alignment.\\nUse unitless line heights instead.\" : _formatMuiErrorMessage(6));\n    }\n\n    if (!isUnitless(lineHeight)) {\n      // make it unitless\n      lineHeight = parseFloat(convert(lineHeight, 'rem')) / parseFloat(remFontSize);\n    }\n\n    var transform = null;\n\n    if (!disableAlign) {\n      transform = function transform(value) {\n        return alignProperty({\n          size: value,\n          grid: fontGrid({\n            pixels: 4,\n            lineHeight: lineHeight,\n            htmlFontSize: typography.htmlFontSize\n          })\n        });\n      };\n    }\n\n    typography[variant] = _extends({}, style, responsiveProperty({\n      cssProperty: 'fontSize',\n      min: minFontSize,\n      max: maxFontSize,\n      unit: 'rem',\n      breakpoints: breakpointValues,\n      transform: transform\n    }));\n  });\n  return theme;\n}","import { withThemeCreator } from '@material-ui/styles';\nimport defaultTheme from './defaultTheme';\nvar withTheme = withThemeCreator({\n  defaultTheme: defaultTheme\n});\nexport default withTheme;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","var _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bpfrpt_proptype_VisibleCellRange = exports.bpfrpt_proptype_Alignment = exports.bpfrpt_proptype_OverscanIndicesGetter = exports.bpfrpt_proptype_OverscanIndices = exports.bpfrpt_proptype_OverscanIndicesGetterParams = exports.bpfrpt_proptype_RenderedSection = exports.bpfrpt_proptype_ScrollbarPresenceChange = exports.bpfrpt_proptype_Scroll = exports.bpfrpt_proptype_NoContentRenderer = exports.bpfrpt_proptype_CellSize = exports.bpfrpt_proptype_CellSizeGetter = exports.bpfrpt_proptype_CellRangeRenderer = exports.bpfrpt_proptype_CellRangeRendererParams = exports.bpfrpt_proptype_StyleCache = exports.bpfrpt_proptype_CellCache = exports.bpfrpt_proptype_CellRenderer = exports.bpfrpt_proptype_CellRendererParams = exports.bpfrpt_proptype_CellPosition = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _ScalingCellSizeAndPositionManager = _interopRequireDefault(require(\"./utils/ScalingCellSizeAndPositionManager\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar bpfrpt_proptype_CellPosition = process.env.NODE_ENV === 'production' ? null : {\n  \"columnIndex\": _propTypes[\"default\"].number.isRequired,\n  \"rowIndex\": _propTypes[\"default\"].number.isRequired\n};\nexports.bpfrpt_proptype_CellPosition = bpfrpt_proptype_CellPosition;\nvar bpfrpt_proptype_CellRendererParams = process.env.NODE_ENV === 'production' ? null : {\n  \"columnIndex\": _propTypes[\"default\"].number.isRequired,\n  \"isScrolling\": _propTypes[\"default\"].bool.isRequired,\n  \"isVisible\": _propTypes[\"default\"].bool.isRequired,\n  \"key\": _propTypes[\"default\"].string.isRequired,\n  \"parent\": _propTypes[\"default\"].object.isRequired,\n  \"rowIndex\": _propTypes[\"default\"].number.isRequired,\n  \"style\": _propTypes[\"default\"].object.isRequired\n};\nexports.bpfrpt_proptype_CellRendererParams = bpfrpt_proptype_CellRendererParams;\nvar bpfrpt_proptype_CellRenderer = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].func;\nexports.bpfrpt_proptype_CellRenderer = bpfrpt_proptype_CellRenderer;\nvar bpfrpt_proptype_CellCache = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].objectOf(_propTypes[\"default\"].node.isRequired);\nexports.bpfrpt_proptype_CellCache = bpfrpt_proptype_CellCache;\nvar bpfrpt_proptype_StyleCache = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].objectOf(_propTypes[\"default\"].object.isRequired);\nexports.bpfrpt_proptype_StyleCache = bpfrpt_proptype_StyleCache;\nvar bpfrpt_proptype_CellRangeRendererParams = process.env.NODE_ENV === 'production' ? null : {\n  \"cellCache\": _propTypes[\"default\"].objectOf(_propTypes[\"default\"].node.isRequired).isRequired,\n  \"cellRenderer\": _propTypes[\"default\"].func.isRequired,\n  \"columnSizeAndPositionManager\": function columnSizeAndPositionManager() {\n    return (typeof _ScalingCellSizeAndPositionManager[\"default\"] === \"function\" ? _propTypes[\"default\"].instanceOf(_ScalingCellSizeAndPositionManager[\"default\"]).isRequired : _propTypes[\"default\"].any.isRequired).apply(this, arguments);\n  },\n  \"columnStartIndex\": _propTypes[\"default\"].number.isRequired,\n  \"columnStopIndex\": _propTypes[\"default\"].number.isRequired,\n  \"deferredMeasurementCache\": _propTypes[\"default\"].object,\n  \"horizontalOffsetAdjustment\": _propTypes[\"default\"].number.isRequired,\n  \"isScrolling\": _propTypes[\"default\"].bool.isRequired,\n  \"isScrollingOptOut\": _propTypes[\"default\"].bool.isRequired,\n  \"parent\": _propTypes[\"default\"].object.isRequired,\n  \"rowSizeAndPositionManager\": function rowSizeAndPositionManager() {\n    return (typeof _ScalingCellSizeAndPositionManager[\"default\"] === \"function\" ? _propTypes[\"default\"].instanceOf(_ScalingCellSizeAndPositionManager[\"default\"]).isRequired : _propTypes[\"default\"].any.isRequired).apply(this, arguments);\n  },\n  \"rowStartIndex\": _propTypes[\"default\"].number.isRequired,\n  \"rowStopIndex\": _propTypes[\"default\"].number.isRequired,\n  \"scrollLeft\": _propTypes[\"default\"].number.isRequired,\n  \"scrollTop\": _propTypes[\"default\"].number.isRequired,\n  \"styleCache\": _propTypes[\"default\"].objectOf(_propTypes[\"default\"].object.isRequired).isRequired,\n  \"verticalOffsetAdjustment\": _propTypes[\"default\"].number.isRequired,\n  \"visibleColumnIndices\": _propTypes[\"default\"].object.isRequired,\n  \"visibleRowIndices\": _propTypes[\"default\"].object.isRequired\n};\nexports.bpfrpt_proptype_CellRangeRendererParams = bpfrpt_proptype_CellRangeRendererParams;\nvar bpfrpt_proptype_CellRangeRenderer = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].func;\nexports.bpfrpt_proptype_CellRangeRenderer = bpfrpt_proptype_CellRangeRenderer;\nvar bpfrpt_proptype_CellSizeGetter = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].func;\nexports.bpfrpt_proptype_CellSizeGetter = bpfrpt_proptype_CellSizeGetter;\nvar bpfrpt_proptype_CellSize = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].func, _propTypes[\"default\"].number]);\nexports.bpfrpt_proptype_CellSize = bpfrpt_proptype_CellSize;\nvar bpfrpt_proptype_NoContentRenderer = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].func;\nexports.bpfrpt_proptype_NoContentRenderer = bpfrpt_proptype_NoContentRenderer;\nvar bpfrpt_proptype_Scroll = process.env.NODE_ENV === 'production' ? null : {\n  \"clientHeight\": _propTypes[\"default\"].number.isRequired,\n  \"clientWidth\": _propTypes[\"default\"].number.isRequired,\n  \"scrollHeight\": _propTypes[\"default\"].number.isRequired,\n  \"scrollLeft\": _propTypes[\"default\"].number.isRequired,\n  \"scrollTop\": _propTypes[\"default\"].number.isRequired,\n  \"scrollWidth\": _propTypes[\"default\"].number.isRequired\n};\nexports.bpfrpt_proptype_Scroll = bpfrpt_proptype_Scroll;\nvar bpfrpt_proptype_ScrollbarPresenceChange = process.env.NODE_ENV === 'production' ? null : {\n  \"horizontal\": _propTypes[\"default\"].bool.isRequired,\n  \"vertical\": _propTypes[\"default\"].bool.isRequired,\n  \"size\": _propTypes[\"default\"].number.isRequired\n};\nexports.bpfrpt_proptype_ScrollbarPresenceChange = bpfrpt_proptype_ScrollbarPresenceChange;\nvar bpfrpt_proptype_RenderedSection = process.env.NODE_ENV === 'production' ? null : {\n  \"columnOverscanStartIndex\": _propTypes[\"default\"].number.isRequired,\n  \"columnOverscanStopIndex\": _propTypes[\"default\"].number.isRequired,\n  \"columnStartIndex\": _propTypes[\"default\"].number.isRequired,\n  \"columnStopIndex\": _propTypes[\"default\"].number.isRequired,\n  \"rowOverscanStartIndex\": _propTypes[\"default\"].number.isRequired,\n  \"rowOverscanStopIndex\": _propTypes[\"default\"].number.isRequired,\n  \"rowStartIndex\": _propTypes[\"default\"].number.isRequired,\n  \"rowStopIndex\": _propTypes[\"default\"].number.isRequired\n};\nexports.bpfrpt_proptype_RenderedSection = bpfrpt_proptype_RenderedSection;\nvar bpfrpt_proptype_OverscanIndicesGetterParams = process.env.NODE_ENV === 'production' ? null : {\n  // One of SCROLL_DIRECTION_HORIZONTAL or SCROLL_DIRECTION_VERTICAL\n  \"direction\": _propTypes[\"default\"].oneOf([\"horizontal\", \"vertical\"]).isRequired,\n  // One of SCROLL_DIRECTION_BACKWARD or SCROLL_DIRECTION_FORWARD\n  \"scrollDirection\": _propTypes[\"default\"].oneOf([-1, 1]).isRequired,\n  // Number of rows or columns in the current axis\n  \"cellCount\": _propTypes[\"default\"].number.isRequired,\n  // Maximum number of cells to over-render in either direction\n  \"overscanCellsCount\": _propTypes[\"default\"].number.isRequired,\n  // Begin of range of visible cells\n  \"startIndex\": _propTypes[\"default\"].number.isRequired,\n  // End of range of visible cells\n  \"stopIndex\": _propTypes[\"default\"].number.isRequired\n};\nexports.bpfrpt_proptype_OverscanIndicesGetterParams = bpfrpt_proptype_OverscanIndicesGetterParams;\nvar bpfrpt_proptype_OverscanIndices = process.env.NODE_ENV === 'production' ? null : {\n  \"overscanStartIndex\": _propTypes[\"default\"].number.isRequired,\n  \"overscanStopIndex\": _propTypes[\"default\"].number.isRequired\n};\nexports.bpfrpt_proptype_OverscanIndices = bpfrpt_proptype_OverscanIndices;\nvar bpfrpt_proptype_OverscanIndicesGetter = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].func;\nexports.bpfrpt_proptype_OverscanIndicesGetter = bpfrpt_proptype_OverscanIndicesGetter;\nvar bpfrpt_proptype_Alignment = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].oneOf([\"auto\", \"end\", \"start\", \"center\"]);\nexports.bpfrpt_proptype_Alignment = bpfrpt_proptype_Alignment;\nvar bpfrpt_proptype_VisibleCellRange = process.env.NODE_ENV === 'production' ? null : {\n  \"start\": _propTypes[\"default\"].number,\n  \"stop\": _propTypes[\"default\"].number\n};\nexports.bpfrpt_proptype_VisibleCellRange = bpfrpt_proptype_VisibleCellRange;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nfunction componentWillMount() {\n  // Call this.constructor.gDSFP to support sub-classes.\n  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);\n  if (state !== null && state !== undefined) {\n    this.setState(state);\n  }\n}\n\nfunction componentWillReceiveProps(nextProps) {\n  // Call this.constructor.gDSFP to support sub-classes.\n  // Use the setState() updater to ensure state isn't stale in certain edge cases.\n  function updater(prevState) {\n    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);\n    return state !== null && state !== undefined ? state : null;\n  }\n  // Binding \"this\" is important for shallow renderer support.\n  this.setState(updater.bind(this));\n}\n\nfunction componentWillUpdate(nextProps, nextState) {\n  try {\n    var prevProps = this.props;\n    var prevState = this.state;\n    this.props = nextProps;\n    this.state = nextState;\n    this.__reactInternalSnapshotFlag = true;\n    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(\n      prevProps,\n      prevState\n    );\n  } finally {\n    this.props = prevProps;\n    this.state = prevState;\n  }\n}\n\n// React may warn about cWM/cWRP/cWU methods being deprecated.\n// Add a flag to suppress these warnings for this special case.\ncomponentWillMount.__suppressDeprecationWarning = true;\ncomponentWillReceiveProps.__suppressDeprecationWarning = true;\ncomponentWillUpdate.__suppressDeprecationWarning = true;\n\nfunction polyfill(Component) {\n  var prototype = Component.prototype;\n\n  if (!prototype || !prototype.isReactComponent) {\n    throw new Error('Can only polyfill class components');\n  }\n\n  if (\n    typeof Component.getDerivedStateFromProps !== 'function' &&\n    typeof prototype.getSnapshotBeforeUpdate !== 'function'\n  ) {\n    return Component;\n  }\n\n  // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n  // Error if any of these lifecycles are present,\n  // Because they would work differently between older and newer (16.3+) versions of React.\n  var foundWillMountName = null;\n  var foundWillReceivePropsName = null;\n  var foundWillUpdateName = null;\n  if (typeof prototype.componentWillMount === 'function') {\n    foundWillMountName = 'componentWillMount';\n  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {\n    foundWillMountName = 'UNSAFE_componentWillMount';\n  }\n  if (typeof prototype.componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'componentWillReceiveProps';\n  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n  }\n  if (typeof prototype.componentWillUpdate === 'function') {\n    foundWillUpdateName = 'componentWillUpdate';\n  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {\n    foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n  }\n  if (\n    foundWillMountName !== null ||\n    foundWillReceivePropsName !== null ||\n    foundWillUpdateName !== null\n  ) {\n    var componentName = Component.displayName || Component.name;\n    var newApiName =\n      typeof Component.getDerivedStateFromProps === 'function'\n        ? 'getDerivedStateFromProps()'\n        : 'getSnapshotBeforeUpdate()';\n\n    throw Error(\n      'Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' +\n        componentName +\n        ' uses ' +\n        newApiName +\n        ' but also contains the following legacy lifecycles:' +\n        (foundWillMountName !== null ? '\\n  ' + foundWillMountName : '') +\n        (foundWillReceivePropsName !== null\n          ? '\\n  ' + foundWillReceivePropsName\n          : '') +\n        (foundWillUpdateName !== null ? '\\n  ' + foundWillUpdateName : '') +\n        '\\n\\nThe above lifecycles should be removed. Learn more about this warning here:\\n' +\n        'https://fb.me/react-async-component-lifecycle-hooks'\n    );\n  }\n\n  // React <= 16.2 does not support static getDerivedStateFromProps.\n  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.\n  // Newer versions of React will ignore these lifecycles if gDSFP exists.\n  if (typeof Component.getDerivedStateFromProps === 'function') {\n    prototype.componentWillMount = componentWillMount;\n    prototype.componentWillReceiveProps = componentWillReceiveProps;\n  }\n\n  // React <= 16.2 does not support getSnapshotBeforeUpdate.\n  // As a workaround, use cWU to invoke the new lifecycle.\n  // Newer versions of React will ignore that lifecycle if gSBU exists.\n  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {\n    if (typeof prototype.componentDidUpdate !== 'function') {\n      throw new Error(\n        'Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype'\n      );\n    }\n\n    prototype.componentWillUpdate = componentWillUpdate;\n\n    var componentDidUpdate = prototype.componentDidUpdate;\n\n    prototype.componentDidUpdate = function componentDidUpdatePolyfill(\n      prevProps,\n      prevState,\n      maybeSnapshot\n    ) {\n      // 16.3+ will not execute our will-update method;\n      // It will pass a snapshot value to did-update though.\n      // Older versions will require our polyfilled will-update value.\n      // We need to handle both cases, but can't just check for the presence of \"maybeSnapshot\",\n      // Because for <= 15.x versions this might be a \"prevContext\" object.\n      // We also can't just check \"__reactInternalSnapshot\",\n      // Because get-snapshot might return a falsy value.\n      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.\n      var snapshot = this.__reactInternalSnapshotFlag\n        ? this.__reactInternalSnapshot\n        : maybeSnapshot;\n\n      componentDidUpdate.call(this, prevProps, prevState, snapshot);\n    };\n  }\n\n  return Component;\n}\n\nexport { polyfill };\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _CellSizeAndPositionManager = _interopRequireDefault(require(\"./CellSizeAndPositionManager\"));\n\nvar _maxElementSize = require(\"./maxElementSize.js\");\n\nvar _types = require(\"../types\");\n\n/**\n * Extends CellSizeAndPositionManager and adds scaling behavior for lists that are too large to fit within a browser's native limits.\n */\nvar ScalingCellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  function ScalingCellSizeAndPositionManager(_ref) {\n    var _ref$maxScrollSize = _ref.maxScrollSize,\n        maxScrollSize = _ref$maxScrollSize === void 0 ? (0, _maxElementSize.getMaxElementSize)() : _ref$maxScrollSize,\n        params = (0, _objectWithoutProperties2[\"default\"])(_ref, [\"maxScrollSize\"]);\n    (0, _classCallCheck2[\"default\"])(this, ScalingCellSizeAndPositionManager);\n    (0, _defineProperty2[\"default\"])(this, \"_cellSizeAndPositionManager\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_maxScrollSize\", void 0);\n    // Favor composition over inheritance to simplify IE10 support\n    this._cellSizeAndPositionManager = new _CellSizeAndPositionManager[\"default\"](params);\n    this._maxScrollSize = maxScrollSize;\n  }\n\n  (0, _createClass2[\"default\"])(ScalingCellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return this._cellSizeAndPositionManager.getTotalSize() > this._maxScrollSize;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(params) {\n      this._cellSizeAndPositionManager.configure(params);\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellSizeAndPositionManager.getCellCount();\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._cellSizeAndPositionManager.getEstimatedCellSize();\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._cellSizeAndPositionManager.getLastMeasuredIndex();\n    }\n    /**\n     * Number of pixels a cell at the given position (offset) should be shifted in order to fit within the scaled container.\n     * The offset passed to this function is scaled (safe) as well.\n     */\n\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment(_ref2) {\n      var containerSize = _ref2.containerSize,\n          offset = _ref2.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      var offsetPercentage = this._getOffsetPercentage({\n        containerSize: containerSize,\n        offset: offset,\n        totalSize: safeTotalSize\n      });\n\n      return Math.round(offsetPercentage * (safeTotalSize - totalSize));\n    }\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfCell(index);\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfLastMeasuredCell();\n    }\n    /** See CellSizeAndPositionManager#getTotalSize */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return Math.min(this._maxScrollSize, this._cellSizeAndPositionManager.getTotalSize());\n    }\n    /** See CellSizeAndPositionManager#getUpdatedOffsetForIndex */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n      currentOffset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: currentOffset\n      });\n\n      var offset = this._cellSizeAndPositionManager.getUpdatedOffsetForIndex({\n        align: align,\n        containerSize: containerSize,\n        currentOffset: currentOffset,\n        targetIndex: targetIndex\n      });\n\n      return this._offsetToSafeOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n    /** See CellSizeAndPositionManager#getVisibleCellRange */\n\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(_ref4) {\n      var containerSize = _ref4.containerSize,\n          offset = _ref4.offset;\n      offset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n      return this._cellSizeAndPositionManager.getVisibleCellRange({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._cellSizeAndPositionManager.resetCell(index);\n    }\n  }, {\n    key: \"_getOffsetPercentage\",\n    value: function _getOffsetPercentage(_ref5) {\n      var containerSize = _ref5.containerSize,\n          offset = _ref5.offset,\n          totalSize = _ref5.totalSize;\n      return totalSize <= containerSize ? 0 : offset / (totalSize - containerSize);\n    }\n  }, {\n    key: \"_offsetToSafeOffset\",\n    value: function _offsetToSafeOffset(_ref6) {\n      var containerSize = _ref6.containerSize,\n          offset = _ref6.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: totalSize\n        });\n\n        return Math.round(offsetPercentage * (safeTotalSize - containerSize));\n      }\n    }\n  }, {\n    key: \"_safeOffsetToOffset\",\n    value: function _safeOffsetToOffset(_ref7) {\n      var containerSize = _ref7.containerSize,\n          offset = _ref7.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: safeTotalSize\n        });\n\n        return Math.round(offsetPercentage * (totalSize - containerSize));\n      }\n    }\n  }]);\n  return ScalingCellSizeAndPositionManager;\n}();\n\nexports[\"default\"] = ScalingCellSizeAndPositionManager;","export default !!(typeof window !== 'undefined' && window.document && window.document.createElement);","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bpfrpt_proptype_CellMeasureCache = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar bpfrpt_proptype_CellMeasureCache = process.env.NODE_ENV === 'production' ? null : {\n  \"hasFixedWidth\": _propTypes[\"default\"].func.isRequired,\n  \"hasFixedHeight\": _propTypes[\"default\"].func.isRequired,\n  \"has\": _propTypes[\"default\"].func.isRequired,\n  \"set\": _propTypes[\"default\"].func.isRequired,\n  \"getHeight\": _propTypes[\"default\"].func.isRequired,\n  \"getWidth\": _propTypes[\"default\"].func.isRequired\n};\nexports.bpfrpt_proptype_CellMeasureCache = bpfrpt_proptype_CellMeasureCache;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = defaultOverscanIndicesGetter;\nexports.SCROLL_DIRECTION_VERTICAL = exports.SCROLL_DIRECTION_HORIZONTAL = exports.SCROLL_DIRECTION_FORWARD = exports.SCROLL_DIRECTION_BACKWARD = void 0;\n\nvar _types = require(\"./types\");\n\nvar SCROLL_DIRECTION_BACKWARD = -1;\nexports.SCROLL_DIRECTION_BACKWARD = SCROLL_DIRECTION_BACKWARD;\nvar SCROLL_DIRECTION_FORWARD = 1;\nexports.SCROLL_DIRECTION_FORWARD = SCROLL_DIRECTION_FORWARD;\nvar SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexports.SCROLL_DIRECTION_HORIZONTAL = SCROLL_DIRECTION_HORIZONTAL;\nvar SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexports.SCROLL_DIRECTION_VERTICAL = SCROLL_DIRECTION_VERTICAL;\n\nfunction defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex)\n    };\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = defaultCellRangeRenderer;\n\nvar _types = require(\"./types\");\n\n/**\n * Default implementation of cellRangeRenderer used by Grid.\n * This renderer supports cell-caching while the user is scrolling.\n */\nfunction defaultCellRangeRenderer(_ref) {\n  var cellCache = _ref.cellCache,\n      cellRenderer = _ref.cellRenderer,\n      columnSizeAndPositionManager = _ref.columnSizeAndPositionManager,\n      columnStartIndex = _ref.columnStartIndex,\n      columnStopIndex = _ref.columnStopIndex,\n      deferredMeasurementCache = _ref.deferredMeasurementCache,\n      horizontalOffsetAdjustment = _ref.horizontalOffsetAdjustment,\n      isScrolling = _ref.isScrolling,\n      isScrollingOptOut = _ref.isScrollingOptOut,\n      parent = _ref.parent,\n      rowSizeAndPositionManager = _ref.rowSizeAndPositionManager,\n      rowStartIndex = _ref.rowStartIndex,\n      rowStopIndex = _ref.rowStopIndex,\n      styleCache = _ref.styleCache,\n      verticalOffsetAdjustment = _ref.verticalOffsetAdjustment,\n      visibleColumnIndices = _ref.visibleColumnIndices,\n      visibleRowIndices = _ref.visibleRowIndices;\n  var renderedCells = []; // Browsers have native size limits for elements (eg Chrome 33M pixels, IE 1.5M pixes).\n  // User cannot scroll beyond these size limitations.\n  // In order to work around this, ScalingCellSizeAndPositionManager compresses offsets.\n  // We should never cache styles for compressed offsets though as this can lead to bugs.\n  // See issue #576 for more.\n\n  var areOffsetsAdjusted = columnSizeAndPositionManager.areOffsetsAdjusted() || rowSizeAndPositionManager.areOffsetsAdjusted();\n  var canCacheStyle = !isScrolling && !areOffsetsAdjusted;\n\n  for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n    var rowDatum = rowSizeAndPositionManager.getSizeAndPositionOfCell(rowIndex);\n\n    for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n      var columnDatum = columnSizeAndPositionManager.getSizeAndPositionOfCell(columnIndex);\n      var isVisible = columnIndex >= visibleColumnIndices.start && columnIndex <= visibleColumnIndices.stop && rowIndex >= visibleRowIndices.start && rowIndex <= visibleRowIndices.stop;\n      var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n      var style = void 0; // Cache style objects so shallow-compare doesn't re-render unnecessarily.\n\n      if (canCacheStyle && styleCache[key]) {\n        style = styleCache[key];\n      } else {\n        // In deferred mode, cells will be initially rendered before we know their size.\n        // Don't interfere with CellMeasurer's measurements by setting an invalid size.\n        if (deferredMeasurementCache && !deferredMeasurementCache.has(rowIndex, columnIndex)) {\n          // Position not-yet-measured cells at top/left 0,0,\n          // And give them width/height of 'auto' so they can grow larger than the parent Grid if necessary.\n          // Positioning them further to the right/bottom influences their measured size.\n          style = {\n            height: 'auto',\n            left: 0,\n            position: 'absolute',\n            top: 0,\n            width: 'auto'\n          };\n        } else {\n          style = {\n            height: rowDatum.size,\n            left: columnDatum.offset + horizontalOffsetAdjustment,\n            position: 'absolute',\n            top: rowDatum.offset + verticalOffsetAdjustment,\n            width: columnDatum.size\n          };\n          styleCache[key] = style;\n        }\n      }\n\n      var cellRendererParams = {\n        columnIndex: columnIndex,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent,\n        rowIndex: rowIndex,\n        style: style\n      };\n      var renderedCell = void 0; // Avoid re-creating cells while scrolling.\n      // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n      // If a scroll is in progress- cache and reuse cells.\n      // This cache will be thrown away once scrolling completes.\n      // However if we are scaling scroll positions and sizes, we should also avoid caching.\n      // This is because the offset changes slightly as scroll position changes and caching leads to stale values.\n      // For more info refer to issue #395\n      //\n      // If isScrollingOptOut is specified, we always cache cells.\n      // For more info refer to issue #1028\n\n      if ((isScrollingOptOut || isScrolling) && !horizontalOffsetAdjustment && !verticalOffsetAdjustment) {\n        if (!cellCache[key]) {\n          cellCache[key] = cellRenderer(cellRendererParams);\n        }\n\n        renderedCell = cellCache[key]; // If the user is no longer scrolling, don't cache cells.\n        // This makes dynamic cell content difficult for users and would also lead to a heavier memory footprint.\n      } else {\n        renderedCell = cellRenderer(cellRendererParams);\n      }\n\n      if (renderedCell == null || renderedCell === false) {\n        continue;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        warnAboutMissingStyle(parent, renderedCell);\n      }\n\n      renderedCells.push(renderedCell);\n    }\n  }\n\n  return renderedCells;\n}\n\nfunction warnAboutMissingStyle(parent, renderedCell) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (renderedCell) {\n      // If the direct child is a CellMeasurer, then we should check its child\n      // See issue #611\n      if (renderedCell.type && renderedCell.type.__internalCellMeasurerFlag) {\n        renderedCell = renderedCell.props.children;\n      }\n\n      if (renderedCell && renderedCell.props && renderedCell.props.style === undefined && parent.__warnedAboutMissingStyle !== true) {\n        parent.__warnedAboutMissingStyle = true;\n        console.warn('Rendered cell should include style property for positioning.');\n      }\n    }\n  }\n}"],"sourceRoot":""}