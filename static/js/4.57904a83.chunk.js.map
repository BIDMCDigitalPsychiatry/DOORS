{"version":3,"sources":["components/application/GenericTable/TablePlaceHolder.tsx","components/application/GenericTable/VirtualTable.tsx","components/application/GenericTable/VirtualList.tsx","components/application/GenericTable/GenericTable.tsx"],"names":["connect","state","ownProp","name","placeholder","table","primary","concat","secondary","_objectSpread","tab","props","renderPlaceholder","React","Typography","color","variant","style","padding","align","gridStyle","border","sharedTableStyle","tableStyle","display","tableScrollStyle","_ref","palette","width","height","backgroundColor","light","borderRadius","useStyles","makeStyles","_ref2","spacing","layout","createStyles","tableRounded","borderBottomLeftRadius","borderBottomRightRadius","tableScroll","tableScrollRounded","cellHovered","cellSelected","common","white","main","checkbox","paddingLeft","paddingRight","checkboxIcon","selectedHeader","multiselectbarheight","marginBottom","contentrowspacing","cell","collapse","background","grey","getRowData","selectedRowIds","data","map","rid","find","d","id","filter","row","VirtualTable","classes","useTheme","_props$includeHeaders","includeHeaders","_props$fixedRowCount","fixedRowCount","_props$rowHeight","rowHeight","tableRowHeight","_props$rounded","rounded","hover","_props$onCellClick","onCellClick","undefined","_props$onHeaderClick","onHeaderClick","_props$isCellHovered","isCellHovered","select","columns","MultiSelectToolbar","_props$showScroll","showScroll","_props$rowDivider","rowDivider","TableStore","tableUpdate","sortinjectedcolumns","evalFunc","c","sort","event","column","orderBy","orderDirection","sortComparator","Component","initialState","_ref3","setState","length","itemtxt","adjustedheight","AutoSizer","_ref4","Collapse","className","in","Grid","container","direction","justify","alignItems","item","xs","zeroMinWidth","noWrap","alignContent","rowData","MuiTable","cellProps","size","borderBottom","classNames","header","Checkbox","Object","assign","checkedIcon","Icons","indeterminateIcon","checked","onChange","e","prevState","indeterminate","some","_toConsumableArray","isCellSelected","hoveredColumn","hoveredRowData","_ref5","VirtualList","DynamicList","_props$rowHeight2","_ref3$rowHeight","getClassName","handleRefresh","setCache","CellMeasurerCache","fixedWidth","minHeight","_React$useState","_React$useState2","_slicedToArray","cache","List","deferredMeasurementCache","overscanRowCount","rowCount","rowRenderer","index","key","parent","columnIndex","rowIndex","CellMeasurer","measure","registerChild","ref","footer","tablefooterheight","text","hint","paper","GenericTable","_props$elevation","elevation","selector","_props$data","Data","Height","isList","other","_objectWithoutProperties","useSelector","VirtualComponent","Paper","TablePlaceHolder","Divider"],"mappings":"0LAiDeA,eAbS,SAACC,EAAiBC,GAA2D,IAC3FC,EAAsBD,EAAtBC,KAAMC,EAAgBF,EAAhBE,YACRC,EAAQJ,EAAMI,MAAMF,GACpBG,EAAUJ,EAAQI,SAAO,MAAAC,OAAUJ,GACnCK,EAAYN,EAAQM,WAAaJ,EACvC,OAAAK,wBAAA,GACKP,GAAO,IACVQ,IAAKL,GAASA,EAAMK,KAAOL,EAAMK,IACjCJ,UACAE,gBAIWR,EAlCU,SAACW,GAAkC,IAClDL,EAA0CK,EAA1CL,QAASE,EAAiCG,EAAjCH,UAAWI,EAAsBD,EAAtBC,kBAE5B,OAAOA,EACLA,EAAkBD,GAElBE,2BAAA,KACGP,GACCO,gBAACC,IAAU,CAACC,MAAM,gBAAgBC,QAAQ,YAAYC,MAAO,CAAEC,QAAS,IAAMC,MAAM,UACjFb,GAGJE,GACCK,gBAACC,IAAU,CAACC,MAAM,gBAAgBC,QAAQ,QAAQC,MAAO,CAAEC,QAAS,IAAMC,MAAM,UAC7EX,O,oKCELY,EAAY,CAChBC,OAAQ,EACR,kBAAmB,QAGfC,EAAmB,CACvBD,OAAQ,EACR,iBAAkBD,EAClB,kBAAmBA,EACnB,oBAAqBA,GAGjBG,EAAUd,wBAAA,GACXa,GAAgB,IACnB,qBAAsB,CACpBD,OAAQ,EAER,uBAAwB,CACtBG,QAAS,QAEX,kBAAmB,OACnB,qBAAsB,OACtB,6BAA8B,OAC9B,gCAAiC,UAIxBC,EAAmB,SAAHC,GAAA,IAAMC,EAAOD,EAAPC,QAAO,OAAAlB,wBAAA,GACrCa,GAAgB,IACnB,qBAAsB,CACpB,uBAAwB,CACtBE,QAAS,OACTI,MAAO,EACPC,OAAQ,GAEV,6BAA8B,CAE5BC,gBAAiBH,EAAQrB,QAAQyB,MACjCC,aAAc,IAEhBX,OAAQ,EACR,qBAAsB,OACtB,6BAA8B,OAC9B,gCAAiC,WAI/BY,EAAYC,aAAW,SAAAC,GAAA,IAAGR,EAAOQ,EAAPR,QAASS,EAAOD,EAAPC,QAASC,EAAMF,EAANE,OAAM,OACtDC,YAAa,CACXjC,MAAKI,YAAA,GACAc,GAELgB,aAAY9B,YAAA,CACV+B,uBAAwB,GACxBC,wBAAyB,IACtBlB,GAELmB,YAAWjC,YAAA,GACNgB,EAAiB,CAAEE,aAExBgB,mBAAkBlC,YAAA,CAChB+B,uBAAwB,GACxBC,wBAAyB,IACtBhB,EAAiB,CAAEE,aAExBiB,YAAa,CACXd,gBAAiBH,EAAQrB,QAAQyB,OAEnCc,aAAc,CACZ9B,MAAOY,EAAQmB,OAAOC,MAAQ,cAC9BjB,gBAAiBH,EAAQrB,QAAQ0C,MAEnCC,SAAU,CACRC,YAAa,EACbC,aAAc,GAEhBC,aAAc,CACZtB,gBAAiBH,EAAQmB,OAAOC,OAElCM,eAAgB,CACdH,YAAad,EAAQ,GACrBe,aAAcf,EAAQ,GACtBrB,MAAOY,EAAQmB,OAAOC,MACtBjB,gBAAiBH,EAAQrB,QAAQ0C,KACjCnB,OAAQQ,EAAOiB,qBACfC,aAAclB,EAAOmB,mBAEvBC,KAAM,GAGNC,SAAU,CACRC,WAAYhC,EAAQiC,KAAK,WAMxB,SAASC,EAAWC,EAAgBC,GACzC,OAAOD,EACJE,KAAI,SAAAC,GAAG,OAAIF,EAAKG,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAOH,QACnCI,QAAO,SAAAC,GAAG,OAAIA,KACdN,KAAI,SAAAM,GAAG,OAAKA,EAAIT,WAAUpD,YAAA,GAAQ6D,EAAIT,WAAWS,IAAS,CAAEF,GAAIE,EAAIF,OAG1D,SAASG,EAAa5D,GACnC,IAAM6D,EAAUvC,EAAUtB,GAClB0B,EAAWoC,cAAXpC,OAENlC,EAiBEQ,EAjBFR,KAAIuE,EAiBF/D,EAhBFgE,sBAAc,IAAAD,GAAOA,EAAAE,EAgBnBjE,EAfFkE,qBAAa,IAAAD,EAAG,EAACA,EAAAE,EAefnE,EAdFoE,iBAAS,IAAAD,EAAGzC,EAAO2C,eAAcF,EAAAG,EAc/BtE,EAbFuE,eAAO,IAAAD,GAAQA,EACfE,EAYExE,EAZFwE,MAAKC,EAYHzE,EAXF0E,mBAAW,IAAAD,OAAGE,EAASF,EAAAG,EAWrB5E,EAVF6E,qBAAa,IAAAD,OAAGD,EAASC,EAAAE,EAUvB9E,EATF+E,qBAAa,IAAAD,OAAGH,EAASG,EACzBE,EAQEhF,EARFgF,OACA1C,EAOEtC,EAPFsC,SACAc,EAMEpD,EANFoD,KACAlC,EAKElB,EALFkB,OACA+D,EAIEjF,EAJFiF,QACAC,EAGElF,EAHFkF,mBAAkBC,EAGhBnF,EAFFoF,kBAAU,IAAAD,GAAQA,EAAAE,EAEhBrF,EADFsF,kBAAU,IAAAD,GAAOA,EAGb3F,EAA0B6F,IAAoB/F,GAC9CgG,EAAcD,MAYdE,EAAsBC,YAAST,EAASjF,GAAOqD,KAAI,SAAAsC,GAAC,OAAA7F,wBAAA,GACrD6F,GAAC,IACJd,cAAec,EAAEC,KACb,SAACC,EAAO7F,GAbK,IAAC8F,EAAQF,EAARE,EAcDH,EAAEnG,KAdOoG,EAcDD,EAAEC,KAb3BlG,GACE8F,EAAY,CACV/B,GAAI/D,EAAM+D,GACVsC,QAASD,EACTE,eAAyC,QAAzBtG,EAAMsG,eAA2B,OAAS,MAC1DC,eAAgBL,IASdf,EAAcgB,EAAO7F,IAEvB6E,OAEN,OACE3E,gBAAA,OAAKI,MAAO,CAAEY,OAAQA,IACpBhB,gBAACgG,IAAS,CAACC,aAAc,CAAEhD,eAAgB,MACxC,SAAAiD,GAA0B,IAAvB9G,EAAK8G,EAAL9G,MAAO+G,EAAQD,EAARC,SACHlD,EAAiB7D,EAAM6D,eACvBmD,EAASnD,EAAemD,OACxBC,EAAqB,IAAXD,EAAe,GAAgB,IAAXA,EAAeA,EAAS,QAAUA,EAAS,SACzEE,EAAiBF,EAAS,EAAIpF,EAASQ,EAAOiB,qBAAuBjB,EAAOmB,kBAAoB3B,EACtG,OACEhB,gBAACuG,IAAS,MACP,SAAAC,GAAA,IAAGzF,EAAKyF,EAALzF,MAAK,OACPf,2BAAA,KACEA,gBAAA,OAAKI,MAAO,CAAEW,MAAOA,IACnBf,gBAACyG,IAAQ,CAACC,UAAW/C,EAAQd,SAAU8D,GAAIP,EAAS,GAClDpG,gBAAC4G,IAAI,CAACF,UAAW/C,EAAQnB,eAAgBqE,WAAS,EAACC,UAAU,MAAMC,QAAQ,gBAAgBC,WAAW,SAASzF,QAAS,GACtHvB,gBAAC4G,IAAI,CAACK,MAAI,EAACC,IAAE,EAACC,cAAY,GACxBnH,gBAACC,IAAU,CAACmH,QAAM,EAAClH,MAAM,UAAUC,QAAQ,MACxCkG,IAGLrG,gBAAC4G,IAAI,CAACK,MAAI,EAACC,IAAE,GACXlH,gBAAC4G,IAAI,CAACC,WAAS,EAACE,QAAQ,WAAWC,WAAW,SAASK,aAAa,UAClErH,gBAAC4G,IAAI,CAACK,MAAI,GAAEb,EAAS,GAAKpB,GAAsBhF,gBAACgF,EAAkB,CAACsC,QAAStE,EAAWC,EAAgBC,WAMlHlD,gBAACuH,IAAQ,CACPC,UAAW,CACTC,KAAM,QACNrH,MAAO,CAAEiC,YAAa,GAAIC,aAAc,EAAGoF,cAA6B,IAAftC,EAAuB,OAAIX,IAEtFd,QAAS,CACPnE,MAAO0F,EACHyC,IAAWhE,EAAQ9B,YAAawC,GAAWV,EAAQ7B,oBACnD6F,IAAWhE,EAAQnE,MAAO6E,GAAWV,EAAQjC,cACjDK,YAAa4B,EAAQ5B,YACrBC,aAAc2B,EAAQ3B,aACtBY,KAAMe,EAAQf,MAEhBoB,cAAeA,EACfjD,MAAOA,EACPC,OAAQsF,EACRpC,UAAWA,EACXJ,eAAgBA,EAChB+B,QAASrG,GAASA,EAAMqG,QACxBC,eAAgBtG,EAAQA,EAAMsG,eAAiB,MAC/C5C,KAAMA,EACN6B,QACE3C,EAAQ,CAEF,CACE9C,KAAM,WACNsI,OACE5H,gBAAC6H,IAAQC,OAAAC,OAAA,CACPC,YAAahI,gBAACiI,IAAc,CAACvB,UAAW/C,EAAQpB,aAAcrC,MAAM,YACpEgI,kBAAmBlI,gBAACiI,IAA2B,CAACvB,UAAW/C,EAAQpB,aAAcrC,MAAM,YACvFiI,QAAS/I,EAAM6D,eAAeO,QAAO,SAAAJ,GAAG,OAAIF,EAAKG,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAOH,QAAMgD,OAAS,EACnFgC,SAAU,SAAAC,GAAC,OACTlC,GAAS,SAAAmC,GACP,OAAIA,EAAUrF,eAAeO,QAAO,SAAAJ,GAAG,OAAIF,EAAKG,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAOH,QAAMgD,SAAWlD,EAAKkD,OAEhF,CAAEnD,eAAgB,IAGlB,CACLA,eAAgBC,EAAKC,KAAI,SAAAG,GAAC,OAAIA,EAAEC,YAKnCnE,EAAM6D,eAAeO,QAAO,SAAAJ,GAAG,OAAIF,EAAKG,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAOH,QAAMgD,OAAS,GAC7EhH,EAAM6D,eAAeO,QAAO,SAAAJ,GAAG,OAAIF,EAAKG,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAOH,QAAMgD,SAAWlD,EAAKkD,QAAU,CACzFmC,eAAe,EACfrI,MAAO,aAIf0C,KAAM,SAAA0E,GAAO,OACXtH,gBAAC6H,IAAQ,CACPG,YAAahI,gBAACiI,IAAc,CAACvB,UAAW/C,EAAQpB,aAAcrC,MAAM,YACpEiI,QAAS/I,EAAM6D,eAAeO,QAAO,SAAAJ,GAAG,OAAIF,EAAKG,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAOH,QAAMoF,MAAK,SAAAjF,GAAE,OAAI+D,EAAQ/D,KAAOA,QAGxGiE,UAAW,CACTpH,MAAO,CAAEiC,YAAa,EAAGC,aAAc,IAEzCvB,MAAO,KACRrB,OAAA+I,YACElD,IAELA,EAENmD,eAAgB5D,EAAS,SAACc,EAAQ0B,GAAO,OAAKlI,EAAM6D,eAAeuF,MAAK,SAAAjF,GAAE,OAAI+D,GAAWA,EAAQ/D,KAAOA,WAAMkB,EAC9GI,cACEA,GAAiBP,EACb,SAACsB,EAAQ0B,EAASqB,EAAeC,GAAc,OAC7C/D,EACIA,EAAce,EAAQ0B,EAASqB,EAAeC,GAC9CtB,GAAWA,EAAQ/D,IAAM+D,EAAQ/D,KAAOqF,EAAerF,SAC7DkB,EAENE,cAAeA,EACfH,YACEA,IAEIM,EACA,SAACa,EAAKkD,GAAUA,EAANjD,OAAuB,IAAf0B,EAAOuB,EAAPvB,QAChBnB,GAAS,SAAAmC,GACP,OAAIA,EAAUrF,eAAeuF,MAAK,SAAAjF,GAAE,OAAI+D,EAAQ/D,KAAOA,KAE9C,CACLN,eAAgBqF,EAAUrF,eAAeO,QAAO,SAAAD,GAAE,OAAIA,IAAO+D,EAAQ/D,OAIhE,CACLN,eAAe,GAADvD,OAAA+I,YAAMH,EAAUrF,gBAAc,CAAEqE,EAAQ/D,eAK9DkB,GAENrE,MAAO,CAAEa,gBAAiB,mB,yCClS/B,SAAS6H,EAAYhJ,GAA0B,IACpD0B,EAAWoC,cAAXpC,OAAMyC,EACuDnE,EAA7DoE,iBAAS,IAAAD,EAAGzC,EAAO2C,eAAcF,EAAEf,EAA0BpD,EAA1BoD,KAAM6B,EAAoBjF,EAApBiF,QAAS/D,EAAWlB,EAAXkB,OAEpDuE,EAAsBC,YAAST,EAASjF,GAE9C,OACEE,gBAAA,OAAKI,MAAO,CAAEY,OAAQA,IACpBhB,gBAACgG,IAAS,CAACC,aAAc,CAAEhD,eAAgB,MACxC,SAAApC,GAAgB,IAGTyF,EAHCzF,EAALzB,MAC2B6D,eACCmD,OACE,EAAIpF,EAASQ,EAAOiB,qBAAuBjB,EAAOmB,kBAAoB3B,EACtG,OACEhB,gBAACuG,IAAS,MACP,SAAAjF,GAAA,IAAGP,EAAKO,EAALP,MAAK,OAAOf,gBAAC+I,EAAW,CAAC7F,KAAMA,EAAMgB,UAAWA,EAAWnD,MAAOA,EAAcC,OAAQsF,EAAgBvB,QAASQ,WASnI,IAAMwD,EAAc,SAAAjJ,GAAU,IAADkJ,EAAA9C,EAC4CpG,EAA/DkB,EAAMkF,EAANlF,OAAQD,EAAKmF,EAALnF,MAAOmC,EAAIgD,EAAJhD,KAAM6B,EAAOmB,EAAPnB,QAAOkE,EAAA/C,EAAEhC,iBAAS,IAAA+E,EAAG,GAAEA,EAAEC,EAAYhD,EAAZgD,aAEhDC,EAAgB,WACpBC,EACE,IAAIC,IAAkB,CACpBC,YAAY,EACZC,UAAWrF,MAKjBlE,aAAgB,WACdoJ,EACE,IAAIC,IAAkB,CACpBC,YAAY,EACZC,UAAWrF,OAGd,CAAChB,EAAM6B,EAASmE,EAAclI,EAAQkD,EAAWnD,IAAQ,IAAAyI,EAElCxJ,WACxB,IAAIqJ,IAAkB,CACpBC,YAAY,EACZC,UAA0B,QAAjBP,EAAElJ,EAAMoE,iBAAS,IAAA8E,IAAI,MAEjCS,EAAAC,YAAAF,EAAA,GALMG,EAAKF,EAAA,GAAEL,EAAQK,EAAA,GAoBtB,OACEzJ,gBAAC4J,IAAI,CACHC,yBAA0BF,EAC1B3I,OAAQA,EACR8I,iBAAkB,EAClBC,SAAU7G,EAAKkD,OACflC,UAAWyF,EAAMzF,UACjB8F,YApBiB,SAAHxD,GAAuC,IAAjCyD,EAAKzD,EAALyD,MAAOC,EAAG1D,EAAH0D,IAAKC,EAAM3D,EAAN2D,OAAQ/J,EAAKoG,EAALpG,MACpCuH,EAAauB,GAAgBA,EAAa,CAAEkB,YAAa,EAAGC,SAAUJ,IAC5E,OACEjK,gBAACsK,IAAY,CAACX,MAAOA,EAAOS,YAAa,EAAGF,IAAKA,EAAKG,SAAUJ,EAAOE,OAAQA,IAC5E,SAAAtB,GAAUA,EAAP0B,QAAH,IAAYC,EAAa3B,EAAb2B,cAAa,OACxBxK,gBAAA,OAAKyK,IAAKD,EAAe9D,UAAWiB,EAAYvH,MAAOA,GACpD2E,EAAQ,GAAGnC,KAAIhD,wBAAC,GAAKsD,EAAK+G,IAAM,IAAEd,kBAAiBpE,EAAQ,SAelEhE,MAAOA,KCvEPK,EAAYC,aAAW,SAAAR,GAAA,IAAGC,EAAOD,EAAPC,QAASS,EAAOV,EAAPU,QAASC,EAAMX,EAANW,OAAM,OACtDC,YAAa,CACXlC,YAAa,CACXc,QAASkB,EAAQ,GACjBuB,WAAYhC,EAAQiC,KAAK,KAE3B2H,OAAQ,CACNpI,aAAcf,EAAQ,GACtBuB,WAAYhC,EAAQiC,KAAK,KACzBvC,OAAQ,EACRQ,OAAQQ,EAAOmJ,kBACfzK,MAAOY,EAAQ8J,KAAKC,MAEtBC,MAAO,SAAAxJ,GAAA,IAAG+C,EAAO/C,EAAP+C,QAAO,MAAa,CAC5B1C,uBAAwB0C,EAAU,EAAI,EACtCzC,wBAAyByC,EAAU,EAAI,SAK9B,SAAS0G,EAAajL,GAA2B,IAADkL,EACqDlL,EAA1GmL,iBAAS,IAAAD,EAAG,EAACA,EAAeN,GAA8E5K,EAA3FP,YAA2FO,EAA9E4K,QAAQpL,EAAsEQ,EAAtER,KAAM4L,EAAgEpL,EAAhEoL,SAAQC,EAAwDrL,EAAtDoD,KAAMkI,OAAI,IAAAD,EAAG,GAAEA,EAAUE,EAA6BvL,EAArCkB,OAAgBsK,EAAqBxL,EAArBwL,OAAWC,EAAKC,YAAK1L,EAAK,iFACjH6D,EAAUvC,EAAUtB,GAClB0B,EAAWoC,cAAXpC,OACF0B,EAAOuI,aAAY,SAACrM,GAAe,OAAM8L,EAAWA,EAAS9L,EAAOU,GAASsL,KAC7EhF,EAASlD,GAAQA,EAAKkD,OAASlD,EAAKkD,OAAS,EAC7CpF,EAAS0J,EAASW,EAAS7J,EAAOmJ,kBAAoBU,EAEtDK,EAAmBJ,EAASxC,EAAcpF,EAEhD,OACE1D,gBAAC2L,IAAK,CAACV,UAAWA,EAAWvE,UAAW/C,EAAQmH,OAClC,IAAX1E,EACCpG,gBAAC4G,IAAI,CAACxG,MAAO,CAAEY,OAAQA,GAAU6F,WAAS,EAACH,UAAW/C,EAAQpE,YAAayH,WAAW,SAASD,QAAQ,UACrG/G,gBAAC4G,IAAI,CAACK,MAAI,EAACC,IAAE,GACXlH,gBAAC4L,EAAqB9L,IAExBE,gBAAC4G,IAAI,CAACK,MAAI,EAACC,GAAI,MAGjBlH,gBAAC0L,EAAgB5D,OAAAC,OAAA,CAACzI,KAAMA,EAAM4D,KAAMA,EAAMlC,OAAQA,GAAYuK,IAE/Db,GACC1K,2BAAA,KACEA,gBAAC6L,IAAO,MACR7L,gBAAC4G,IAAI,CAACC,WAAS,EAACH,UAAW/C,EAAQ+G,OAAQrD,aAAa,SAASL,WAAW,SAASD,QAAQ,YAC3F/G,gBAAC4G,IAAI,CAACK,MAAI,EAACJ,WAAS,EAACG,WAAW,SAASD,QAAQ,YAC/C/G,gBAACC,IAAU,CAACK,MAAM,QAAQH,QAAQ,WAAU,WACjCiG,EAAO,IAAE9G","file":"static/js/4.57904a83.chunk.js","sourcesContent":["import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { AppState } from '../../../store';\nimport { Typography } from '@material-ui/core';\n\nexport interface TablePlaceholderProps {\n  name?: string;\n  tab?: string;\n  placeholder?: string; //optional placeholder text\n  renderPlaceholder?: (props: TablePlaceholderProps) => React.Component;\n  primary?: string;\n  secondary?: string;\n  classes?: any;\n}\n\nconst TablePlaceholder = (props: TablePlaceholderProps) => {\n  const { primary, secondary, renderPlaceholder } = props;\n\n  return renderPlaceholder ? (\n    renderPlaceholder(props)\n  ) : (\n    <>\n      {primary && (\n        <Typography color='textSecondary' variant='subtitle1' style={{ padding: 16 }} align='center'>\n          {primary}\n        </Typography>\n      )}\n      {secondary && (\n        <Typography color='textSecondary' variant='body1' style={{ padding: 16 }} align='center'>\n          {secondary}\n        </Typography>\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = (state: AppState, ownProp: TablePlaceholderProps): TablePlaceholderProps => {\n  const { name, placeholder } = ownProp;\n  const table = state.table[name];\n  const primary = ownProp.primary || `No ${name}`;\n  const secondary = ownProp.secondary || placeholder;\n  return {\n    ...ownProp,\n    tab: table && table.tab && table.tab,\n    primary,\n    secondary\n  };\n};\n\nexport default connect(mapStateToProps)(TablePlaceholder as any) as any;\n","import * as React from 'react';\nimport * as Icons from '@material-ui/icons';\nimport { makeStyles, useTheme, Typography, Collapse, Checkbox, Grid, createStyles } from '@material-ui/core';\nimport MuiTable from 'mui-virtualized-table';\nimport AutoSizer from 'react-virtualized/dist/commonjs/AutoSizer';\nimport Component from '@reactions/component';\nimport classNames from 'classnames';\nimport * as TableStore from './store';\nimport { SortComparator } from './helpers';\nimport { evalFunc } from '../../../helpers';\n\nexport interface VirtualTableProps {\n  name?: string;\n  height?: number;\n  checkbox?: boolean;\n  hover?: boolean;\n  onCellClick?: (event, props) => any;\n  onHeaderClick?: (event, props) => any;  \n  isCellHovered?: (column, rowData, hoveredColumn, hoveredRowData) => boolean;\n  select?: boolean;\n  columns?: any[] | ((props?) => any[]);\n  data?: any[];\n  MultiSelectToolbar?: any;\n  rounded?: boolean;\n  rowHeight?: number;\n  includeHeaders?: boolean;\n  fixedRowCount?: number;\n  showScroll?: boolean;\n  rowDivider?: boolean;\n}\n\nconst gridStyle = {\n  border: 0,\n  'scrollbar-width': 'none' /* Firefox 64 */\n};\n\nconst sharedTableStyle = {\n  border: 0,\n  '& .topLeftGrid': gridStyle,\n  '& .topRightGrid': gridStyle,\n  '& .bottomLeftGrid': gridStyle\n};\n\nconst tableStyle = {\n  ...sharedTableStyle,\n  '& .bottomRightGrid': {\n    border: 0,\n    // Hide scrollbars on Chrome/Safari/IE\n    '&::-webkit-scrollbar': {\n      display: 'none'\n    },\n    'scrollbar-width': 'none' /* Firefox 64 */,\n    '-ms-overflow-style': 'none' as any,\n    '-webkit-overflow-scrolling': 'auto',\n    '&::-webkit-overflow-scrolling': 'auto'\n  }\n};\n\nexport const tableScrollStyle = ({ palette }) => ({\n  ...sharedTableStyle,\n  '& .bottomRightGrid': {\n    '&::-webkit-scrollbar': {\n      display: 'auto',\n      width: 6,\n      height: 6\n    },\n    '&::-webkit-scrollbar-thumb': {\n      // Works on chrome only\n      backgroundColor: palette.primary.light,\n      borderRadius: 25\n    },\n    border: 0,\n    '-ms-overflow-style': 'none' as any,\n    '-webkit-overflow-scrolling': 'auto',\n    '&::-webkit-overflow-scrolling': 'auto'\n  }\n});\n\nconst useStyles = makeStyles(({ palette, spacing, layout }: any) =>\n  createStyles({\n    table: {\n      ...tableStyle\n    },\n    tableRounded: {\n      borderBottomLeftRadius: 12,\n      borderBottomRightRadius: 12,\n      ...tableStyle\n    },\n    tableScroll: {\n      ...tableScrollStyle({ palette })\n    },\n    tableScrollRounded: {\n      borderBottomLeftRadius: 12,\n      borderBottomRightRadius: 12,\n      ...tableScrollStyle({ palette })\n    },\n    cellHovered: {\n      backgroundColor: palette.primary.light\n    },\n    cellSelected: {\n      color: palette.common.white + ' !important',\n      backgroundColor: palette.primary.main\n    },\n    checkbox: {\n      paddingLeft: 0,\n      paddingRight: 0\n    },\n    checkboxIcon: {\n      backgroundColor: palette.common.white\n    },\n    selectedHeader: {\n      paddingLeft: spacing(1),\n      paddingRight: spacing(1),\n      color: palette.common.white,\n      backgroundColor: palette.primary.main,\n      height: layout.multiselectbarheight,\n      marginBottom: layout.contentrowspacing\n    },\n    cell: {\n      //color: palette.secondary.main,\n    },\n    collapse: {\n      background: palette.grey[400]\n    }\n  })\n);\n\n//If a row data function exists, it returns the results of that, otherwise just the row id\nexport function getRowData(selectedRowIds, data) {\n  return selectedRowIds\n    .map(rid => data.find(d => d.id === rid))\n    .filter(row => row)\n    .map(row => (row.getRowData ? { ...row.getRowData(row) } : { id: row.id }));\n}\n\nexport default function VirtualTable(props: VirtualTableProps) {\n  const classes = useStyles(props);\n  const { layout } = useTheme();\n  const {\n    name,\n    includeHeaders = true,\n    fixedRowCount = 1,\n    rowHeight = layout.tableRowHeight,\n    rounded = false,\n    hover,\n    onCellClick = undefined,\n    onHeaderClick = undefined,\n    isCellHovered = undefined,\n    select,\n    checkbox,\n    data,\n    height,\n    columns,\n    MultiSelectToolbar,\n    showScroll = false,\n    rowDivider = true\n  } = props;\n\n  const table: TableStore.Table = TableStore.useTable(name);\n  const tableUpdate = TableStore.useTableUpdate();\n\n  const handleSort = (column, sort: SortComparator) => {\n    table &&\n      tableUpdate({\n        id: table.id,\n        orderBy: column,\n        orderDirection: table.orderDirection === 'asc' ? 'desc' : 'asc',\n        sortComparator: sort\n      });\n  };\n\n  const sortinjectedcolumns = evalFunc(columns, props).map(c => ({\n    ...c,\n    onHeaderClick: c.sort\n      ? (event, props) => {\n          handleSort(c.name, c.sort);\n          onHeaderClick(event, props);\n        }\n      : onHeaderClick\n  })); //;== true && handleSort() }));\n  return (\n    <div style={{ height: height }}>\n      <Component initialState={{ selectedRowIds: [] }}>\n        {({ state, setState }) => {\n          const selectedRowIds = state.selectedRowIds;\n          const length = selectedRowIds.length;\n          const itemtxt = length === 0 ? '' : length === 1 ? length + ' item' : length + ' items';\n          const adjustedheight = length > 0 ? height - layout.multiselectbarheight - layout.contentrowspacing : height;\n          return (\n            <AutoSizer>\n              {({ width }) => (\n                <>\n                  <div style={{ width: width }}>\n                    <Collapse className={classes.collapse} in={length > 0}>\n                      <Grid className={classes.selectedHeader} container direction='row' justify='space-between' alignItems='center' spacing={0}>\n                        <Grid item xs zeroMinWidth>\n                          <Typography noWrap color='inherit' variant='h5'>\n                            {itemtxt}\n                          </Typography>\n                        </Grid>\n                        <Grid item xs>\n                          <Grid container justify='flex-end' alignItems='center' alignContent='center'>\n                            <Grid item>{length > 0 && MultiSelectToolbar && <MultiSelectToolbar rowData={getRowData(selectedRowIds, data)} />}</Grid>\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                    </Collapse>\n                  </div>\n                  <MuiTable\n                    cellProps={{\n                      size: 'small',\n                      style: { paddingLeft: 16, paddingRight: 0, borderBottom: rowDivider === false ? 0 : undefined }\n                    }}\n                    classes={{\n                      table: showScroll\n                        ? classNames(classes.tableScroll, rounded && classes.tableScrollRounded)\n                        : classNames(classes.table, rounded && classes.tableRounded),\n                      cellHovered: classes.cellHovered,\n                      cellSelected: classes.cellSelected,\n                      cell: classes.cell\n                    }}\n                    fixedRowCount={fixedRowCount}\n                    width={width}\n                    height={adjustedheight}\n                    rowHeight={rowHeight}\n                    includeHeaders={includeHeaders}\n                    orderBy={table && table.orderBy}\n                    orderDirection={table ? table.orderDirection : 'asc'}\n                    data={data}\n                    columns={\n                      checkbox\n                        ? [\n                            {\n                              name: 'checkbox',\n                              header: (\n                                <Checkbox\n                                  checkedIcon={<Icons.CheckBox className={classes.checkboxIcon} color='primary' />}\n                                  indeterminateIcon={<Icons.IndeterminateCheckBox className={classes.checkboxIcon} color='primary' />}\n                                  checked={state.selectedRowIds.filter(rid => data.find(d => d.id === rid)).length > 0}\n                                  onChange={e =>\n                                    setState(prevState => {\n                                      if (prevState.selectedRowIds.filter(rid => data.find(d => d.id === rid)).length === data.length) {\n                                        // deselect all\n                                        return { selectedRowIds: [] };\n                                      } else {\n                                        // select all\n                                        return {\n                                          selectedRowIds: data.map(d => d.id)\n                                        };\n                                      }\n                                    })\n                                  }\n                                  {...(state.selectedRowIds.filter(rid => data.find(d => d.id === rid)).length > 0 &&\n                                    state.selectedRowIds.filter(rid => data.find(d => d.id === rid)).length !== data.length && {\n                                      indeterminate: true,\n                                      color: 'default'\n                                    })}\n                                />\n                              ),\n                              cell: rowData => (\n                                <Checkbox\n                                  checkedIcon={<Icons.CheckBox className={classes.checkboxIcon} color='primary' />}\n                                  checked={state.selectedRowIds.filter(rid => data.find(d => d.id === rid)).some(id => rowData.id === id)}\n                                />\n                              ),\n                              cellProps: {\n                                style: { paddingLeft: 8, paddingRight: 0 }\n                              },\n                              width: 48\n                            },\n                            ...sortinjectedcolumns\n                          ]\n                        : sortinjectedcolumns\n                    }\n                    isCellSelected={select ? (column, rowData) => state.selectedRowIds.some(id => rowData && rowData.id === id) : undefined}\n                    isCellHovered={\n                      isCellHovered || hover\n                        ? (column, rowData, hoveredColumn, hoveredRowData) =>\n                            isCellHovered\n                              ? isCellHovered(column, rowData, hoveredColumn, hoveredRowData)\n                              : rowData && rowData.id && rowData.id === hoveredRowData.id\n                        : undefined\n                    }\n                    onHeaderClick={onHeaderClick}\n                    onCellClick={\n                      onCellClick\n                        ? onCellClick\n                        : select\n                        ? (event, { column, rowData }) => {\n                            setState(prevState => {\n                              if (prevState.selectedRowIds.some(id => rowData.id === id)) {\n                                // remove\n                                return {\n                                  selectedRowIds: prevState.selectedRowIds.filter(id => id !== rowData.id)\n                                };\n                              } else {\n                                // add\n                                return {\n                                  selectedRowIds: [...prevState.selectedRowIds, rowData.id]\n                                };\n                              }\n                            });\n                          }\n                        : undefined\n                    }\n                    style={{ backgroundColor: 'white' }}\n                  />\n                </>\n              )}\n            </AutoSizer>\n          );\n        }}\n      </Component>\n    </div>\n  );\n}\n","import * as React from 'react';\nimport { useTheme } from '@material-ui/core';\nimport AutoSizer from 'react-virtualized/dist/commonjs/AutoSizer';\nimport Component from '@reactions/component';\nimport { evalFunc } from '../../../helpers';\nimport { CellMeasurer, CellMeasurerCache, List } from 'react-virtualized';\n\nexport interface VirtualListProps {\n  name?: string;\n  height?: number;\n  columns?: any[] | ((props?) => any[]);\n  data?: any[];\n  rowHeight?: number;\n}\n\nexport default function VirtualList(props: VirtualListProps) {\n  const { layout } = useTheme();\n  const { rowHeight = layout.tableRowHeight, data, columns, height } = props;\n\n  const sortinjectedcolumns = evalFunc(columns, props);\n\n  return (\n    <div style={{ height: height }}>\n      <Component initialState={{ selectedRowIds: [] }}>\n        {({ state }) => {\n          const selectedRowIds = state.selectedRowIds;\n          const length = selectedRowIds.length;\n          const adjustedheight = length > 0 ? height - layout.multiselectbarheight - layout.contentrowspacing : height;\n          return (\n            <AutoSizer>\n              {({ width }) => <DynamicList data={data} rowHeight={rowHeight} width={width as any} height={adjustedheight} columns={sortinjectedcolumns} />}\n            </AutoSizer>\n          );\n        }}\n      </Component>\n    </div>\n  );\n}\n\nconst DynamicList = props => {\n  const { height, width, data, columns, rowHeight = 50, getClassName } = props as any;\n\n  const handleRefresh = () => {\n    setCache(\n      new CellMeasurerCache({\n        fixedWidth: true,\n        minHeight: rowHeight\n      })\n    );\n  };\n\n  React.useEffect(() => {\n    setCache(\n      new CellMeasurerCache({\n        fixedWidth: true,\n        minHeight: rowHeight\n      })\n    );\n  }, [data, columns, getClassName, height, rowHeight, width]);\n\n  const [cache, setCache] = React.useState(\n    new CellMeasurerCache({\n      fixedWidth: true,\n      minHeight: props.rowHeight ?? 50\n    })\n  );\n\n  const _rowRenderer = ({ index, key, parent, style }) => {\n    const classNames = getClassName && getClassName({ columnIndex: 0, rowIndex: index });\n    return (\n      <CellMeasurer cache={cache} columnIndex={0} key={key} rowIndex={index} parent={parent}>\n        {({ measure, registerChild }) => (\n          <div ref={registerChild} className={classNames} style={style}>\n            {columns[0].cell({ ...data[index], handleRefresh }, columns[0])}\n          </div>\n        )}\n      </CellMeasurer>\n    );\n  };\n\n  return (\n    <List\n      deferredMeasurementCache={cache}\n      height={height}\n      overscanRowCount={0}\n      rowCount={data.length}\n      rowHeight={cache.rowHeight}\n      rowRenderer={_rowRenderer}\n      width={width}\n    />\n  );\n};\n","import * as React from 'react';\nimport { useSelector } from 'react-redux';\nimport { AppState } from '../../../store';\nimport TablePlaceHolder from './TablePlaceHolder';\nimport VirtualTable, { VirtualTableProps } from './VirtualTable';\nimport { Typography, Divider, useTheme, makeStyles, createStyles, Paper, Grid } from '@material-ui/core';\nimport VirtualList from './VirtualList';\n\nexport interface GenericTableProps extends VirtualTableProps {\n  footer?: boolean;\n  elevation?: number;\n  placeholder?: string | React.ReactNode;\n  selector?(state, props): [];\n  length?: number;\n  isList?: boolean;\n}\n\nconst useStyles = makeStyles(({ palette, spacing, layout }: any) =>\n  createStyles({\n    placeholder: {\n      padding: spacing(1),\n      background: palette.grey[50]\n    },\n    footer: {\n      paddingRight: spacing(1),\n      background: palette.grey[200],\n      border: 8,\n      height: layout.tablefooterheight,\n      color: palette.text.hint\n    },\n    paper: ({ rounded }: any) => ({\n      borderBottomLeftRadius: rounded ? 4 : 0,\n      borderBottomRightRadius: rounded ? 4 : 0\n    })\n  })\n);\n\nexport default function GenericTable(props: GenericTableProps) {\n  const { elevation = 4, placeholder, footer, name, selector, data: Data = [], height: Height, isList, ...other } = props;\n  const classes = useStyles(props);\n  const { layout } = useTheme();\n  const data = useSelector((state: AppState) => (selector ? selector(state, props) : Data));\n  const length = data && data.length ? data.length : 0;\n  const height = footer ? Height - layout.tablefooterheight : Height;\n\n  const VirtualComponent = isList ? VirtualList : VirtualTable;\n\n  return (\n    <Paper elevation={elevation} className={classes.paper}>\n      {length === 0 ? (\n        <Grid style={{ height: height }} container className={classes.placeholder} alignItems='center' justify='center'>\n          <Grid item xs>\n            <TablePlaceHolder {...props} />\n          </Grid>\n          <Grid item xs={12} />\n        </Grid>\n      ) : (\n        <VirtualComponent name={name} data={data} height={height} {...other} />\n      )}\n      {footer && (\n        <>\n          <Divider />\n          <Grid container className={classes.footer} alignContent='center' alignItems='center' justify='flex-end'>\n            <Grid item container alignItems='center' justify='flex-end'>\n              <Typography align='right' variant='caption'>\n                Viewing {length} {name}\n              </Typography>\n            </Grid>\n          </Grid>\n        </>\n      )}\n    </Paper>\n  );\n}\n"],"sourceRoot":""}