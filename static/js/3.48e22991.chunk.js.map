{"version":3,"sources":["../node_modules/react-virtualized/dist/commonjs/Grid/utils/calculateSizeAndPositionDataAndUpdateScrollOffset.js","../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/commonjs/Grid/utils/maxElementSize.js","../node_modules/react-virtualized/dist/commonjs/utils/createCallbackMemoizer.js","../node_modules/react-virtualized/dist/commonjs/Grid/utils/updateScrollIndexHelper.js","../node_modules/react-virtualized/dist/commonjs/utils/requestAnimationTimeout.js","../node_modules/react-virtualized/dist/commonjs/utils/animationFrame.js","../node_modules/react-virtualized/dist/commonjs/Grid/accessibilityOverscanIndicesGetter.js","../node_modules/mui-virtualized-table/dist/utils.js","../node_modules/react-virtualized/dist/commonjs/AutoSizer/AutoSizer.js","../node_modules/react-virtualized/dist/commonjs/vendor/detectElementResize.js","../node_modules/@babel/runtime/helpers/toConsumableArray.js","../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/slicedToArray.js","../node_modules/@babel/runtime/helpers/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/nonIterableRest.js","../node_modules/react-virtualized/dist/es/Grid/utils/calculateSizeAndPositionDataAndUpdateScrollOffset.js","../node_modules/react-virtualized/dist/es/Grid/utils/CellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/es/Grid/utils/maxElementSize.js","../node_modules/react-virtualized/dist/es/Grid/utils/ScalingCellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/es/utils/createCallbackMemoizer.js","../node_modules/react-virtualized/dist/es/Grid/utils/updateScrollIndexHelper.js","../node_modules/react-virtualized/dist/es/utils/animationFrame.js","../node_modules/react-virtualized/dist/es/Grid/Grid.js","../node_modules/react-virtualized/dist/es/utils/requestAnimationTimeout.js","../node_modules/react-virtualized/dist/es/Grid/defaultOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/es/Grid/defaultCellRangeRenderer.js","../node_modules/react-virtualized/dist/es/Grid/accessibilityOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/es/ArrowKeyStepper/types.js","../node_modules/react-virtualized/dist/es/ArrowKeyStepper/ArrowKeyStepper.js","../node_modules/react-virtualized/dist/es/AutoSizer/AutoSizer.js","../node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurer.js","../node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurerCache.js","../node_modules/react-virtualized/dist/es/Collection/CollectionView.js","../node_modules/react-virtualized/dist/es/Collection/Section.js","../node_modules/react-virtualized/dist/es/Collection/SectionManager.js","../node_modules/react-virtualized/dist/es/utils/getUpdatedOffsetForIndex.js","../node_modules/react-virtualized/dist/es/Collection/Collection.js","../node_modules/react-virtualized/dist/es/Collection/utils/calculateSizeAndPositionData.js","../node_modules/react-virtualized/dist/es/Collection/index.js","../node_modules/react-virtualized/dist/es/ColumnSizer/ColumnSizer.js","../node_modules/react-virtualized/dist/es/ColumnSizer/index.js","../node_modules/react-virtualized/dist/es/InfiniteLoader/InfiniteLoader.js","../node_modules/react-virtualized/dist/es/InfiniteLoader/index.js","../node_modules/react-virtualized/dist/es/List/List.js","../node_modules/react-virtualized/dist/es/vendor/binarySearchBounds.js","../node_modules/react-virtualized/dist/es/vendor/intervalTree.js","../node_modules/react-virtualized/dist/es/Masonry/PositionCache.js","../node_modules/react-virtualized/dist/es/Masonry/Masonry.js","../node_modules/react-virtualized/dist/es/Masonry/index.js","../node_modules/react-virtualized/dist/es/MultiGrid/CellMeasurerCacheDecorator.js","../node_modules/react-virtualized/dist/es/MultiGrid/MultiGrid.js","../node_modules/react-virtualized/dist/es/ScrollSync/ScrollSync.js","../node_modules/react-virtualized/dist/es/Table/defaultHeaderRowRenderer.js","../node_modules/react-virtualized/dist/es/Table/SortDirection.js","../node_modules/react-virtualized/dist/es/Table/SortIndicator.js","../node_modules/react-virtualized/dist/es/Table/defaultHeaderRenderer.js","../node_modules/react-virtualized/dist/es/Table/defaultRowRenderer.js","../node_modules/react-virtualized/dist/es/Table/Column.js","../node_modules/react-virtualized/dist/es/Table/Table.js","../node_modules/react-virtualized/dist/es/Table/defaultCellDataGetter.js","../node_modules/react-virtualized/dist/es/Table/defaultCellRenderer.js","../node_modules/react-virtualized/dist/es/Table/index.js","../node_modules/react-virtualized/dist/es/WindowScroller/utils/onScroll.js","../node_modules/react-virtualized/dist/es/WindowScroller/utils/dimensions.js","../node_modules/react-virtualized/dist/es/WindowScroller/WindowScroller.js","../node_modules/@material-ui/core/esm/TablePagination/TablePaginationActions.js","../node_modules/@material-ui/core/esm/TablePagination/TablePagination.js","../node_modules/@material-ui/core/esm/internal/svg-icons/ArrowDownward.js","../node_modules/@material-ui/core/esm/TableSortLabel/TableSortLabel.js","../node_modules/@material-ui/core/esm/Table/Table.js","../node_modules/@material-ui/core/esm/TableFooter/TableFooter.js","../node_modules/@material-ui/icons/esm/CheckBox.js","../node_modules/@material-ui/icons/esm/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/styles/createMuiStrictModeTheme.js","../node_modules/@material-ui/core/esm/styles/cssUtils.js","../node_modules/@material-ui/core/esm/styles/responsiveFontSizes.js","../node_modules/@material-ui/core/esm/styles/withTheme.js","../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/createClass.js","../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/inherits.js","../node_modules/react-virtualized/dist/commonjs/Grid/types.js","../node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js","../node_modules/react-virtualized/dist/commonjs/Grid/utils/ScalingCellSizeAndPositionManager.js","../node_modules/dom-helpers/esm/canUseDOM.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/react-virtualized/dist/commonjs/CellMeasurer/types.js","../node_modules/react-virtualized/dist/commonjs/Grid/defaultOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/commonjs/Grid/defaultCellRangeRenderer.js","../node_modules/@material-ui/core/esm/Table/TableContext.js","../node_modules/@material-ui/core/esm/TableCell/index.js","../node_modules/@material-ui/core/esm/TableCell/TableCell.js","../node_modules/@material-ui/core/esm/Table/Tablelvl2Context.js","../node_modules/react-virtualized/dist/commonjs/AutoSizer/index.js","../node_modules/@reactions/component/es/index.js","../node_modules/react-virtualized/dist/es/vendor/detectElementResize.js","../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../node_modules/mui-virtualized-table/dist/index.js","../node_modules/react-virtualized/dist/commonjs/MultiGrid/index.js","../node_modules/react-virtualized/dist/commonjs/MultiGrid/MultiGrid.js","../node_modules/@babel/runtime/helpers/setPrototypeOf.js","../node_modules/react-virtualized/dist/commonjs/MultiGrid/CellMeasurerCacheDecorator.js","../node_modules/react-virtualized/dist/commonjs/CellMeasurer/index.js","../node_modules/react-virtualized/dist/commonjs/CellMeasurer/CellMeasurer.js","../node_modules/react-virtualized/dist/commonjs/CellMeasurer/CellMeasurerCache.js","../node_modules/react-virtualized/dist/commonjs/Grid/index.js","../node_modules/react-virtualized/dist/commonjs/Grid/Grid.js"],"names":["Object","defineProperty","exports","value","_ref","cellCount","cellSize","computeMetadataCallback","computeMetadataCallbackProps","nextCellsCount","nextCellSize","nextScrollToIndex","scrollToIndex","updateScrollOffsetForScrollToIndex","_interopRequireDefault","require","_classCallCheck2","_createClass2","_defineProperty2","CellSizeAndPositionManager","cellSizeGetter","estimatedCellSize","this","_cellSizeGetter","_cellCount","_estimatedCellSize","key","_ref2","_lastMeasuredIndex","index","Error","concat","lastMeasuredCellSizeAndPosition","getSizeAndPositionOfLastMeasuredCell","offset","size","i","undefined","isNaN","_cellSizeAndPositionData","_lastBatchedIndex","_ref3","_ref3$align","align","containerSize","currentOffset","targetIndex","idealOffset","datum","getSizeAndPositionOfCell","maxOffset","minOffset","Math","max","min","totalSize","getTotalSize","params","start","_findNearestCell","stop","high","low","middle","floor","interval","_binarySearch","lastMeasuredIndex","_exponentialSearch","getMaxElementSize","window","chrome","requireAllKeys","arguments","length","cachedIndices","callback","indices","keys","allInitialized","every","Array","isArray","indexChanged","some","cachedValue","join","cellSizeAndPositionManager","previousCellsCount","previousCellSize","previousScrollToAlignment","previousScrollToIndex","previousSize","scrollOffset","scrollToAlignment","sizeJustIncreasedFromZero","updateScrollIndexCallback","getCellCount","hasScrollToIndex","sizeHasChanged","bpfrpt_proptype_AnimationTimeoutId","requestAnimationTimeout","cancelAnimationTimeout","_animationFrame","frame","caf","id","delay","Promise","resolve","then","Date","now","raf","timeout","call","win","request","self","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","cancel","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","clearTimeout","overscanCellsCount","scrollDirection","startIndex","stopIndex","overscanStartIndex","overscanStopIndex","SCROLL_DIRECTION_VERTICAL","SCROLL_DIRECTION_HORIZONTAL","SCROLL_DIRECTION_FORWARD","SCROLL_DIRECTION_BACKWARD","getDeterministicColumnWidth","column","tableWidth","width","percentageBasedWidth","percentAsString","parseFloat","percentToFixedWidth","minWidth","calcColumnWidth","columns","totalAllocatedWidth","reduce","result","c","variableWidthColumns","filter","initialDistributedWidthPerColumn","activeMinWidthColumns","allocatedMinWidth","remainingWidth","_interopRequireWildcard","_class","_temp","_possibleConstructorReturn2","_getPrototypeOf3","_assertThisInitialized2","_inherits2","React","_detectElementResize","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","source","forEach","getOwnPropertyDescriptors","defineProperties","AutoSizer","_React$Component","_getPrototypeOf2","_this","_len","args","_key","height","props","defaultHeight","defaultWidth","_this$props","disableHeight","disableWidth","onResize","_parentNode","offsetHeight","offsetWidth","style","_window","getComputedStyle","paddingLeft","parseInt","paddingRight","paddingTop","paddingBottom","newHeight","newWidth","state","setState","autoSizer","_autoSizer","nonce","parentNode","ownerDocument","defaultView","HTMLElement","addResizeListener","_onResize","removeResizeListener","_this$props2","children","className","_this$state","outerStyle","overflow","childParams","createElement","ref","_setRef","Component","hostWindow","global","attachEvent","document","requestFrame","fn","cancelFrame","resetTriggers","element","triggers","__resizeTriggers__","expand","firstElementChild","contract","lastElementChild","expandChild","scrollLeft","scrollWidth","scrollTop","scrollHeight","scrollListener","e","indexOf","__resizeRAF__","__resizeLast__","checkTriggers","__resizeListeners__","animation","keyframeprefix","animationstartevent","domPrefixes","split","startEvents","pfx","elm","animationName","toLowerCase","animationKeyframes","animationStyle","doc","elementStyle","position","getElementById","css","head","getElementsByTagName","type","setAttribute","styleSheet","cssText","appendChild","createTextNode","createStyles","innerHTML","addEventListener","__animationListener__","detachEvent","splice","removeEventListener","removeChild","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","module","arr","arrayLikeToArray","iter","Symbol","iterator","from","TypeError","arrayWithHoles","iterableToArrayLimit","nonIterableRest","_arr","_n","_d","_e","_s","_i","next","done","err","calculateSizeAndPositionDataAndUpdateScrollOffset","_classCallCheck","_defineProperty","_createClass","ScalingCellSizeAndPositionManager","_ref$maxScrollSize","maxScrollSize","_objectWithoutProperties","_cellSizeAndPositionManager","_maxScrollSize","configure","getEstimatedCellSize","getLastMeasuredIndex","safeTotalSize","offsetPercentage","_getOffsetPercentage","round","_safeOffsetToOffset","getUpdatedOffsetForIndex","_offsetToSafeOffset","_ref4","getVisibleCellRange","resetCell","_ref5","_ref6","_ref7","createCallbackMemoizer","updateScrollIndexHelper","SCROLL_POSITION_CHANGE_REASONS","Grid","_React$PureComponent","_possibleConstructorReturn","_getPrototypeOf","_assertThisInitialized","_disablePointerEventsTimeoutId","isScrolling","needToResetStyleCache","onSectionRendered","_onGridRenderedMemoizer","columnOverscanStartIndex","_columnStartIndex","columnOverscanStopIndex","_columnStopIndex","columnStartIndex","_renderedColumnStartIndex","columnStopIndex","_renderedColumnStopIndex","rowOverscanStartIndex","_rowStartIndex","rowOverscanStopIndex","_rowStopIndex","rowStartIndex","_renderedRowStartIndex","rowStopIndex","_renderedRowStopIndex","_scrollingContainer","event","handleScrollEvent","columnSizeAndPositionManager","columnCount","_wrapSizeGetter","columnWidth","_getEstimatedColumnSize","rowSizeAndPositionManager","rowCount","rowHeight","_getEstimatedRowSize","instanceProps","prevColumnWidth","prevRowHeight","prevColumnCount","prevRowCount","prevIsScrolling","prevScrollToColumn","scrollToColumn","prevScrollToRow","scrollToRow","scrollbarSize","scrollbarSizeMeasured","scrollDirectionHorizontal","scrollDirectionVertical","scrollPositionChangeReason","_initialScrollTop","_getCalculatedScrollTop","_initialScrollLeft","_getCalculatedScrollLeft","_inherits","_ref$alignment","alignment","_ref$columnIndex","columnIndex","_ref$rowIndex","rowIndex","offsetProps","_ref2$scrollLeft","scrollLeftParam","_ref2$scrollTop","scrollTopParam","_debounceScrollEnded","autoHeight","autoWidth","totalRowsHeight","totalColumnsWidth","newState","_invokeOnScrollMemoizer","_deferredInvalidateColumnIndex","_deferredInvalidateRowIndex","_ref4$columnIndex","_ref4$rowIndex","_this$props3","_recomputeScrollLeftFlag","_recomputeScrollTopFlag","_styleCache","_cellCache","forceUpdate","_updateScrollLeftForScrollToColumn","_updateScrollTopForScrollToRow","_this$props4","getScrollbarSize","_handleInvalidatedGridSize","prevState","stateUpdate","_getScrollToPositionStateUpdate","sizeIsBiggerThanZero","_invokeOnGridRenderedHelper","_maybeCallOnScrollbarPresenceChange","prevProps","_this2","_this$props5","columnOrRowCountJustIncreasedFromZero","_this$props6","autoContainerWidth","containerProps","containerRole","containerStyle","noContentRenderer","role","tabIndex","_this$state2","_isScrolling","gridStyle","boxSizing","direction","WebkitOverflowScrolling","willChange","_resetStyleCache","_calculateChildrenToRender","verticalScrollBarSize","horizontalScrollBarSize","_horizontalScrollBarSize","_verticalScrollBarSize","_scrollbarPresenceChanged","overflowX","overflowY","childrenToDisplay","_childrenToDisplay","showNoContentRenderer","_extends","_setScrollingContainerRef","clsx","onScroll","_onScroll","maxWidth","maxHeight","pointerEvents","cellRenderer","cellRangeRenderer","deferredMeasurementCache","overscanColumnCount","overscanIndicesGetter","overscanRowCount","isScrollingOptOut","visibleColumnIndices","visibleRowIndices","horizontalOffsetAdjustment","getOffsetAdjustment","verticalOffsetAdjustment","overscanColumnIndices","overscanRowIndices","hasFixedHeight","has","hasFixedWidth","cellCache","parent","styleCache","scrollingResetTimeInterval","_debounceScrollEndedCallback","recomputeGridSize","_this3","_onScrollMemoizer","_this3$props","clientHeight","clientWidth","hasOwnProperty","Boolean","onScrollbarPresenceChange","horizontal","vertical","_ref8","_getScrollLeftForScrollToColumnStateUpdate","_getScrollTopForScrollToRowStateUpdate","nextProps","assign","maybeStateA","maybeStateB","estimatedColumnSize","estimatedRowSize","_ref9","finalColumn","scrollBarSize","calculatedScrollLeft","finalRow","calculatedScrollTop","renderedCells","areOffsetsAdjusted","canCacheStyle","rowDatum","columnDatum","isVisible","left","top","cellRendererParams","renderedCell","polyfill","defaultOverscanIndicesGetter","ArrowKeyStepper","disabled","mode","_this$_getScrollState","_getScrollState","scrollToColumnPrevious","scrollToRowPrevious","_this$_getScrollState2","preventDefault","_updateScrollState","_this$_getScrollState3","onKeyDown","_onKeyDown","_onSectionRendered","isControlled","onScrollToChange","createDetectElementResize","CellMeasurer","cache","_this$props$columnInd","_this$props$rowIndex","_this$_getCellMeasure","_getCellMeasurements","getHeight","getWidth","set","Element","console","warn","_child","_maybeMeasureCell","measure","_measure","registerChild","_registerChild","node","findDOMNode","styleWidth","styleHeight","ceil","_this$props2$columnIn","_this$props2$rowIndex","_this$_getCellMeasure2","invalidateCellSizeAfterRender","CellMeasurerCache","_keyMapper","_columnWidthCache","_defaultWidth","_rowHeightCache","_defaultHeight","fixedHeight","fixedWidth","keyMapper","minHeight","_hasFixedHeight","_hasFixedWidth","_minHeight","_minWidth","defaultKeyMapper","_cellHeightCache","_cellWidthCache","_updateCachedColumnAndRowSizes","_rowCount","_columnCount","_key2","columnKey","rowKey","get","CollectionView","cellLayoutManager","_onSectionRenderedMemoizer","getLastRenderedIndices","scrollToCell","scrollPosition","getScrollPositionForCell","cellIndex","_setScrollPosition","_enablePointerEventsAfterDelay","isScrollingChange","_scrollbarSize","_cellLayoutManager$ge","totalHeight","totalWidth","cancelable","_scrollbarSizeMeasured","_calculateSizeAndPositionDataOnNextUpdate","_updateScrollPositionForScrollToCell","_invokeOnSectionRenderedHelper","_cellLayoutManager$ge2","horizontalOverscanSize","verticalOverscanSize","_this$state3","_lastRenderedCellCount","_lastRenderedCellLayoutManager","calculateSizeAndPositionData","_cellLayoutManager$ge3","right","bottom","cellRenderers","x","y","collectionStyle","propTypes","Section","_indexMap","_indices","SectionManager","sectionSize","_sectionSize","_cellMetadata","_sections","getSections","section","getCellIndices","map","sectionXStart","sectionXStop","sectionYStart","sectionYStop","sections","sectionX","sectionY","toString","cellMetadatum","addCellIndex","_ref$align","cellOffset","Collection","context","_lastRenderedCellIndices","_isScrollingChange","bind","_setCollectionViewRef","_collectionView","recomputeCellSizesAndPositions","data","cellSizeAndPositionGetter","cellMetadata","sectionManager","registerCell","_calculateSizeAndPositionData","_sectionManager","_height","_width","cellGroupRenderer","getCellMetadata","cellRendererProps","ColumnSizer","columnMaxWidth","columnMinWidth","_registeredChild","safeColumnMinWidth","safeColumnMaxWidth","adjustedWidth","getColumnWidth","child","InfiniteLoader","_loadMoreRowsMemoizer","_onRowsRendered","autoReload","_doStuff","_lastRenderedStartIndex","_lastRenderedStopIndex","onRowsRendered","unloadedRanges","loadMoreRows","unloadedRange","promise","lastRenderedStartIndex","lastRenderedStopIndex","isRangeVisible","component","currentIndex","recomputeSize","recomputeRowHeights","forceUpdateReactVirtualizedComponent","isRowLoaded","minimumBatchSize","threshold","rangeStartIndex","rangeStopIndex","potentialStopIndex","_index","firstUnloadedRange","_index2","scanForUnloadedRanges","squashedUnloadedRanges","_toConsumableArray","_loadUnloadedRanges","registeredChild","List","rowRenderer","widthDescriptor","writable","getOffsetForCell","measureAllCells","_ref6$columnIndex","_ref6$rowIndex","scrollToPosition","noRowsRenderer","classNames","_cellRenderer","accessibilityOverscanIndicesGetter","ge","a","l","h","m","_GEP","_GEA","gt","_GTP","_GTA","lt","_LTP","_LTA","le","_LEP","_LEA","eq","p","_EQP","_EQA","IntervalTreeNode","mid","leftPoints","rightPoints","count","proto","prototype","copy","b","rebuild","intervals","ntree","createIntervalTree","rebuildWithInterval","rebuildWithoutInterval","idx","reportLeftRange","hi","cb","r","reportRightRange","lo","reportRange","compareNumbers","compareBegin","d","compareEnd","pts","sort","leftIntervals","rightIntervals","centerIntervals","s","slice","IntervalTree","root","insert","weight","bounds","remove","n","queryPoint","queryInterval","tproto","PositionCache","defaultCellHeight","unmeasuredCellCount","tallestColumnSize","renderCallback","_intervalTree","_slicedToArray","_leftMap","columnSizeMap","_columnSizeMap","columnHeight","Masonry","eventScrollTop","currentTarget","_getEstimatedTotalHeight","_debounceResetIsScrolling","_positionCache","_invalidateOnUpdateStartIndex","_invalidateOnUpdateStopIndex","_populatePositionCache","_checkInvalidateOnUpdate","_invokeOnScrollCallback","_invokeOnCellsRenderedCallback","_debounceResetIsScrollingId","cellMeasurerCache","overscanByPixels","rowDirection","estimateTotalHeight","shortestColumnSize","measuredCellCount","range","_style","batchSize","_startIndex","_stopIndex","_debounceResetIsScrollingCallback","estimatedColumnCount","_onScrollMemoized","_startIndexMemoized","_stopIndexMemoized","onCellsRendered","cellPositioner","_cellPositioner","setPosition","noop","CellMeasurerCacheDecorator","_cellMeasurerCache","_columnIndexOffset","_rowIndexOffset","_params$columnIndexOf","columnIndexOffset","_params$rowIndexOffse","rowIndexOffset","clear","clearAll","MultiGrid","showHorizontalScrollbar","showVerticalScrollbar","_bottomLeftGrid","_bottomRightGrid","rest","fixedRowCount","fixedColumnCount","scrollInfo","_topLeftGrid","_topRightGrid","_fixedColumnCount","_fixedRowCount","_maybeCalculateCachedStyles","_deferredMeasurementCacheBottomLeftGrid","_deferredMeasurementCacheBottomRightGrid","_deferredMeasurementCacheTopRightGrid","_ref7$columnIndex","_ref7$rowIndex","_ref8$columnIndex","_ref8$rowIndex","adjustedColumnIndex","adjustedRowIndex","_leftGridWidth","_topGridHeight","_this$props7","_this$props8","_prepareForRender","_this$state4","_containerOuterStyle","_containerTopStyle","_renderTopLeftGrid","_renderTopRightGrid","_containerBottomStyle","_renderBottomLeftGrid","_renderBottomRightGrid","_getTopGridHeight","leftGridWidth","_getLeftGridWidth","topGridHeight","resetAll","_this$props9","enableFixedColumnScroll","enableFixedRowScroll","styleBottomLeftGrid","styleBottomRightGrid","styleTopLeftGrid","styleTopRightGrid","sizeChange","_lastRenderedHeight","_lastRenderedWidth","leftSizeChange","_lastRenderedColumnWidth","_lastRenderedFixedColumnCount","topSizeChange","_lastRenderedFixedRowCount","_lastRenderedRowHeight","_lastRenderedStyle","_lastRenderedStyleBottomLeftGrid","_bottomLeftGridStyle","_lastRenderedStyleBottomRightGrid","_bottomRightGridStyle","_lastRenderedStyleTopLeftGrid","_topLeftGridStyle","_lastRenderedStyleTopRightGrid","_topRightGridStyle","hideBottomLeftGridScrollbar","additionalRowCount","_getBottomGridHeight","gridWidth","bottomLeftGrid","_cellRendererBottomLeftGrid","classNameBottomLeftGrid","_onScrollTop","_bottomLeftGridRef","_rowHeightBottomGrid","_cellRendererBottomRightGrid","classNameBottomRightGrid","_columnWidthRightGrid","_onScrollbarPresenceChange","_bottomRightGridRef","_getRightGridWidth","classNameTopLeftGrid","_topLeftGridRef","hideTopRightGridScrollbar","_this$state5","additionalColumnCount","additionalHeight","gridHeight","topRightGrid","_cellRendererTopRightGrid","classNameTopRightGrid","_onScrollLeft","_topRightGridRef","ScrollSync","defaultHeaderRowRenderer","SortDirection","ASC","DESC","SortIndicator","sortDirection","viewBox","fill","defaultHeaderRenderer","dataKey","label","sortBy","showSortIndicator","title","defaultRowRenderer","onRowClick","onRowDoubleClick","onRowMouseOut","onRowMouseOver","onRowRightClick","rowData","a11yProps","onClick","onDoubleClick","onMouseOut","onMouseOver","onContextMenu","Column","cellDataGetter","cellData","String","defaultSortDirection","flexGrow","flexShrink","headerRenderer","Table","scrollbarWidth","_createColumn","_createRow","_ref3$columnIndex","_ref3$rowIndex","_Grid","_setScrollbarWidth","disableHeader","gridClassName","headerHeight","headerRowRenderer","rowClassName","rowStyle","availableRowsHeight","rowClass","rowStyleObject","_cachedColumnStyles","toArray","flexStyles","_getFlexStyleForColumn","_getHeaderColumns","onColumnClick","_column$props","columnData","headerOnClick","headerOnKeyDown","headerTabIndex","headerAriaSort","headerAriaLabel","headerClassName","headerStyle","onHeaderClick","_column$props2","disableSort","sortEnabled","ReactVirtualized__Table__sortableHeaderColumn","renderedHeader","newSortDirection","rowGetter","flattenedStyle","_getRowHeight","customStyle","flexValue","flex","msFlex","WebkitFlex","_this4","_createHeader","getScrollbarWidth","mountedInstances","originalBodyPointerEvents","disablePointerEventsTimeoutId","enablePointerEventsIfDisabled","body","enablePointerEventsAfterDelayCallback","instance","__resetIsScrolling","onScrollWindow","maximumTimeout","enablePointerEventsAfterDelay","scrollElement","__handleWindowScrollEvent","registerScrollListener","unregisterScrollListener","isWindow","getBoundingBox","getBoundingClientRect","getDimensions","innerHeight","innerWidth","serverHeight","serverWidth","getPositionOffset","container","documentElement","containerElement","elementRect","containerRect","getScrollOffset","_elementRect","_containerRect","scrollY","scrollX","getWindow","WindowScroller","updatePosition","scrollTo","_positionFromTop","_isMounted","_positionFromLeft","thisNode","ReactDOM","dimensions","_registerResizeListener","prevScrollElement","_unregisterResizeListener","onChildScroll","_onChildScroll","KeyboardArrowRight","KeyboardArrowLeft","TablePaginationActions","backIconButtonProps","nextIconButtonProps","onChangePage","page","rowsPerPage","other","theme","useTheme","IconButton","color","defaultLabelDisplayedRows","to","defaultRowsPerPageOptions","TablePagination","colSpan","_props$ActionsCompone","ActionsComponent","_props$backIconButton","backIconButtonText","classes","colSpanProp","_props$component","TableCell","_props$labelDisplayed","labelDisplayedRows","_props$labelRowsPerPa","labelRowsPerPage","_props$nextIconButton","nextIconButtonText","onChangeRowsPerPage","_props$rowsPerPageOpt","rowsPerPageOptions","_props$SelectProps","SelectProps","selectId","useId","labelId","MenuItemComponent","native","MenuItem","Toolbar","toolbar","spacer","Typography","variant","caption","Select","select","icon","selectIcon","input","InputBase","selectRoot","onChange","rowsPerPageOption","menuItem","actions","withStyles","palette","text","primary","fontSize","typography","pxToRem","padding","marginRight","marginLeft","textAlign","textAlignLast","name","createSvgIcon","TableSortLabel","_props$active","active","_props$direction","_props$hideSortIcon","hideSortIcon","_props$IconComponent","IconComponent","ArrowDownwardIcon","ButtonBase","disableRipple","capitalize","cursor","display","justifyContent","flexDirection","alignItems","secondary","opacity","transition","transitions","create","duration","shorter","userSelect","iconDirectionDesc","transform","iconDirectionAsc","_props$padding","_props$size","_props$stickyHeader","stickyHeader","table","TableContext","Provider","borderCollapse","borderSpacing","body2","spacing","captionSide","tablelvl2","TableFooter","Tablelvl2Context","createMuiStrictModeTheme","options","createMuiTheme","deepmerge","unstable_strictMode","isUnitless","toUnitless","convertLength","baseFontSize","toUnit","fromUnit","match","pxLength","outputLength","toFixed","alignProperty","grid","sizeBelow","sizeAbove","fontGrid","lineHeight","pixels","htmlFontSize","responsiveProperty","cssProperty","_ref3$unit","unit","_ref3$breakpoints","breakpoints","_ref3$transform","output","factor","breakpoint","responsiveFontSizes","themeInput","_options$breakpoints","_options$disableAlign","disableAlign","_options$factor","_options$variants","variants","convert","breakpointValues","values","remFontSize","maxFontSize","minFontSize","_formatMuiErrorMessage","withTheme","withThemeCreator","defaultTheme","Constructor","_defineProperties","descriptor","configurable","protoProps","staticProps","_typeof","assertThisInitialized","ReferenceError","o","setPrototypeOf","getPrototypeOf","__proto__","subClass","superClass","constructor","bpfrpt_proptype_VisibleCellRange","bpfrpt_proptype_Alignment","bpfrpt_proptype_OverscanIndicesGetter","bpfrpt_proptype_OverscanIndices","bpfrpt_proptype_OverscanIndicesGetterParams","bpfrpt_proptype_RenderedSection","bpfrpt_proptype_ScrollbarPresenceChange","bpfrpt_proptype_Scroll","bpfrpt_proptype_NoContentRenderer","bpfrpt_proptype_CellSize","bpfrpt_proptype_CellSizeGetter","bpfrpt_proptype_CellRangeRenderer","bpfrpt_proptype_CellRangeRendererParams","bpfrpt_proptype_StyleCache","bpfrpt_proptype_CellCache","bpfrpt_proptype_CellRenderer","bpfrpt_proptype_CellRendererParams","bpfrpt_proptype_CellPosition","componentWillMount","getDerivedStateFromProps","componentWillReceiveProps","componentWillUpdate","nextState","__reactInternalSnapshotFlag","__reactInternalSnapshot","getSnapshotBeforeUpdate","isReactComponent","foundWillMountName","foundWillReceivePropsName","foundWillUpdateName","UNSAFE_componentWillMount","UNSAFE_componentWillReceiveProps","UNSAFE_componentWillUpdate","componentName","displayName","newApiName","componentDidUpdate","maybeSnapshot","snapshot","__suppressDeprecationWarning","_objectWithoutProperties2","_CellSizeAndPositionManager","_maxElementSize","recalc","canUseDOM","scrollDiv","bpfrpt_proptype_CellMeasureCache","_props$align","paddingProp","scopeProp","scope","sizeProp","variantProp","isHeadCell","ariaSort","verticalAlign","borderBottom","lighten","fade","divider","darken","fontWeight","fontWeightMedium","footer","sizeSmall","paddingCheckbox","paddingNone","alignLeft","alignCenter","alignRight","alignJustify","zIndex","backgroundColor","background","default","_AutoSizer","_initialiseProps","getArgs","_setState","_forceUpdate","componentDidMount","didMount","shouldComponentUpdate","shouldUpdate","componentWillUnmount","willUnmount","didUpdate","render","_props","initialState","len","arr2","minLen","test","sliceIterator","MuiTable","_react2","_propTypes2","_MultiGrid2","_classnames2","_Table2","_TableCell2","_TableFooter2","_TablePagination2","_TableSortLabel2","_styles","_reactDraggable2","_utils","obj","__esModule","useStyles","makeStyles","grey","borderRight","outline","cell","cellClickable","cellSelected","cellHovered","cellDisabled","cellContents","whiteSpace","textOverflow","cellHeader","cellInLastColumn","cellInLastRow","borderTop","FOOTER_BORDER_HEIGHT","dragHandle","DragHandleActive","DragHandleIcon","_ref7$maxHeight","pagination","fitHeightToRows","_ref7$fixedRowCount","_ref7$fixedColumnCoun","_ref7$rowHeight","_ref7$includeHeaders","includeHeaders","isCellHovered","isCellSelected","isCellDisabled","Classes","orderBy","orderDirection","onCellClick","onCellDoubleClick","onCellContextMenu","resizable","cellProps","multiGrid","useRef","useCallback","current","useEffect","calculatedHeight","paginationHeight","mixins","calculatedHeightWithFooter","containerHeight","multiGridHeight","defaultCellProps","_React$useState","useState","hoveredColumn","hoveredRowData","_React$useState2","_React$useState2$","setHovered","_React$useState3","Columns","widths","initialWidth","calculateWidths","_React$useState4","setWidths","resizableColumnWidths","resizeRow","deltaX","prev","_extends2","delta","findIndex","nextDataKey","handleDrag","handleMouse","_classNames","isHeader","isSelected","isDisabled","isHovered","resolveCellProps","_resolveCellProps$res","cellStyle","contents","header","float","axis","defaultClassName","defaultClassNameDragging","onDrag","hasCellClick","hasCellDoubleClick","hasCellContextMenu","isClickable","onMouseEnter","onMouseLeave","Fragment","useCellRenderer","array","number","bool","oneOfType","func","string","noPointer","_MultiGrid","_default","_reactLifecyclesCompat","_CellMeasurerCacheDecorator","PureComponent","_setPrototypeOf","_CellMeasurer","_CellMeasurerCache","_reactDom","DEFAULT_WIDTH","DEFAULT_HEIGHT","_accessibilityOverscanIndicesGetter","_defaultCellRangeRenderer","_defaultOverscanIndicesGetter","_types","DEFAULT_SCROLLING_RESET_TIME_INTERVAL","_clsx","_calculateSizeAndPositionDataAndUpdateScrollOffset","_ScalingCellSizeAndPositionManager","_createCallbackMemoizer","_updateScrollIndexHelper","_requestAnimationTimeout"],"mappings":"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","file":"static/js/3.48e22991.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = calculateSizeAndPositionDataAndUpdateScrollOffset;\n\n/**\n * Helper method that determines when to recalculate row or column metadata.\n */\nfunction calculateSizeAndPositionDataAndUpdateScrollOffset(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSize = _ref.cellSize,\n      computeMetadataCallback = _ref.computeMetadataCallback,\n      computeMetadataCallbackProps = _ref.computeMetadataCallbackProps,\n      nextCellsCount = _ref.nextCellsCount,\n      nextCellSize = _ref.nextCellSize,\n      nextScrollToIndex = _ref.nextScrollToIndex,\n      scrollToIndex = _ref.scrollToIndex,\n      updateScrollOffsetForScrollToIndex = _ref.updateScrollOffsetForScrollToIndex;\n\n  // Don't compare cell sizes if they are functions because inline functions would cause infinite loops.\n  // In that event users should use the manual recompute methods to inform of changes.\n  if (cellCount !== nextCellsCount || (typeof cellSize === 'number' || typeof nextCellSize === 'number') && cellSize !== nextCellSize) {\n    computeMetadataCallback(computeMetadataCallbackProps); // Updated cell metadata may have hidden the previous scrolled-to item.\n    // In this case we should also update the scrollTop to ensure it stays visible.\n\n    if (scrollToIndex >= 0 && scrollToIndex === nextScrollToIndex) {\n      updateScrollOffsetForScrollToIndex();\n    }\n  }\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _types = require(\"../types\");\n\n/**\n * Just-in-time calculates and caches size and position information for a collection of cells.\n */\nvar CellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  // Cache of size and position data for cells, mapped by cell index.\n  // Note that invalid values may exist in this map so only rely on cells up to this._lastMeasuredIndex\n  // Measurements for cells up to this index can be trusted; cells afterward should be estimated.\n  // Used in deferred mode to track which cells have been queued for measurement.\n  function CellSizeAndPositionManager(_ref) {\n    var cellCount = _ref.cellCount,\n        cellSizeGetter = _ref.cellSizeGetter,\n        estimatedCellSize = _ref.estimatedCellSize;\n    (0, _classCallCheck2[\"default\"])(this, CellSizeAndPositionManager);\n    (0, _defineProperty2[\"default\"])(this, \"_cellSizeAndPositionData\", {});\n    (0, _defineProperty2[\"default\"])(this, \"_lastMeasuredIndex\", -1);\n    (0, _defineProperty2[\"default\"])(this, \"_lastBatchedIndex\", -1);\n    (0, _defineProperty2[\"default\"])(this, \"_cellCount\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_cellSizeGetter\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_estimatedCellSize\", void 0);\n    this._cellSizeGetter = cellSizeGetter;\n    this._cellCount = cellCount;\n    this._estimatedCellSize = estimatedCellSize;\n  }\n\n  (0, _createClass2[\"default\"])(CellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return false;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(_ref2) {\n      var cellCount = _ref2.cellCount,\n          estimatedCellSize = _ref2.estimatedCellSize,\n          cellSizeGetter = _ref2.cellSizeGetter;\n      this._cellCount = cellCount;\n      this._estimatedCellSize = estimatedCellSize;\n      this._cellSizeGetter = cellSizeGetter;\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellCount;\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._estimatedCellSize;\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._lastMeasuredIndex;\n    }\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment() {\n      return 0;\n    }\n    /**\n     * This method returns the size and position for the cell at the specified index.\n     * It just-in-time calculates (or used cached values) for cells leading up to the index.\n     */\n\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      if (index < 0 || index >= this._cellCount) {\n        throw Error(\"Requested index \".concat(index, \" is outside of range 0..\").concat(this._cellCount));\n      }\n\n      if (index > this._lastMeasuredIndex) {\n        var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n        var offset = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n\n        for (var i = this._lastMeasuredIndex + 1; i <= index; i++) {\n          var size = this._cellSizeGetter({\n            index: i\n          }); // undefined or NaN probably means a logic error in the size getter.\n          // null means we're using CellMeasurer and haven't yet measured a given index.\n\n\n          if (size === undefined || isNaN(size)) {\n            throw Error(\"Invalid size returned for cell \".concat(i, \" of value \").concat(size));\n          } else if (size === null) {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: 0\n            };\n            this._lastBatchedIndex = index;\n          } else {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: size\n            };\n            offset += size;\n            this._lastMeasuredIndex = index;\n          }\n        }\n      }\n\n      return this._cellSizeAndPositionData[index];\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._lastMeasuredIndex >= 0 ? this._cellSizeAndPositionData[this._lastMeasuredIndex] : {\n        offset: 0,\n        size: 0\n      };\n    }\n    /**\n     * Total size of all cells being measured.\n     * This value will be completely estimated initially.\n     * As cells are measured, the estimate will be updated.\n     */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var totalSizeOfMeasuredCells = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n      var numUnmeasuredCells = this._cellCount - this._lastMeasuredIndex - 1;\n      var totalSizeOfUnmeasuredCells = numUnmeasuredCells * this._estimatedCellSize;\n      return totalSizeOfMeasuredCells + totalSizeOfUnmeasuredCells;\n    }\n    /**\n     * Determines a new offset that ensures a certain cell is visible, given the current offset.\n     * If the cell is already visible then the current offset will be returned.\n     * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n     *\n     * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n     * @param containerSize Size (width or height) of the container viewport\n     * @param currentOffset Container's current (x or y) offset\n     * @param totalSize Total size (width or height) of all cells\n     * @return Offset to use to ensure the specified cell is visible\n     */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n\n      if (containerSize <= 0) {\n        return 0;\n      }\n\n      var datum = this.getSizeAndPositionOfCell(targetIndex);\n      var maxOffset = datum.offset;\n      var minOffset = maxOffset - containerSize + datum.size;\n      var idealOffset;\n\n      switch (align) {\n        case 'start':\n          idealOffset = maxOffset;\n          break;\n\n        case 'end':\n          idealOffset = minOffset;\n          break;\n\n        case 'center':\n          idealOffset = maxOffset - (containerSize - datum.size) / 2;\n          break;\n\n        default:\n          idealOffset = Math.max(minOffset, Math.min(maxOffset, currentOffset));\n          break;\n      }\n\n      var totalSize = this.getTotalSize();\n      return Math.max(0, Math.min(totalSize - containerSize, idealOffset));\n    }\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(params) {\n      var containerSize = params.containerSize,\n          offset = params.offset;\n      var totalSize = this.getTotalSize();\n\n      if (totalSize === 0) {\n        return {};\n      }\n\n      var maxOffset = offset + containerSize;\n\n      var start = this._findNearestCell(offset);\n\n      var datum = this.getSizeAndPositionOfCell(start);\n      offset = datum.offset + datum.size;\n      var stop = start;\n\n      while (offset < maxOffset && stop < this._cellCount - 1) {\n        stop++;\n        offset += this.getSizeAndPositionOfCell(stop).size;\n      }\n\n      return {\n        start: start,\n        stop: stop\n      };\n    }\n    /**\n     * Clear all cached values for cells after the specified index.\n     * This method should be called for any cell that has changed its size.\n     * It will not immediately perform any calculations; they'll be performed the next time getSizeAndPositionOfCell() is called.\n     */\n\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._lastMeasuredIndex = Math.min(this._lastMeasuredIndex, index - 1);\n    }\n  }, {\n    key: \"_binarySearch\",\n    value: function _binarySearch(high, low, offset) {\n      while (low <= high) {\n        var middle = low + Math.floor((high - low) / 2);\n        var currentOffset = this.getSizeAndPositionOfCell(middle).offset;\n\n        if (currentOffset === offset) {\n          return middle;\n        } else if (currentOffset < offset) {\n          low = middle + 1;\n        } else if (currentOffset > offset) {\n          high = middle - 1;\n        }\n      }\n\n      if (low > 0) {\n        return low - 1;\n      } else {\n        return 0;\n      }\n    }\n  }, {\n    key: \"_exponentialSearch\",\n    value: function _exponentialSearch(index, offset) {\n      var interval = 1;\n\n      while (index < this._cellCount && this.getSizeAndPositionOfCell(index).offset < offset) {\n        index += interval;\n        interval *= 2;\n      }\n\n      return this._binarySearch(Math.min(index, this._cellCount - 1), Math.floor(index / 2), offset);\n    }\n    /**\n     * Searches for the cell (index) nearest the specified offset.\n     *\n     * If no exact match is found the next lowest cell index will be returned.\n     * This allows partially visible cells (with offsets just before/above the fold) to be visible.\n     */\n\n  }, {\n    key: \"_findNearestCell\",\n    value: function _findNearestCell(offset) {\n      if (isNaN(offset)) {\n        throw Error(\"Invalid offset \".concat(offset, \" specified\"));\n      } // Our search algorithms find the nearest match at or below the specified offset.\n      // So make sure the offset is at least 0 or no match will be found.\n\n\n      offset = Math.max(0, offset);\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var lastMeasuredIndex = Math.max(0, this._lastMeasuredIndex);\n\n      if (lastMeasuredCellSizeAndPosition.offset >= offset) {\n        // If we've already measured cells within this range just use a binary search as it's faster.\n        return this._binarySearch(lastMeasuredIndex, 0, offset);\n      } else {\n        // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n        // The exponential search avoids pre-computing sizes for the full set of cells as a binary search would.\n        // The overall complexity for this approach is O(log n).\n        return this._exponentialSearch(lastMeasuredIndex, offset);\n      }\n    }\n  }]);\n  return CellSizeAndPositionManager;\n}();\n\nexports[\"default\"] = CellSizeAndPositionManager;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getMaxElementSize = void 0;\nvar DEFAULT_MAX_ELEMENT_SIZE = 1500000;\nvar CHROME_MAX_ELEMENT_SIZE = 1.67771e7;\n\nvar isBrowser = function isBrowser() {\n  return typeof window !== 'undefined';\n};\n\nvar isChrome = function isChrome() {\n  return !!window.chrome;\n};\n\nvar getMaxElementSize = function getMaxElementSize() {\n  if (isBrowser()) {\n    if (isChrome()) {\n      return CHROME_MAX_ELEMENT_SIZE;\n    }\n  }\n\n  return DEFAULT_MAX_ELEMENT_SIZE;\n};\n\nexports.getMaxElementSize = getMaxElementSize;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = createCallbackMemoizer;\n\n/**\n * Helper utility that updates the specified callback whenever any of the specified indices have changed.\n */\nfunction createCallbackMemoizer() {\n  var requireAllKeys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  var cachedIndices = {};\n  return function (_ref) {\n    var callback = _ref.callback,\n        indices = _ref.indices;\n    var keys = Object.keys(indices);\n    var allInitialized = !requireAllKeys || keys.every(function (key) {\n      var value = indices[key];\n      return Array.isArray(value) ? value.length > 0 : value >= 0;\n    });\n    var indexChanged = keys.length !== Object.keys(cachedIndices).length || keys.some(function (key) {\n      var cachedValue = cachedIndices[key];\n      var value = indices[key];\n      return Array.isArray(value) ? cachedValue.join(',') !== value.join(',') : cachedValue !== value;\n    });\n    cachedIndices = indices;\n\n    if (allInitialized && indexChanged) {\n      callback(indices);\n    }\n  };\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = updateScrollIndexHelper;\n\nvar _ScalingCellSizeAndPositionManager = _interopRequireDefault(require(\"./ScalingCellSizeAndPositionManager.js\"));\n\nvar _types = require(\"../types\");\n\nfunction updateScrollIndexHelper(_ref) {\n  var cellSize = _ref.cellSize,\n      cellSizeAndPositionManager = _ref.cellSizeAndPositionManager,\n      previousCellsCount = _ref.previousCellsCount,\n      previousCellSize = _ref.previousCellSize,\n      previousScrollToAlignment = _ref.previousScrollToAlignment,\n      previousScrollToIndex = _ref.previousScrollToIndex,\n      previousSize = _ref.previousSize,\n      scrollOffset = _ref.scrollOffset,\n      scrollToAlignment = _ref.scrollToAlignment,\n      scrollToIndex = _ref.scrollToIndex,\n      size = _ref.size,\n      sizeJustIncreasedFromZero = _ref.sizeJustIncreasedFromZero,\n      updateScrollIndexCallback = _ref.updateScrollIndexCallback;\n  var cellCount = cellSizeAndPositionManager.getCellCount();\n  var hasScrollToIndex = scrollToIndex >= 0 && scrollToIndex < cellCount;\n  var sizeHasChanged = size !== previousSize || sizeJustIncreasedFromZero || !previousCellSize || typeof cellSize === 'number' && cellSize !== previousCellSize; // If we have a new scroll target OR if height/row-height has changed,\n  // We should ensure that the scroll target is visible.\n\n  if (hasScrollToIndex && (sizeHasChanged || scrollToAlignment !== previousScrollToAlignment || scrollToIndex !== previousScrollToIndex)) {\n    updateScrollIndexCallback(scrollToIndex); // If we don't have a selected item but list size or number of children have decreased,\n    // Make sure we aren't scrolled too far past the current content.\n  } else if (!hasScrollToIndex && cellCount > 0 && (size < previousSize || cellCount < previousCellsCount)) {\n    // We need to ensure that the current scroll offset is still within the collection's range.\n    // To do this, we don't need to measure everything; CellMeasurer would perform poorly.\n    // Just check to make sure we're still okay.\n    // Only adjust the scroll position if we've scrolled below the last set of rows.\n    if (scrollOffset > cellSizeAndPositionManager.getTotalSize() - size) {\n      updateScrollIndexCallback(cellCount - 1);\n    }\n  }\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bpfrpt_proptype_AnimationTimeoutId = exports.requestAnimationTimeout = exports.cancelAnimationTimeout = void 0;\n\nvar _animationFrame = require(\"./animationFrame\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar bpfrpt_proptype_AnimationTimeoutId = process.env.NODE_ENV === 'production' ? null : {\n  \"id\": _propTypes[\"default\"].number.isRequired\n};\nexports.bpfrpt_proptype_AnimationTimeoutId = bpfrpt_proptype_AnimationTimeoutId;\n\nvar cancelAnimationTimeout = function cancelAnimationTimeout(frame) {\n  return (0, _animationFrame.caf)(frame.id);\n};\n/**\n * Recursively calls requestAnimationFrame until a specified delay has been met or exceeded.\n * When the delay time has been reached the function you're timing out will be called.\n *\n * Credit: Joe Lambert (https://gist.github.com/joelambert/1002116#file-requesttimeout-js)\n */\n\n\nexports.cancelAnimationTimeout = cancelAnimationTimeout;\n\nvar requestAnimationTimeout = function requestAnimationTimeout(callback, delay) {\n  var start; // wait for end of processing current event handler, because event handler may be long\n\n  Promise.resolve().then(function () {\n    start = Date.now();\n  });\n\n  var timeout = function timeout() {\n    if (Date.now() - start >= delay) {\n      callback.call();\n    } else {\n      frame.id = (0, _animationFrame.raf)(timeout);\n    }\n  };\n\n  var frame = {\n    id: (0, _animationFrame.raf)(timeout)\n  };\n  return frame;\n};\n\nexports.requestAnimationTimeout = requestAnimationTimeout;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.caf = exports.raf = void 0;\n// Properly handle server-side rendering.\nvar win;\n\nif (typeof window !== 'undefined') {\n  win = window;\n} else if (typeof self !== 'undefined') {\n  win = self;\n} else {\n  win = {};\n} // requestAnimationFrame() shim by Paul Irish\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\nvar request = win.requestAnimationFrame || win.webkitRequestAnimationFrame || win.mozRequestAnimationFrame || win.oRequestAnimationFrame || win.msRequestAnimationFrame || function (callback) {\n  return win.setTimeout(callback, 1000 / 60);\n};\n\nvar cancel = win.cancelAnimationFrame || win.webkitCancelAnimationFrame || win.mozCancelAnimationFrame || win.oCancelAnimationFrame || win.msCancelAnimationFrame || function (id) {\n  win.clearTimeout(id);\n};\n\nvar raf = request;\nexports.raf = raf;\nvar caf = cancel;\nexports.caf = caf;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = defaultOverscanIndicesGetter;\nexports.SCROLL_DIRECTION_VERTICAL = exports.SCROLL_DIRECTION_HORIZONTAL = exports.SCROLL_DIRECTION_FORWARD = exports.SCROLL_DIRECTION_BACKWARD = void 0;\n\nvar _types = require(\"./types\");\n\nvar SCROLL_DIRECTION_BACKWARD = -1;\nexports.SCROLL_DIRECTION_BACKWARD = SCROLL_DIRECTION_BACKWARD;\nvar SCROLL_DIRECTION_FORWARD = 1;\nexports.SCROLL_DIRECTION_FORWARD = SCROLL_DIRECTION_FORWARD;\nvar SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexports.SCROLL_DIRECTION_HORIZONTAL = SCROLL_DIRECTION_HORIZONTAL;\nvar SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexports.SCROLL_DIRECTION_VERTICAL = SCROLL_DIRECTION_VERTICAL;\n\nfunction defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n  // Make sure we render at least 1 cell extra before and after (except near boundaries)\n  // This is necessary in order to support keyboard navigation (TAB/SHIFT+TAB) in some cases\n  // For more info see issues #625\n  overscanCellsCount = Math.max(1, overscanCellsCount);\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - 1),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + 1)\n    };\n  }\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calcColumnWidth = calcColumnWidth;\nfunction calcColumnWidth(index, columns, tableWidth) {\n  var column = columns[index];\n\n  var width = getDeterministicColumnWidth(column, tableWidth);\n\n  if (width) {\n    return width;\n  }\n\n  var totalAllocatedWidth = columns.reduce(function (result, c) {\n    return result + (getDeterministicColumnWidth(c, tableWidth) || 0);\n  }, 0);\n\n  // Evenly distribute remaining width amoungst columns (accounting for minWidths)\n  var variableWidthColumns = columns.filter(function (c) {\n    return typeof c.width !== 'number' && typeof c.width !== 'string';\n  });\n  var initialDistributedWidthPerColumn = (tableWidth - totalAllocatedWidth) / variableWidthColumns.length;\n  var activeMinWidthColumns = variableWidthColumns.filter(function (c) {\n    return c.minWidth > initialDistributedWidthPerColumn ? c.minWidth : 0;\n  });\n  var allocatedMinWidth = activeMinWidthColumns.reduce(function (result, c) {\n    return result + c.minWidth;\n  }, 0);\n  var remainingWidth = tableWidth - totalAllocatedWidth - allocatedMinWidth;\n\n  return Math.max(column.minWidth || 0, remainingWidth / (variableWidthColumns.length - activeMinWidthColumns.length));\n}\n\nfunction getDeterministicColumnWidth(column, tableWidth) {\n  if (typeof column.width === 'number') {\n    // Fixed width\n    return column.width;\n  } else if (typeof column.width === 'string') {\n    // Percentage width\n    var percentageBasedWidth = percentToFixedWidth(column.width, tableWidth);\n    return Math.max(percentageBasedWidth, column.minWidth || 0);\n  } else {\n    // Variable width\n    return null;\n  }\n}\n\nfunction percentToFixedWidth(percentAsString, tableWidth) {\n  return parseFloat(percentAsString) / 100 * tableWidth;\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf3 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _detectElementResize = _interopRequireDefault(require(\"../vendor/detectElementResize\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar AutoSizer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inherits2[\"default\"])(AutoSizer, _React$Component);\n\n  function AutoSizer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, AutoSizer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3[\"default\"])(AutoSizer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"state\", {\n      height: _this.props.defaultHeight || 0,\n      width: _this.props.defaultWidth || 0\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_parentNode\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_autoSizer\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_window\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_detectElementResize\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onResize\", function () {\n      var _this$props = _this.props,\n          disableHeight = _this$props.disableHeight,\n          disableWidth = _this$props.disableWidth,\n          onResize = _this$props.onResize;\n\n      if (_this._parentNode) {\n        // Guard against AutoSizer component being removed from the DOM immediately after being added.\n        // This can result in invalid style values which can result in NaN values if we don't handle them.\n        // See issue #150 for more context.\n        var height = _this._parentNode.offsetHeight || 0;\n        var width = _this._parentNode.offsetWidth || 0;\n        var win = _this._window || window;\n        var style = win.getComputedStyle(_this._parentNode) || {};\n        var paddingLeft = parseInt(style.paddingLeft, 10) || 0;\n        var paddingRight = parseInt(style.paddingRight, 10) || 0;\n        var paddingTop = parseInt(style.paddingTop, 10) || 0;\n        var paddingBottom = parseInt(style.paddingBottom, 10) || 0;\n        var newHeight = height - paddingTop - paddingBottom;\n        var newWidth = width - paddingLeft - paddingRight;\n\n        if (!disableHeight && _this.state.height !== newHeight || !disableWidth && _this.state.width !== newWidth) {\n          _this.setState({\n            height: height - paddingTop - paddingBottom,\n            width: width - paddingLeft - paddingRight\n          });\n\n          onResize({\n            height: height,\n            width: width\n          });\n        }\n      }\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_setRef\", function (autoSizer) {\n      _this._autoSizer = autoSizer;\n    });\n    return _this;\n  }\n\n  (0, _createClass2[\"default\"])(AutoSizer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var nonce = this.props.nonce;\n\n      if (this._autoSizer && this._autoSizer.parentNode && this._autoSizer.parentNode.ownerDocument && this._autoSizer.parentNode.ownerDocument.defaultView && this._autoSizer.parentNode instanceof this._autoSizer.parentNode.ownerDocument.defaultView.HTMLElement) {\n        // Delay access of parentNode until mount.\n        // This handles edge-cases where the component has already been unmounted before its ref has been set,\n        // As well as libraries like react-lite which have a slightly different lifecycle.\n        this._parentNode = this._autoSizer.parentNode;\n        this._window = this._autoSizer.parentNode.ownerDocument.defaultView; // Defer requiring resize handler in order to support server-side rendering.\n        // See issue #41\n\n        this._detectElementResize = (0, _detectElementResize[\"default\"])(nonce, this._window);\n\n        this._detectElementResize.addResizeListener(this._parentNode, this._onResize);\n\n        this._onResize();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._detectElementResize && this._parentNode) {\n        this._detectElementResize.removeResizeListener(this._parentNode, this._onResize);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          className = _this$props2.className,\n          disableHeight = _this$props2.disableHeight,\n          disableWidth = _this$props2.disableWidth,\n          style = _this$props2.style;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width; // Outer div should not force width/height since that may prevent containers from shrinking.\n      // Inner component should overflow and use calculated width/height.\n      // See issue #68 for more information.\n\n      var outerStyle = {\n        overflow: 'visible'\n      };\n      var childParams = {};\n\n      if (!disableHeight) {\n        outerStyle.height = 0;\n        childParams.height = height;\n      }\n\n      if (!disableWidth) {\n        outerStyle.width = 0;\n        childParams.width = width;\n      }\n      /**\n       * TODO: Avoid rendering children before the initial measurements have been collected.\n       * At best this would just be wasting cycles.\n       * Add this check into version 10 though as it could break too many ref callbacks in version 9.\n       * Note that if default width/height props were provided this would still work with SSR.\n      if (\n        height !== 0 &&\n        width !== 0\n      ) {\n        child = children({ height, width })\n      }\n      */\n\n\n      return React.createElement(\"div\", {\n        className: className,\n        ref: this._setRef,\n        style: _objectSpread({}, outerStyle, {}, style)\n      }, children(childParams));\n    }\n  }]);\n  return AutoSizer;\n}(React.Component), (0, _defineProperty2[\"default\"])(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /** Function responsible for rendering children.*/\n  \"children\": _propTypes[\"default\"].func.isRequired,\n\n  /** Optional custom CSS class name to attach to root AutoSizer element.  */\n  \"className\": _propTypes[\"default\"].string,\n\n  /** Default height to use for initial render; useful for SSR */\n  \"defaultHeight\": _propTypes[\"default\"].number,\n\n  /** Default width to use for initial render; useful for SSR */\n  \"defaultWidth\": _propTypes[\"default\"].number,\n\n  /** Disable dynamic :height property */\n  \"disableHeight\": _propTypes[\"default\"].bool.isRequired,\n\n  /** Disable dynamic :width property */\n  \"disableWidth\": _propTypes[\"default\"].bool.isRequired,\n\n  /** Nonce of the inlined stylesheet for Content Security Policy */\n  \"nonce\": _propTypes[\"default\"].string,\n\n  /** Callback to be invoked on-resize */\n  \"onResize\": _propTypes[\"default\"].func.isRequired,\n\n  /** Optional inline style */\n  \"style\": _propTypes[\"default\"].object\n}), _temp);\nexports[\"default\"] = AutoSizer;\n(0, _defineProperty2[\"default\"])(AutoSizer, \"defaultProps\", {\n  onResize: function onResize() {},\n  disableHeight: false,\n  disableWidth: false,\n  style: {}\n});","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = createDetectElementResize;\n\n/**\n * Detect Element Resize.\n * https://github.com/sdecima/javascript-detect-element-resize\n * Sebastian Decima\n *\n * Forked from version 0.5.3; includes the following modifications:\n * 1) Guard against unsafe 'window' and 'document' references (to support SSR).\n * 2) Defer initialization code via a top-level function wrapper (to support SSR).\n * 3) Avoid unnecessary reflows by not measuring size for scroll events bubbling from children.\n * 4) Add nonce for style element.\n * 5) Added support for injecting custom window object\n **/\nfunction createDetectElementResize(nonce, hostWindow) {\n  // Check `document` and `window` in case of server-side rendering\n  var _window;\n\n  if (typeof hostWindow !== 'undefined') {\n    _window = hostWindow;\n  } else if (typeof window !== 'undefined') {\n    _window = window;\n  } else if (typeof self !== 'undefined') {\n    _window = self;\n  } else {\n    _window = global;\n  }\n\n  var attachEvent = typeof _window.document !== 'undefined' && _window.document.attachEvent;\n\n  if (!attachEvent) {\n    var requestFrame = function () {\n      var raf = _window.requestAnimationFrame || _window.mozRequestAnimationFrame || _window.webkitRequestAnimationFrame || function (fn) {\n        return _window.setTimeout(fn, 20);\n      };\n\n      return function (fn) {\n        return raf(fn);\n      };\n    }();\n\n    var cancelFrame = function () {\n      var cancel = _window.cancelAnimationFrame || _window.mozCancelAnimationFrame || _window.webkitCancelAnimationFrame || _window.clearTimeout;\n      return function (id) {\n        return cancel(id);\n      };\n    }();\n\n    var resetTriggers = function resetTriggers(element) {\n      var triggers = element.__resizeTriggers__,\n          expand = triggers.firstElementChild,\n          contract = triggers.lastElementChild,\n          expandChild = expand.firstElementChild;\n      contract.scrollLeft = contract.scrollWidth;\n      contract.scrollTop = contract.scrollHeight;\n      expandChild.style.width = expand.offsetWidth + 1 + 'px';\n      expandChild.style.height = expand.offsetHeight + 1 + 'px';\n      expand.scrollLeft = expand.scrollWidth;\n      expand.scrollTop = expand.scrollHeight;\n    };\n\n    var checkTriggers = function checkTriggers(element) {\n      return element.offsetWidth != element.__resizeLast__.width || element.offsetHeight != element.__resizeLast__.height;\n    };\n\n    var scrollListener = function scrollListener(e) {\n      // Don't measure (which forces) reflow for scrolls that happen inside of children!\n      if (e.target.className && typeof e.target.className.indexOf === 'function' && e.target.className.indexOf('contract-trigger') < 0 && e.target.className.indexOf('expand-trigger') < 0) {\n        return;\n      }\n\n      var element = this;\n      resetTriggers(this);\n\n      if (this.__resizeRAF__) {\n        cancelFrame(this.__resizeRAF__);\n      }\n\n      this.__resizeRAF__ = requestFrame(function () {\n        if (checkTriggers(element)) {\n          element.__resizeLast__.width = element.offsetWidth;\n          element.__resizeLast__.height = element.offsetHeight;\n\n          element.__resizeListeners__.forEach(function (fn) {\n            fn.call(element, e);\n          });\n        }\n      });\n    };\n    /* Detect CSS Animations support to detect element display/re-attach */\n\n\n    var animation = false,\n        keyframeprefix = '',\n        animationstartevent = 'animationstart',\n        domPrefixes = 'Webkit Moz O ms'.split(' '),\n        startEvents = 'webkitAnimationStart animationstart oAnimationStart MSAnimationStart'.split(' '),\n        pfx = '';\n    {\n      var elm = _window.document.createElement('fakeelement');\n\n      if (elm.style.animationName !== undefined) {\n        animation = true;\n      }\n\n      if (animation === false) {\n        for (var i = 0; i < domPrefixes.length; i++) {\n          if (elm.style[domPrefixes[i] + 'AnimationName'] !== undefined) {\n            pfx = domPrefixes[i];\n            keyframeprefix = '-' + pfx.toLowerCase() + '-';\n            animationstartevent = startEvents[i];\n            animation = true;\n            break;\n          }\n        }\n      }\n    }\n    var animationName = 'resizeanim';\n    var animationKeyframes = '@' + keyframeprefix + 'keyframes ' + animationName + ' { from { opacity: 0; } to { opacity: 0; } } ';\n    var animationStyle = keyframeprefix + 'animation: 1ms ' + animationName + '; ';\n  }\n\n  var createStyles = function createStyles(doc) {\n    if (!doc.getElementById('detectElementResize')) {\n      //opacity:0 works around a chrome bug https://code.google.com/p/chromium/issues/detail?id=286360\n      var css = (animationKeyframes ? animationKeyframes : '') + '.resize-triggers { ' + (animationStyle ? animationStyle : '') + 'visibility: hidden; opacity: 0; } ' + '.resize-triggers, .resize-triggers > div, .contract-trigger:before { content: \" \"; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; z-index: -1; } .resize-triggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',\n          head = doc.head || doc.getElementsByTagName('head')[0],\n          style = doc.createElement('style');\n      style.id = 'detectElementResize';\n      style.type = 'text/css';\n\n      if (nonce != null) {\n        style.setAttribute('nonce', nonce);\n      }\n\n      if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n      } else {\n        style.appendChild(doc.createTextNode(css));\n      }\n\n      head.appendChild(style);\n    }\n  };\n\n  var addResizeListener = function addResizeListener(element, fn) {\n    if (attachEvent) {\n      element.attachEvent('onresize', fn);\n    } else {\n      if (!element.__resizeTriggers__) {\n        var doc = element.ownerDocument;\n\n        var elementStyle = _window.getComputedStyle(element);\n\n        if (elementStyle && elementStyle.position == 'static') {\n          element.style.position = 'relative';\n        }\n\n        createStyles(doc);\n        element.__resizeLast__ = {};\n        element.__resizeListeners__ = [];\n        (element.__resizeTriggers__ = doc.createElement('div')).className = 'resize-triggers';\n        element.__resizeTriggers__.innerHTML = '<div class=\"expand-trigger\"><div></div></div>' + '<div class=\"contract-trigger\"></div>';\n        element.appendChild(element.__resizeTriggers__);\n        resetTriggers(element);\n        element.addEventListener('scroll', scrollListener, true);\n        /* Listen for a css animation to detect element display/re-attach */\n\n        if (animationstartevent) {\n          element.__resizeTriggers__.__animationListener__ = function animationListener(e) {\n            if (e.animationName == animationName) {\n              resetTriggers(element);\n            }\n          };\n\n          element.__resizeTriggers__.addEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n        }\n      }\n\n      element.__resizeListeners__.push(fn);\n    }\n  };\n\n  var removeResizeListener = function removeResizeListener(element, fn) {\n    if (attachEvent) {\n      element.detachEvent('onresize', fn);\n    } else {\n      element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n\n      if (!element.__resizeListeners__.length) {\n        element.removeEventListener('scroll', scrollListener, true);\n\n        if (element.__resizeTriggers__.__animationListener__) {\n          element.__resizeTriggers__.removeEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n\n          element.__resizeTriggers__.__animationListener__ = null;\n        }\n\n        try {\n          element.__resizeTriggers__ = !element.removeChild(element.__resizeTriggers__);\n        } catch (e) {// Preact compat; see developit/preact-compat/issues/228\n        }\n      }\n    }\n  };\n\n  return {\n    addResizeListener: addResizeListener,\n    removeResizeListener: removeResizeListener\n  };\n}","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;","/**\n * Helper method that determines when to recalculate row or column metadata.\n */\nexport default function calculateSizeAndPositionDataAndUpdateScrollOffset(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSize = _ref.cellSize,\n      computeMetadataCallback = _ref.computeMetadataCallback,\n      computeMetadataCallbackProps = _ref.computeMetadataCallbackProps,\n      nextCellsCount = _ref.nextCellsCount,\n      nextCellSize = _ref.nextCellSize,\n      nextScrollToIndex = _ref.nextScrollToIndex,\n      scrollToIndex = _ref.scrollToIndex,\n      updateScrollOffsetForScrollToIndex = _ref.updateScrollOffsetForScrollToIndex;\n\n  // Don't compare cell sizes if they are functions because inline functions would cause infinite loops.\n  // In that event users should use the manual recompute methods to inform of changes.\n  if (cellCount !== nextCellsCount || (typeof cellSize === 'number' || typeof nextCellSize === 'number') && cellSize !== nextCellSize) {\n    computeMetadataCallback(computeMetadataCallbackProps); // Updated cell metadata may have hidden the previous scrolled-to item.\n    // In this case we should also update the scrollTop to ensure it stays visible.\n\n    if (scrollToIndex >= 0 && scrollToIndex === nextScrollToIndex) {\n      updateScrollOffsetForScrollToIndex();\n    }\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\n/**\n * Just-in-time calculates and caches size and position information for a collection of cells.\n */\nvar CellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  // Cache of size and position data for cells, mapped by cell index.\n  // Note that invalid values may exist in this map so only rely on cells up to this._lastMeasuredIndex\n  // Measurements for cells up to this index can be trusted; cells afterward should be estimated.\n  // Used in deferred mode to track which cells have been queued for measurement.\n  function CellSizeAndPositionManager(_ref) {\n    var cellCount = _ref.cellCount,\n        cellSizeGetter = _ref.cellSizeGetter,\n        estimatedCellSize = _ref.estimatedCellSize;\n\n    _classCallCheck(this, CellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionData\", {});\n\n    _defineProperty(this, \"_lastMeasuredIndex\", -1);\n\n    _defineProperty(this, \"_lastBatchedIndex\", -1);\n\n    _defineProperty(this, \"_cellCount\", void 0);\n\n    _defineProperty(this, \"_cellSizeGetter\", void 0);\n\n    _defineProperty(this, \"_estimatedCellSize\", void 0);\n\n    this._cellSizeGetter = cellSizeGetter;\n    this._cellCount = cellCount;\n    this._estimatedCellSize = estimatedCellSize;\n  }\n\n  _createClass(CellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return false;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(_ref2) {\n      var cellCount = _ref2.cellCount,\n          estimatedCellSize = _ref2.estimatedCellSize,\n          cellSizeGetter = _ref2.cellSizeGetter;\n      this._cellCount = cellCount;\n      this._estimatedCellSize = estimatedCellSize;\n      this._cellSizeGetter = cellSizeGetter;\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellCount;\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._estimatedCellSize;\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._lastMeasuredIndex;\n    }\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment() {\n      return 0;\n    }\n    /**\n     * This method returns the size and position for the cell at the specified index.\n     * It just-in-time calculates (or used cached values) for cells leading up to the index.\n     */\n\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      if (index < 0 || index >= this._cellCount) {\n        throw Error(\"Requested index \".concat(index, \" is outside of range 0..\").concat(this._cellCount));\n      }\n\n      if (index > this._lastMeasuredIndex) {\n        var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n        var offset = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n\n        for (var i = this._lastMeasuredIndex + 1; i <= index; i++) {\n          var size = this._cellSizeGetter({\n            index: i\n          }); // undefined or NaN probably means a logic error in the size getter.\n          // null means we're using CellMeasurer and haven't yet measured a given index.\n\n\n          if (size === undefined || isNaN(size)) {\n            throw Error(\"Invalid size returned for cell \".concat(i, \" of value \").concat(size));\n          } else if (size === null) {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: 0\n            };\n            this._lastBatchedIndex = index;\n          } else {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: size\n            };\n            offset += size;\n            this._lastMeasuredIndex = index;\n          }\n        }\n      }\n\n      return this._cellSizeAndPositionData[index];\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._lastMeasuredIndex >= 0 ? this._cellSizeAndPositionData[this._lastMeasuredIndex] : {\n        offset: 0,\n        size: 0\n      };\n    }\n    /**\n     * Total size of all cells being measured.\n     * This value will be completely estimated initially.\n     * As cells are measured, the estimate will be updated.\n     */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var totalSizeOfMeasuredCells = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n      var numUnmeasuredCells = this._cellCount - this._lastMeasuredIndex - 1;\n      var totalSizeOfUnmeasuredCells = numUnmeasuredCells * this._estimatedCellSize;\n      return totalSizeOfMeasuredCells + totalSizeOfUnmeasuredCells;\n    }\n    /**\n     * Determines a new offset that ensures a certain cell is visible, given the current offset.\n     * If the cell is already visible then the current offset will be returned.\n     * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n     *\n     * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n     * @param containerSize Size (width or height) of the container viewport\n     * @param currentOffset Container's current (x or y) offset\n     * @param totalSize Total size (width or height) of all cells\n     * @return Offset to use to ensure the specified cell is visible\n     */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n\n      if (containerSize <= 0) {\n        return 0;\n      }\n\n      var datum = this.getSizeAndPositionOfCell(targetIndex);\n      var maxOffset = datum.offset;\n      var minOffset = maxOffset - containerSize + datum.size;\n      var idealOffset;\n\n      switch (align) {\n        case 'start':\n          idealOffset = maxOffset;\n          break;\n\n        case 'end':\n          idealOffset = minOffset;\n          break;\n\n        case 'center':\n          idealOffset = maxOffset - (containerSize - datum.size) / 2;\n          break;\n\n        default:\n          idealOffset = Math.max(minOffset, Math.min(maxOffset, currentOffset));\n          break;\n      }\n\n      var totalSize = this.getTotalSize();\n      return Math.max(0, Math.min(totalSize - containerSize, idealOffset));\n    }\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(params) {\n      var containerSize = params.containerSize,\n          offset = params.offset;\n      var totalSize = this.getTotalSize();\n\n      if (totalSize === 0) {\n        return {};\n      }\n\n      var maxOffset = offset + containerSize;\n\n      var start = this._findNearestCell(offset);\n\n      var datum = this.getSizeAndPositionOfCell(start);\n      offset = datum.offset + datum.size;\n      var stop = start;\n\n      while (offset < maxOffset && stop < this._cellCount - 1) {\n        stop++;\n        offset += this.getSizeAndPositionOfCell(stop).size;\n      }\n\n      return {\n        start: start,\n        stop: stop\n      };\n    }\n    /**\n     * Clear all cached values for cells after the specified index.\n     * This method should be called for any cell that has changed its size.\n     * It will not immediately perform any calculations; they'll be performed the next time getSizeAndPositionOfCell() is called.\n     */\n\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._lastMeasuredIndex = Math.min(this._lastMeasuredIndex, index - 1);\n    }\n  }, {\n    key: \"_binarySearch\",\n    value: function _binarySearch(high, low, offset) {\n      while (low <= high) {\n        var middle = low + Math.floor((high - low) / 2);\n        var currentOffset = this.getSizeAndPositionOfCell(middle).offset;\n\n        if (currentOffset === offset) {\n          return middle;\n        } else if (currentOffset < offset) {\n          low = middle + 1;\n        } else if (currentOffset > offset) {\n          high = middle - 1;\n        }\n      }\n\n      if (low > 0) {\n        return low - 1;\n      } else {\n        return 0;\n      }\n    }\n  }, {\n    key: \"_exponentialSearch\",\n    value: function _exponentialSearch(index, offset) {\n      var interval = 1;\n\n      while (index < this._cellCount && this.getSizeAndPositionOfCell(index).offset < offset) {\n        index += interval;\n        interval *= 2;\n      }\n\n      return this._binarySearch(Math.min(index, this._cellCount - 1), Math.floor(index / 2), offset);\n    }\n    /**\n     * Searches for the cell (index) nearest the specified offset.\n     *\n     * If no exact match is found the next lowest cell index will be returned.\n     * This allows partially visible cells (with offsets just before/above the fold) to be visible.\n     */\n\n  }, {\n    key: \"_findNearestCell\",\n    value: function _findNearestCell(offset) {\n      if (isNaN(offset)) {\n        throw Error(\"Invalid offset \".concat(offset, \" specified\"));\n      } // Our search algorithms find the nearest match at or below the specified offset.\n      // So make sure the offset is at least 0 or no match will be found.\n\n\n      offset = Math.max(0, offset);\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var lastMeasuredIndex = Math.max(0, this._lastMeasuredIndex);\n\n      if (lastMeasuredCellSizeAndPosition.offset >= offset) {\n        // If we've already measured cells within this range just use a binary search as it's faster.\n        return this._binarySearch(lastMeasuredIndex, 0, offset);\n      } else {\n        // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n        // The exponential search avoids pre-computing sizes for the full set of cells as a binary search would.\n        // The overall complexity for this approach is O(log n).\n        return this._exponentialSearch(lastMeasuredIndex, offset);\n      }\n    }\n  }]);\n\n  return CellSizeAndPositionManager;\n}();\n\nexport { CellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","var DEFAULT_MAX_ELEMENT_SIZE = 1500000;\nvar CHROME_MAX_ELEMENT_SIZE = 1.67771e7;\n\nvar isBrowser = function isBrowser() {\n  return typeof window !== 'undefined';\n};\n\nvar isChrome = function isChrome() {\n  return !!window.chrome;\n};\n\nexport var getMaxElementSize = function getMaxElementSize() {\n  if (isBrowser()) {\n    if (isChrome()) {\n      return CHROME_MAX_ELEMENT_SIZE;\n    }\n  }\n\n  return DEFAULT_MAX_ELEMENT_SIZE;\n};","import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport CellSizeAndPositionManager from './CellSizeAndPositionManager';\nimport { getMaxElementSize } from './maxElementSize.js';\n\n/**\n * Extends CellSizeAndPositionManager and adds scaling behavior for lists that are too large to fit within a browser's native limits.\n */\nvar ScalingCellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  function ScalingCellSizeAndPositionManager(_ref) {\n    var _ref$maxScrollSize = _ref.maxScrollSize,\n        maxScrollSize = _ref$maxScrollSize === void 0 ? getMaxElementSize() : _ref$maxScrollSize,\n        params = _objectWithoutProperties(_ref, [\"maxScrollSize\"]);\n\n    _classCallCheck(this, ScalingCellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionManager\", void 0);\n\n    _defineProperty(this, \"_maxScrollSize\", void 0);\n\n    // Favor composition over inheritance to simplify IE10 support\n    this._cellSizeAndPositionManager = new CellSizeAndPositionManager(params);\n    this._maxScrollSize = maxScrollSize;\n  }\n\n  _createClass(ScalingCellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return this._cellSizeAndPositionManager.getTotalSize() > this._maxScrollSize;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(params) {\n      this._cellSizeAndPositionManager.configure(params);\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellSizeAndPositionManager.getCellCount();\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._cellSizeAndPositionManager.getEstimatedCellSize();\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._cellSizeAndPositionManager.getLastMeasuredIndex();\n    }\n    /**\n     * Number of pixels a cell at the given position (offset) should be shifted in order to fit within the scaled container.\n     * The offset passed to this function is scaled (safe) as well.\n     */\n\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment(_ref2) {\n      var containerSize = _ref2.containerSize,\n          offset = _ref2.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      var offsetPercentage = this._getOffsetPercentage({\n        containerSize: containerSize,\n        offset: offset,\n        totalSize: safeTotalSize\n      });\n\n      return Math.round(offsetPercentage * (safeTotalSize - totalSize));\n    }\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfCell(index);\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfLastMeasuredCell();\n    }\n    /** See CellSizeAndPositionManager#getTotalSize */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return Math.min(this._maxScrollSize, this._cellSizeAndPositionManager.getTotalSize());\n    }\n    /** See CellSizeAndPositionManager#getUpdatedOffsetForIndex */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n      currentOffset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: currentOffset\n      });\n\n      var offset = this._cellSizeAndPositionManager.getUpdatedOffsetForIndex({\n        align: align,\n        containerSize: containerSize,\n        currentOffset: currentOffset,\n        targetIndex: targetIndex\n      });\n\n      return this._offsetToSafeOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n    /** See CellSizeAndPositionManager#getVisibleCellRange */\n\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(_ref4) {\n      var containerSize = _ref4.containerSize,\n          offset = _ref4.offset;\n      offset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n      return this._cellSizeAndPositionManager.getVisibleCellRange({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._cellSizeAndPositionManager.resetCell(index);\n    }\n  }, {\n    key: \"_getOffsetPercentage\",\n    value: function _getOffsetPercentage(_ref5) {\n      var containerSize = _ref5.containerSize,\n          offset = _ref5.offset,\n          totalSize = _ref5.totalSize;\n      return totalSize <= containerSize ? 0 : offset / (totalSize - containerSize);\n    }\n  }, {\n    key: \"_offsetToSafeOffset\",\n    value: function _offsetToSafeOffset(_ref6) {\n      var containerSize = _ref6.containerSize,\n          offset = _ref6.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: totalSize\n        });\n\n        return Math.round(offsetPercentage * (safeTotalSize - containerSize));\n      }\n    }\n  }, {\n    key: \"_safeOffsetToOffset\",\n    value: function _safeOffsetToOffset(_ref7) {\n      var containerSize = _ref7.containerSize,\n          offset = _ref7.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: safeTotalSize\n        });\n\n        return Math.round(offsetPercentage * (totalSize - containerSize));\n      }\n    }\n  }]);\n\n  return ScalingCellSizeAndPositionManager;\n}();\n\nexport { ScalingCellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","/**\n * Helper utility that updates the specified callback whenever any of the specified indices have changed.\n */\nexport default function createCallbackMemoizer() {\n  var requireAllKeys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  var cachedIndices = {};\n  return function (_ref) {\n    var callback = _ref.callback,\n        indices = _ref.indices;\n    var keys = Object.keys(indices);\n    var allInitialized = !requireAllKeys || keys.every(function (key) {\n      var value = indices[key];\n      return Array.isArray(value) ? value.length > 0 : value >= 0;\n    });\n    var indexChanged = keys.length !== Object.keys(cachedIndices).length || keys.some(function (key) {\n      var cachedValue = cachedIndices[key];\n      var value = indices[key];\n      return Array.isArray(value) ? cachedValue.join(',') !== value.join(',') : cachedValue !== value;\n    });\n    cachedIndices = indices;\n\n    if (allInitialized && indexChanged) {\n      callback(indices);\n    }\n  };\n}","import ScalingCellSizeAndPositionManager from './ScalingCellSizeAndPositionManager.js';\n/**\n * Helper function that determines when to update scroll offsets to ensure that a scroll-to-index remains visible.\n * This function also ensures that the scroll ofset isn't past the last column/row of cells.\n */\n\nexport default function updateScrollIndexHelper(_ref) {\n  var cellSize = _ref.cellSize,\n      cellSizeAndPositionManager = _ref.cellSizeAndPositionManager,\n      previousCellsCount = _ref.previousCellsCount,\n      previousCellSize = _ref.previousCellSize,\n      previousScrollToAlignment = _ref.previousScrollToAlignment,\n      previousScrollToIndex = _ref.previousScrollToIndex,\n      previousSize = _ref.previousSize,\n      scrollOffset = _ref.scrollOffset,\n      scrollToAlignment = _ref.scrollToAlignment,\n      scrollToIndex = _ref.scrollToIndex,\n      size = _ref.size,\n      sizeJustIncreasedFromZero = _ref.sizeJustIncreasedFromZero,\n      updateScrollIndexCallback = _ref.updateScrollIndexCallback;\n  var cellCount = cellSizeAndPositionManager.getCellCount();\n  var hasScrollToIndex = scrollToIndex >= 0 && scrollToIndex < cellCount;\n  var sizeHasChanged = size !== previousSize || sizeJustIncreasedFromZero || !previousCellSize || typeof cellSize === 'number' && cellSize !== previousCellSize; // If we have a new scroll target OR if height/row-height has changed,\n  // We should ensure that the scroll target is visible.\n\n  if (hasScrollToIndex && (sizeHasChanged || scrollToAlignment !== previousScrollToAlignment || scrollToIndex !== previousScrollToIndex)) {\n    updateScrollIndexCallback(scrollToIndex); // If we don't have a selected item but list size or number of children have decreased,\n    // Make sure we aren't scrolled too far past the current content.\n  } else if (!hasScrollToIndex && cellCount > 0 && (size < previousSize || cellCount < previousCellsCount)) {\n    // We need to ensure that the current scroll offset is still within the collection's range.\n    // To do this, we don't need to measure everything; CellMeasurer would perform poorly.\n    // Just check to make sure we're still okay.\n    // Only adjust the scroll position if we've scrolled below the last set of rows.\n    if (scrollOffset > cellSizeAndPositionManager.getTotalSize() - size) {\n      updateScrollIndexCallback(cellCount - 1);\n    }\n  }\n}\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSize } from \"../types\";","// Properly handle server-side rendering.\nvar win;\n\nif (typeof window !== 'undefined') {\n  win = window;\n} else if (typeof self !== 'undefined') {\n  win = self;\n} else {\n  win = {};\n} // requestAnimationFrame() shim by Paul Irish\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\nvar request = win.requestAnimationFrame || win.webkitRequestAnimationFrame || win.mozRequestAnimationFrame || win.oRequestAnimationFrame || win.msRequestAnimationFrame || function (callback) {\n  return win.setTimeout(callback, 1000 / 60);\n};\n\nvar cancel = win.cancelAnimationFrame || win.webkitCancelAnimationFrame || win.mozCancelAnimationFrame || win.oCancelAnimationFrame || win.msCancelAnimationFrame || function (id) {\n  win.clearTimeout(id);\n};\n\nexport var raf = request;\nexport var caf = cancel;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport calculateSizeAndPositionDataAndUpdateScrollOffset from './utils/calculateSizeAndPositionDataAndUpdateScrollOffset';\nimport ScalingCellSizeAndPositionManager from './utils/ScalingCellSizeAndPositionManager';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport defaultOverscanIndicesGetter, { SCROLL_DIRECTION_BACKWARD, SCROLL_DIRECTION_FORWARD } from './defaultOverscanIndicesGetter';\nimport updateScrollIndexHelper from './utils/updateScrollIndexHelper';\nimport defaultCellRangeRenderer from './defaultCellRangeRenderer';\nimport scrollbarSize from 'dom-helpers/scrollbarSize';\nimport { polyfill } from 'react-lifecycles-compat';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n\nvar renderNull = function renderNull() {\n  return null;\n};\n\n/**\n * Renders tabular data with virtualization along the vertical and horizontal axes.\n * Row heights and column widths must be known ahead of time and specified as properties.\n */\nvar Grid = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Grid, _React$PureComponent);\n\n  // Invokes onSectionRendered callback only when start/stop row or column indices change\n  function Grid(props) {\n    var _this;\n\n    _classCallCheck(this, Grid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Grid).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"_onGridRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollLeftFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollTopFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_horizontalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_verticalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollbarPresenceChanged\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollingContainer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_childrenToDisplay\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollTop\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollLeft\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_disablePointerEventsTimeoutId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_styleCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceScrollEndedCallback\", function () {\n      _this._disablePointerEventsTimeoutId = null; // isScrolling is used to determine if we reset styleCache\n\n      _this.setState({\n        isScrolling: false,\n        needToResetStyleCache: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnGridRenderedHelper\", function () {\n      var onSectionRendered = _this.props.onSectionRendered;\n\n      _this._onGridRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          columnOverscanStartIndex: _this._columnStartIndex,\n          columnOverscanStopIndex: _this._columnStopIndex,\n          columnStartIndex: _this._renderedColumnStartIndex,\n          columnStopIndex: _this._renderedColumnStopIndex,\n          rowOverscanStartIndex: _this._rowStartIndex,\n          rowOverscanStopIndex: _this._rowStopIndex,\n          rowStartIndex: _this._renderedRowStartIndex,\n          rowStopIndex: _this._renderedRowStopIndex\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target === _this._scrollingContainer) {\n        _this.handleScrollEvent(event.target);\n      }\n    });\n\n    var columnSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.columnCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.columnWidth)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedColumnSize(props)\n    });\n    var rowSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.rowCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.rowHeight)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedRowSize(props)\n    });\n    _this.state = {\n      instanceProps: {\n        columnSizeAndPositionManager: columnSizeAndPositionManager,\n        rowSizeAndPositionManager: rowSizeAndPositionManager,\n        prevColumnWidth: props.columnWidth,\n        prevRowHeight: props.rowHeight,\n        prevColumnCount: props.columnCount,\n        prevRowCount: props.rowCount,\n        prevIsScrolling: props.isScrolling === true,\n        prevScrollToColumn: props.scrollToColumn,\n        prevScrollToRow: props.scrollToRow,\n        scrollbarSize: 0,\n        scrollbarSizeMeasured: false\n      },\n      isScrolling: false,\n      scrollDirectionHorizontal: SCROLL_DIRECTION_FORWARD,\n      scrollDirectionVertical: SCROLL_DIRECTION_FORWARD,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollPositionChangeReason: null,\n      needToResetStyleCache: false\n    };\n\n    if (props.scrollToRow > 0) {\n      _this._initialScrollTop = _this._getCalculatedScrollTop(props, _this.state);\n    }\n\n    if (props.scrollToColumn > 0) {\n      _this._initialScrollLeft = _this._getCalculatedScrollLeft(props, _this.state);\n    }\n\n    return _this;\n  }\n  /**\n   * Gets offsets for a given cell and alignment.\n   */\n\n\n  _createClass(Grid, [{\n    key: \"getOffsetForCell\",\n    value: function getOffsetForCell() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$alignment = _ref.alignment,\n          alignment = _ref$alignment === void 0 ? this.props.scrollToAlignment : _ref$alignment,\n          _ref$columnIndex = _ref.columnIndex,\n          columnIndex = _ref$columnIndex === void 0 ? this.props.scrollToColumn : _ref$columnIndex,\n          _ref$rowIndex = _ref.rowIndex,\n          rowIndex = _ref$rowIndex === void 0 ? this.props.scrollToRow : _ref$rowIndex;\n\n      var offsetProps = _objectSpread({}, this.props, {\n        scrollToAlignment: alignment,\n        scrollToColumn: columnIndex,\n        scrollToRow: rowIndex\n      });\n\n      return {\n        scrollLeft: this._getCalculatedScrollLeft(offsetProps),\n        scrollTop: this._getCalculatedScrollTop(offsetProps)\n      };\n    }\n    /**\n     * Gets estimated total rows' height.\n     */\n\n  }, {\n    key: \"getTotalRowsHeight\",\n    value: function getTotalRowsHeight() {\n      return this.state.instanceProps.rowSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * Gets estimated total columns' width.\n     */\n\n  }, {\n    key: \"getTotalColumnsWidth\",\n    value: function getTotalColumnsWidth() {\n      return this.state.instanceProps.columnSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * This method handles a scroll event originating from an external scroll control.\n     * It's an advanced method and should probably not be used unless you're implementing a custom scroll-bar solution.\n     */\n\n  }, {\n    key: \"handleScrollEvent\",\n    value: function handleScrollEvent(_ref2) {\n      var _ref2$scrollLeft = _ref2.scrollLeft,\n          scrollLeftParam = _ref2$scrollLeft === void 0 ? 0 : _ref2$scrollLeft,\n          _ref2$scrollTop = _ref2.scrollTop,\n          scrollTopParam = _ref2$scrollTop === void 0 ? 0 : _ref2$scrollTop;\n\n      // On iOS, we can arrive at negative offsets by swiping past the start.\n      // To prevent flicker here, we make playing in the negative offset zone cause nothing to happen.\n      if (scrollTopParam < 0) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      this._debounceScrollEnded();\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          autoWidth = _this$props.autoWidth,\n          height = _this$props.height,\n          width = _this$props.width;\n      var instanceProps = this.state.instanceProps; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollbarSize = instanceProps.scrollbarSize;\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var scrollLeft = Math.min(Math.max(0, totalColumnsWidth - width + scrollbarSize), scrollLeftParam);\n      var scrollTop = Math.min(Math.max(0, totalRowsHeight - height + scrollbarSize), scrollTopParam); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (this.state.scrollLeft !== scrollLeft || this.state.scrollTop !== scrollTop) {\n        // Track scrolling direction so we can more efficiently overscan rows to reduce empty space around the edges while scrolling.\n        // Don't change direction for an axis unless scroll offset has changed.\n        var scrollDirectionHorizontal = scrollLeft !== this.state.scrollLeft ? scrollLeft > this.state.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionHorizontal;\n        var scrollDirectionVertical = scrollTop !== this.state.scrollTop ? scrollTop > this.state.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionVertical;\n        var newState = {\n          isScrolling: true,\n          scrollDirectionHorizontal: scrollDirectionHorizontal,\n          scrollDirectionVertical: scrollDirectionVertical,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.OBSERVED\n        };\n\n        if (!autoHeight) {\n          newState.scrollTop = scrollTop;\n        }\n\n        if (!autoWidth) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        newState.needToResetStyleCache = false;\n        this.setState(newState);\n      }\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalColumnsWidth: totalColumnsWidth,\n        totalRowsHeight: totalRowsHeight\n      });\n    }\n    /**\n     * Invalidate Grid size and recompute visible cells.\n     * This is a deferred wrapper for recomputeGridSize().\n     * It sets a flag to be evaluated on cDM/cDU to avoid unnecessary renders.\n     * This method is intended for advanced use-cases like CellMeasurer.\n     */\n    // @TODO (bvaughn) Add automated test coverage for this.\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rowIndex = _ref3.rowIndex;\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /**\n     * Pre-measure all columns and rows in a Grid.\n     * Typically cells are only measured as needed and estimated sizes are used for cells that have not yet been measured.\n     * This method ensures that the next call to getTotalSize() returns an exact size (as opposed to just an estimated one).\n     */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      var _this$props2 = this.props,\n          columnCount = _this$props2.columnCount,\n          rowCount = _this$props2.rowCount;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.getSizeAndPositionOfCell(columnCount - 1);\n      instanceProps.rowSizeAndPositionManager.getSizeAndPositionOfCell(rowCount - 1);\n    }\n    /**\n     * Forced recompute of row heights and column widths.\n     * This function should be called if dynamic column or row sizes have changed but nothing else has.\n     * Since Grid only receives :columnCount and :rowCount it has no way of detecting when the underlying data changes.\n     */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref4$columnIndex = _ref4.columnIndex,\n          columnIndex = _ref4$columnIndex === void 0 ? 0 : _ref4$columnIndex,\n          _ref4$rowIndex = _ref4.rowIndex,\n          rowIndex = _ref4$rowIndex === void 0 ? 0 : _ref4$rowIndex;\n\n      var _this$props3 = this.props,\n          scrollToColumn = _this$props3.scrollToColumn,\n          scrollToRow = _this$props3.scrollToRow;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.resetCell(columnIndex);\n      instanceProps.rowSizeAndPositionManager.resetCell(rowIndex); // Cell sizes may be determined by a function property.\n      // In this case the cDU handler can't know if they changed.\n      // Store this flag to let the next cDU pass know it needs to recompute the scroll offset.\n\n      this._recomputeScrollLeftFlag = scrollToColumn >= 0 && (this.state.scrollDirectionHorizontal === SCROLL_DIRECTION_FORWARD ? columnIndex <= scrollToColumn : columnIndex >= scrollToColumn);\n      this._recomputeScrollTopFlag = scrollToRow >= 0 && (this.state.scrollDirectionVertical === SCROLL_DIRECTION_FORWARD ? rowIndex <= scrollToRow : rowIndex >= scrollToRow); // Clear cell cache in case we are scrolling;\n      // Invalid row heights likely mean invalid cached content as well.\n\n      this._styleCache = {};\n      this._cellCache = {};\n      this.forceUpdate();\n    }\n    /**\n     * Ensure column and row are visible.\n     */\n\n  }, {\n    key: \"scrollToCell\",\n    value: function scrollToCell(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n      var columnCount = this.props.columnCount;\n      var props = this.props; // Don't adjust scroll offset for single-column grids (eg List, Table).\n      // This can cause a funky scroll offset because of the vertical scrollbar width.\n\n      if (columnCount > 1 && columnIndex !== undefined) {\n        this._updateScrollLeftForScrollToColumn(_objectSpread({}, props, {\n          scrollToColumn: columnIndex\n        }));\n      }\n\n      if (rowIndex !== undefined) {\n        this._updateScrollTopForScrollToRow(_objectSpread({}, props, {\n          scrollToRow: rowIndex\n        }));\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          getScrollbarSize = _this$props4.getScrollbarSize,\n          height = _this$props4.height,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToColumn = _this$props4.scrollToColumn,\n          scrollTop = _this$props4.scrollTop,\n          scrollToRow = _this$props4.scrollToRow,\n          width = _this$props4.width;\n      var instanceProps = this.state.instanceProps; // Reset initial offsets to be ignored in browser\n\n      this._initialScrollTop = 0;\n      this._initialScrollLeft = 0; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n\n      if (!instanceProps.scrollbarSizeMeasured) {\n        this.setState(function (prevState) {\n          var stateUpdate = _objectSpread({}, prevState, {\n            needToResetStyleCache: false\n          });\n\n          stateUpdate.instanceProps.scrollbarSize = getScrollbarSize();\n          stateUpdate.instanceProps.scrollbarSizeMeasured = true;\n          return stateUpdate;\n        });\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 || typeof scrollTop === 'number' && scrollTop >= 0) {\n        var stateUpdate = Grid._getScrollToPositionStateUpdate({\n          prevState: this.state,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        if (stateUpdate) {\n          stateUpdate.needToResetStyleCache = false;\n          this.setState(stateUpdate);\n        }\n      } // refs don't work in `react-test-renderer`\n\n\n      if (this._scrollingContainer) {\n        // setting the ref's scrollLeft and scrollTop.\n        // Somehow in MultiGrid the main grid doesn't trigger a update on mount.\n        if (this._scrollingContainer.scrollLeft !== this.state.scrollLeft) {\n          this._scrollingContainer.scrollLeft = this.state.scrollLeft;\n        }\n\n        if (this._scrollingContainer.scrollTop !== this.state.scrollTop) {\n          this._scrollingContainer.scrollTop = this.state.scrollTop;\n        }\n      } // Don't update scroll offset if the size is 0; we don't render any cells in this case.\n      // Setting a state may cause us to later thing we've updated the offce when we haven't.\n\n\n      var sizeIsBiggerThanZero = height > 0 && width > 0;\n\n      if (scrollToColumn >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollLeftForScrollToColumn();\n      }\n\n      if (scrollToRow >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollTopForScrollToRow();\n      } // Update onRowsRendered callback\n\n\n      this._invokeOnGridRenderedHelper(); // Initialize onScroll callback\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalColumnsWidth: instanceProps.columnSizeAndPositionManager.getTotalSize(),\n        totalRowsHeight: instanceProps.rowSizeAndPositionManager.getTotalSize()\n      });\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) New scroll-to-cell props have been set\n     */\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      var _this$props5 = this.props,\n          autoHeight = _this$props5.autoHeight,\n          autoWidth = _this$props5.autoWidth,\n          columnCount = _this$props5.columnCount,\n          height = _this$props5.height,\n          rowCount = _this$props5.rowCount,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToColumn = _this$props5.scrollToColumn,\n          scrollToRow = _this$props5.scrollToRow,\n          width = _this$props5.width;\n      var _this$state = this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollPositionChangeReason = _this$state.scrollPositionChangeReason,\n          scrollTop = _this$state.scrollTop,\n          instanceProps = _this$state.instanceProps; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // Handle edge case where column or row count has only just increased over 0.\n      // In this case we may have to restore a previously-specified scroll offset.\n      // For more info see bvaughn/react-virtualized/issues/218\n\n\n      var columnOrRowCountJustIncreasedFromZero = columnCount > 0 && prevProps.columnCount === 0 || rowCount > 0 && prevProps.rowCount === 0; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        // @TRICKY :autoHeight and :autoWidth properties instructs Grid to leave :scrollTop and :scrollLeft management to an external HOC (eg WindowScroller).\n        // In this case we should avoid checking scrollingContainer.scrollTop and scrollingContainer.scrollLeft since it forces layout/flow.\n        if (!autoWidth && scrollLeft >= 0 && (scrollLeft !== this._scrollingContainer.scrollLeft || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (!autoHeight && scrollTop >= 0 && (scrollTop !== this._scrollingContainer.scrollTop || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Special case where the previous size was 0:\n      // In this case we don't show any windowed cells at all.\n      // So we should always recalculate offset afterwards.\n\n\n      var sizeJustIncreasedFromZero = (prevProps.width === 0 || prevProps.height === 0) && height > 0 && width > 0; // Update scroll offsets if the current :scrollToColumn or :scrollToRow values requires it\n      // @TODO Do we also need this check or can the one in componentWillUpdate() suffice?\n\n      if (this._recomputeScrollLeftFlag) {\n        this._recomputeScrollLeftFlag = false;\n\n        this._updateScrollLeftForScrollToColumn(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          previousCellsCount: prevProps.columnCount,\n          previousCellSize: prevProps.columnWidth,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToColumn,\n          previousSize: prevProps.width,\n          scrollOffset: scrollLeft,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToColumn,\n          size: width,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollLeftForScrollToColumn(_this2.props);\n          }\n        });\n      }\n\n      if (this._recomputeScrollTopFlag) {\n        this._recomputeScrollTopFlag = false;\n\n        this._updateScrollTopForScrollToRow(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          previousCellsCount: prevProps.rowCount,\n          previousCellSize: prevProps.rowHeight,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToRow,\n          previousSize: prevProps.height,\n          scrollOffset: scrollTop,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToRow,\n          size: height,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollTopForScrollToRow(_this2.props);\n          }\n        });\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnGridRenderedHelper(); // Changes to :scrollLeft or :scrollTop should also notify :onScroll listeners\n\n\n      if (scrollLeft !== prevState.scrollLeft || scrollTop !== prevState.scrollTop) {\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n\n        this._invokeOnScrollMemoizer({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          totalColumnsWidth: totalColumnsWidth,\n          totalRowsHeight: totalRowsHeight\n        });\n      }\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n    /**\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoContainerWidth = _this$props6.autoContainerWidth,\n          autoHeight = _this$props6.autoHeight,\n          autoWidth = _this$props6.autoWidth,\n          className = _this$props6.className,\n          containerProps = _this$props6.containerProps,\n          containerRole = _this$props6.containerRole,\n          containerStyle = _this$props6.containerStyle,\n          height = _this$props6.height,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          role = _this$props6.role,\n          style = _this$props6.style,\n          tabIndex = _this$props6.tabIndex,\n          width = _this$props6.width;\n      var _this$state2 = this.state,\n          instanceProps = _this$state2.instanceProps,\n          needToResetStyleCache = _this$state2.needToResetStyleCache;\n\n      var isScrolling = this._isScrolling();\n\n      var gridStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        width: autoWidth ? 'auto' : width,\n        WebkitOverflowScrolling: 'touch',\n        willChange: 'transform'\n      };\n\n      if (needToResetStyleCache) {\n        this._styleCache = {};\n      } // calculate _styleCache here\n      // if state.isScrolling (not from _isScrolling) then reset\n\n\n      if (!this.state.isScrolling) {\n        this._resetStyleCache();\n      } // calculate children to render here\n\n\n      this._calculateChildrenToRender(this.props, this.state);\n\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize(); // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n      var horizontalScrollBarSize = totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n\n      if (horizontalScrollBarSize !== this._horizontalScrollBarSize || verticalScrollBarSize !== this._verticalScrollBarSize) {\n        this._horizontalScrollBarSize = horizontalScrollBarSize;\n        this._verticalScrollBarSize = verticalScrollBarSize;\n        this._scrollbarPresenceChanged = true;\n      } // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n\n      gridStyle.overflowX = totalColumnsWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      gridStyle.overflowY = totalRowsHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      var childrenToDisplay = this._childrenToDisplay;\n      var showNoContentRenderer = childrenToDisplay.length === 0 && height > 0 && width > 0;\n      return React.createElement(\"div\", _extends({\n        ref: this._setScrollingContainerRef\n      }, containerProps, {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-readonly\": this.props['aria-readonly'],\n        className: clsx('ReactVirtualized__Grid', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({}, gridStyle, {}, style),\n        tabIndex: tabIndex\n      }), childrenToDisplay.length > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Grid__innerScrollContainer\",\n        role: containerRole,\n        style: _objectSpread({\n          width: autoContainerWidth ? 'auto' : totalColumnsWidth,\n          height: totalRowsHeight,\n          maxWidth: totalColumnsWidth,\n          maxHeight: totalRowsHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }, containerStyle)\n      }, childrenToDisplay), showNoContentRenderer && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n  }, {\n    key: \"_calculateChildrenToRender\",\n    value: function _calculateChildrenToRender() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      var cellRenderer = props.cellRenderer,\n          cellRangeRenderer = props.cellRangeRenderer,\n          columnCount = props.columnCount,\n          deferredMeasurementCache = props.deferredMeasurementCache,\n          height = props.height,\n          overscanColumnCount = props.overscanColumnCount,\n          overscanIndicesGetter = props.overscanIndicesGetter,\n          overscanRowCount = props.overscanRowCount,\n          rowCount = props.rowCount,\n          width = props.width,\n          isScrollingOptOut = props.isScrollingOptOut;\n      var scrollDirectionHorizontal = state.scrollDirectionHorizontal,\n          scrollDirectionVertical = state.scrollDirectionVertical,\n          instanceProps = state.instanceProps;\n      var scrollTop = this._initialScrollTop > 0 ? this._initialScrollTop : state.scrollTop;\n      var scrollLeft = this._initialScrollLeft > 0 ? this._initialScrollLeft : state.scrollLeft;\n\n      var isScrolling = this._isScrolling(props, state);\n\n      this._childrenToDisplay = []; // Render only enough columns and rows to cover the visible area of the grid.\n\n      if (height > 0 && width > 0) {\n        var visibleColumnIndices = instanceProps.columnSizeAndPositionManager.getVisibleCellRange({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var visibleRowIndices = instanceProps.rowSizeAndPositionManager.getVisibleCellRange({\n          containerSize: height,\n          offset: scrollTop\n        });\n        var horizontalOffsetAdjustment = instanceProps.columnSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var verticalOffsetAdjustment = instanceProps.rowSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: height,\n          offset: scrollTop\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        this._renderedColumnStartIndex = visibleColumnIndices.start;\n        this._renderedColumnStopIndex = visibleColumnIndices.stop;\n        this._renderedRowStartIndex = visibleRowIndices.start;\n        this._renderedRowStopIndex = visibleRowIndices.stop;\n        var overscanColumnIndices = overscanIndicesGetter({\n          direction: 'horizontal',\n          cellCount: columnCount,\n          overscanCellsCount: overscanColumnCount,\n          scrollDirection: scrollDirectionHorizontal,\n          startIndex: typeof visibleColumnIndices.start === 'number' ? visibleColumnIndices.start : 0,\n          stopIndex: typeof visibleColumnIndices.stop === 'number' ? visibleColumnIndices.stop : -1\n        });\n        var overscanRowIndices = overscanIndicesGetter({\n          direction: 'vertical',\n          cellCount: rowCount,\n          overscanCellsCount: overscanRowCount,\n          scrollDirection: scrollDirectionVertical,\n          startIndex: typeof visibleRowIndices.start === 'number' ? visibleRowIndices.start : 0,\n          stopIndex: typeof visibleRowIndices.stop === 'number' ? visibleRowIndices.stop : -1\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        var columnStartIndex = overscanColumnIndices.overscanStartIndex;\n        var columnStopIndex = overscanColumnIndices.overscanStopIndex;\n        var rowStartIndex = overscanRowIndices.overscanStartIndex;\n        var rowStopIndex = overscanRowIndices.overscanStopIndex; // Advanced use-cases (eg CellMeasurer) require batched measurements to determine accurate sizes.\n\n        if (deferredMeasurementCache) {\n          // If rows have a dynamic height, scan the rows we are about to render.\n          // If any have not yet been measured, then we need to render all columns initially,\n          // Because the height of the row is equal to the tallest cell within that row,\n          // (And so we can't know the height without measuring all column-cells first).\n          if (!deferredMeasurementCache.hasFixedHeight()) {\n            for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n              if (!deferredMeasurementCache.has(rowIndex, 0)) {\n                columnStartIndex = 0;\n                columnStopIndex = columnCount - 1;\n                break;\n              }\n            }\n          } // If columns have a dynamic width, scan the columns we are about to render.\n          // If any have not yet been measured, then we need to render all rows initially,\n          // Because the width of the column is equal to the widest cell within that column,\n          // (And so we can't know the width without measuring all row-cells first).\n\n\n          if (!deferredMeasurementCache.hasFixedWidth()) {\n            for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n              if (!deferredMeasurementCache.has(0, columnIndex)) {\n                rowStartIndex = 0;\n                rowStopIndex = rowCount - 1;\n                break;\n              }\n            }\n          }\n        }\n\n        this._childrenToDisplay = cellRangeRenderer({\n          cellCache: this._cellCache,\n          cellRenderer: cellRenderer,\n          columnSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          columnStartIndex: columnStartIndex,\n          columnStopIndex: columnStopIndex,\n          deferredMeasurementCache: deferredMeasurementCache,\n          horizontalOffsetAdjustment: horizontalOffsetAdjustment,\n          isScrolling: isScrolling,\n          isScrollingOptOut: isScrollingOptOut,\n          parent: this,\n          rowSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          rowStartIndex: rowStartIndex,\n          rowStopIndex: rowStopIndex,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          styleCache: this._styleCache,\n          verticalOffsetAdjustment: verticalOffsetAdjustment,\n          visibleColumnIndices: visibleColumnIndices,\n          visibleRowIndices: visibleRowIndices\n        }); // update the indices\n\n        this._columnStartIndex = columnStartIndex;\n        this._columnStopIndex = columnStopIndex;\n        this._rowStartIndex = rowStartIndex;\n        this._rowStopIndex = rowStopIndex;\n      }\n    }\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Grid.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_debounceScrollEnded\",\n    value: function _debounceScrollEnded() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = requestAnimationTimeout(this._debounceScrollEndedCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n\n    /**\n     * Check for batched CellMeasurer size invalidations.\n     * This will occur the first time one or more previously unmeasured cells are rendered.\n     */\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number' && typeof this._deferredInvalidateRowIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n      }\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref6) {\n      var _this3 = this;\n\n      var scrollLeft = _ref6.scrollLeft,\n          scrollTop = _ref6.scrollTop,\n          totalColumnsWidth = _ref6.totalColumnsWidth,\n          totalRowsHeight = _ref6.totalRowsHeight;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref7) {\n          var scrollLeft = _ref7.scrollLeft,\n              scrollTop = _ref7.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalRowsHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalColumnsWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_isScrolling\",\n    value: function _isScrolling() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      // If isScrolling is defined in props, use it to override the value in state\n      // This is a performance optimization for WindowScroller + Grid\n      return Object.hasOwnProperty.call(props, 'isScrolling') ? Boolean(props.isScrolling) : Boolean(state.isScrolling);\n    }\n  }, {\n    key: \"_maybeCallOnScrollbarPresenceChange\",\n    value: function _maybeCallOnScrollbarPresenceChange() {\n      if (this._scrollbarPresenceChanged) {\n        var onScrollbarPresenceChange = this.props.onScrollbarPresenceChange;\n        this._scrollbarPresenceChanged = false;\n        onScrollbarPresenceChange({\n          horizontal: this._horizontalScrollBarSize > 0,\n          size: this.state.instanceProps.scrollbarSize,\n          vertical: this._verticalScrollBarSize > 0\n        });\n      }\n    }\n  }, {\n    key: \"scrollToPosition\",\n\n    /**\n     * Scroll to the specified offset(s).\n     * Useful for animating position changes.\n     */\n    value: function scrollToPosition(_ref8) {\n      var scrollLeft = _ref8.scrollLeft,\n          scrollTop = _ref8.scrollTop;\n\n      var stateUpdate = Grid._getScrollToPositionStateUpdate({\n        prevState: this.state,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollLeft(props, state);\n    }\n  }, {\n    key: \"_updateScrollLeftForScrollToColumn\",\n    value: function _updateScrollLeftForScrollToColumn() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollLeftForScrollToColumnStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollTop(props, state);\n    }\n  }, {\n    key: \"_resetStyleCache\",\n    value: function _resetStyleCache() {\n      var styleCache = this._styleCache;\n      var cellCache = this._cellCache;\n      var isScrollingOptOut = this.props.isScrollingOptOut; // Reset cell and style caches once scrolling stops.\n      // This makes Grid simpler to use (since cells commonly change).\n      // And it keeps the caches from growing too large.\n      // Performance is most sensitive when a user is scrolling.\n      // Don't clear visible cells from cellCache if isScrollingOptOut is specified.\n      // This keeps the cellCache to a resonable size.\n\n      this._cellCache = {};\n      this._styleCache = {}; // Copy over the visible cell styles so avoid unnecessary re-render.\n\n      for (var rowIndex = this._rowStartIndex; rowIndex <= this._rowStopIndex; rowIndex++) {\n        for (var columnIndex = this._columnStartIndex; columnIndex <= this._columnStopIndex; columnIndex++) {\n          var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n          this._styleCache[key] = styleCache[key];\n\n          if (isScrollingOptOut) {\n            this._cellCache[key] = cellCache[key];\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_updateScrollTopForScrollToRow\",\n    value: function _updateScrollTopForScrollToRow() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollTopForScrollToRowStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var newState = {};\n\n      if (nextProps.columnCount === 0 && prevState.scrollLeft !== 0 || nextProps.rowCount === 0 && prevState.scrollTop !== 0) {\n        newState.scrollLeft = 0;\n        newState.scrollTop = 0; // only use scroll{Left,Top} from props if scrollTo{Column,Row} isn't specified\n        // scrollTo{Column,Row} should override scroll{Left,Top}\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft && nextProps.scrollToColumn < 0 || nextProps.scrollTop !== prevState.scrollTop && nextProps.scrollToRow < 0) {\n        Object.assign(newState, Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: nextProps.scrollLeft,\n          scrollTop: nextProps.scrollTop\n        }));\n      }\n\n      var instanceProps = prevState.instanceProps; // Initially we should not clearStyleCache\n\n      newState.needToResetStyleCache = false;\n\n      if (nextProps.columnWidth !== instanceProps.prevColumnWidth || nextProps.rowHeight !== instanceProps.prevRowHeight) {\n        // Reset cache. set it to {} in render\n        newState.needToResetStyleCache = true;\n      }\n\n      instanceProps.columnSizeAndPositionManager.configure({\n        cellCount: nextProps.columnCount,\n        estimatedCellSize: Grid._getEstimatedColumnSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.columnWidth)\n      });\n      instanceProps.rowSizeAndPositionManager.configure({\n        cellCount: nextProps.rowCount,\n        estimatedCellSize: Grid._getEstimatedRowSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.rowHeight)\n      });\n\n      if (instanceProps.prevColumnCount === 0 || instanceProps.prevRowCount === 0) {\n        instanceProps.prevColumnCount = 0;\n        instanceProps.prevRowCount = 0;\n      } // If scrolling is controlled outside this component, clear cache when scrolling stops\n\n\n      if (nextProps.autoHeight && nextProps.isScrolling === false && instanceProps.prevIsScrolling === true) {\n        Object.assign(newState, {\n          isScrolling: false\n        });\n      }\n\n      var maybeStateA;\n      var maybeStateB;\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevColumnCount,\n        cellSize: typeof instanceProps.prevColumnWidth === 'number' ? instanceProps.prevColumnWidth : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.columnSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.columnCount,\n        nextCellSize: typeof nextProps.columnWidth === 'number' ? nextProps.columnWidth : null,\n        nextScrollToIndex: nextProps.scrollToColumn,\n        scrollToIndex: instanceProps.prevScrollToColumn,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateA = Grid._getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState);\n        }\n      });\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevRowCount,\n        cellSize: typeof instanceProps.prevRowHeight === 'number' ? instanceProps.prevRowHeight : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.rowSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.rowCount,\n        nextCellSize: typeof nextProps.rowHeight === 'number' ? nextProps.rowHeight : null,\n        nextScrollToIndex: nextProps.scrollToRow,\n        scrollToIndex: instanceProps.prevScrollToRow,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateB = Grid._getScrollTopForScrollToRowStateUpdate(nextProps, prevState);\n        }\n      });\n      instanceProps.prevColumnCount = nextProps.columnCount;\n      instanceProps.prevColumnWidth = nextProps.columnWidth;\n      instanceProps.prevIsScrolling = nextProps.isScrolling === true;\n      instanceProps.prevRowCount = nextProps.rowCount;\n      instanceProps.prevRowHeight = nextProps.rowHeight;\n      instanceProps.prevScrollToColumn = nextProps.scrollToColumn;\n      instanceProps.prevScrollToRow = nextProps.scrollToRow; // getting scrollBarSize (moved from componentWillMount)\n\n      instanceProps.scrollbarSize = nextProps.getScrollbarSize();\n\n      if (instanceProps.scrollbarSize === undefined) {\n        instanceProps.scrollbarSizeMeasured = false;\n        instanceProps.scrollbarSize = 0;\n      } else {\n        instanceProps.scrollbarSizeMeasured = true;\n      }\n\n      newState.instanceProps = instanceProps;\n      return _objectSpread({}, newState, {}, maybeStateA, {}, maybeStateB);\n    }\n  }, {\n    key: \"_getEstimatedColumnSize\",\n    value: function _getEstimatedColumnSize(props) {\n      return typeof props.columnWidth === 'number' ? props.columnWidth : props.estimatedColumnSize;\n    }\n  }, {\n    key: \"_getEstimatedRowSize\",\n    value: function _getEstimatedRowSize(props) {\n      return typeof props.rowHeight === 'number' ? props.rowHeight : props.estimatedRowSize;\n    }\n  }, {\n    key: \"_getScrollToPositionStateUpdate\",\n\n    /**\n     * Get the updated state after scrolling to\n     * scrollLeft and scrollTop\n     */\n    value: function _getScrollToPositionStateUpdate(_ref9) {\n      var prevState = _ref9.prevState,\n          scrollLeft = _ref9.scrollLeft,\n          scrollTop = _ref9.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0) {\n        newState.scrollDirectionHorizontal = scrollLeft > prevState.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (typeof scrollTop === 'number' && scrollTop >= 0) {\n        newState.scrollDirectionVertical = scrollTop > prevState.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollTop = scrollTop;\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft || typeof scrollTop === 'number' && scrollTop >= 0 && scrollTop !== prevState.scrollTop) {\n        return newState;\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_wrapSizeGetter\",\n    value: function _wrapSizeGetter(value) {\n      return typeof value === 'function' ? value : function () {\n        return value;\n      };\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft(nextProps, prevState) {\n      var columnCount = nextProps.columnCount,\n          height = nextProps.height,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToColumn = nextProps.scrollToColumn,\n          width = nextProps.width;\n      var scrollLeft = prevState.scrollLeft,\n          instanceProps = prevState.instanceProps;\n\n      if (columnCount > 0) {\n        var finalColumn = columnCount - 1;\n        var targetIndex = scrollToColumn < 0 ? finalColumn : Math.min(finalColumn, scrollToColumn);\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n        return instanceProps.columnSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: width - scrollBarSize,\n          currentOffset: scrollLeft,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollLeftForScrollToColumnStateUpdate\",\n    value: function _getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState) {\n      var scrollLeft = prevState.scrollLeft;\n\n      var calculatedScrollLeft = Grid._getCalculatedScrollLeft(nextProps, prevState);\n\n      if (typeof calculatedScrollLeft === 'number' && calculatedScrollLeft >= 0 && scrollLeft !== calculatedScrollLeft) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: calculatedScrollLeft,\n          scrollTop: -1\n        });\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop(nextProps, prevState) {\n      var height = nextProps.height,\n          rowCount = nextProps.rowCount,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToRow = nextProps.scrollToRow,\n          width = nextProps.width;\n      var scrollTop = prevState.scrollTop,\n          instanceProps = prevState.instanceProps;\n\n      if (rowCount > 0) {\n        var finalRow = rowCount - 1;\n        var targetIndex = scrollToRow < 0 ? finalRow : Math.min(finalRow, scrollToRow);\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n        return instanceProps.rowSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: height - scrollBarSize,\n          currentOffset: scrollTop,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollTopForScrollToRowStateUpdate\",\n    value: function _getScrollTopForScrollToRowStateUpdate(nextProps, prevState) {\n      var scrollTop = prevState.scrollTop;\n\n      var calculatedScrollTop = Grid._getCalculatedScrollTop(nextProps, prevState);\n\n      if (typeof calculatedScrollTop === 'number' && calculatedScrollTop >= 0 && scrollTop !== calculatedScrollTop) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: -1,\n          scrollTop: calculatedScrollTop\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return Grid;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string.isRequired,\n  \"aria-readonly\": PropTypes.bool,\n\n  /**\n   * Set the width of the inner scrollable container to 'auto'.\n   * This is useful for single-column Grids to ensure that the column doesn't extend below a vertical scrollbar.\n   */\n  \"autoContainerWidth\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed width from the scrollingContainer so that the total width of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoWidth\": PropTypes.bool.isRequired,\n\n  /** Responsible for rendering a cell given an row and column index.  */\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof bpfrpt_proptype_CellRenderer === \"function\" ? bpfrpt_proptype_CellRenderer.isRequired ? bpfrpt_proptype_CellRenderer.isRequired : bpfrpt_proptype_CellRenderer : PropTypes.shape(bpfrpt_proptype_CellRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a group of cells given their index ranges.  */\n  \"cellRangeRenderer\": function cellRangeRenderer() {\n    return (typeof bpfrpt_proptype_CellRangeRenderer === \"function\" ? bpfrpt_proptype_CellRangeRenderer.isRequired ? bpfrpt_proptype_CellRangeRenderer.isRequired : bpfrpt_proptype_CellRangeRenderer : PropTypes.shape(bpfrpt_proptype_CellRangeRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Optional custom CSS class name to attach to root Grid element.  */\n  \"className\": PropTypes.string,\n\n  /** Number of columns in grid.  */\n  \"columnCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed column width (number) or a function that returns the width of a column given its index.  */\n  \"columnWidth\": function columnWidth() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Unfiltered props for the Grid container. */\n  \"containerProps\": PropTypes.object,\n\n  /** ARIA role for the cell-container.  */\n  \"containerRole\": PropTypes.string.isRequired,\n\n  /** Optional inline style applied to inner cell-container */\n  \"containerStyle\": PropTypes.object.isRequired,\n\n  /**\n   * If CellMeasurer is used to measure this Grid's children, this should be a pointer to its CellMeasurerCache.\n   * A shared CellMeasurerCache reference enables Grid and CellMeasurer to share measurement data.\n   */\n  \"deferredMeasurementCache\": PropTypes.object,\n\n  /**\n   * Used to estimate the total width of a Grid before all of its columns have actually been measured.\n   * The estimated total width is adjusted as columns are rendered.\n   */\n  \"estimatedColumnSize\": PropTypes.number.isRequired,\n\n  /**\n   * Used to estimate the total height of a Grid before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Exposed for testing purposes only.  */\n  \"getScrollbarSize\": PropTypes.func.isRequired,\n\n  /** Height of Grid; this property determines the number of visible (vs virtualized) rows.  */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional custom id to attach to root Grid element.  */\n  \"id\": PropTypes.string,\n\n  /**\n   * Override internal is-scrolling state tracking.\n   * This property is primarily intended for use with the WindowScroller component.\n   */\n  \"isScrolling\": PropTypes.bool,\n\n  /**\n   * Opt-out of isScrolling param passed to cellRangeRenderer.\n   * To avoid the extra render when scroll stops.\n   */\n  \"isScrollingOptOut\": PropTypes.bool.isRequired,\n\n  /** Optional renderer to be used in place of rows when either :rowCount or :columnCount is 0.  */\n  \"noContentRenderer\": function noContentRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /**\n   * Called whenever a horizontal or vertical scrollbar is added or removed.\n   * This prop is not intended for end-user use;\n   * It is used by MultiGrid to support fixed-row/fixed-column scroll syncing.\n   */\n  \"onScrollbarPresenceChange\": PropTypes.func.isRequired,\n\n  /** Callback invoked with information about the section of the Grid that was just rendered.  */\n  \"onSectionRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Number of columns to render before/after the visible section of the grid.\n   * These columns can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanColumnCount\": PropTypes.number.isRequired,\n\n  /**\n   * Calculates the number of cells to overscan before and after a specified range.\n   * This function ensures that overscanning doesn't exceed the available cells.\n   */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible section of the grid.\n   * These rows can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** ARIA role for the grid element.  */\n  \"role\": PropTypes.string.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * Should implement the following interface: ({ index: number }): number\n   */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in grid.  */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** Wait this amount of time after the last scroll event before resetting Grid `pointer-events`. */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Horizontal offset. */\n  \"scrollLeft\": PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Column index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToColumn\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToRow\": PropTypes.number.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of Grid; this property determines the number of visible (vs virtualized) columns.  */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(Grid, \"defaultProps\", {\n  'aria-label': 'grid',\n  'aria-readonly': true,\n  autoContainerWidth: false,\n  autoHeight: false,\n  autoWidth: false,\n  cellRangeRenderer: defaultCellRangeRenderer,\n  containerRole: 'rowgroup',\n  containerStyle: {},\n  estimatedColumnSize: 100,\n  estimatedRowSize: 30,\n  getScrollbarSize: scrollbarSize,\n  noContentRenderer: renderNull,\n  onScroll: function onScroll() {},\n  onScrollbarPresenceChange: function onScrollbarPresenceChange() {},\n  onSectionRendered: function onSectionRendered() {},\n  overscanColumnCount: 0,\n  overscanIndicesGetter: defaultOverscanIndicesGetter,\n  overscanRowCount: 10,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  scrollToAlignment: 'auto',\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  tabIndex: 0,\n  isScrollingOptOut: false\n});\n\npolyfill(Grid);\nexport default Grid;\nimport { bpfrpt_proptype_CellRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellRangeRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellPosition } from \"./types\";\nimport { bpfrpt_proptype_CellSize } from \"./types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"./types\";\nimport { bpfrpt_proptype_NoContentRenderer } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport { bpfrpt_proptype_ScrollbarPresenceChange } from \"./types\";\nimport { bpfrpt_proptype_RenderedSection } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"./types\";\nimport { bpfrpt_proptype_Alignment } from \"./types\";\nimport { bpfrpt_proptype_CellCache } from \"./types\";\nimport { bpfrpt_proptype_StyleCache } from \"./types\";\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";","import { caf, raf } from './animationFrame';\nvar bpfrpt_proptype_AnimationTimeoutId = process.env.NODE_ENV === 'production' ? null : {\n  \"id\": PropTypes.number.isRequired\n};\nexport var cancelAnimationTimeout = function cancelAnimationTimeout(frame) {\n  return caf(frame.id);\n};\n/**\n * Recursively calls requestAnimationFrame until a specified delay has been met or exceeded.\n * When the delay time has been reached the function you're timing out will be called.\n *\n * Credit: Joe Lambert (https://gist.github.com/joelambert/1002116#file-requesttimeout-js)\n */\n\nexport var requestAnimationTimeout = function requestAnimationTimeout(callback, delay) {\n  var start; // wait for end of processing current event handler, because event handler may be long\n\n  Promise.resolve().then(function () {\n    start = Date.now();\n  });\n\n  var timeout = function timeout() {\n    if (Date.now() - start >= delay) {\n      callback.call();\n    } else {\n      frame.id = raf(timeout);\n    }\n  };\n\n  var frame = {\n    id: raf(timeout)\n  };\n  return frame;\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_AnimationTimeoutId };","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","/**\n * Default implementation of cellRangeRenderer used by Grid.\n * This renderer supports cell-caching while the user is scrolling.\n */\nexport default function defaultCellRangeRenderer(_ref) {\n  var cellCache = _ref.cellCache,\n      cellRenderer = _ref.cellRenderer,\n      columnSizeAndPositionManager = _ref.columnSizeAndPositionManager,\n      columnStartIndex = _ref.columnStartIndex,\n      columnStopIndex = _ref.columnStopIndex,\n      deferredMeasurementCache = _ref.deferredMeasurementCache,\n      horizontalOffsetAdjustment = _ref.horizontalOffsetAdjustment,\n      isScrolling = _ref.isScrolling,\n      isScrollingOptOut = _ref.isScrollingOptOut,\n      parent = _ref.parent,\n      rowSizeAndPositionManager = _ref.rowSizeAndPositionManager,\n      rowStartIndex = _ref.rowStartIndex,\n      rowStopIndex = _ref.rowStopIndex,\n      styleCache = _ref.styleCache,\n      verticalOffsetAdjustment = _ref.verticalOffsetAdjustment,\n      visibleColumnIndices = _ref.visibleColumnIndices,\n      visibleRowIndices = _ref.visibleRowIndices;\n  var renderedCells = []; // Browsers have native size limits for elements (eg Chrome 33M pixels, IE 1.5M pixes).\n  // User cannot scroll beyond these size limitations.\n  // In order to work around this, ScalingCellSizeAndPositionManager compresses offsets.\n  // We should never cache styles for compressed offsets though as this can lead to bugs.\n  // See issue #576 for more.\n\n  var areOffsetsAdjusted = columnSizeAndPositionManager.areOffsetsAdjusted() || rowSizeAndPositionManager.areOffsetsAdjusted();\n  var canCacheStyle = !isScrolling && !areOffsetsAdjusted;\n\n  for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n    var rowDatum = rowSizeAndPositionManager.getSizeAndPositionOfCell(rowIndex);\n\n    for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n      var columnDatum = columnSizeAndPositionManager.getSizeAndPositionOfCell(columnIndex);\n      var isVisible = columnIndex >= visibleColumnIndices.start && columnIndex <= visibleColumnIndices.stop && rowIndex >= visibleRowIndices.start && rowIndex <= visibleRowIndices.stop;\n      var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n      var style = void 0; // Cache style objects so shallow-compare doesn't re-render unnecessarily.\n\n      if (canCacheStyle && styleCache[key]) {\n        style = styleCache[key];\n      } else {\n        // In deferred mode, cells will be initially rendered before we know their size.\n        // Don't interfere with CellMeasurer's measurements by setting an invalid size.\n        if (deferredMeasurementCache && !deferredMeasurementCache.has(rowIndex, columnIndex)) {\n          // Position not-yet-measured cells at top/left 0,0,\n          // And give them width/height of 'auto' so they can grow larger than the parent Grid if necessary.\n          // Positioning them further to the right/bottom influences their measured size.\n          style = {\n            height: 'auto',\n            left: 0,\n            position: 'absolute',\n            top: 0,\n            width: 'auto'\n          };\n        } else {\n          style = {\n            height: rowDatum.size,\n            left: columnDatum.offset + horizontalOffsetAdjustment,\n            position: 'absolute',\n            top: rowDatum.offset + verticalOffsetAdjustment,\n            width: columnDatum.size\n          };\n          styleCache[key] = style;\n        }\n      }\n\n      var cellRendererParams = {\n        columnIndex: columnIndex,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent,\n        rowIndex: rowIndex,\n        style: style\n      };\n      var renderedCell = void 0; // Avoid re-creating cells while scrolling.\n      // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n      // If a scroll is in progress- cache and reuse cells.\n      // This cache will be thrown away once scrolling completes.\n      // However if we are scaling scroll positions and sizes, we should also avoid caching.\n      // This is because the offset changes slightly as scroll position changes and caching leads to stale values.\n      // For more info refer to issue #395\n      //\n      // If isScrollingOptOut is specified, we always cache cells.\n      // For more info refer to issue #1028\n\n      if ((isScrollingOptOut || isScrolling) && !horizontalOffsetAdjustment && !verticalOffsetAdjustment) {\n        if (!cellCache[key]) {\n          cellCache[key] = cellRenderer(cellRendererParams);\n        }\n\n        renderedCell = cellCache[key]; // If the user is no longer scrolling, don't cache cells.\n        // This makes dynamic cell content difficult for users and would also lead to a heavier memory footprint.\n      } else {\n        renderedCell = cellRenderer(cellRendererParams);\n      }\n\n      if (renderedCell == null || renderedCell === false) {\n        continue;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        warnAboutMissingStyle(parent, renderedCell);\n      }\n\n      renderedCells.push(renderedCell);\n    }\n  }\n\n  return renderedCells;\n}\n\nfunction warnAboutMissingStyle(parent, renderedCell) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (renderedCell) {\n      // If the direct child is a CellMeasurer, then we should check its child\n      // See issue #611\n      if (renderedCell.type && renderedCell.type.__internalCellMeasurerFlag) {\n        renderedCell = renderedCell.props.children;\n      }\n\n      if (renderedCell && renderedCell.props && renderedCell.props.style === undefined && parent.__warnedAboutMissingStyle !== true) {\n        parent.__warnedAboutMissingStyle = true;\n        console.warn('Rendered cell should include style property for positioning.');\n      }\n    }\n  }\n}\n\nimport { bpfrpt_proptype_CellRangeRendererParams } from \"./types\";","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n  // Make sure we render at least 1 cell extra before and after (except near boundaries)\n  // This is necessary in order to support keyboard navigation (TAB/SHIFT+TAB) in some cases\n  // For more info see issues #625\n  overscanCellsCount = Math.max(1, overscanCellsCount);\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - 1),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + 1)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","var bpfrpt_proptype_ScrollIndices = process.env.NODE_ENV === 'production' ? null : {\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_ScrollIndices };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\n/**\n * This HOC decorates a virtualized component and responds to arrow-key events by scrolling one row or column at a time.\n */\n\nvar ArrowKeyStepper = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ArrowKeyStepper, _React$PureComponent);\n\n  function ArrowKeyStepper() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ArrowKeyStepper);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ArrowKeyStepper)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollToColumn: 0,\n      scrollToRow: 0,\n      instanceProps: {\n        prevScrollToColumn: 0,\n        prevScrollToRow: 0\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onKeyDown\", function (event) {\n      var _this$props = _this.props,\n          columnCount = _this$props.columnCount,\n          disabled = _this$props.disabled,\n          mode = _this$props.mode,\n          rowCount = _this$props.rowCount;\n\n      if (disabled) {\n        return;\n      }\n\n      var _this$_getScrollState = _this._getScrollState(),\n          scrollToColumnPrevious = _this$_getScrollState.scrollToColumn,\n          scrollToRowPrevious = _this$_getScrollState.scrollToRow;\n\n      var _this$_getScrollState2 = _this._getScrollState(),\n          scrollToColumn = _this$_getScrollState2.scrollToColumn,\n          scrollToRow = _this$_getScrollState2.scrollToRow; // The above cases all prevent default event event behavior.\n      // This is to keep the grid from scrolling after the snap-to update.\n\n\n      switch (event.key) {\n        case 'ArrowDown':\n          scrollToRow = mode === 'cells' ? Math.min(scrollToRow + 1, rowCount - 1) : Math.min(_this._rowStopIndex + 1, rowCount - 1);\n          break;\n\n        case 'ArrowLeft':\n          scrollToColumn = mode === 'cells' ? Math.max(scrollToColumn - 1, 0) : Math.max(_this._columnStartIndex - 1, 0);\n          break;\n\n        case 'ArrowRight':\n          scrollToColumn = mode === 'cells' ? Math.min(scrollToColumn + 1, columnCount - 1) : Math.min(_this._columnStopIndex + 1, columnCount - 1);\n          break;\n\n        case 'ArrowUp':\n          scrollToRow = mode === 'cells' ? Math.max(scrollToRow - 1, 0) : Math.max(_this._rowStartIndex - 1, 0);\n          break;\n      }\n\n      if (scrollToColumn !== scrollToColumnPrevious || scrollToRow !== scrollToRowPrevious) {\n        event.preventDefault();\n\n        _this._updateScrollState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref) {\n      var columnStartIndex = _ref.columnStartIndex,\n          columnStopIndex = _ref.columnStopIndex,\n          rowStartIndex = _ref.rowStartIndex,\n          rowStopIndex = _ref.rowStopIndex;\n      _this._columnStartIndex = columnStartIndex;\n      _this._columnStopIndex = columnStopIndex;\n      _this._rowStartIndex = rowStartIndex;\n      _this._rowStopIndex = rowStopIndex;\n    });\n\n    return _this;\n  }\n\n  _createClass(ArrowKeyStepper, [{\n    key: \"setScrollIndexes\",\n    value: function setScrollIndexes(_ref2) {\n      var scrollToColumn = _ref2.scrollToColumn,\n          scrollToRow = _ref2.scrollToRow;\n      this.setState({\n        scrollToRow: scrollToRow,\n        scrollToColumn: scrollToColumn\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          className = _this$props2.className,\n          children = _this$props2.children;\n\n      var _this$_getScrollState3 = this._getScrollState(),\n          scrollToColumn = _this$_getScrollState3.scrollToColumn,\n          scrollToRow = _this$_getScrollState3.scrollToRow;\n\n      return React.createElement(\"div\", {\n        className: className,\n        onKeyDown: this._onKeyDown\n      }, children({\n        onSectionRendered: this._onSectionRendered,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow\n      }));\n    }\n  }, {\n    key: \"_getScrollState\",\n    value: function _getScrollState() {\n      return this.props.isControlled ? this.props : this.state;\n    }\n  }, {\n    key: \"_updateScrollState\",\n    value: function _updateScrollState(_ref3) {\n      var scrollToColumn = _ref3.scrollToColumn,\n          scrollToRow = _ref3.scrollToRow;\n      var _this$props3 = this.props,\n          isControlled = _this$props3.isControlled,\n          onScrollToChange = _this$props3.onScrollToChange;\n\n      if (typeof onScrollToChange === 'function') {\n        onScrollToChange({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n\n      if (!isControlled) {\n        this.setState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.isControlled) {\n        return {};\n      }\n\n      if (nextProps.scrollToColumn !== prevState.instanceProps.prevScrollToColumn || nextProps.scrollToRow !== prevState.instanceProps.prevScrollToRow) {\n        return _objectSpread({}, prevState, {\n          scrollToColumn: nextProps.scrollToColumn,\n          scrollToRow: nextProps.scrollToRow,\n          instanceProps: {\n            prevScrollToColumn: nextProps.scrollToColumn,\n            prevScrollToRow: nextProps.scrollToRow\n          }\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return ArrowKeyStepper;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"children\": PropTypes.func.isRequired,\n  \"className\": PropTypes.string,\n  \"columnCount\": PropTypes.number.isRequired,\n  \"disabled\": PropTypes.bool.isRequired,\n  \"isControlled\": PropTypes.bool.isRequired,\n  \"mode\": PropTypes.oneOf([\"cells\", \"edges\"]).isRequired,\n  \"onScrollToChange\": PropTypes.func,\n  \"rowCount\": PropTypes.number.isRequired,\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(ArrowKeyStepper, \"defaultProps\", {\n  disabled: false,\n  isControlled: false,\n  mode: 'edges',\n  scrollToColumn: 0,\n  scrollToRow: 0\n});\n\npolyfill(ArrowKeyStepper);\nexport default ArrowKeyStepper;\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_ScrollIndices } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport createDetectElementResize from '../vendor/detectElementResize';\nvar AutoSizer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AutoSizer, _React$Component);\n\n  function AutoSizer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AutoSizer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AutoSizer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      height: _this.props.defaultHeight || 0,\n      width: _this.props.defaultWidth || 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_parentNode\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_autoSizer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      var _this$props = _this.props,\n          disableHeight = _this$props.disableHeight,\n          disableWidth = _this$props.disableWidth,\n          onResize = _this$props.onResize;\n\n      if (_this._parentNode) {\n        // Guard against AutoSizer component being removed from the DOM immediately after being added.\n        // This can result in invalid style values which can result in NaN values if we don't handle them.\n        // See issue #150 for more context.\n        var height = _this._parentNode.offsetHeight || 0;\n        var width = _this._parentNode.offsetWidth || 0;\n        var win = _this._window || window;\n        var style = win.getComputedStyle(_this._parentNode) || {};\n        var paddingLeft = parseInt(style.paddingLeft, 10) || 0;\n        var paddingRight = parseInt(style.paddingRight, 10) || 0;\n        var paddingTop = parseInt(style.paddingTop, 10) || 0;\n        var paddingBottom = parseInt(style.paddingBottom, 10) || 0;\n        var newHeight = height - paddingTop - paddingBottom;\n        var newWidth = width - paddingLeft - paddingRight;\n\n        if (!disableHeight && _this.state.height !== newHeight || !disableWidth && _this.state.width !== newWidth) {\n          _this.setState({\n            height: height - paddingTop - paddingBottom,\n            width: width - paddingLeft - paddingRight\n          });\n\n          onResize({\n            height: height,\n            width: width\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (autoSizer) {\n      _this._autoSizer = autoSizer;\n    });\n\n    return _this;\n  }\n\n  _createClass(AutoSizer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var nonce = this.props.nonce;\n\n      if (this._autoSizer && this._autoSizer.parentNode && this._autoSizer.parentNode.ownerDocument && this._autoSizer.parentNode.ownerDocument.defaultView && this._autoSizer.parentNode instanceof this._autoSizer.parentNode.ownerDocument.defaultView.HTMLElement) {\n        // Delay access of parentNode until mount.\n        // This handles edge-cases where the component has already been unmounted before its ref has been set,\n        // As well as libraries like react-lite which have a slightly different lifecycle.\n        this._parentNode = this._autoSizer.parentNode;\n        this._window = this._autoSizer.parentNode.ownerDocument.defaultView; // Defer requiring resize handler in order to support server-side rendering.\n        // See issue #41\n\n        this._detectElementResize = createDetectElementResize(nonce, this._window);\n\n        this._detectElementResize.addResizeListener(this._parentNode, this._onResize);\n\n        this._onResize();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._detectElementResize && this._parentNode) {\n        this._detectElementResize.removeResizeListener(this._parentNode, this._onResize);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          className = _this$props2.className,\n          disableHeight = _this$props2.disableHeight,\n          disableWidth = _this$props2.disableWidth,\n          style = _this$props2.style;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width; // Outer div should not force width/height since that may prevent containers from shrinking.\n      // Inner component should overflow and use calculated width/height.\n      // See issue #68 for more information.\n\n      var outerStyle = {\n        overflow: 'visible'\n      };\n      var childParams = {};\n\n      if (!disableHeight) {\n        outerStyle.height = 0;\n        childParams.height = height;\n      }\n\n      if (!disableWidth) {\n        outerStyle.width = 0;\n        childParams.width = width;\n      }\n      /**\n       * TODO: Avoid rendering children before the initial measurements have been collected.\n       * At best this would just be wasting cycles.\n       * Add this check into version 10 though as it could break too many ref callbacks in version 9.\n       * Note that if default width/height props were provided this would still work with SSR.\n      if (\n        height !== 0 &&\n        width !== 0\n      ) {\n        child = children({ height, width })\n      }\n      */\n\n\n      return React.createElement(\"div\", {\n        className: className,\n        ref: this._setRef,\n        style: _objectSpread({}, outerStyle, {}, style)\n      }, children(childParams));\n    }\n  }]);\n\n  return AutoSizer;\n}(React.Component), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /** Function responsible for rendering children.*/\n  \"children\": PropTypes.func.isRequired,\n\n  /** Optional custom CSS class name to attach to root AutoSizer element.  */\n  \"className\": PropTypes.string,\n\n  /** Default height to use for initial render; useful for SSR */\n  \"defaultHeight\": PropTypes.number,\n\n  /** Default width to use for initial render; useful for SSR */\n  \"defaultWidth\": PropTypes.number,\n\n  /** Disable dynamic :height property */\n  \"disableHeight\": PropTypes.bool.isRequired,\n\n  /** Disable dynamic :width property */\n  \"disableWidth\": PropTypes.bool.isRequired,\n\n  /** Nonce of the inlined stylesheet for Content Security Policy */\n  \"nonce\": PropTypes.string,\n\n  /** Callback to be invoked on-resize */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object\n}), _temp);\n\n_defineProperty(AutoSizer, \"defaultProps\", {\n  onResize: function onResize() {},\n  disableHeight: false,\n  disableWidth: false,\n  style: {}\n});\n\nexport { AutoSizer as default };\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\n\n/**\n * Wraps a cell and measures its rendered content.\n * Measurements are stored in a per-cell cache.\n * Cached-content is not be re-measured.\n */\nvar CellMeasurer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CellMeasurer, _React$PureComponent);\n\n  function CellMeasurer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CellMeasurer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CellMeasurer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_measure\", function () {\n      var _this$props = _this.props,\n          cache = _this$props.cache,\n          _this$props$columnInd = _this$props.columnIndex,\n          columnIndex = _this$props$columnInd === void 0 ? 0 : _this$props$columnInd,\n          parent = _this$props.parent,\n          _this$props$rowIndex = _this$props.rowIndex,\n          rowIndex = _this$props$rowIndex === void 0 ? _this.props.index || 0 : _this$props$rowIndex;\n\n      var _this$_getCellMeasure = _this._getCellMeasurements(),\n          height = _this$_getCellMeasure.height,\n          width = _this$_getCellMeasure.width;\n\n      if (height !== cache.getHeight(rowIndex, columnIndex) || width !== cache.getWidth(rowIndex, columnIndex)) {\n        cache.set(rowIndex, columnIndex, width, height);\n\n        if (parent && typeof parent.recomputeGridSize === 'function') {\n          parent.recomputeGridSize({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('CellMeasurer registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      if (element) {\n        _this._maybeMeasureCell();\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(CellMeasurer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return typeof children === 'function' ? children({\n        measure: this._measure,\n        registerChild: this._registerChild\n      }) : children;\n    }\n  }, {\n    key: \"_getCellMeasurements\",\n    value: function _getCellMeasurements() {\n      var cache = this.props.cache;\n      var node = this._child || findDOMNode(this); // TODO Check for a bad combination of fixedWidth and missing numeric width or vice versa with height\n\n      if (node && node.ownerDocument && node.ownerDocument.defaultView && node instanceof node.ownerDocument.defaultView.HTMLElement) {\n        var styleWidth = node.style.width;\n        var styleHeight = node.style.height; // If we are re-measuring a cell that has already been measured,\n        // It will have a hard-coded width/height from the previous measurement.\n        // The fact that we are measuring indicates this measurement is probably stale,\n        // So explicitly clear it out (eg set to \"auto\") so we can recalculate.\n        // See issue #593 for more info.\n        // Even if we are measuring initially- if we're inside of a MultiGrid component,\n        // Explicitly clear width/height before measuring to avoid being tainted by another Grid.\n        // eg top/left Grid renders before bottom/right Grid\n        // Since the CellMeasurerCache is shared between them this taints derived cell size values.\n\n        if (!cache.hasFixedWidth()) {\n          node.style.width = 'auto';\n        }\n\n        if (!cache.hasFixedHeight()) {\n          node.style.height = 'auto';\n        }\n\n        var height = Math.ceil(node.offsetHeight);\n        var width = Math.ceil(node.offsetWidth); // Reset after measuring to avoid breaking styles; see #660\n\n        if (styleWidth) {\n          node.style.width = styleWidth;\n        }\n\n        if (styleHeight) {\n          node.style.height = styleHeight;\n        }\n\n        return {\n          height: height,\n          width: width\n        };\n      } else {\n        return {\n          height: 0,\n          width: 0\n        };\n      }\n    }\n  }, {\n    key: \"_maybeMeasureCell\",\n    value: function _maybeMeasureCell() {\n      var _this$props2 = this.props,\n          cache = _this$props2.cache,\n          _this$props2$columnIn = _this$props2.columnIndex,\n          columnIndex = _this$props2$columnIn === void 0 ? 0 : _this$props2$columnIn,\n          parent = _this$props2.parent,\n          _this$props2$rowIndex = _this$props2.rowIndex,\n          rowIndex = _this$props2$rowIndex === void 0 ? this.props.index || 0 : _this$props2$rowIndex;\n\n      if (!cache.has(rowIndex, columnIndex)) {\n        var _this$_getCellMeasure2 = this._getCellMeasurements(),\n            height = _this$_getCellMeasure2.height,\n            width = _this$_getCellMeasure2.width;\n\n        cache.set(rowIndex, columnIndex, width, height); // If size has changed, let Grid know to re-render.\n\n        if (parent && typeof parent.invalidateCellSizeAfterRender === 'function') {\n          parent.invalidateCellSizeAfterRender({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    }\n  }]);\n\n  return CellMeasurer;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"cache\": function cache() {\n    return (typeof bpfrpt_proptype_CellMeasureCache === \"function\" ? bpfrpt_proptype_CellMeasureCache.isRequired ? bpfrpt_proptype_CellMeasureCache.isRequired : bpfrpt_proptype_CellMeasureCache : PropTypes.shape(bpfrpt_proptype_CellMeasureCache).isRequired).apply(this, arguments);\n  },\n  \"children\": PropTypes.oneOfType([PropTypes.func, PropTypes.node]).isRequired,\n  \"columnIndex\": PropTypes.number,\n  \"index\": PropTypes.number,\n  \"parent\": PropTypes.shape({\n    invalidateCellSizeAfterRender: PropTypes.func,\n    recomputeGridSize: PropTypes.func\n  }).isRequired,\n  \"rowIndex\": PropTypes.number\n}), _temp); // Used for DEV mode warning check\n\n_defineProperty(CellMeasurer, \"__internalCellMeasurerFlag\", false);\n\nexport { CellMeasurer as default };\n\nif (process.env.NODE_ENV !== 'production') {\n  CellMeasurer.__internalCellMeasurerFlag = true;\n}\n\nimport { bpfrpt_proptype_CellMeasureCache } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nexport var DEFAULT_HEIGHT = 30;\nexport var DEFAULT_WIDTH = 100; // Enables more intelligent mapping of a given column and row index to an item ID.\n// This prevents a cell cache from being invalidated when its parent collection is modified.\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCache =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCache() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCache);\n\n    _defineProperty(this, \"_cellHeightCache\", {});\n\n    _defineProperty(this, \"_cellWidthCache\", {});\n\n    _defineProperty(this, \"_columnWidthCache\", {});\n\n    _defineProperty(this, \"_rowHeightCache\", {});\n\n    _defineProperty(this, \"_defaultHeight\", void 0);\n\n    _defineProperty(this, \"_defaultWidth\", void 0);\n\n    _defineProperty(this, \"_minHeight\", void 0);\n\n    _defineProperty(this, \"_minWidth\", void 0);\n\n    _defineProperty(this, \"_keyMapper\", void 0);\n\n    _defineProperty(this, \"_hasFixedHeight\", void 0);\n\n    _defineProperty(this, \"_hasFixedWidth\", void 0);\n\n    _defineProperty(this, \"_columnCount\", 0);\n\n    _defineProperty(this, \"_rowCount\", 0);\n\n    _defineProperty(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      var key = _this._keyMapper(0, index);\n\n      return _this._columnWidthCache[key] !== undefined ? _this._columnWidthCache[key] : _this._defaultWidth;\n    });\n\n    _defineProperty(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      var key = _this._keyMapper(index, 0);\n\n      return _this._rowHeightCache[key] !== undefined ? _this._rowHeightCache[key] : _this._defaultHeight;\n    });\n\n    var defaultHeight = params.defaultHeight,\n        defaultWidth = params.defaultWidth,\n        fixedHeight = params.fixedHeight,\n        fixedWidth = params.fixedWidth,\n        keyMapper = params.keyMapper,\n        minHeight = params.minHeight,\n        minWidth = params.minWidth;\n    this._hasFixedHeight = fixedHeight === true;\n    this._hasFixedWidth = fixedWidth === true;\n    this._minHeight = minHeight || 0;\n    this._minWidth = minWidth || 0;\n    this._keyMapper = keyMapper || defaultKeyMapper;\n    this._defaultHeight = Math.max(this._minHeight, typeof defaultHeight === 'number' ? defaultHeight : DEFAULT_HEIGHT);\n    this._defaultWidth = Math.max(this._minWidth, typeof defaultWidth === 'number' ? defaultWidth : DEFAULT_WIDTH);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (this._hasFixedHeight === false && this._hasFixedWidth === false) {\n        console.warn(\"CellMeasurerCache should only measure a cell's width or height. \" + 'You have configured CellMeasurerCache to measure both. ' + 'This will result in poor performance.');\n      }\n\n      if (this._hasFixedHeight === false && this._defaultHeight === 0) {\n        console.warn('Fixed height CellMeasurerCache should specify a :defaultHeight greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n\n      if (this._hasFixedWidth === false && this._defaultWidth === 0) {\n        console.warn('Fixed width CellMeasurerCache should specify a :defaultWidth greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n    }\n  }\n\n  _createClass(CellMeasurerCache, [{\n    key: \"clear\",\n    value: function clear(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      delete this._cellHeightCache[key];\n      delete this._cellWidthCache[key];\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellHeightCache = {};\n      this._cellWidthCache = {};\n      this._columnWidthCache = {};\n      this._rowHeightCache = {};\n      this._rowCount = 0;\n      this._columnCount = 0;\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._hasFixedHeight;\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._hasFixedWidth;\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedHeight) {\n        return this._defaultHeight;\n      } else {\n        var _key = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellHeightCache[_key] !== undefined ? Math.max(this._minHeight, this._cellHeightCache[_key]) : this._defaultHeight;\n      }\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedWidth) {\n        return this._defaultWidth;\n      } else {\n        var _key2 = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellWidthCache[_key2] !== undefined ? Math.max(this._minWidth, this._cellWidthCache[_key2]) : this._defaultWidth;\n      }\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      return this._cellHeightCache[key] !== undefined;\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      if (columnIndex >= this._columnCount) {\n        this._columnCount = columnIndex + 1;\n      }\n\n      if (rowIndex >= this._rowCount) {\n        this._rowCount = rowIndex + 1;\n      } // Size is cached per cell so we don't have to re-measure if cells are re-ordered.\n\n\n      this._cellHeightCache[key] = height;\n      this._cellWidthCache[key] = width;\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"_updateCachedColumnAndRowSizes\",\n    value: function _updateCachedColumnAndRowSizes(rowIndex, columnIndex) {\n      // :columnWidth and :rowHeight are derived based on all cells in a column/row.\n      // Pre-cache these derived values for faster lookup later.\n      // Reads are expected to occur more frequently than writes in this case.\n      // Only update non-fixed dimensions though to avoid doing unnecessary work.\n      if (!this._hasFixedWidth) {\n        var columnWidth = 0;\n\n        for (var i = 0; i < this._rowCount; i++) {\n          columnWidth = Math.max(columnWidth, this.getWidth(i, columnIndex));\n        }\n\n        var columnKey = this._keyMapper(0, columnIndex);\n\n        this._columnWidthCache[columnKey] = columnWidth;\n      }\n\n      if (!this._hasFixedHeight) {\n        var rowHeight = 0;\n\n        for (var _i = 0; _i < this._columnCount; _i++) {\n          rowHeight = Math.max(rowHeight, this.getHeight(rowIndex, _i));\n        }\n\n        var rowKey = this._keyMapper(rowIndex, 0);\n\n        this._rowHeightCache[rowKey] = rowHeight;\n      }\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCache;\n}();\n\nexport { CellMeasurerCache as default };\n\nfunction defaultKeyMapper(rowIndex, columnIndex) {\n  return \"\".concat(rowIndex, \"-\").concat(columnIndex);\n}\n\nimport { bpfrpt_proptype_CellMeasureCache } from \"./types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize'; // @TODO Merge Collection and CollectionView\n\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nvar IS_SCROLLING_TIMEOUT = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n/**\n * Monitors changes in properties (eg. cellCount) and state (eg. scroll offsets) to determine when rendering needs to occur.\n * This component does not render any visible content itself; it defers to the specified :cellLayoutManager.\n */\n\nvar CollectionView =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CollectionView, _React$PureComponent);\n\n  // Invokes callbacks only when their values have changed.\n  function CollectionView() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CollectionView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CollectionView)).call.apply(_getPrototypeOf2, [this].concat(args))); // If this component is being rendered server-side, getScrollbarSize() will return undefined.\n    // We handle this case in componentDidMount()\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_calculateSizeAndPositionDataOnNextUpdate\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnSectionRenderedHelper\", function () {\n      var _this$props = _this.props,\n          cellLayoutManager = _this$props.cellLayoutManager,\n          onSectionRendered = _this$props.onSectionRendered;\n\n      _this._onSectionRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          indices: cellLayoutManager.getLastRenderedIndices()\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_updateScrollPositionForScrollToCell\", function () {\n      var _this$props2 = _this.props,\n          cellLayoutManager = _this$props2.cellLayoutManager,\n          height = _this$props2.height,\n          scrollToAlignment = _this$props2.scrollToAlignment,\n          scrollToCell = _this$props2.scrollToCell,\n          width = _this$props2.width;\n      var _this$state = _this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop;\n\n      if (scrollToCell >= 0) {\n        var scrollPosition = cellLayoutManager.getScrollPositionForCell({\n          align: scrollToAlignment,\n          cellIndex: scrollToCell,\n          height: height,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          width: width\n        });\n\n        if (scrollPosition.scrollLeft !== scrollLeft || scrollPosition.scrollTop !== scrollTop) {\n          _this._setScrollPosition(scrollPosition);\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target !== _this._scrollingContainer) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._enablePointerEventsAfterDelay(); // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scrollTop never exceeds the total height.\n\n\n      var _this$props3 = _this.props,\n          cellLayoutManager = _this$props3.cellLayoutManager,\n          height = _this$props3.height,\n          isScrollingChange = _this$props3.isScrollingChange,\n          width = _this$props3.width;\n      var scrollbarSize = _this._scrollbarSize;\n\n      var _cellLayoutManager$ge = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge.height,\n          totalWidth = _cellLayoutManager$ge.width;\n\n      var scrollLeft = Math.max(0, Math.min(totalWidth - width + scrollbarSize, event.target.scrollLeft));\n      var scrollTop = Math.max(0, Math.min(totalHeight - height + scrollbarSize, event.target.scrollTop)); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (_this.state.scrollLeft !== scrollLeft || _this.state.scrollTop !== scrollTop) {\n        // Browsers with cancelable scroll events (eg. Firefox) interrupt scrolling animations if scrollTop/scrollLeft is set.\n        // Other browsers (eg. Safari) don't scroll as well without the help under certain conditions (DOM or style changes during scrolling).\n        // All things considered, this seems to be the best current work around that I'm aware of.\n        // For more information see https://github.com/bvaughn/react-virtualized/pull/124\n        var scrollPositionChangeReason = event.cancelable ? SCROLL_POSITION_CHANGE_REASONS.OBSERVED : SCROLL_POSITION_CHANGE_REASONS.REQUESTED; // Synchronously set :isScrolling the first time (since _setNextState will reschedule its animation frame each time it's called)\n\n        if (!_this.state.isScrolling) {\n          isScrollingChange(true);\n        }\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollPositionChangeReason: scrollPositionChangeReason,\n          scrollTop: scrollTop\n        });\n      }\n\n      _this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalWidth: totalWidth,\n        totalHeight: totalHeight\n      });\n    });\n\n    _this._scrollbarSize = getScrollbarSize();\n\n    if (_this._scrollbarSize === undefined) {\n      _this._scrollbarSizeMeasured = false;\n      _this._scrollbarSize = 0;\n    } else {\n      _this._scrollbarSizeMeasured = true;\n    }\n\n    return _this;\n  }\n  /**\n   * Forced recompute of cell sizes and positions.\n   * This function should be called if cell sizes have changed but nothing else has.\n   * Since cell positions are calculated by callbacks, the collection view has no way of detecting when the underlying data has changed.\n   */\n\n\n  _createClass(CollectionView, [{\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._calculateSizeAndPositionDataOnNextUpdate = true;\n      this.forceUpdate();\n    }\n    /* ---------------------------- Component lifecycle methods ---------------------------- */\n\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          cellLayoutManager = _this$props4.cellLayoutManager,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToCell = _this$props4.scrollToCell,\n          scrollTop = _this$props4.scrollTop; // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n      if (!this._scrollbarSizeMeasured) {\n        this._scrollbarSize = getScrollbarSize();\n        this._scrollbarSizeMeasured = true;\n        this.setState({});\n      }\n\n      if (scrollToCell >= 0) {\n        this._updateScrollPositionForScrollToCell();\n      } else if (scrollLeft >= 0 || scrollTop >= 0) {\n        this._setScrollPosition({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      } // Update onSectionRendered callback.\n\n\n      this._invokeOnSectionRenderedHelper();\n\n      var _cellLayoutManager$ge2 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge2.height,\n          totalWidth = _cellLayoutManager$ge2.width; // Initialize onScroll callback.\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalHeight: totalHeight,\n        totalWidth: totalWidth\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this$props5 = this.props,\n          height = _this$props5.height,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToCell = _this$props5.scrollToCell,\n          width = _this$props5.width;\n      var _this$state2 = this.state,\n          scrollLeft = _this$state2.scrollLeft,\n          scrollPositionChangeReason = _this$state2.scrollPositionChangeReason,\n          scrollTop = _this$state2.scrollTop; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        if (scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft && scrollLeft !== this._scrollingContainer.scrollLeft) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop >= 0 && scrollTop !== prevState.scrollTop && scrollTop !== this._scrollingContainer.scrollTop) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Update scroll offsets if the current :scrollToCell values requires it\n\n\n      if (height !== prevProps.height || scrollToAlignment !== prevProps.scrollToAlignment || scrollToCell !== prevProps.scrollToCell || width !== prevProps.width) {\n        this._updateScrollPositionForScrollToCell();\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnSectionRenderedHelper();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoHeight = _this$props6.autoHeight,\n          cellCount = _this$props6.cellCount,\n          cellLayoutManager = _this$props6.cellLayoutManager,\n          className = _this$props6.className,\n          height = _this$props6.height,\n          horizontalOverscanSize = _this$props6.horizontalOverscanSize,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          style = _this$props6.style,\n          verticalOverscanSize = _this$props6.verticalOverscanSize,\n          width = _this$props6.width;\n      var _this$state3 = this.state,\n          isScrolling = _this$state3.isScrolling,\n          scrollLeft = _this$state3.scrollLeft,\n          scrollTop = _this$state3.scrollTop; // Memoization reset\n\n      if (this._lastRenderedCellCount !== cellCount || this._lastRenderedCellLayoutManager !== cellLayoutManager || this._calculateSizeAndPositionDataOnNextUpdate) {\n        this._lastRenderedCellCount = cellCount;\n        this._lastRenderedCellLayoutManager = cellLayoutManager;\n        this._calculateSizeAndPositionDataOnNextUpdate = false;\n        cellLayoutManager.calculateSizeAndPositionData();\n      }\n\n      var _cellLayoutManager$ge3 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge3.height,\n          totalWidth = _cellLayoutManager$ge3.width; // Safely expand the rendered area by the specified overscan amount\n\n\n      var left = Math.max(0, scrollLeft - horizontalOverscanSize);\n      var top = Math.max(0, scrollTop - verticalOverscanSize);\n      var right = Math.min(totalWidth, scrollLeft + width + horizontalOverscanSize);\n      var bottom = Math.min(totalHeight, scrollTop + height + verticalOverscanSize);\n      var childrenToDisplay = height > 0 && width > 0 ? cellLayoutManager.cellRenderers({\n        height: bottom - top,\n        isScrolling: isScrolling,\n        width: right - left,\n        x: left,\n        y: top\n      }) : [];\n      var collectionStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        WebkitOverflowScrolling: 'touch',\n        width: width,\n        willChange: 'transform'\n      }; // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalHeight > height ? this._scrollbarSize : 0;\n      var horizontalScrollBarSize = totalWidth > width ? this._scrollbarSize : 0; // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n      collectionStyle.overflowX = totalWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      collectionStyle.overflowY = totalHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Collection', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: \"grid\",\n        style: _objectSpread({}, collectionStyle, {}, style),\n        tabIndex: 0\n      }, cellCount > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Collection__innerScrollContainer\",\n        style: {\n          height: totalHeight,\n          maxHeight: totalHeight,\n          maxWidth: totalWidth,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          width: totalWidth\n        }\n      }, childrenToDisplay), cellCount === 0 && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Collection.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_enablePointerEventsAfterDelay\",\n    value: function _enablePointerEventsAfterDelay() {\n      var _this2 = this;\n\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = setTimeout(function () {\n        var isScrollingChange = _this2.props.isScrollingChange;\n        isScrollingChange(false);\n        _this2._disablePointerEventsTimeoutId = null;\n\n        _this2.setState({\n          isScrolling: false\n        });\n      }, IS_SCROLLING_TIMEOUT);\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref) {\n      var _this3 = this;\n\n      var scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          totalHeight = _ref.totalHeight,\n          totalWidth = _ref.totalWidth;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref2) {\n          var scrollLeft = _ref2.scrollLeft,\n              scrollTop = _ref2.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_setScrollPosition\",\n    value: function _setScrollPosition(_ref3) {\n      var scrollLeft = _ref3.scrollLeft,\n          scrollTop = _ref3.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (scrollLeft >= 0) {\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (scrollTop >= 0) {\n        newState.scrollTop = scrollTop;\n      }\n\n      if (scrollLeft >= 0 && scrollLeft !== this.state.scrollLeft || scrollTop >= 0 && scrollTop !== this.state.scrollTop) {\n        this.setState(newState);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.cellCount === 0 && (prevState.scrollLeft !== 0 || prevState.scrollTop !== 0)) {\n        return {\n          scrollLeft: 0,\n          scrollTop: 0,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null ? nextProps.scrollTop : prevState.scrollTop,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return CollectionView;\n}(React.PureComponent);\n\n_defineProperty(CollectionView, \"defaultProps\", {\n  'aria-label': 'grid',\n  horizontalOverscanSize: 0,\n  noContentRenderer: function noContentRenderer() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  onSectionRendered: function onSectionRendered() {\n    return null;\n  },\n  scrollToAlignment: 'auto',\n  scrollToCell: -1,\n  style: {},\n  verticalOverscanSize: 0\n});\n\nCollectionView.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /**\n   * Number of cells in collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Calculates cell sizes and positions and manages rendering the appropriate cells given a specified window.\n   */\n  cellLayoutManager: PropTypes.object.isRequired,\n\n  /**\n   * Optional custom CSS class name to attach to root Collection element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * Height of Collection; this property determines the number of visible (vs virtualized) rows.\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Optional custom id to attach to root Collection element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Enables the `Collection` to horiontally \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  horizontalOverscanSize: PropTypes.number.isRequired,\n  isScrollingChange: PropTypes.func,\n\n  /**\n   * Optional renderer to be used in place of rows when either :rowCount or :cellCount is 0.\n   */\n  noContentRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, clientWidth, scrollHeight, scrollLeft, scrollTop, scrollWidth }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked with information about the section of the Collection that was just rendered.\n   * This callback is passed a named :indices parameter which is an Array of the most recently rendered section indices.\n   */\n  onSectionRendered: PropTypes.func.isRequired,\n\n  /**\n   * Horizontal offset.\n   */\n  scrollLeft: PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /**\n   * Cell index to ensure visible (by forcefully scrolling if necessary).\n   */\n  scrollToCell: PropTypes.number.isRequired,\n\n  /**\n   * Vertical offset.\n   */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Optional custom inline style to attach to root Collection element.\n   */\n  style: PropTypes.object,\n\n  /**\n   * Enables the `Collection` to vertically \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  verticalOverscanSize: PropTypes.number.isRequired,\n\n  /**\n   * Width of Collection; this property determines the number of visible (vs virtualized) columns.\n   */\n  width: PropTypes.number.isRequired\n} : {};\npolyfill(CollectionView);\nexport default CollectionView;","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * A section of the Window.\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * Sections have a fixed size and contain 0 to many cells (tracked by their indices).\n */\nvar Section =\n/*#__PURE__*/\nfunction () {\n  function Section(_ref) {\n    var height = _ref.height,\n        width = _ref.width,\n        x = _ref.x,\n        y = _ref.y;\n\n    _classCallCheck(this, Section);\n\n    this.height = height;\n    this.width = width;\n    this.x = x;\n    this.y = y;\n    this._indexMap = {};\n    this._indices = [];\n  }\n  /** Add a cell to this section. */\n\n\n  _createClass(Section, [{\n    key: \"addCellIndex\",\n    value: function addCellIndex(_ref2) {\n      var index = _ref2.index;\n\n      if (!this._indexMap[index]) {\n        this._indexMap[index] = true;\n\n        this._indices.push(index);\n      }\n    }\n    /** Get all cell indices that have been added to this section. */\n\n  }, {\n    key: \"getCellIndices\",\n    value: function getCellIndices() {\n      return this._indices;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.x, \",\").concat(this.y, \" \").concat(this.width, \"x\").concat(this.height);\n    }\n  }]);\n\n  return Section;\n}();\n\nexport { Section as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * \n */\nimport Section from './Section';\nvar SECTION_SIZE = 100;\n\n/**\n * Contains 0 to many Sections.\n * Grows (and adds Sections) dynamically as cells are registered.\n * Automatically adds cells to the appropriate Section(s).\n */\nvar SectionManager =\n/*#__PURE__*/\nfunction () {\n  function SectionManager() {\n    var sectionSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SECTION_SIZE;\n\n    _classCallCheck(this, SectionManager);\n\n    this._sectionSize = sectionSize;\n    this._cellMetadata = [];\n    this._sections = {};\n  }\n  /**\n   * Gets all cell indices contained in the specified region.\n   * A region may encompass 1 or more Sections.\n   */\n\n\n  _createClass(SectionManager, [{\n    key: \"getCellIndices\",\n    value: function getCellIndices(_ref) {\n      var height = _ref.height,\n          width = _ref.width,\n          x = _ref.x,\n          y = _ref.y;\n      var indices = {};\n      this.getSections({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      }).forEach(function (section) {\n        return section.getCellIndices().forEach(function (index) {\n          indices[index] = index;\n        });\n      }); // Object keys are strings; this function returns numbers\n\n      return Object.keys(indices).map(function (index) {\n        return indices[index];\n      });\n    }\n    /** Get size and position information for the cell specified. */\n\n  }, {\n    key: \"getCellMetadata\",\n    value: function getCellMetadata(_ref2) {\n      var index = _ref2.index;\n      return this._cellMetadata[index];\n    }\n    /** Get all Sections overlapping the specified region. */\n\n  }, {\n    key: \"getSections\",\n    value: function getSections(_ref3) {\n      var height = _ref3.height,\n          width = _ref3.width,\n          x = _ref3.x,\n          y = _ref3.y;\n      var sectionXStart = Math.floor(x / this._sectionSize);\n      var sectionXStop = Math.floor((x + width - 1) / this._sectionSize);\n      var sectionYStart = Math.floor(y / this._sectionSize);\n      var sectionYStop = Math.floor((y + height - 1) / this._sectionSize);\n      var sections = [];\n\n      for (var sectionX = sectionXStart; sectionX <= sectionXStop; sectionX++) {\n        for (var sectionY = sectionYStart; sectionY <= sectionYStop; sectionY++) {\n          var key = \"\".concat(sectionX, \".\").concat(sectionY);\n\n          if (!this._sections[key]) {\n            this._sections[key] = new Section({\n              height: this._sectionSize,\n              width: this._sectionSize,\n              x: sectionX * this._sectionSize,\n              y: sectionY * this._sectionSize\n            });\n          }\n\n          sections.push(this._sections[key]);\n        }\n      }\n\n      return sections;\n    }\n    /** Total number of Sections based on the currently registered cells. */\n\n  }, {\n    key: \"getTotalSectionCount\",\n    value: function getTotalSectionCount() {\n      return Object.keys(this._sections).length;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var _this = this;\n\n      return Object.keys(this._sections).map(function (index) {\n        return _this._sections[index].toString();\n      });\n    }\n    /** Adds a cell to the appropriate Sections and registers it metadata for later retrievable. */\n\n  }, {\n    key: \"registerCell\",\n    value: function registerCell(_ref4) {\n      var cellMetadatum = _ref4.cellMetadatum,\n          index = _ref4.index;\n      this._cellMetadata[index] = cellMetadatum;\n      this.getSections(cellMetadatum).forEach(function (section) {\n        return section.addCellIndex({\n          index: index\n        });\n      });\n    }\n  }]);\n\n  return SectionManager;\n}();\n\nexport { SectionManager as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","/**\n * Determines a new offset that ensures a certain cell is visible, given the current offset.\n * If the cell is already visible then the current offset will be returned.\n * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n *\n * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n * @param cellOffset Offset (x or y) position for cell\n * @param cellSize Size (width or height) of cell\n * @param containerSize Total size (width or height) of the container\n * @param currentOffset Container's current (x or y) offset\n * @return Offset to use to ensure the specified cell is visible\n */\nexport default function getUpdatedOffsetForIndex(_ref) {\n  var _ref$align = _ref.align,\n      align = _ref$align === void 0 ? 'auto' : _ref$align,\n      cellOffset = _ref.cellOffset,\n      cellSize = _ref.cellSize,\n      containerSize = _ref.containerSize,\n      currentOffset = _ref.currentOffset;\n  var maxOffset = cellOffset;\n  var minOffset = maxOffset - containerSize + cellSize;\n\n  switch (align) {\n    case 'start':\n      return maxOffset;\n\n    case 'end':\n      return minOffset;\n\n    case 'center':\n      return maxOffset - (containerSize - cellSize) / 2;\n\n    default:\n      return Math.max(minOffset, Math.min(maxOffset, currentOffset));\n  }\n}","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport CollectionView from './CollectionView';\nimport _calculateSizeAndPositionData from './utils/calculateSizeAndPositionData';\nimport getUpdatedOffsetForIndex from '../utils/getUpdatedOffsetForIndex';\n\n/**\n * Renders scattered or non-linear data.\n * Unlike Grid, which renders checkerboard data, Collection can render arbitrarily positioned- even overlapping- data.\n */\nvar Collection =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Collection, _React$PureComponent);\n\n  function Collection(props, context) {\n    var _this;\n\n    _classCallCheck(this, Collection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Collection).call(this, props, context));\n    _this._cellMetadata = [];\n    _this._lastRenderedCellIndices = []; // Cell cache during scroll (for performance)\n\n    _this._cellCache = [];\n    _this._isScrollingChange = _this._isScrollingChange.bind(_assertThisInitialized(_this));\n    _this._setCollectionViewRef = _this._setCollectionViewRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Collection, [{\n    key: \"forceUpdate\",\n    value: function forceUpdate() {\n      if (this._collectionView !== undefined) {\n        this._collectionView.forceUpdate();\n      }\n    }\n    /** See Collection#recomputeCellSizesAndPositions */\n\n  }, {\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._cellCache = [];\n\n      this._collectionView.recomputeCellSizesAndPositions();\n    }\n    /** React lifecycle methods */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = _extends({}, this.props);\n\n      return React.createElement(CollectionView, _extends({\n        cellLayoutManager: this,\n        isScrollingChange: this._isScrollingChange,\n        ref: this._setCollectionViewRef\n      }, props));\n    }\n    /** CellLayoutManager interface */\n\n  }, {\n    key: \"calculateSizeAndPositionData\",\n    value: function calculateSizeAndPositionData() {\n      var _this$props = this.props,\n          cellCount = _this$props.cellCount,\n          cellSizeAndPositionGetter = _this$props.cellSizeAndPositionGetter,\n          sectionSize = _this$props.sectionSize;\n\n      var data = _calculateSizeAndPositionData({\n        cellCount: cellCount,\n        cellSizeAndPositionGetter: cellSizeAndPositionGetter,\n        sectionSize: sectionSize\n      });\n\n      this._cellMetadata = data.cellMetadata;\n      this._sectionManager = data.sectionManager;\n      this._height = data.height;\n      this._width = data.width;\n    }\n    /**\n     * Returns the most recently rendered set of cell indices.\n     */\n\n  }, {\n    key: \"getLastRenderedIndices\",\n    value: function getLastRenderedIndices() {\n      return this._lastRenderedCellIndices;\n    }\n    /**\n     * Calculates the minimum amount of change from the current scroll position to ensure the specified cell is (fully) visible.\n     */\n\n  }, {\n    key: \"getScrollPositionForCell\",\n    value: function getScrollPositionForCell(_ref) {\n      var align = _ref.align,\n          cellIndex = _ref.cellIndex,\n          height = _ref.height,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          width = _ref.width;\n      var cellCount = this.props.cellCount;\n\n      if (cellIndex >= 0 && cellIndex < cellCount) {\n        var cellMetadata = this._cellMetadata[cellIndex];\n        scrollLeft = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.x,\n          cellSize: cellMetadata.width,\n          containerSize: width,\n          currentOffset: scrollLeft,\n          targetIndex: cellIndex\n        });\n        scrollTop = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.y,\n          cellSize: cellMetadata.height,\n          containerSize: height,\n          currentOffset: scrollTop,\n          targetIndex: cellIndex\n        });\n      }\n\n      return {\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      };\n    }\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return {\n        height: this._height,\n        width: this._width\n      };\n    }\n  }, {\n    key: \"cellRenderers\",\n    value: function cellRenderers(_ref2) {\n      var _this2 = this;\n\n      var height = _ref2.height,\n          isScrolling = _ref2.isScrolling,\n          width = _ref2.width,\n          x = _ref2.x,\n          y = _ref2.y;\n      var _this$props2 = this.props,\n          cellGroupRenderer = _this$props2.cellGroupRenderer,\n          cellRenderer = _this$props2.cellRenderer; // Store for later calls to getLastRenderedIndices()\n\n      this._lastRenderedCellIndices = this._sectionManager.getCellIndices({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      });\n      return cellGroupRenderer({\n        cellCache: this._cellCache,\n        cellRenderer: cellRenderer,\n        cellSizeAndPositionGetter: function cellSizeAndPositionGetter(_ref3) {\n          var index = _ref3.index;\n          return _this2._sectionManager.getCellMetadata({\n            index: index\n          });\n        },\n        indices: this._lastRenderedCellIndices,\n        isScrolling: isScrolling\n      });\n    }\n  }, {\n    key: \"_isScrollingChange\",\n    value: function _isScrollingChange(isScrolling) {\n      if (!isScrolling) {\n        this._cellCache = [];\n      }\n    }\n  }, {\n    key: \"_setCollectionViewRef\",\n    value: function _setCollectionViewRef(ref) {\n      this._collectionView = ref;\n    }\n  }]);\n\n  return Collection;\n}(React.PureComponent);\n\n_defineProperty(Collection, \"defaultProps\", {\n  'aria-label': 'grid',\n  cellGroupRenderer: defaultCellGroupRenderer\n});\n\nexport { Collection as default };\nCollection.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Number of cells in Collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a group of cells given their indices.\n   * Should implement the following interface: ({\n   *   cellSizeAndPositionGetter:Function,\n   *   indices: Array<number>,\n   *   cellRenderer: Function\n   * }): Array<PropTypes.node>\n   */\n  cellGroupRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Responsible for rendering a cell given an row and column index.\n   * Should implement the following interface: ({ index: number, key: string, style: object }): PropTypes.element\n   */\n  cellRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback responsible for returning size and offset/position information for a given cell (index).\n   * ({ index: number }): { height: number, width: number, x: number, y: number }\n   */\n  cellSizeAndPositionGetter: PropTypes.func.isRequired,\n\n  /**\n   * Optionally override the size of the sections a Collection's cells are split into.\n   */\n  sectionSize: PropTypes.number\n} : {};\n\nfunction defaultCellGroupRenderer(_ref4) {\n  var cellCache = _ref4.cellCache,\n      cellRenderer = _ref4.cellRenderer,\n      cellSizeAndPositionGetter = _ref4.cellSizeAndPositionGetter,\n      indices = _ref4.indices,\n      isScrolling = _ref4.isScrolling;\n  return indices.map(function (index) {\n    var cellMetadata = cellSizeAndPositionGetter({\n      index: index\n    });\n    var cellRendererProps = {\n      index: index,\n      isScrolling: isScrolling,\n      key: index,\n      style: {\n        height: cellMetadata.height,\n        left: cellMetadata.x,\n        position: 'absolute',\n        top: cellMetadata.y,\n        width: cellMetadata.width\n      }\n    }; // Avoid re-creating cells while scrolling.\n    // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n    // If a scroll is in progress- cache and reuse cells.\n    // This cache will be thrown away once scrolling complets.\n\n    if (isScrolling) {\n      if (!(index in cellCache)) {\n        cellCache[index] = cellRenderer(cellRendererProps);\n      }\n\n      return cellCache[index];\n    } else {\n      return cellRenderer(cellRendererProps);\n    }\n  }).filter(function (renderedCell) {\n    return !!renderedCell;\n  });\n}\n\nimport { bpfrpt_proptype_ScrollPosition } from \"./types\";\nimport { bpfrpt_proptype_SizeInfo } from \"./types\";","import SectionManager from '../SectionManager';\nexport default function calculateSizeAndPositionData(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSizeAndPositionGetter = _ref.cellSizeAndPositionGetter,\n      sectionSize = _ref.sectionSize;\n  var cellMetadata = [];\n  var sectionManager = new SectionManager(sectionSize);\n  var height = 0;\n  var width = 0;\n\n  for (var index = 0; index < cellCount; index++) {\n    var cellMetadatum = cellSizeAndPositionGetter({\n      index: index\n    });\n\n    if (cellMetadatum.height == null || isNaN(cellMetadatum.height) || cellMetadatum.width == null || isNaN(cellMetadatum.width) || cellMetadatum.x == null || isNaN(cellMetadatum.x) || cellMetadatum.y == null || isNaN(cellMetadatum.y)) {\n      throw Error(\"Invalid metadata returned for cell \".concat(index, \":\\n        x:\").concat(cellMetadatum.x, \", y:\").concat(cellMetadatum.y, \", width:\").concat(cellMetadatum.width, \", height:\").concat(cellMetadatum.height));\n    }\n\n    height = Math.max(height, cellMetadatum.y + cellMetadatum.height);\n    width = Math.max(width, cellMetadatum.x + cellMetadatum.width);\n    cellMetadata[index] = cellMetadatum;\n    sectionManager.registerCell({\n      cellMetadatum: cellMetadatum,\n      index: index\n    });\n  }\n\n  return {\n    cellMetadata: cellMetadata,\n    height: height,\n    sectionManager: sectionManager,\n    width: width\n  };\n}","import Collection from './Collection';\nexport default Collection;\nexport { Collection };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * High-order component that auto-calculates column-widths for `Grid` cells.\n */\n\nvar ColumnSizer =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ColumnSizer, _React$PureComponent);\n\n  function ColumnSizer(props, context) {\n    var _this;\n\n    _classCallCheck(this, ColumnSizer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ColumnSizer).call(this, props, context));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ColumnSizer, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props = this.props,\n          columnMaxWidth = _this$props.columnMaxWidth,\n          columnMinWidth = _this$props.columnMinWidth,\n          columnCount = _this$props.columnCount,\n          width = _this$props.width;\n\n      if (columnMaxWidth !== prevProps.columnMaxWidth || columnMinWidth !== prevProps.columnMinWidth || columnCount !== prevProps.columnCount || width !== prevProps.width) {\n        if (this._registeredChild) {\n          this._registeredChild.recomputeGridSize();\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          columnMaxWidth = _this$props2.columnMaxWidth,\n          columnMinWidth = _this$props2.columnMinWidth,\n          columnCount = _this$props2.columnCount,\n          width = _this$props2.width;\n      var safeColumnMinWidth = columnMinWidth || 1;\n      var safeColumnMaxWidth = columnMaxWidth ? Math.min(columnMaxWidth, width) : width;\n      var columnWidth = width / columnCount;\n      columnWidth = Math.max(safeColumnMinWidth, columnWidth);\n      columnWidth = Math.min(safeColumnMaxWidth, columnWidth);\n      columnWidth = Math.floor(columnWidth);\n      var adjustedWidth = Math.min(width, columnWidth * columnCount);\n      return children({\n        adjustedWidth: adjustedWidth,\n        columnWidth: columnWidth,\n        getColumnWidth: function getColumnWidth() {\n          return columnWidth;\n        },\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(child) {\n      if (child && typeof child.recomputeGridSize !== 'function') {\n        throw Error('Unexpected child type registered; only Grid/MultiGrid children are supported.');\n      }\n\n      this._registeredChild = child;\n\n      if (this._registeredChild) {\n        this._registeredChild.recomputeGridSize();\n      }\n    }\n  }]);\n\n  return ColumnSizer;\n}(React.PureComponent);\n\nexport { ColumnSizer as default };\nColumnSizer.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized Grid.\n   * This function should implement the following signature:\n   * ({ adjustedWidth, getColumnWidth, registerChild }) => PropTypes.element\n   *\n   * The specified :getColumnWidth function should be passed to the Grid's :columnWidth property.\n   * The :registerChild should be passed to the Grid's :ref property.\n   * The :adjustedWidth property is optional; it reflects the lesser of the overall width or the width of all columns.\n   */\n  children: PropTypes.func.isRequired,\n\n  /** Optional maximum allowed column width */\n  columnMaxWidth: PropTypes.number,\n\n  /** Optional minimum allowed column width */\n  columnMinWidth: PropTypes.number,\n\n  /** Number of columns in Grid or Table child */\n  columnCount: PropTypes.number.isRequired,\n\n  /** Width of Grid or Table child */\n  width: PropTypes.number.isRequired\n} : {};","import ColumnSizer from './ColumnSizer';\nexport default ColumnSizer;\nexport { ColumnSizer };","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\n/**\n * Higher-order component that manages lazy-loading for \"infinite\" data.\n * This component decorates a virtual component and just-in-time prefetches rows as a user scrolls.\n * It is intended as a convenience component; fork it if you'd like finer-grained control over data-loading.\n */\n\nvar InfiniteLoader =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(InfiniteLoader, _React$PureComponent);\n\n  function InfiniteLoader(props, context) {\n    var _this;\n\n    _classCallCheck(this, InfiniteLoader);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InfiniteLoader).call(this, props, context));\n    _this._loadMoreRowsMemoizer = createCallbackMemoizer();\n    _this._onRowsRendered = _this._onRowsRendered.bind(_assertThisInitialized(_this));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(InfiniteLoader, [{\n    key: \"resetLoadMoreRowsCache\",\n    value: function resetLoadMoreRowsCache(autoReload) {\n      this._loadMoreRowsMemoizer = createCallbackMemoizer();\n\n      if (autoReload) {\n        this._doStuff(this._lastRenderedStartIndex, this._lastRenderedStopIndex);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return children({\n        onRowsRendered: this._onRowsRendered,\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_loadUnloadedRanges\",\n    value: function _loadUnloadedRanges(unloadedRanges) {\n      var _this2 = this;\n\n      var loadMoreRows = this.props.loadMoreRows;\n      unloadedRanges.forEach(function (unloadedRange) {\n        var promise = loadMoreRows(unloadedRange);\n\n        if (promise) {\n          promise.then(function () {\n            // Refresh the visible rows if any of them have just been loaded.\n            // Otherwise they will remain in their unloaded visual state.\n            if (isRangeVisible({\n              lastRenderedStartIndex: _this2._lastRenderedStartIndex,\n              lastRenderedStopIndex: _this2._lastRenderedStopIndex,\n              startIndex: unloadedRange.startIndex,\n              stopIndex: unloadedRange.stopIndex\n            })) {\n              if (_this2._registeredChild) {\n                forceUpdateReactVirtualizedComponent(_this2._registeredChild, _this2._lastRenderedStartIndex);\n              }\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_onRowsRendered\",\n    value: function _onRowsRendered(_ref) {\n      var startIndex = _ref.startIndex,\n          stopIndex = _ref.stopIndex;\n      this._lastRenderedStartIndex = startIndex;\n      this._lastRenderedStopIndex = stopIndex;\n\n      this._doStuff(startIndex, stopIndex);\n    }\n  }, {\n    key: \"_doStuff\",\n    value: function _doStuff(startIndex, stopIndex) {\n      var _ref2,\n          _this3 = this;\n\n      var _this$props = this.props,\n          isRowLoaded = _this$props.isRowLoaded,\n          minimumBatchSize = _this$props.minimumBatchSize,\n          rowCount = _this$props.rowCount,\n          threshold = _this$props.threshold;\n      var unloadedRanges = scanForUnloadedRanges({\n        isRowLoaded: isRowLoaded,\n        minimumBatchSize: minimumBatchSize,\n        rowCount: rowCount,\n        startIndex: Math.max(0, startIndex - threshold),\n        stopIndex: Math.min(rowCount - 1, stopIndex + threshold)\n      }); // For memoize comparison\n\n      var squashedUnloadedRanges = (_ref2 = []).concat.apply(_ref2, _toConsumableArray(unloadedRanges.map(function (_ref3) {\n        var startIndex = _ref3.startIndex,\n            stopIndex = _ref3.stopIndex;\n        return [startIndex, stopIndex];\n      })));\n\n      this._loadMoreRowsMemoizer({\n        callback: function callback() {\n          _this3._loadUnloadedRanges(unloadedRanges);\n        },\n        indices: {\n          squashedUnloadedRanges: squashedUnloadedRanges\n        }\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(registeredChild) {\n      this._registeredChild = registeredChild;\n    }\n  }]);\n\n  return InfiniteLoader;\n}(React.PureComponent);\n/**\n * Determines if the specified start/stop range is visible based on the most recently rendered range.\n */\n\n\n_defineProperty(InfiniteLoader, \"defaultProps\", {\n  minimumBatchSize: 10,\n  rowCount: 0,\n  threshold: 15\n});\n\nexport { InfiniteLoader as default };\nInfiniteLoader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized component.\n   * This function should implement the following signature:\n   * ({ onRowsRendered, registerChild }) => PropTypes.element\n   *\n   * The specified :onRowsRendered function should be passed through to the child's :onRowsRendered property.\n   * The :registerChild callback should be set as the virtualized component's :ref.\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Function responsible for tracking the loaded state of each row.\n   * It should implement the following signature: ({ index: number }): boolean\n   */\n  isRowLoaded: PropTypes.func.isRequired,\n\n  /**\n   * Callback to be invoked when more rows must be loaded.\n   * It should implement the following signature: ({ startIndex, stopIndex }): Promise\n   * The returned Promise should be resolved once row data has finished loading.\n   * It will be used to determine when to refresh the list with the newly-loaded data.\n   * This callback may be called multiple times in reaction to a single scroll event.\n   */\n  loadMoreRows: PropTypes.func.isRequired,\n\n  /**\n   * Minimum number of rows to be loaded at a time.\n   * This property can be used to batch requests to reduce HTTP requests.\n   */\n  minimumBatchSize: PropTypes.number.isRequired,\n\n  /**\n   * Number of rows in list; can be arbitrary high number if actual number is unknown.\n   */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Threshold at which to pre-fetch data.\n   * A threshold X means that data will start loading when a user scrolls within X rows.\n   * This value defaults to 15.\n   */\n  threshold: PropTypes.number.isRequired\n} : {};\nexport function isRangeVisible(_ref4) {\n  var lastRenderedStartIndex = _ref4.lastRenderedStartIndex,\n      lastRenderedStopIndex = _ref4.lastRenderedStopIndex,\n      startIndex = _ref4.startIndex,\n      stopIndex = _ref4.stopIndex;\n  return !(startIndex > lastRenderedStopIndex || stopIndex < lastRenderedStartIndex);\n}\n/**\n * Returns all of the ranges within a larger range that contain unloaded rows.\n */\n\nexport function scanForUnloadedRanges(_ref5) {\n  var isRowLoaded = _ref5.isRowLoaded,\n      minimumBatchSize = _ref5.minimumBatchSize,\n      rowCount = _ref5.rowCount,\n      startIndex = _ref5.startIndex,\n      stopIndex = _ref5.stopIndex;\n  var unloadedRanges = [];\n  var rangeStartIndex = null;\n  var rangeStopIndex = null;\n\n  for (var index = startIndex; index <= stopIndex; index++) {\n    var loaded = isRowLoaded({\n      index: index\n    });\n\n    if (!loaded) {\n      rangeStopIndex = index;\n\n      if (rangeStartIndex === null) {\n        rangeStartIndex = index;\n      }\n    } else if (rangeStopIndex !== null) {\n      unloadedRanges.push({\n        startIndex: rangeStartIndex,\n        stopIndex: rangeStopIndex\n      });\n      rangeStartIndex = rangeStopIndex = null;\n    }\n  } // If :rangeStopIndex is not null it means we haven't ran out of unloaded rows.\n  // Scan forward to try filling our :minimumBatchSize.\n\n\n  if (rangeStopIndex !== null) {\n    var potentialStopIndex = Math.min(Math.max(rangeStopIndex, rangeStartIndex + minimumBatchSize - 1), rowCount - 1);\n\n    for (var _index = rangeStopIndex + 1; _index <= potentialStopIndex; _index++) {\n      if (!isRowLoaded({\n        index: _index\n      })) {\n        rangeStopIndex = _index;\n      } else {\n        break;\n      }\n    }\n\n    unloadedRanges.push({\n      startIndex: rangeStartIndex,\n      stopIndex: rangeStopIndex\n    });\n  } // Check to see if our first range ended prematurely.\n  // In this case we should scan backwards to try filling our :minimumBatchSize.\n\n\n  if (unloadedRanges.length) {\n    var firstUnloadedRange = unloadedRanges[0];\n\n    while (firstUnloadedRange.stopIndex - firstUnloadedRange.startIndex + 1 < minimumBatchSize && firstUnloadedRange.startIndex > 0) {\n      var _index2 = firstUnloadedRange.startIndex - 1;\n\n      if (!isRowLoaded({\n        index: _index2\n      })) {\n        firstUnloadedRange.startIndex = _index2;\n      } else {\n        break;\n      }\n    }\n  }\n\n  return unloadedRanges;\n}\n/**\n * Since RV components use shallowCompare we need to force a render (even though props haven't changed).\n * However InfiniteLoader may wrap a Grid or it may wrap a Table or List.\n * In the first case the built-in React forceUpdate() method is sufficient to force a re-render,\n * But in the latter cases we need to use the RV-specific forceUpdateGrid() method.\n * Else the inner Grid will not be re-rendered and visuals may be stale.\n *\n * Additionally, while a Grid is scrolling the cells can be cached,\n * So it's important to invalidate that cache by recalculating sizes\n * before forcing a rerender.\n */\n\nexport function forceUpdateReactVirtualizedComponent(component) {\n  var currentIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var recomputeSize = typeof component.recomputeGridSize === 'function' ? component.recomputeGridSize : component.recomputeRowHeights;\n\n  if (recomputeSize) {\n    recomputeSize.call(component, currentIndex);\n  } else {\n    component.forceUpdate();\n  }\n}","import InfiniteLoader from './InfiniteLoader';\nexport default InfiniteLoader;\nexport { InfiniteLoader };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport * as React from 'react';\nimport clsx from 'clsx';\n/**\n * It is inefficient to create and manage a large list of DOM elements within a scrolling container\n * if only a few of those elements are visible. The primary purpose of this component is to improve\n * performance by only rendering the DOM nodes that a user is able to see based on their current\n * scroll position.\n *\n * This component renders a virtualized list of elements with either fixed or dynamic heights.\n */\n\nvar List = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(List, _React$PureComponent);\n\n  function List() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, List);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(List)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"Grid\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRenderer\", function (_ref) {\n      var parent = _ref.parent,\n          rowIndex = _ref.rowIndex,\n          style = _ref.style,\n          isScrolling = _ref.isScrolling,\n          isVisible = _ref.isVisible,\n          key = _ref.key;\n      var rowRenderer = _this.props.rowRenderer; // TRICKY The style object is sometimes cached by Grid.\n      // This prevents new style objects from bypassing shallowCompare().\n      // However as of React 16, style props are auto-frozen (at least in dev mode)\n      // Check to make sure we can still modify the style before proceeding.\n      // https://github.com/facebook/react/commit/977357765b44af8ff0cfea327866861073095c12#commitcomment-20648713\n\n      var widthDescriptor = Object.getOwnPropertyDescriptor(style, 'width');\n\n      if (widthDescriptor && widthDescriptor.writable) {\n        // By default, List cells should be 100% width.\n        // This prevents them from flowing under a scrollbar (if present).\n        style.width = '100%';\n      }\n\n      return rowRenderer({\n        index: rowIndex,\n        style: style,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (ref) {\n      _this.Grid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (_ref2) {\n      var clientHeight = _ref2.clientHeight,\n          scrollHeight = _ref2.scrollHeight,\n          scrollTop = _ref2.scrollTop;\n      var onScroll = _this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref3) {\n      var rowOverscanStartIndex = _ref3.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref3.rowOverscanStopIndex,\n          rowStartIndex = _ref3.rowStartIndex,\n          rowStopIndex = _ref3.rowStopIndex;\n      var onRowsRendered = _this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref4) {\n      var alignment = _ref4.alignment,\n          index = _ref4.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index,\n          columnIndex: 0\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref6 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref6$columnIndex = _ref6.columnIndex,\n          columnIndex = _ref6$columnIndex === void 0 ? 0 : _ref6$columnIndex,\n          _ref6$rowIndex = _ref6.rowIndex,\n          rowIndex = _ref6$rowIndex === void 0 ? 0 : _ref6$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index,\n          columnIndex: 0\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          scrollToIndex = _this$props.scrollToIndex,\n          width = _this$props.width;\n      var classNames = clsx('ReactVirtualized__List', className);\n      return React.createElement(Grid, _extends({}, this.props, {\n        autoContainerWidth: true,\n        cellRenderer: this._cellRenderer,\n        className: classNames,\n        columnWidth: width,\n        columnCount: 1,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        scrollToRow: scrollToIndex\n      }));\n    }\n  }]);\n\n  return List;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /** Optional CSS class name */\n  \"className\": PropTypes.string,\n\n  /**\n   * Used to estimate the total height of a List before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Height constraint for list (determines how many actual rows are rendered) */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional renderer to be used in place of rows when rowCount is 0 */\n  \"noRowsRenderer\": function noRowsRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Callback invoked with information about the slice of rows that were just rendered.  */\n  \"onRowsRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed row height (number) or a function that returns the height of a row given its index.  */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a row given an index; ({ index: number }): node */\n  \"rowRenderer\": function rowRenderer() {\n    return (typeof bpfrpt_proptype_RowRenderer === \"function\" ? bpfrpt_proptype_RowRenderer.isRequired ? bpfrpt_proptype_RowRenderer.isRequired : bpfrpt_proptype_RowRenderer : PropTypes.shape(bpfrpt_proptype_RowRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in list. */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** See Grid#scrollToAlignment */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToIndex\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of list */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(List, \"defaultProps\", {\n  autoHeight: false,\n  estimatedRowSize: 30,\n  onScroll: function onScroll() {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {},\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { List as default };\nimport { bpfrpt_proptype_NoContentRenderer } from \"../Grid\";\nimport { bpfrpt_proptype_Alignment } from \"../Grid\";\nimport { bpfrpt_proptype_CellSize } from \"../Grid\";\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"../Grid\";\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_CellRendererParams } from \"../Grid\";\nimport { bpfrpt_proptype_Scroll as bpfrpt_proptype_GridScroll } from \"../Grid\";\nimport { bpfrpt_proptype_RowRenderer } from \"./types\";\nimport { bpfrpt_proptype_RenderedRows } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport PropTypes from \"prop-types\";","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/binary-search-bounds\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nfunction _GEA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x >= y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GEP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) >= 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _GTA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x > y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GTP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) > 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LTA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x < y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LTP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) < 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LEA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x <= y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LEP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) <= 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _EQA(a, l, h, y) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x === y) {\n      return m;\n    } else if (x <= y) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction _EQP(a, l, h, y, c) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n    var p = c(x, y);\n\n    if (p === 0) {\n      return m;\n    } else if (p <= 0) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction dispatchBsearchEQ(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _EQP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _EQA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nexport default {\n  ge: dispatchBsearchGE,\n  gt: dispatchBsearchGT,\n  lt: dispatchBsearchLT,\n  le: dispatchBsearchLE,\n  eq: dispatchBsearchEQ\n};","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/interval-tree-1d\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax in an upstream dependency.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nimport bounds from './binarySearchBounds';\nvar NOT_FOUND = 0;\nvar SUCCESS = 1;\nvar EMPTY = 2;\n\nfunction IntervalTreeNode(mid, left, right, leftPoints, rightPoints) {\n  this.mid = mid;\n  this.left = left;\n  this.right = right;\n  this.leftPoints = leftPoints;\n  this.rightPoints = rightPoints;\n  this.count = (left ? left.count : 0) + (right ? right.count : 0) + leftPoints.length;\n}\n\nvar proto = IntervalTreeNode.prototype;\n\nfunction copy(a, b) {\n  a.mid = b.mid;\n  a.left = b.left;\n  a.right = b.right;\n  a.leftPoints = b.leftPoints;\n  a.rightPoints = b.rightPoints;\n  a.count = b.count;\n}\n\nfunction rebuild(node, intervals) {\n  var ntree = createIntervalTree(intervals);\n  node.mid = ntree.mid;\n  node.left = ntree.left;\n  node.right = ntree.right;\n  node.leftPoints = ntree.leftPoints;\n  node.rightPoints = ntree.rightPoints;\n  node.count = ntree.count;\n}\n\nfunction rebuildWithInterval(node, interval) {\n  var intervals = node.intervals([]);\n  intervals.push(interval);\n  rebuild(node, intervals);\n}\n\nfunction rebuildWithoutInterval(node, interval) {\n  var intervals = node.intervals([]);\n  var idx = intervals.indexOf(interval);\n\n  if (idx < 0) {\n    return NOT_FOUND;\n  }\n\n  intervals.splice(idx, 1);\n  rebuild(node, intervals);\n  return SUCCESS;\n}\n\nproto.intervals = function (result) {\n  result.push.apply(result, this.leftPoints);\n\n  if (this.left) {\n    this.left.intervals(result);\n  }\n\n  if (this.right) {\n    this.right.intervals(result);\n  }\n\n  return result;\n};\n\nproto.insert = function (interval) {\n  var weight = this.count - this.leftPoints.length;\n  this.count += 1;\n\n  if (interval[1] < this.mid) {\n    if (this.left) {\n      if (4 * (this.left.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.left.insert(interval);\n      }\n    } else {\n      this.left = createIntervalTree([interval]);\n    }\n  } else if (interval[0] > this.mid) {\n    if (this.right) {\n      if (4 * (this.right.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.right.insert(interval);\n      }\n    } else {\n      this.right = createIntervalTree([interval]);\n    }\n  } else {\n    var l = bounds.ge(this.leftPoints, interval, compareBegin);\n    var r = bounds.ge(this.rightPoints, interval, compareEnd);\n    this.leftPoints.splice(l, 0, interval);\n    this.rightPoints.splice(r, 0, interval);\n  }\n};\n\nproto.remove = function (interval) {\n  var weight = this.count - this.leftPoints;\n\n  if (interval[1] < this.mid) {\n    if (!this.left) {\n      return NOT_FOUND;\n    }\n\n    var rw = this.right ? this.right.count : 0;\n\n    if (4 * rw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.left.remove(interval);\n\n    if (r === EMPTY) {\n      this.left = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else if (interval[0] > this.mid) {\n    if (!this.right) {\n      return NOT_FOUND;\n    }\n\n    var lw = this.left ? this.left.count : 0;\n\n    if (4 * lw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.right.remove(interval);\n\n    if (r === EMPTY) {\n      this.right = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else {\n    if (this.count === 1) {\n      if (this.leftPoints[0] === interval) {\n        return EMPTY;\n      } else {\n        return NOT_FOUND;\n      }\n    }\n\n    if (this.leftPoints.length === 1 && this.leftPoints[0] === interval) {\n      if (this.left && this.right) {\n        var p = this;\n        var n = this.left;\n\n        while (n.right) {\n          p = n;\n          n = n.right;\n        }\n\n        if (p === this) {\n          n.right = this.right;\n        } else {\n          var l = this.left;\n          var r = this.right;\n          p.count -= n.count;\n          p.right = n.left;\n          n.left = l;\n          n.right = r;\n        }\n\n        copy(this, n);\n        this.count = (this.left ? this.left.count : 0) + (this.right ? this.right.count : 0) + this.leftPoints.length;\n      } else if (this.left) {\n        copy(this, this.left);\n      } else {\n        copy(this, this.right);\n      }\n\n      return SUCCESS;\n    }\n\n    for (var l = bounds.ge(this.leftPoints, interval, compareBegin); l < this.leftPoints.length; ++l) {\n      if (this.leftPoints[l][0] !== interval[0]) {\n        break;\n      }\n\n      if (this.leftPoints[l] === interval) {\n        this.count -= 1;\n        this.leftPoints.splice(l, 1);\n\n        for (var r = bounds.ge(this.rightPoints, interval, compareEnd); r < this.rightPoints.length; ++r) {\n          if (this.rightPoints[r][1] !== interval[1]) {\n            break;\n          } else if (this.rightPoints[r] === interval) {\n            this.rightPoints.splice(r, 1);\n            return SUCCESS;\n          }\n        }\n      }\n    }\n\n    return NOT_FOUND;\n  }\n};\n\nfunction reportLeftRange(arr, hi, cb) {\n  for (var i = 0; i < arr.length && arr[i][0] <= hi; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRightRange(arr, lo, cb) {\n  for (var i = arr.length - 1; i >= 0 && arr[i][1] >= lo; --i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRange(arr, cb) {\n  for (var i = 0; i < arr.length; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nproto.queryPoint = function (x, cb) {\n  if (x < this.mid) {\n    if (this.left) {\n      var r = this.left.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportLeftRange(this.leftPoints, x, cb);\n  } else if (x > this.mid) {\n    if (this.right) {\n      var r = this.right.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportRightRange(this.rightPoints, x, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nproto.queryInterval = function (lo, hi, cb) {\n  if (lo < this.mid && this.left) {\n    var r = this.left.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi > this.mid && this.right) {\n    var r = this.right.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi < this.mid) {\n    return reportLeftRange(this.leftPoints, hi, cb);\n  } else if (lo > this.mid) {\n    return reportRightRange(this.rightPoints, lo, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\nfunction compareBegin(a, b) {\n  var d = a[0] - b[0];\n\n  if (d) {\n    return d;\n  }\n\n  return a[1] - b[1];\n}\n\nfunction compareEnd(a, b) {\n  var d = a[1] - b[1];\n\n  if (d) {\n    return d;\n  }\n\n  return a[0] - b[0];\n}\n\nfunction createIntervalTree(intervals) {\n  if (intervals.length === 0) {\n    return null;\n  }\n\n  var pts = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    pts.push(intervals[i][0], intervals[i][1]);\n  }\n\n  pts.sort(compareNumbers);\n  var mid = pts[pts.length >> 1];\n  var leftIntervals = [];\n  var rightIntervals = [];\n  var centerIntervals = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    var s = intervals[i];\n\n    if (s[1] < mid) {\n      leftIntervals.push(s);\n    } else if (mid < s[0]) {\n      rightIntervals.push(s);\n    } else {\n      centerIntervals.push(s);\n    }\n  } //Split center intervals\n\n\n  var leftPoints = centerIntervals;\n  var rightPoints = centerIntervals.slice();\n  leftPoints.sort(compareBegin);\n  rightPoints.sort(compareEnd);\n  return new IntervalTreeNode(mid, createIntervalTree(leftIntervals), createIntervalTree(rightIntervals), leftPoints, rightPoints);\n} //User friendly wrapper that makes it possible to support empty trees\n\n\nfunction IntervalTree(root) {\n  this.root = root;\n}\n\nvar tproto = IntervalTree.prototype;\n\ntproto.insert = function (interval) {\n  if (this.root) {\n    this.root.insert(interval);\n  } else {\n    this.root = new IntervalTreeNode(interval[0], null, null, [interval], [interval]);\n  }\n};\n\ntproto.remove = function (interval) {\n  if (this.root) {\n    var r = this.root.remove(interval);\n\n    if (r === EMPTY) {\n      this.root = null;\n    }\n\n    return r !== NOT_FOUND;\n  }\n\n  return false;\n};\n\ntproto.queryPoint = function (p, cb) {\n  if (this.root) {\n    return this.root.queryPoint(p, cb);\n  }\n};\n\ntproto.queryInterval = function (lo, hi, cb) {\n  if (lo <= hi && this.root) {\n    return this.root.queryInterval(lo, hi, cb);\n  }\n};\n\nObject.defineProperty(tproto, 'count', {\n  get: function get() {\n    if (this.root) {\n      return this.root.count;\n    }\n\n    return 0;\n  }\n});\nObject.defineProperty(tproto, 'intervals', {\n  get: function get() {\n    if (this.root) {\n      return this.root.intervals([]);\n    }\n\n    return [];\n  }\n});\nexport default function createWrapper(intervals) {\n  if (!intervals || intervals.length === 0) {\n    return new IntervalTree(null);\n  }\n\n  return new IntervalTree(createIntervalTree(intervals));\n}","import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport createIntervalTree from '../vendor/intervalTree';\n\n// Position cache requirements:\n//   O(log(n)) lookup of cells to render for a given viewport size\n//   O(1) lookup of shortest measured column (so we know when to enter phase 1)\nvar PositionCache =\n/*#__PURE__*/\nfunction () {\n  function PositionCache() {\n    _classCallCheck(this, PositionCache);\n\n    _defineProperty(this, \"_columnSizeMap\", {});\n\n    _defineProperty(this, \"_intervalTree\", createIntervalTree());\n\n    _defineProperty(this, \"_leftMap\", {});\n  }\n\n  _createClass(PositionCache, [{\n    key: \"estimateTotalHeight\",\n    value: function estimateTotalHeight(cellCount, columnCount, defaultCellHeight) {\n      var unmeasuredCellCount = cellCount - this.count;\n      return this.tallestColumnSize + Math.ceil(unmeasuredCellCount / columnCount) * defaultCellHeight;\n    } // Render all cells visible within the viewport range defined.\n\n  }, {\n    key: \"range\",\n    value: function range(scrollTop, clientHeight, renderCallback) {\n      var _this = this;\n\n      this._intervalTree.queryInterval(scrollTop, scrollTop + clientHeight, function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 3),\n            top = _ref2[0],\n            _ = _ref2[1],\n            index = _ref2[2];\n\n        return renderCallback(index, _this._leftMap[index], top);\n      });\n    }\n  }, {\n    key: \"setPosition\",\n    value: function setPosition(index, left, top, height) {\n      this._intervalTree.insert([top, top + height, index]);\n\n      this._leftMap[index] = left;\n      var columnSizeMap = this._columnSizeMap;\n      var columnHeight = columnSizeMap[left];\n\n      if (columnHeight === undefined) {\n        columnSizeMap[left] = top + height;\n      } else {\n        columnSizeMap[left] = Math.max(columnHeight, top + height);\n      }\n    }\n  }, {\n    key: \"count\",\n    get: function get() {\n      return this._intervalTree.count;\n    }\n  }, {\n    key: \"shortestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = size === 0 ? height : Math.min(size, height);\n      }\n\n      return size;\n    }\n  }, {\n    key: \"tallestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = Math.max(size, height);\n      }\n\n      return size;\n    }\n  }]);\n\n  return PositionCache;\n}();\n\nexport { PositionCache as default };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport PositionCache from './PositionCache';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\nvar emptyObject = {};\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * This component efficiently displays arbitrarily positioned cells using windowing techniques.\n * Cell position is determined by an injected `cellPositioner` property.\n * Windowing is vertical; this component does not support horizontal scrolling.\n *\n * Rendering occurs in two phases:\n * 1) First pass uses estimated cell sizes (provided by the cache) to determine how many cells to measure in a batch.\n *    Batch size is chosen using a fast, naive layout algorithm that stacks images in order until the viewport has been filled.\n *    After measurement is complete (componentDidMount or componentDidUpdate) this component evaluates positioned cells\n *    in order to determine if another measurement pass is required (eg if actual cell sizes were less than estimated sizes).\n *    All measurements are permanently cached (keyed by `keyMapper`) for performance purposes.\n * 2) Second pass uses the external `cellPositioner` to layout cells.\n *    At this time the positioner has access to cached size measurements for all cells.\n *    The positions it returns are cached by Masonry for fast access later.\n *    Phase one is repeated if the user scrolls beyond the current layout's bounds.\n *    If the layout is invalidated due to eg a resize, cached positions can be cleared using `recomputeCellPositions()`.\n *\n * Animation constraints:\n *   Simple animations are supported (eg translate/slide into place on initial reveal).\n *   More complex animations are not (eg flying from one position to another on resize).\n *\n * Layout constraints:\n *   This component supports multi-column layout.\n *   The height of each item may vary.\n *   The width of each item must not exceed the width of the column it is \"in\".\n *   The left position of all items within a column must align.\n *   (Items may not span multiple columns.)\n */\n\nvar Masonry = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Masonry, _React$PureComponent);\n\n  function Masonry() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Masonry);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Masonry)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStartIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionCache\", new PositionCache());\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingCallback\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      var height = _this.props.height;\n      var eventScrollTop = event.currentTarget.scrollTop; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollTop = Math.min(Math.max(0, _this._getEstimatedTotalHeight() - height), eventScrollTop); // On iOS, we can arrive at negative offsets by swiping past the start or end.\n      // Avoid re-rendering in this case as it can cause problems; see #532 for more.\n\n      if (eventScrollTop !== scrollTop) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._debounceResetIsScrolling(); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n\n      if (_this.state.scrollTop !== scrollTop) {\n        _this.setState({\n          isScrolling: true,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Masonry, [{\n    key: \"clearCellPositions\",\n    value: function clearCellPositions() {\n      this._positionCache = new PositionCache();\n      this.forceUpdate();\n    } // HACK This method signature was intended for Grid\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref) {\n      var index = _ref.rowIndex;\n\n      if (this._invalidateOnUpdateStartIndex === null) {\n        this._invalidateOnUpdateStartIndex = index;\n        this._invalidateOnUpdateStopIndex = index;\n      } else {\n        this._invalidateOnUpdateStartIndex = Math.min(this._invalidateOnUpdateStartIndex, index);\n        this._invalidateOnUpdateStopIndex = Math.max(this._invalidateOnUpdateStopIndex, index);\n      }\n    }\n  }, {\n    key: \"recomputeCellPositions\",\n    value: function recomputeCellPositions() {\n      var stopIndex = this._positionCache.count - 1;\n      this._positionCache = new PositionCache();\n\n      this._populatePositionCache(0, stopIndex);\n\n      this.forceUpdate();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n\n      if (this.props.scrollTop !== prevProps.scrollTop) {\n        this._debounceResetIsScrolling();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          cellCount = _this$props.cellCount,\n          cellMeasurerCache = _this$props.cellMeasurerCache,\n          cellRenderer = _this$props.cellRenderer,\n          className = _this$props.className,\n          height = _this$props.height,\n          id = _this$props.id,\n          keyMapper = _this$props.keyMapper,\n          overscanByPixels = _this$props.overscanByPixels,\n          role = _this$props.role,\n          style = _this$props.style,\n          tabIndex = _this$props.tabIndex,\n          width = _this$props.width,\n          rowDirection = _this$props.rowDirection;\n      var _this$state = this.state,\n          isScrolling = _this$state.isScrolling,\n          scrollTop = _this$state.scrollTop;\n      var children = [];\n\n      var estimateTotalHeight = this._getEstimatedTotalHeight();\n\n      var shortestColumnSize = this._positionCache.shortestColumnSize;\n      var measuredCellCount = this._positionCache.count;\n      var startIndex = 0;\n      var stopIndex;\n\n      this._positionCache.range(Math.max(0, scrollTop - overscanByPixels), height + overscanByPixels * 2, function (index, left, top) {\n        var _style;\n\n        if (typeof stopIndex === 'undefined') {\n          startIndex = index;\n          stopIndex = index;\n        } else {\n          startIndex = Math.min(startIndex, index);\n          stopIndex = Math.max(stopIndex, index);\n        }\n\n        children.push(cellRenderer({\n          index: index,\n          isScrolling: isScrolling,\n          key: keyMapper(index),\n          parent: _this2,\n          style: (_style = {\n            height: cellMeasurerCache.getHeight(index)\n          }, _defineProperty(_style, rowDirection === 'ltr' ? 'left' : 'right', left), _defineProperty(_style, \"position\", 'absolute'), _defineProperty(_style, \"top\", top), _defineProperty(_style, \"width\", cellMeasurerCache.getWidth(index)), _style)\n        }));\n      }); // We need to measure additional cells for this layout\n\n\n      if (shortestColumnSize < scrollTop + height + overscanByPixels && measuredCellCount < cellCount) {\n        var batchSize = Math.min(cellCount - measuredCellCount, Math.ceil((scrollTop + height + overscanByPixels - shortestColumnSize) / cellMeasurerCache.defaultHeight * width / cellMeasurerCache.defaultWidth));\n\n        for (var _index = measuredCellCount; _index < measuredCellCount + batchSize; _index++) {\n          stopIndex = _index;\n          children.push(cellRenderer({\n            index: _index,\n            isScrolling: isScrolling,\n            key: keyMapper(_index),\n            parent: this,\n            style: {\n              width: cellMeasurerCache.getWidth(_index)\n            }\n          }));\n        }\n      }\n\n      this._startIndex = startIndex;\n      this._stopIndex = stopIndex;\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Masonry', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({\n          boxSizing: 'border-box',\n          direction: 'ltr',\n          height: autoHeight ? 'auto' : height,\n          overflowX: 'hidden',\n          overflowY: estimateTotalHeight < height ? 'hidden' : 'auto',\n          position: 'relative',\n          width: width,\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform'\n        }, style),\n        tabIndex: tabIndex\n      }, React.createElement(\"div\", {\n        className: \"ReactVirtualized__Masonry__innerScrollContainer\",\n        style: {\n          width: '100%',\n          height: estimateTotalHeight,\n          maxWidth: '100%',\n          maxHeight: estimateTotalHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }\n      }, children));\n    }\n  }, {\n    key: \"_checkInvalidateOnUpdate\",\n    value: function _checkInvalidateOnUpdate() {\n      if (typeof this._invalidateOnUpdateStartIndex === 'number') {\n        var startIndex = this._invalidateOnUpdateStartIndex;\n        var stopIndex = this._invalidateOnUpdateStopIndex;\n        this._invalidateOnUpdateStartIndex = null;\n        this._invalidateOnUpdateStopIndex = null; // Query external layout logic for position of newly-measured cells\n\n        this._populatePositionCache(startIndex, stopIndex);\n\n        this.forceUpdate();\n      }\n    }\n  }, {\n    key: \"_debounceResetIsScrolling\",\n    value: function _debounceResetIsScrolling() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n\n      this._debounceResetIsScrollingId = requestAnimationTimeout(this._debounceResetIsScrollingCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_getEstimatedTotalHeight\",\n    value: function _getEstimatedTotalHeight() {\n      var _this$props2 = this.props,\n          cellCount = _this$props2.cellCount,\n          cellMeasurerCache = _this$props2.cellMeasurerCache,\n          width = _this$props2.width;\n      var estimatedColumnCount = Math.max(1, Math.floor(width / cellMeasurerCache.defaultWidth));\n      return this._positionCache.estimateTotalHeight(cellCount, estimatedColumnCount, cellMeasurerCache.defaultHeight);\n    }\n  }, {\n    key: \"_invokeOnScrollCallback\",\n    value: function _invokeOnScrollCallback() {\n      var _this$props3 = this.props,\n          height = _this$props3.height,\n          onScroll = _this$props3.onScroll;\n      var scrollTop = this.state.scrollTop;\n\n      if (this._onScrollMemoized !== scrollTop) {\n        onScroll({\n          clientHeight: height,\n          scrollHeight: this._getEstimatedTotalHeight(),\n          scrollTop: scrollTop\n        });\n        this._onScrollMemoized = scrollTop;\n      }\n    }\n  }, {\n    key: \"_invokeOnCellsRenderedCallback\",\n    value: function _invokeOnCellsRenderedCallback() {\n      if (this._startIndexMemoized !== this._startIndex || this._stopIndexMemoized !== this._stopIndex) {\n        var onCellsRendered = this.props.onCellsRendered;\n        onCellsRendered({\n          startIndex: this._startIndex,\n          stopIndex: this._stopIndex\n        });\n        this._startIndexMemoized = this._startIndex;\n        this._stopIndexMemoized = this._stopIndex;\n      }\n    }\n  }, {\n    key: \"_populatePositionCache\",\n    value: function _populatePositionCache(startIndex, stopIndex) {\n      var _this$props4 = this.props,\n          cellMeasurerCache = _this$props4.cellMeasurerCache,\n          cellPositioner = _this$props4.cellPositioner;\n\n      for (var _index2 = startIndex; _index2 <= stopIndex; _index2++) {\n        var _cellPositioner = cellPositioner(_index2),\n            left = _cellPositioner.left,\n            top = _cellPositioner.top;\n\n        this._positionCache.setPosition(_index2, left, top, cellMeasurerCache.getHeight(_index2));\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollTop !== undefined && prevState.scrollTop !== nextProps.scrollTop) {\n        return {\n          isScrolling: true,\n          scrollTop: nextProps.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Masonry;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"autoHeight\": PropTypes.bool.isRequired,\n  \"cellCount\": PropTypes.number.isRequired,\n  \"cellMeasurerCache\": function cellMeasurerCache() {\n    return (typeof CellMeasurerCache === \"function\" ? PropTypes.instanceOf(CellMeasurerCache).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellPositioner\": function cellPositioner() {\n    return (typeof Positioner === \"function\" ? PropTypes.instanceOf(Positioner).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof CellRenderer === \"function\" ? PropTypes.instanceOf(CellRenderer).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"className\": PropTypes.string,\n  \"height\": PropTypes.number.isRequired,\n  \"id\": PropTypes.string,\n  \"keyMapper\": function keyMapper() {\n    return (typeof KeyMapper === \"function\" ? PropTypes.instanceOf(KeyMapper).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"onCellsRendered\": function onCellsRendered() {\n    return (typeof OnCellsRenderedCallback === \"function\" ? PropTypes.instanceOf(OnCellsRenderedCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"onScroll\": function onScroll() {\n    return (typeof OnScrollCallback === \"function\" ? PropTypes.instanceOf(OnScrollCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"overscanByPixels\": PropTypes.number.isRequired,\n  \"role\": PropTypes.string.isRequired,\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n  \"style\": function style(props, propName, componentName) {\n    if (!Object.prototype.hasOwnProperty.call(props, propName)) {\n      throw new Error(\"Prop `\".concat(propName, \"` has type 'any' or 'mixed', but was not provided to `\").concat(componentName, \"`. Pass undefined or any other value.\"));\n    }\n  },\n  \"tabIndex\": PropTypes.number.isRequired,\n  \"width\": PropTypes.number.isRequired,\n  \"rowDirection\": PropTypes.string.isRequired,\n  \"scrollTop\": PropTypes.number\n}), _temp);\n\n_defineProperty(Masonry, \"defaultProps\", {\n  autoHeight: false,\n  keyMapper: identity,\n  onCellsRendered: noop,\n  onScroll: noop,\n  overscanByPixels: 20,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  style: emptyObject,\n  tabIndex: 0,\n  rowDirection: 'ltr'\n});\n\nfunction identity(value) {\n  return value;\n}\n\nfunction noop() {}\n\nvar bpfrpt_proptype_CellMeasurerCache = process.env.NODE_ENV === 'production' ? null : {\n  \"defaultHeight\": PropTypes.number.isRequired,\n  \"defaultWidth\": PropTypes.number.isRequired,\n  \"getHeight\": PropTypes.func.isRequired,\n  \"getWidth\": PropTypes.func.isRequired\n};\npolyfill(Masonry);\nexport default Masonry;\nvar bpfrpt_proptype_Positioner = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_CellMeasurerCache };\nexport { bpfrpt_proptype_Positioner };","import createCellPositioner from './createCellPositioner';\nimport Masonry from './Masonry';\nexport default Masonry;\nexport { createCellPositioner, Masonry };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { CellMeasurerCache } from '../CellMeasurer';\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCacheDecorator =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCacheDecorator() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCacheDecorator);\n\n    _defineProperty(this, \"_cellMeasurerCache\", void 0);\n\n    _defineProperty(this, \"_columnIndexOffset\", void 0);\n\n    _defineProperty(this, \"_rowIndexOffset\", void 0);\n\n    _defineProperty(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      _this._cellMeasurerCache.columnWidth({\n        index: index + _this._columnIndexOffset\n      });\n    });\n\n    _defineProperty(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      _this._cellMeasurerCache.rowHeight({\n        index: index + _this._rowIndexOffset\n      });\n    });\n\n    var cellMeasurerCache = params.cellMeasurerCache,\n        _params$columnIndexOf = params.columnIndexOffset,\n        columnIndexOffset = _params$columnIndexOf === void 0 ? 0 : _params$columnIndexOf,\n        _params$rowIndexOffse = params.rowIndexOffset,\n        rowIndexOffset = _params$rowIndexOffse === void 0 ? 0 : _params$rowIndexOffse;\n    this._cellMeasurerCache = cellMeasurerCache;\n    this._columnIndexOffset = columnIndexOffset;\n    this._rowIndexOffset = rowIndexOffset;\n  }\n\n  _createClass(CellMeasurerCacheDecorator, [{\n    key: \"clear\",\n    value: function clear(rowIndex, columnIndex) {\n      this._cellMeasurerCache.clear(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellMeasurerCache.clearAll();\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._cellMeasurerCache.hasFixedHeight();\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._cellMeasurerCache.hasFixedWidth();\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getHeight(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getWidth(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.has(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      this._cellMeasurerCache.set(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset, width, height);\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCacheDecorator;\n}();\n\nexport { CellMeasurerCacheDecorator as default };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport CellMeasurerCacheDecorator from './CellMeasurerCacheDecorator';\nimport Grid from '../Grid';\nvar SCROLLBAR_SIZE_BUFFER = 20;\n/**\n * Renders 1, 2, or 4 Grids depending on configuration.\n * A main (body) Grid will always be rendered.\n * Optionally, 1-2 Grids for sticky header rows will also be rendered.\n * If no sticky columns, only 1 sticky header Grid will be rendered.\n * If sticky columns, 2 sticky header Grids will be rendered.\n */\n\nvar MultiGrid =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(MultiGrid, _React$PureComponent);\n\n  function MultiGrid(props, context) {\n    var _this;\n\n    _classCallCheck(this, MultiGrid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MultiGrid).call(this, props, context));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollbarSize: 0,\n      showHorizontalScrollbar: false,\n      showVerticalScrollbar: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomLeftGridRef\", function (ref) {\n      _this._bottomLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomRightGridRef\", function (ref) {\n      _this._bottomRightGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomLeftGrid\", function (_ref) {\n      var rowIndex = _ref.rowIndex,\n          rest = _objectWithoutProperties(_ref, [\"rowIndex\"]);\n\n      var _this$props = _this.props,\n          cellRenderer = _this$props.cellRenderer,\n          fixedRowCount = _this$props.fixedRowCount,\n          rowCount = _this$props.rowCount;\n\n      if (rowIndex === rowCount - fixedRowCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            height: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          parent: _assertThisInitialized(_this),\n          rowIndex: rowIndex + fixedRowCount\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomRightGrid\", function (_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex,\n          rest = _objectWithoutProperties(_ref2, [\"columnIndex\", \"rowIndex\"]);\n\n      var _this$props2 = _this.props,\n          cellRenderer = _this$props2.cellRenderer,\n          fixedColumnCount = _this$props2.fixedColumnCount,\n          fixedRowCount = _this$props2.fixedRowCount;\n      return cellRenderer(_objectSpread({}, rest, {\n        columnIndex: columnIndex + fixedColumnCount,\n        parent: _assertThisInitialized(_this),\n        rowIndex: rowIndex + fixedRowCount\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererTopRightGrid\", function (_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rest = _objectWithoutProperties(_ref3, [\"columnIndex\"]);\n\n      var _this$props3 = _this.props,\n          cellRenderer = _this$props3.cellRenderer,\n          columnCount = _this$props3.columnCount,\n          fixedColumnCount = _this$props3.fixedColumnCount;\n\n      if (columnIndex === columnCount - fixedColumnCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            width: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          columnIndex: columnIndex + fixedColumnCount,\n          parent: _assertThisInitialized(_this)\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnWidthRightGrid\", function (_ref4) {\n      var index = _ref4.index;\n      var _this$props4 = _this.props,\n          columnCount = _this$props4.columnCount,\n          fixedColumnCount = _this$props4.fixedColumnCount,\n          columnWidth = _this$props4.columnWidth;\n      var _this$state = _this.state,\n          scrollbarSize = _this$state.scrollbarSize,\n          showHorizontalScrollbar = _this$state.showHorizontalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showHorizontalScrollbar && index === columnCount - fixedColumnCount) {\n        return scrollbarSize;\n      }\n\n      return typeof columnWidth === 'function' ? columnWidth({\n        index: index + fixedColumnCount\n      }) : columnWidth;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft,\n          scrollTop = scrollInfo.scrollTop;\n\n      _this.setState({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      var onScroll = _this.props.onScroll;\n\n      if (onScroll) {\n        onScroll(scrollInfo);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollbarPresenceChange\", function (_ref5) {\n      var horizontal = _ref5.horizontal,\n          size = _ref5.size,\n          vertical = _ref5.vertical;\n      var _this$state2 = _this.state,\n          showHorizontalScrollbar = _this$state2.showHorizontalScrollbar,\n          showVerticalScrollbar = _this$state2.showVerticalScrollbar;\n\n      if (horizontal !== showHorizontalScrollbar || vertical !== showVerticalScrollbar) {\n        _this.setState({\n          scrollbarSize: size,\n          showHorizontalScrollbar: horizontal,\n          showVerticalScrollbar: vertical\n        });\n\n        var onScrollbarPresenceChange = _this.props.onScrollbarPresenceChange;\n\n        if (typeof onScrollbarPresenceChange === 'function') {\n          onScrollbarPresenceChange({\n            horizontal: horizontal,\n            size: size,\n            vertical: vertical\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollLeft\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft;\n\n      _this._onScroll({\n        scrollLeft: scrollLeft,\n        scrollTop: _this.state.scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollTop\", function (scrollInfo) {\n      var scrollTop = scrollInfo.scrollTop;\n\n      _this._onScroll({\n        scrollTop: scrollTop,\n        scrollLeft: _this.state.scrollLeft\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowHeightBottomGrid\", function (_ref6) {\n      var index = _ref6.index;\n      var _this$props5 = _this.props,\n          fixedRowCount = _this$props5.fixedRowCount,\n          rowCount = _this$props5.rowCount,\n          rowHeight = _this$props5.rowHeight;\n      var _this$state3 = _this.state,\n          scrollbarSize = _this$state3.scrollbarSize,\n          showVerticalScrollbar = _this$state3.showVerticalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showVerticalScrollbar && index === rowCount - fixedRowCount) {\n        return scrollbarSize;\n      }\n\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: index + fixedRowCount\n      }) : rowHeight;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topLeftGridRef\", function (ref) {\n      _this._topLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topRightGridRef\", function (ref) {\n      _this._topRightGrid = ref;\n    });\n\n    var deferredMeasurementCache = props.deferredMeasurementCache,\n        _fixedColumnCount = props.fixedColumnCount,\n        _fixedRowCount = props.fixedRowCount;\n\n    _this._maybeCalculateCachedStyles(true);\n\n    if (deferredMeasurementCache) {\n      _this._deferredMeasurementCacheBottomLeftGrid = _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: 0,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheBottomRightGrid = _fixedColumnCount > 0 || _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheTopRightGrid = _fixedColumnCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: 0\n      }) : deferredMeasurementCache;\n    }\n\n    return _this;\n  }\n\n  _createClass(MultiGrid, [{\n    key: \"forceUpdateGrids\",\n    value: function forceUpdateGrids() {\n      this._bottomLeftGrid && this._bottomLeftGrid.forceUpdate();\n      this._bottomRightGrid && this._bottomRightGrid.forceUpdate();\n      this._topLeftGrid && this._topLeftGrid.forceUpdate();\n      this._topRightGrid && this._topRightGrid.forceUpdate();\n    }\n    /** See Grid#invalidateCellSizeAfterRender */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender() {\n      var _ref7 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref7$columnIndex = _ref7.columnIndex,\n          columnIndex = _ref7$columnIndex === void 0 ? 0 : _ref7$columnIndex,\n          _ref7$rowIndex = _ref7.rowIndex,\n          rowIndex = _ref7$rowIndex === void 0 ? 0 : _ref7$rowIndex;\n\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      this._bottomLeftGrid && this._bottomLeftGrid.measureAllCells();\n      this._bottomRightGrid && this._bottomRightGrid.measureAllCells();\n      this._topLeftGrid && this._topLeftGrid.measureAllCells();\n      this._topRightGrid && this._topRightGrid.measureAllCells();\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref8 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref8$columnIndex = _ref8.columnIndex,\n          columnIndex = _ref8$columnIndex === void 0 ? 0 : _ref8$columnIndex,\n          _ref8$rowIndex = _ref8.rowIndex,\n          rowIndex = _ref8$rowIndex === void 0 ? 0 : _ref8$rowIndex;\n\n      var _this$props6 = this.props,\n          fixedColumnCount = _this$props6.fixedColumnCount,\n          fixedRowCount = _this$props6.fixedRowCount;\n      var adjustedColumnIndex = Math.max(0, columnIndex - fixedColumnCount);\n      var adjustedRowIndex = Math.max(0, rowIndex - fixedRowCount);\n      this._bottomLeftGrid && this._bottomLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._bottomRightGrid && this._bottomRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._topLeftGrid && this._topLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: rowIndex\n      });\n      this._topRightGrid && this._topRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: rowIndex\n      });\n      this._leftGridWidth = null;\n      this._topGridHeight = null;\n\n      this._maybeCalculateCachedStyles(true);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props7 = this.props,\n          scrollLeft = _this$props7.scrollLeft,\n          scrollTop = _this$props7.scrollTop;\n\n      if (scrollLeft > 0 || scrollTop > 0) {\n        var newState = {};\n\n        if (scrollLeft > 0) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop > 0) {\n          newState.scrollTop = scrollTop;\n        }\n\n        this.setState(newState);\n      }\n\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props8 = this.props,\n          onScroll = _this$props8.onScroll,\n          onSectionRendered = _this$props8.onSectionRendered,\n          onScrollbarPresenceChange = _this$props8.onScrollbarPresenceChange,\n          scrollLeftProp = _this$props8.scrollLeft,\n          scrollToColumn = _this$props8.scrollToColumn,\n          scrollTopProp = _this$props8.scrollTop,\n          scrollToRow = _this$props8.scrollToRow,\n          rest = _objectWithoutProperties(_this$props8, [\"onScroll\", \"onSectionRendered\", \"onScrollbarPresenceChange\", \"scrollLeft\", \"scrollToColumn\", \"scrollTop\", \"scrollToRow\"]);\n\n      this._prepareForRender(); // Don't render any of our Grids if there are no cells.\n      // This mirrors what Grid does,\n      // And prevents us from recording inaccurage measurements when used with CellMeasurer.\n\n\n      if (this.props.width === 0 || this.props.height === 0) {\n        return null;\n      } // scrollTop and scrollLeft props are explicitly filtered out and ignored\n\n\n      var _this$state4 = this.state,\n          scrollLeft = _this$state4.scrollLeft,\n          scrollTop = _this$state4.scrollTop;\n      return React.createElement(\"div\", {\n        style: this._containerOuterStyle\n      }, React.createElement(\"div\", {\n        style: this._containerTopStyle\n      }, this._renderTopLeftGrid(rest), this._renderTopRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollLeft: scrollLeft\n      }))), React.createElement(\"div\", {\n        style: this._containerBottomStyle\n      }, this._renderBottomLeftGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollTop: scrollTop\n      })), this._renderBottomRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        onSectionRendered: onSectionRendered,\n        scrollLeft: scrollLeft,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow,\n        scrollTop: scrollTop\n      }))));\n    }\n  }, {\n    key: \"_getBottomGridHeight\",\n    value: function _getBottomGridHeight(props) {\n      var height = props.height;\n\n      var topGridHeight = this._getTopGridHeight(props);\n\n      return height - topGridHeight;\n    }\n  }, {\n    key: \"_getLeftGridWidth\",\n    value: function _getLeftGridWidth(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          columnWidth = props.columnWidth;\n\n      if (this._leftGridWidth == null) {\n        if (typeof columnWidth === 'function') {\n          var leftGridWidth = 0;\n\n          for (var index = 0; index < fixedColumnCount; index++) {\n            leftGridWidth += columnWidth({\n              index: index\n            });\n          }\n\n          this._leftGridWidth = leftGridWidth;\n        } else {\n          this._leftGridWidth = columnWidth * fixedColumnCount;\n        }\n      }\n\n      return this._leftGridWidth;\n    }\n  }, {\n    key: \"_getRightGridWidth\",\n    value: function _getRightGridWidth(props) {\n      var width = props.width;\n\n      var leftGridWidth = this._getLeftGridWidth(props);\n\n      return width - leftGridWidth;\n    }\n  }, {\n    key: \"_getTopGridHeight\",\n    value: function _getTopGridHeight(props) {\n      var fixedRowCount = props.fixedRowCount,\n          rowHeight = props.rowHeight;\n\n      if (this._topGridHeight == null) {\n        if (typeof rowHeight === 'function') {\n          var topGridHeight = 0;\n\n          for (var index = 0; index < fixedRowCount; index++) {\n            topGridHeight += rowHeight({\n              index: index\n            });\n          }\n\n          this._topGridHeight = topGridHeight;\n        } else {\n          this._topGridHeight = rowHeight * fixedRowCount;\n        }\n      }\n\n      return this._topGridHeight;\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n        this.forceUpdate();\n      }\n    }\n    /**\n     * Avoid recreating inline styles each render; this bypasses Grid's shallowCompare.\n     * This method recalculates styles only when specific props change.\n     */\n\n  }, {\n    key: \"_maybeCalculateCachedStyles\",\n    value: function _maybeCalculateCachedStyles(resetAll) {\n      var _this$props9 = this.props,\n          columnWidth = _this$props9.columnWidth,\n          enableFixedColumnScroll = _this$props9.enableFixedColumnScroll,\n          enableFixedRowScroll = _this$props9.enableFixedRowScroll,\n          height = _this$props9.height,\n          fixedColumnCount = _this$props9.fixedColumnCount,\n          fixedRowCount = _this$props9.fixedRowCount,\n          rowHeight = _this$props9.rowHeight,\n          style = _this$props9.style,\n          styleBottomLeftGrid = _this$props9.styleBottomLeftGrid,\n          styleBottomRightGrid = _this$props9.styleBottomRightGrid,\n          styleTopLeftGrid = _this$props9.styleTopLeftGrid,\n          styleTopRightGrid = _this$props9.styleTopRightGrid,\n          width = _this$props9.width;\n      var sizeChange = resetAll || height !== this._lastRenderedHeight || width !== this._lastRenderedWidth;\n      var leftSizeChange = resetAll || columnWidth !== this._lastRenderedColumnWidth || fixedColumnCount !== this._lastRenderedFixedColumnCount;\n      var topSizeChange = resetAll || fixedRowCount !== this._lastRenderedFixedRowCount || rowHeight !== this._lastRenderedRowHeight;\n\n      if (resetAll || sizeChange || style !== this._lastRenderedStyle) {\n        this._containerOuterStyle = _objectSpread({\n          height: height,\n          overflow: 'visible',\n          // Let :focus outline show through\n          width: width\n        }, style);\n      }\n\n      if (resetAll || sizeChange || topSizeChange) {\n        this._containerTopStyle = {\n          height: this._getTopGridHeight(this.props),\n          position: 'relative',\n          width: width\n        };\n        this._containerBottomStyle = {\n          height: height - this._getTopGridHeight(this.props),\n          overflow: 'visible',\n          // Let :focus outline show through\n          position: 'relative',\n          width: width\n        };\n      }\n\n      if (resetAll || styleBottomLeftGrid !== this._lastRenderedStyleBottomLeftGrid) {\n        this._bottomLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: enableFixedColumnScroll ? 'auto' : 'hidden',\n          position: 'absolute'\n        }, styleBottomLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleBottomRightGrid !== this._lastRenderedStyleBottomRightGrid) {\n        this._bottomRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          position: 'absolute'\n        }, styleBottomRightGrid);\n      }\n\n      if (resetAll || styleTopLeftGrid !== this._lastRenderedStyleTopLeftGrid) {\n        this._topLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleTopRightGrid !== this._lastRenderedStyleTopRightGrid) {\n        this._topRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          overflowX: enableFixedRowScroll ? 'auto' : 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopRightGrid);\n      }\n\n      this._lastRenderedColumnWidth = columnWidth;\n      this._lastRenderedFixedColumnCount = fixedColumnCount;\n      this._lastRenderedFixedRowCount = fixedRowCount;\n      this._lastRenderedHeight = height;\n      this._lastRenderedRowHeight = rowHeight;\n      this._lastRenderedStyle = style;\n      this._lastRenderedStyleBottomLeftGrid = styleBottomLeftGrid;\n      this._lastRenderedStyleBottomRightGrid = styleBottomRightGrid;\n      this._lastRenderedStyleTopLeftGrid = styleTopLeftGrid;\n      this._lastRenderedStyleTopRightGrid = styleTopRightGrid;\n      this._lastRenderedWidth = width;\n    }\n  }, {\n    key: \"_prepareForRender\",\n    value: function _prepareForRender() {\n      if (this._lastRenderedColumnWidth !== this.props.columnWidth || this._lastRenderedFixedColumnCount !== this.props.fixedColumnCount) {\n        this._leftGridWidth = null;\n      }\n\n      if (this._lastRenderedFixedRowCount !== this.props.fixedRowCount || this._lastRenderedRowHeight !== this.props.rowHeight) {\n        this._topGridHeight = null;\n      }\n\n      this._maybeCalculateCachedStyles();\n\n      this._lastRenderedColumnWidth = this.props.columnWidth;\n      this._lastRenderedFixedColumnCount = this.props.fixedColumnCount;\n      this._lastRenderedFixedRowCount = this.props.fixedRowCount;\n      this._lastRenderedRowHeight = this.props.rowHeight;\n    }\n  }, {\n    key: \"_renderBottomLeftGrid\",\n    value: function _renderBottomLeftGrid(props) {\n      var enableFixedColumnScroll = props.enableFixedColumnScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          hideBottomLeftGridScrollbar = props.hideBottomLeftGridScrollbar;\n      var showVerticalScrollbar = this.state.showVerticalScrollbar;\n\n      if (!fixedColumnCount) {\n        return null;\n      }\n\n      var additionalRowCount = showVerticalScrollbar ? 1 : 0,\n          height = this._getBottomGridHeight(props),\n          width = this._getLeftGridWidth(props),\n          scrollbarSize = this.state.showVerticalScrollbar ? this.state.scrollbarSize : 0,\n          gridWidth = hideBottomLeftGridScrollbar ? width + scrollbarSize : width;\n\n      var bottomLeftGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomLeftGrid,\n        className: this.props.classNameBottomLeftGrid,\n        columnCount: fixedColumnCount,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomLeftGrid,\n        height: height,\n        onScroll: enableFixedColumnScroll ? this._onScrollTop : undefined,\n        ref: this._bottomLeftGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount) + additionalRowCount,\n        rowHeight: this._rowHeightBottomGrid,\n        style: this._bottomLeftGridStyle,\n        tabIndex: null,\n        width: gridWidth\n      }));\n\n      if (hideBottomLeftGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"BottomLeftGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._bottomLeftGridStyle, {\n            height: height,\n            width: width,\n            overflowY: 'hidden'\n          })\n        }, bottomLeftGrid);\n      }\n\n      return bottomLeftGrid;\n    }\n  }, {\n    key: \"_renderBottomRightGrid\",\n    value: function _renderBottomRightGrid(props) {\n      var columnCount = props.columnCount,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          scrollToColumn = props.scrollToColumn,\n          scrollToRow = props.scrollToRow;\n      return React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomRightGrid,\n        className: this.props.classNameBottomRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount),\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomRightGrid,\n        height: this._getBottomGridHeight(props),\n        onScroll: this._onScroll,\n        onScrollbarPresenceChange: this._onScrollbarPresenceChange,\n        ref: this._bottomRightGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount),\n        rowHeight: this._rowHeightBottomGrid,\n        scrollToColumn: scrollToColumn - fixedColumnCount,\n        scrollToRow: scrollToRow - fixedRowCount,\n        style: this._bottomRightGridStyle,\n        width: this._getRightGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopLeftGrid\",\n    value: function _renderTopLeftGrid(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount;\n\n      if (!fixedColumnCount || !fixedRowCount) {\n        return null;\n      }\n\n      return React.createElement(Grid, _extends({}, props, {\n        className: this.props.classNameTopLeftGrid,\n        columnCount: fixedColumnCount,\n        height: this._getTopGridHeight(props),\n        ref: this._topLeftGridRef,\n        rowCount: fixedRowCount,\n        style: this._topLeftGridStyle,\n        tabIndex: null,\n        width: this._getLeftGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopRightGrid\",\n    value: function _renderTopRightGrid(props) {\n      var columnCount = props.columnCount,\n          enableFixedRowScroll = props.enableFixedRowScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          scrollLeft = props.scrollLeft,\n          hideTopRightGridScrollbar = props.hideTopRightGridScrollbar;\n      var _this$state5 = this.state,\n          showHorizontalScrollbar = _this$state5.showHorizontalScrollbar,\n          scrollbarSize = _this$state5.scrollbarSize;\n\n      if (!fixedRowCount) {\n        return null;\n      }\n\n      var additionalColumnCount = showHorizontalScrollbar ? 1 : 0,\n          height = this._getTopGridHeight(props),\n          width = this._getRightGridWidth(props),\n          additionalHeight = showHorizontalScrollbar ? scrollbarSize : 0;\n\n      var gridHeight = height,\n          style = this._topRightGridStyle;\n\n      if (hideTopRightGridScrollbar) {\n        gridHeight = height + additionalHeight;\n        style = _objectSpread({}, this._topRightGridStyle, {\n          left: 0\n        });\n      }\n\n      var topRightGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererTopRightGrid,\n        className: this.props.classNameTopRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount) + additionalColumnCount,\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheTopRightGrid,\n        height: gridHeight,\n        onScroll: enableFixedRowScroll ? this._onScrollLeft : undefined,\n        ref: this._topRightGridRef,\n        rowCount: fixedRowCount,\n        scrollLeft: scrollLeft,\n        style: style,\n        tabIndex: null,\n        width: width\n      }));\n\n      if (hideTopRightGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"TopRightGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._topRightGridStyle, {\n            height: height,\n            width: width,\n            overflowX: 'hidden'\n          })\n        }, topRightGrid);\n      }\n\n      return topRightGrid;\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null && nextProps.scrollLeft >= 0 ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null && nextProps.scrollTop >= 0 ? nextProps.scrollTop : prevState.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return MultiGrid;\n}(React.PureComponent);\n\n_defineProperty(MultiGrid, \"defaultProps\", {\n  classNameBottomLeftGrid: '',\n  classNameBottomRightGrid: '',\n  classNameTopLeftGrid: '',\n  classNameTopRightGrid: '',\n  enableFixedColumnScroll: false,\n  enableFixedRowScroll: false,\n  fixedColumnCount: 0,\n  fixedRowCount: 0,\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  styleBottomLeftGrid: {},\n  styleBottomRightGrid: {},\n  styleTopLeftGrid: {},\n  styleTopRightGrid: {},\n  hideTopRightGridScrollbar: false,\n  hideBottomLeftGridScrollbar: false\n});\n\nMultiGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  classNameBottomLeftGrid: PropTypes.string.isRequired,\n  classNameBottomRightGrid: PropTypes.string.isRequired,\n  classNameTopLeftGrid: PropTypes.string.isRequired,\n  classNameTopRightGrid: PropTypes.string.isRequired,\n  enableFixedColumnScroll: PropTypes.bool.isRequired,\n  enableFixedRowScroll: PropTypes.bool.isRequired,\n  fixedColumnCount: PropTypes.number.isRequired,\n  fixedRowCount: PropTypes.number.isRequired,\n  onScrollbarPresenceChange: PropTypes.func,\n  style: PropTypes.object.isRequired,\n  styleBottomLeftGrid: PropTypes.object.isRequired,\n  styleBottomRightGrid: PropTypes.object.isRequired,\n  styleTopLeftGrid: PropTypes.object.isRequired,\n  styleTopRightGrid: PropTypes.object.isRequired,\n  hideTopRightGridScrollbar: PropTypes.bool,\n  hideBottomLeftGridScrollbar: PropTypes.bool\n} : {};\npolyfill(MultiGrid);\nexport default MultiGrid;","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * HOC that simplifies the process of synchronizing scrolling between two or more virtualized components.\n */\n\nvar ScrollSync =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ScrollSync, _React$PureComponent);\n\n  function ScrollSync(props, context) {\n    var _this;\n\n    _classCallCheck(this, ScrollSync);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ScrollSync).call(this, props, context));\n    _this.state = {\n      clientHeight: 0,\n      clientWidth: 0,\n      scrollHeight: 0,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollWidth: 0\n    };\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ScrollSync, [{\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state = this.state,\n          clientHeight = _this$state.clientHeight,\n          clientWidth = _this$state.clientWidth,\n          scrollHeight = _this$state.scrollHeight,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop,\n          scrollWidth = _this$state.scrollWidth;\n      return children({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        onScroll: this._onScroll,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref) {\n      var clientHeight = _ref.clientHeight,\n          clientWidth = _ref.clientWidth,\n          scrollHeight = _ref.scrollHeight,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          scrollWidth = _ref.scrollWidth;\n      this.setState({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }]);\n\n  return ScrollSync;\n}(React.PureComponent);\n\nexport { ScrollSync as default };\nScrollSync.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering 2 or more virtualized components.\n   * This function should implement the following signature:\n   * ({ onScroll, scrollLeft, scrollTop }) => PropTypes.element\n   */\n  children: PropTypes.func.isRequired\n} : {};","import * as React from 'react';\nexport default function defaultHeaderRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      style = _ref.style;\n  return React.createElement(\"div\", {\n    className: className,\n    role: \"row\",\n    style: style\n  }, columns);\n}\ndefaultHeaderRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRowRendererParams;\nimport { bpfrpt_proptype_HeaderRowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","var SortDirection = {\n  /**\n   * Sort items in ascending order.\n   * This means arranging from the lowest value to the highest (e.g. a-z, 0-9).\n   */\n  ASC: 'ASC',\n\n  /**\n   * Sort items in descending order.\n   * This means arranging from the highest value to the lowest (e.g. z-a, 9-0).\n   */\n  DESC: 'DESC'\n};\nexport default SortDirection;","import clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport SortDirection from './SortDirection';\n/**\n * Displayed beside a header to indicate that a Table is currently sorted by this column.\n */\n\nexport default function SortIndicator(_ref) {\n  var sortDirection = _ref.sortDirection;\n  var classNames = clsx('ReactVirtualized__Table__sortableHeaderIcon', {\n    'ReactVirtualized__Table__sortableHeaderIcon--ASC': sortDirection === SortDirection.ASC,\n    'ReactVirtualized__Table__sortableHeaderIcon--DESC': sortDirection === SortDirection.DESC\n  });\n  return React.createElement(\"svg\", {\n    className: classNames,\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 24 24\"\n  }, sortDirection === SortDirection.ASC ? React.createElement(\"path\", {\n    d: \"M7 14l5-5 5 5z\"\n  }) : React.createElement(\"path\", {\n    d: \"M7 10l5 5 5-5z\"\n  }), React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  }));\n}\nSortIndicator.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC])\n} : {};","import * as React from 'react';\nimport SortIndicator from './SortIndicator';\n\n/**\n * Default table header renderer.\n */\nexport default function defaultHeaderRenderer(_ref) {\n  var dataKey = _ref.dataKey,\n      label = _ref.label,\n      sortBy = _ref.sortBy,\n      sortDirection = _ref.sortDirection;\n  var showSortIndicator = sortBy === dataKey;\n  var children = [React.createElement(\"span\", {\n    className: \"ReactVirtualized__Table__headerTruncatedText\",\n    key: \"label\",\n    title: typeof label === 'string' ? label : null\n  }, label)];\n\n  if (showSortIndicator) {\n    children.push(React.createElement(SortIndicator, {\n      key: \"SortIndicator\",\n      sortDirection: sortDirection\n    }));\n  }\n\n  return children;\n}\ndefaultHeaderRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRendererParams;\nimport { bpfrpt_proptype_HeaderRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\n\n/**\n * Default row renderer for Table.\n */\nexport default function defaultRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      index = _ref.index,\n      key = _ref.key,\n      onRowClick = _ref.onRowClick,\n      onRowDoubleClick = _ref.onRowDoubleClick,\n      onRowMouseOut = _ref.onRowMouseOut,\n      onRowMouseOver = _ref.onRowMouseOver,\n      onRowRightClick = _ref.onRowRightClick,\n      rowData = _ref.rowData,\n      style = _ref.style;\n  var a11yProps = {\n    'aria-rowindex': index + 1\n  };\n\n  if (onRowClick || onRowDoubleClick || onRowMouseOut || onRowMouseOver || onRowRightClick) {\n    a11yProps['aria-label'] = 'row';\n    a11yProps.tabIndex = 0;\n\n    if (onRowClick) {\n      a11yProps.onClick = function (event) {\n        return onRowClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowDoubleClick) {\n      a11yProps.onDoubleClick = function (event) {\n        return onRowDoubleClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOut) {\n      a11yProps.onMouseOut = function (event) {\n        return onRowMouseOut({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOver) {\n      a11yProps.onMouseOver = function (event) {\n        return onRowMouseOver({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowRightClick) {\n      a11yProps.onContextMenu = function (event) {\n        return onRowRightClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n  }\n\n  return React.createElement(\"div\", _extends({}, a11yProps, {\n    className: className,\n    key: key,\n    role: \"row\",\n    style: style\n  }), columns);\n}\ndefaultRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_RowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_RowRendererParams;\nimport { bpfrpt_proptype_RowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport SortDirection from './SortDirection';\n/**\n * Describes the header and cell contents of a table column.\n */\n\nvar Column =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Column, _React$Component);\n\n  function Column() {\n    _classCallCheck(this, Column);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Column).apply(this, arguments));\n  }\n\n  return Column;\n}(React.Component);\n\n_defineProperty(Column, \"defaultProps\", {\n  cellDataGetter: defaultCellDataGetter,\n  cellRenderer: defaultCellRenderer,\n  defaultSortDirection: SortDirection.ASC,\n  flexGrow: 0,\n  flexShrink: 1,\n  headerRenderer: defaultHeaderRenderer,\n  style: {}\n});\n\nexport { Column as default };\nColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Optional aria-label value to set on the column header */\n  'aria-label': PropTypes.string,\n\n  /**\n   * Callback responsible for returning a cell's data, given its :dataKey\n   * ({ columnData: any, dataKey: string, rowData: any }): any\n   */\n  cellDataGetter: PropTypes.func,\n\n  /**\n   * Callback responsible for rendering a cell's contents.\n   * ({ cellData: any, columnData: any, dataKey: string, rowData: any, rowIndex: number }): node\n   */\n  cellRenderer: PropTypes.func,\n\n  /** Optional CSS class to apply to cell */\n  className: PropTypes.string,\n\n  /** Optional additional data passed to this column's :cellDataGetter */\n  columnData: PropTypes.object,\n\n  /** Uniquely identifies the row-data attribute corresponding to this cell */\n  dataKey: PropTypes.any.isRequired,\n\n  /** Optional direction to be used when clicked the first time */\n  defaultSortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** If sort is enabled for the table at large, disable it for this column */\n  disableSort: PropTypes.bool,\n\n  /** Flex grow style; defaults to 0 */\n  flexGrow: PropTypes.number,\n\n  /** Flex shrink style; defaults to 1 */\n  flexShrink: PropTypes.number,\n\n  /** Optional CSS class to apply to this column's header */\n  headerClassName: PropTypes.string,\n\n  /**\n   * Optional callback responsible for rendering a column header contents.\n   * ({ columnData: object, dataKey: string, disableSort: boolean, label: node, sortBy: string, sortDirection: string }): PropTypes.node\n   */\n  headerRenderer: PropTypes.func.isRequired,\n\n  /** Optional inline style to apply to this column's header */\n  headerStyle: PropTypes.object,\n\n  /** Optional id to set on the column header */\n  id: PropTypes.string,\n\n  /** Header label for this column */\n  label: PropTypes.node,\n\n  /** Maximum width of column; this property will only be used if :flexGrow is > 0. */\n  maxWidth: PropTypes.number,\n\n  /** Minimum width of column. */\n  minWidth: PropTypes.number,\n\n  /** Optional inline style to apply to cell */\n  style: PropTypes.object,\n\n  /** Flex basis (width) for this column; This value can grow or shrink based on :flexGrow and :flexShrink properties. */\n  width: PropTypes.number.isRequired\n} : {};","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport Column from './Column';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer';\nimport SortDirection from './SortDirection';\n/**\n * Table component with fixed headers and virtualized rows for improved performance with large data sets.\n * This component expects explicit width, height, and padding parameters.\n */\n\nvar Table =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Table, _React$PureComponent);\n\n  function Table(props) {\n    var _this;\n\n    _classCallCheck(this, Table);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Table).call(this, props));\n    _this.state = {\n      scrollbarWidth: 0\n    };\n    _this._createColumn = _this._createColumn.bind(_assertThisInitialized(_this));\n    _this._createRow = _this._createRow.bind(_assertThisInitialized(_this));\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    _this._onSectionRendered = _this._onSectionRendered.bind(_assertThisInitialized(_this));\n    _this._setRef = _this._setRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Table, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref) {\n      var alignment = _ref.alignment,\n          index = _ref.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref3$columnIndex = _ref3.columnIndex,\n          columnIndex = _ref3$columnIndex === void 0 ? 0 : _ref3$columnIndex,\n          _ref3$rowIndex = _ref3.rowIndex,\n          rowIndex = _ref3$rowIndex === void 0 ? 0 : _ref3$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"getScrollbarWidth\",\n    value: function getScrollbarWidth() {\n      if (this.Grid) {\n        var _Grid = findDOMNode(this.Grid);\n\n        var clientWidth = _Grid.clientWidth || 0;\n        var offsetWidth = _Grid.offsetWidth || 0;\n        return offsetWidth - clientWidth;\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          children = _this$props.children,\n          className = _this$props.className,\n          disableHeader = _this$props.disableHeader,\n          gridClassName = _this$props.gridClassName,\n          gridStyle = _this$props.gridStyle,\n          headerHeight = _this$props.headerHeight,\n          headerRowRenderer = _this$props.headerRowRenderer,\n          height = _this$props.height,\n          id = _this$props.id,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          rowClassName = _this$props.rowClassName,\n          rowStyle = _this$props.rowStyle,\n          scrollToIndex = _this$props.scrollToIndex,\n          style = _this$props.style,\n          width = _this$props.width;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var availableRowsHeight = disableHeader ? height : height - headerHeight;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: -1\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: -1\n      }) : rowStyle; // Precompute and cache column styles before rendering rows and columns to speed things up\n\n      this._cachedColumnStyles = [];\n      React.Children.toArray(children).forEach(function (column, index) {\n        var flexStyles = _this2._getFlexStyleForColumn(column, column.props.style);\n\n        _this2._cachedColumnStyles[index] = _objectSpread({\n          overflow: 'hidden'\n        }, flexStyles);\n      }); // Note that we specify :rowCount, :scrollbarWidth, :sortBy, and :sortDirection as properties on Grid even though these have nothing to do with Grid.\n      // This is done because Grid is a pure component and won't update unless its properties or state has changed.\n      // Any property that should trigger a re-render of Grid then is specified here to avoid a stale display.\n\n      return React.createElement(\"div\", {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-labelledby\": this.props['aria-labelledby'],\n        \"aria-colcount\": React.Children.toArray(children).length,\n        \"aria-rowcount\": this.props.rowCount,\n        className: clsx('ReactVirtualized__Table', className),\n        id: id,\n        role: \"grid\",\n        style: style\n      }, !disableHeader && headerRowRenderer({\n        className: clsx('ReactVirtualized__Table__headerRow', rowClass),\n        columns: this._getHeaderColumns(),\n        style: _objectSpread({\n          height: headerHeight,\n          overflow: 'hidden',\n          paddingRight: scrollbarWidth,\n          width: width\n        }, rowStyleObject)\n      }), React.createElement(Grid, _extends({}, this.props, {\n        \"aria-readonly\": null,\n        autoContainerWidth: true,\n        className: clsx('ReactVirtualized__Table__Grid', gridClassName),\n        cellRenderer: this._createRow,\n        columnWidth: width,\n        columnCount: 1,\n        height: availableRowsHeight,\n        id: undefined,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        role: \"rowgroup\",\n        scrollbarWidth: scrollbarWidth,\n        scrollToRow: scrollToIndex,\n        style: _objectSpread({}, gridStyle, {\n          overflowX: 'hidden'\n        })\n      })));\n    }\n  }, {\n    key: \"_createColumn\",\n    value: function _createColumn(_ref4) {\n      var column = _ref4.column,\n          columnIndex = _ref4.columnIndex,\n          isScrolling = _ref4.isScrolling,\n          parent = _ref4.parent,\n          rowData = _ref4.rowData,\n          rowIndex = _ref4.rowIndex;\n      var onColumnClick = this.props.onColumnClick;\n      var _column$props = column.props,\n          cellDataGetter = _column$props.cellDataGetter,\n          cellRenderer = _column$props.cellRenderer,\n          className = _column$props.className,\n          columnData = _column$props.columnData,\n          dataKey = _column$props.dataKey,\n          id = _column$props.id;\n      var cellData = cellDataGetter({\n        columnData: columnData,\n        dataKey: dataKey,\n        rowData: rowData\n      });\n      var renderedCell = cellRenderer({\n        cellData: cellData,\n        columnData: columnData,\n        columnIndex: columnIndex,\n        dataKey: dataKey,\n        isScrolling: isScrolling,\n        parent: parent,\n        rowData: rowData,\n        rowIndex: rowIndex\n      });\n\n      var onClick = function onClick(event) {\n        onColumnClick && onColumnClick({\n          columnData: columnData,\n          dataKey: dataKey,\n          event: event\n        });\n      };\n\n      var style = this._cachedColumnStyles[columnIndex];\n      var title = typeof renderedCell === 'string' ? renderedCell : null; // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n      return React.createElement(\"div\", {\n        \"aria-colindex\": columnIndex + 1,\n        \"aria-describedby\": id,\n        className: clsx('ReactVirtualized__Table__rowColumn', className),\n        key: 'Row' + rowIndex + '-' + 'Col' + columnIndex,\n        onClick: onClick,\n        role: \"gridcell\",\n        style: style,\n        title: title\n      }, renderedCell);\n    }\n  }, {\n    key: \"_createHeader\",\n    value: function _createHeader(_ref5) {\n      var column = _ref5.column,\n          index = _ref5.index;\n      var _this$props2 = this.props,\n          headerClassName = _this$props2.headerClassName,\n          headerStyle = _this$props2.headerStyle,\n          onHeaderClick = _this$props2.onHeaderClick,\n          sort = _this$props2.sort,\n          sortBy = _this$props2.sortBy,\n          sortDirection = _this$props2.sortDirection;\n      var _column$props2 = column.props,\n          columnData = _column$props2.columnData,\n          dataKey = _column$props2.dataKey,\n          defaultSortDirection = _column$props2.defaultSortDirection,\n          disableSort = _column$props2.disableSort,\n          headerRenderer = _column$props2.headerRenderer,\n          id = _column$props2.id,\n          label = _column$props2.label;\n      var sortEnabled = !disableSort && sort;\n      var classNames = clsx('ReactVirtualized__Table__headerColumn', headerClassName, column.props.headerClassName, {\n        ReactVirtualized__Table__sortableHeaderColumn: sortEnabled\n      });\n\n      var style = this._getFlexStyleForColumn(column, _objectSpread({}, headerStyle, {}, column.props.headerStyle));\n\n      var renderedHeader = headerRenderer({\n        columnData: columnData,\n        dataKey: dataKey,\n        disableSort: disableSort,\n        label: label,\n        sortBy: sortBy,\n        sortDirection: sortDirection\n      });\n      var headerOnClick, headerOnKeyDown, headerTabIndex, headerAriaSort, headerAriaLabel;\n\n      if (sortEnabled || onHeaderClick) {\n        // If this is a sortable header, clicking it should update the table data's sorting.\n        var isFirstTimeSort = sortBy !== dataKey; // If this is the firstTime sort of this column, use the column default sort order.\n        // Otherwise, invert the direction of the sort.\n\n        var newSortDirection = isFirstTimeSort ? defaultSortDirection : sortDirection === SortDirection.DESC ? SortDirection.ASC : SortDirection.DESC;\n\n        var onClick = function onClick(event) {\n          sortEnabled && sort({\n            defaultSortDirection: defaultSortDirection,\n            event: event,\n            sortBy: dataKey,\n            sortDirection: newSortDirection\n          });\n          onHeaderClick && onHeaderClick({\n            columnData: columnData,\n            dataKey: dataKey,\n            event: event\n          });\n        };\n\n        var onKeyDown = function onKeyDown(event) {\n          if (event.key === 'Enter' || event.key === ' ') {\n            onClick(event);\n          }\n        };\n\n        headerAriaLabel = column.props['aria-label'] || label || dataKey;\n        headerAriaSort = 'none';\n        headerTabIndex = 0;\n        headerOnClick = onClick;\n        headerOnKeyDown = onKeyDown;\n      }\n\n      if (sortBy === dataKey) {\n        headerAriaSort = sortDirection === SortDirection.ASC ? 'ascending' : 'descending';\n      } // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n\n      return React.createElement(\"div\", {\n        \"aria-label\": headerAriaLabel,\n        \"aria-sort\": headerAriaSort,\n        className: classNames,\n        id: id,\n        key: 'Header-Col' + index,\n        onClick: headerOnClick,\n        onKeyDown: headerOnKeyDown,\n        role: \"columnheader\",\n        style: style,\n        tabIndex: headerTabIndex\n      }, renderedHeader);\n    }\n  }, {\n    key: \"_createRow\",\n    value: function _createRow(_ref6) {\n      var _this3 = this;\n\n      var index = _ref6.rowIndex,\n          isScrolling = _ref6.isScrolling,\n          key = _ref6.key,\n          parent = _ref6.parent,\n          style = _ref6.style;\n      var _this$props3 = this.props,\n          children = _this$props3.children,\n          onRowClick = _this$props3.onRowClick,\n          onRowDoubleClick = _this$props3.onRowDoubleClick,\n          onRowRightClick = _this$props3.onRowRightClick,\n          onRowMouseOver = _this$props3.onRowMouseOver,\n          onRowMouseOut = _this$props3.onRowMouseOut,\n          rowClassName = _this$props3.rowClassName,\n          rowGetter = _this$props3.rowGetter,\n          rowRenderer = _this$props3.rowRenderer,\n          rowStyle = _this$props3.rowStyle;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: index\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: index\n      }) : rowStyle;\n      var rowData = rowGetter({\n        index: index\n      });\n      var columns = React.Children.toArray(children).map(function (column, columnIndex) {\n        return _this3._createColumn({\n          column: column,\n          columnIndex: columnIndex,\n          isScrolling: isScrolling,\n          parent: parent,\n          rowData: rowData,\n          rowIndex: index,\n          scrollbarWidth: scrollbarWidth\n        });\n      });\n      var className = clsx('ReactVirtualized__Table__row', rowClass);\n\n      var flattenedStyle = _objectSpread({}, style, {\n        height: this._getRowHeight(index),\n        overflow: 'hidden',\n        paddingRight: scrollbarWidth\n      }, rowStyleObject);\n\n      return rowRenderer({\n        className: className,\n        columns: columns,\n        index: index,\n        isScrolling: isScrolling,\n        key: key,\n        onRowClick: onRowClick,\n        onRowDoubleClick: onRowDoubleClick,\n        onRowRightClick: onRowRightClick,\n        onRowMouseOver: onRowMouseOver,\n        onRowMouseOut: onRowMouseOut,\n        rowData: rowData,\n        style: flattenedStyle\n      });\n    }\n    /**\n     * Determines the flex-shrink, flex-grow, and width values for a cell (header or column).\n     */\n\n  }, {\n    key: \"_getFlexStyleForColumn\",\n    value: function _getFlexStyleForColumn(column) {\n      var customStyle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var flexValue = \"\".concat(column.props.flexGrow, \" \").concat(column.props.flexShrink, \" \").concat(column.props.width, \"px\");\n\n      var style = _objectSpread({}, customStyle, {\n        flex: flexValue,\n        msFlex: flexValue,\n        WebkitFlex: flexValue\n      });\n\n      if (column.props.maxWidth) {\n        style.maxWidth = column.props.maxWidth;\n      }\n\n      if (column.props.minWidth) {\n        style.minWidth = column.props.minWidth;\n      }\n\n      return style;\n    }\n  }, {\n    key: \"_getHeaderColumns\",\n    value: function _getHeaderColumns() {\n      var _this4 = this;\n\n      var _this$props4 = this.props,\n          children = _this$props4.children,\n          disableHeader = _this$props4.disableHeader;\n      var items = disableHeader ? [] : React.Children.toArray(children);\n      return items.map(function (column, index) {\n        return _this4._createHeader({\n          column: column,\n          index: index\n        });\n      });\n    }\n  }, {\n    key: \"_getRowHeight\",\n    value: function _getRowHeight(rowIndex) {\n      var rowHeight = this.props.rowHeight;\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: rowIndex\n      }) : rowHeight;\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref7) {\n      var clientHeight = _ref7.clientHeight,\n          scrollHeight = _ref7.scrollHeight,\n          scrollTop = _ref7.scrollTop;\n      var onScroll = this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    }\n  }, {\n    key: \"_onSectionRendered\",\n    value: function _onSectionRendered(_ref8) {\n      var rowOverscanStartIndex = _ref8.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref8.rowOverscanStopIndex,\n          rowStartIndex = _ref8.rowStartIndex,\n          rowStopIndex = _ref8.rowStopIndex;\n      var onRowsRendered = this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    }\n  }, {\n    key: \"_setRef\",\n    value: function _setRef(ref) {\n      this.Grid = ref;\n    }\n  }, {\n    key: \"_setScrollbarWidth\",\n    value: function _setScrollbarWidth() {\n      var scrollbarWidth = this.getScrollbarWidth();\n      this.setState({\n        scrollbarWidth: scrollbarWidth\n      });\n    }\n  }]);\n\n  return Table;\n}(React.PureComponent);\n\n_defineProperty(Table, \"defaultProps\", {\n  disableHeader: false,\n  estimatedRowSize: 30,\n  headerHeight: 0,\n  headerStyle: {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  rowRenderer: defaultRowRenderer,\n  headerRowRenderer: defaultHeaderRowRenderer,\n  rowStyle: {},\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { Table as default };\nTable.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** This is just set on the grid top element. */\n  'aria-label': PropTypes.string,\n\n  /** This is just set on the grid top element. */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /** One or more Columns describing the data displayed in this row */\n  children: function children(props) {\n    var children = React.Children.toArray(props.children);\n\n    for (var i = 0; i < children.length; i++) {\n      var childType = children[i].type;\n\n      if (childType !== Column && !(childType.prototype instanceof Column)) {\n        return new Error('Table only accepts children of type Column');\n      }\n    }\n  },\n\n  /** Optional CSS class name */\n  className: PropTypes.string,\n\n  /** Disable rendering the header at all */\n  disableHeader: PropTypes.bool,\n\n  /**\n   * Used to estimate the total height of a Table before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  estimatedRowSize: PropTypes.number.isRequired,\n\n  /** Optional custom CSS class name to attach to inner Grid element. */\n  gridClassName: PropTypes.string,\n\n  /** Optional inline style to attach to inner Grid element. */\n  gridStyle: PropTypes.object,\n\n  /** Optional CSS class to apply to all column headers */\n  headerClassName: PropTypes.string,\n\n  /** Fixed height of header row */\n  headerHeight: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: any[],\n   *   style: any\n   * }): PropTypes.node\n   */\n  headerRowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table header columns. */\n  headerStyle: PropTypes.object,\n\n  /** Fixed/available height for out DOM element */\n  height: PropTypes.number.isRequired,\n\n  /** Optional id */\n  id: PropTypes.string,\n\n  /** Optional renderer to be used in place of table body rows when rowCount is 0 */\n  noRowsRenderer: PropTypes.func,\n\n  /**\n   * Optional callback when a column is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onColumnClick: PropTypes.func,\n\n  /**\n   * Optional callback when a column's header is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onHeaderClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user double-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowDoubleClick: PropTypes.func,\n\n  /**\n   * Callback invoked when the mouse leaves a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOut: PropTypes.func,\n\n  /**\n   * Callback invoked when a user moves the mouse over a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOver: PropTypes.func,\n\n  /**\n   * Callback invoked when a user right-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowRightClick: PropTypes.func,\n\n  /**\n   * Callback invoked with information about the slice of rows that were just rendered.\n   * ({ startIndex, stopIndex }): void\n   */\n  onRowsRendered: PropTypes.func,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, scrollHeight, scrollTop }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  overscanIndicesGetter: PropTypes.func.isRequired,\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  overscanRowCount: PropTypes.number.isRequired,\n\n  /**\n   * Optional CSS class to apply to all table rows (including the header row).\n   * This property can be a CSS class name (string) or a function that returns a class name.\n   * If a function is provided its signature should be: ({ index: number }): string\n   */\n  rowClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n\n  /**\n   * Callback responsible for returning a data row given an index.\n   * ({ index: number }): any\n   */\n  rowGetter: PropTypes.func.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * ({ index: number }): number\n   */\n  rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n\n  /** Number of rows in table. */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: Array,\n   *   index: number,\n   *   isScrolling: boolean,\n   *   onRowClick: ?Function,\n   *   onRowDoubleClick: ?Function,\n   *   onRowMouseOver: ?Function,\n   *   onRowMouseOut: ?Function,\n   *   rowData: any,\n   *   style: any\n   * }): PropTypes.node\n   */\n  rowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table rows. */\n  rowStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n\n  /** See Grid#scrollToAlignment */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  scrollToIndex: PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Sort function to be called if a sortable header is clicked.\n   * Should implement the following interface: ({\n   *   defaultSortDirection: 'ASC' | 'DESC',\n   *   event: MouseEvent,\n   *   sortBy: string,\n   *   sortDirection: SortDirection\n   * }): void\n   */\n  sort: PropTypes.func,\n\n  /** Table data is currently sorted by this :dataKey (if it is sorted at all) */\n  sortBy: PropTypes.string,\n\n  /** Table data is currently sorted in this direction (if it is sorted at all) */\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** Optional inline style */\n  style: PropTypes.object,\n\n  /** Tab index for focus */\n  tabIndex: PropTypes.number,\n\n  /** Width of list */\n  width: PropTypes.number.isRequired\n} : {};\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";","/**\n * Default accessor for returning a cell value for a given attribute.\n * This function expects to operate on either a vanilla Object or an Immutable Map.\n * You should override the column's cellDataGetter if your data is some other type of object.\n */\nexport default function defaultCellDataGetter(_ref) {\n  var dataKey = _ref.dataKey,\n      rowData = _ref.rowData;\n\n  if (typeof rowData.get === 'function') {\n    return rowData.get(dataKey);\n  } else {\n    return rowData[dataKey];\n  }\n}\nimport { bpfrpt_proptype_CellDataGetterParams } from \"./types\";","/**\n * Default cell renderer that displays an attribute as a simple string\n * You should override the column's cellRenderer if your data is some other type of object.\n */\nexport default function defaultCellRenderer(_ref) {\n  var cellData = _ref.cellData;\n\n  if (cellData == null) {\n    return '';\n  } else {\n    return String(cellData);\n  }\n}\nimport { bpfrpt_proptype_CellRendererParams } from \"./types\";","import createMultiSort from './createMultiSort';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer.js';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport Column from './Column';\nimport SortDirection from './SortDirection';\nimport SortIndicator from './SortIndicator';\nimport Table from './Table';\nexport default Table;\nexport { createMultiSort, defaultCellDataGetter, defaultCellRenderer, defaultHeaderRowRenderer, defaultHeaderRenderer, defaultRowRenderer, Column, SortDirection, SortIndicator, Table };","import { requestAnimationTimeout, cancelAnimationTimeout } from '../../utils/requestAnimationTimeout';\nvar mountedInstances = [];\nvar originalBodyPointerEvents = null;\nvar disablePointerEventsTimeoutId = null;\n\nfunction enablePointerEventsIfDisabled() {\n  if (disablePointerEventsTimeoutId) {\n    disablePointerEventsTimeoutId = null;\n\n    if (document.body && originalBodyPointerEvents != null) {\n      document.body.style.pointerEvents = originalBodyPointerEvents;\n    }\n\n    originalBodyPointerEvents = null;\n  }\n}\n\nfunction enablePointerEventsAfterDelayCallback() {\n  enablePointerEventsIfDisabled();\n  mountedInstances.forEach(function (instance) {\n    return instance.__resetIsScrolling();\n  });\n}\n\nfunction enablePointerEventsAfterDelay() {\n  if (disablePointerEventsTimeoutId) {\n    cancelAnimationTimeout(disablePointerEventsTimeoutId);\n  }\n\n  var maximumTimeout = 0;\n  mountedInstances.forEach(function (instance) {\n    maximumTimeout = Math.max(maximumTimeout, instance.props.scrollingResetTimeInterval);\n  });\n  disablePointerEventsTimeoutId = requestAnimationTimeout(enablePointerEventsAfterDelayCallback, maximumTimeout);\n}\n\nfunction onScrollWindow(event) {\n  if (event.currentTarget === window && originalBodyPointerEvents == null && document.body) {\n    originalBodyPointerEvents = document.body.style.pointerEvents;\n    document.body.style.pointerEvents = 'none';\n  }\n\n  enablePointerEventsAfterDelay();\n  mountedInstances.forEach(function (instance) {\n    if (instance.props.scrollElement === event.currentTarget) {\n      instance.__handleWindowScrollEvent();\n    }\n  });\n}\n\nexport function registerScrollListener(component, element) {\n  if (!mountedInstances.some(function (instance) {\n    return instance.props.scrollElement === element;\n  })) {\n    element.addEventListener('scroll', onScrollWindow);\n  }\n\n  mountedInstances.push(component);\n}\nexport function unregisterScrollListener(component, element) {\n  mountedInstances = mountedInstances.filter(function (instance) {\n    return instance !== component;\n  });\n\n  if (!mountedInstances.length) {\n    element.removeEventListener('scroll', onScrollWindow);\n\n    if (disablePointerEventsTimeoutId) {\n      cancelAnimationTimeout(disablePointerEventsTimeoutId);\n      enablePointerEventsIfDisabled();\n    }\n  }\n}\nimport { bpfrpt_proptype_WindowScroller } from \"../WindowScroller.js\";","/**\n * Gets the dimensions of the element, accounting for API differences between\n * `window` and other DOM elements.\n */\n// TODO Move this into WindowScroller and import from there\nvar isWindow = function isWindow(element) {\n  return element === window;\n};\n\nvar getBoundingBox = function getBoundingBox(element) {\n  return element.getBoundingClientRect();\n};\n\nexport function getDimensions(scrollElement, props) {\n  if (!scrollElement) {\n    return {\n      height: props.serverHeight,\n      width: props.serverWidth\n    };\n  } else if (isWindow(scrollElement)) {\n    var _window = window,\n        innerHeight = _window.innerHeight,\n        innerWidth = _window.innerWidth;\n    return {\n      height: typeof innerHeight === 'number' ? innerHeight : 0,\n      width: typeof innerWidth === 'number' ? innerWidth : 0\n    };\n  } else {\n    return getBoundingBox(scrollElement);\n  }\n}\n/**\n * Gets the vertical and horizontal position of an element within its scroll container.\n * Elements that have been “scrolled past” return negative values.\n * Handles edge-case where a user is navigating back (history) from an already-scrolled page.\n * In this case the body’s top or left position will be a negative number and this element’s top or left will be increased (by that amount).\n */\n\nexport function getPositionOffset(element, container) {\n  if (isWindow(container) && document.documentElement) {\n    var containerElement = document.documentElement;\n    var elementRect = getBoundingBox(element);\n    var containerRect = getBoundingBox(containerElement);\n    return {\n      top: elementRect.top - containerRect.top,\n      left: elementRect.left - containerRect.left\n    };\n  } else {\n    var scrollOffset = getScrollOffset(container);\n\n    var _elementRect = getBoundingBox(element);\n\n    var _containerRect = getBoundingBox(container);\n\n    return {\n      top: _elementRect.top + scrollOffset.top - _containerRect.top,\n      left: _elementRect.left + scrollOffset.left - _containerRect.left\n    };\n  }\n}\n/**\n * Gets the vertical and horizontal scroll amount of the element, accounting for IE compatibility\n * and API differences between `window` and other DOM elements.\n */\n\nexport function getScrollOffset(element) {\n  if (isWindow(element) && document.documentElement) {\n    return {\n      top: 'scrollY' in window ? window.scrollY : document.documentElement.scrollTop,\n      left: 'scrollX' in window ? window.scrollX : document.documentElement.scrollLeft\n    };\n  } else {\n    return {\n      top: element.scrollTop,\n      left: element.scrollLeft\n    };\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { registerScrollListener, unregisterScrollListener } from './utils/onScroll';\nimport { getDimensions, getPositionOffset, getScrollOffset } from './utils/dimensions';\nimport createDetectElementResize from '../vendor/detectElementResize';\n\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\nexport var IS_SCROLLING_TIMEOUT = 150;\n\nvar getWindow = function getWindow() {\n  return typeof window !== 'undefined' ? window : undefined;\n};\n\nvar WindowScroller = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(WindowScroller, _React$PureComponent);\n\n  function WindowScroller() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, WindowScroller);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(WindowScroller)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", getWindow());\n\n    _defineProperty(_assertThisInitialized(_this), \"_isMounted\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromTop\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromLeft\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", _objectSpread({}, getDimensions(_this.props.scrollElement, _this.props), {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    }));\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('WindowScroller registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onChildScroll\", function (_ref) {\n      var scrollTop = _ref.scrollTop;\n\n      if (_this.state.scrollTop === scrollTop) {\n        return;\n      }\n\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        if (typeof scrollElement.scrollTo === 'function') {\n          scrollElement.scrollTo(0, scrollTop + _this._positionFromTop);\n        } else {\n          scrollElement.scrollTop = scrollTop + _this._positionFromTop;\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerResizeListener\", function (element) {\n      if (element === window) {\n        window.addEventListener('resize', _this._onResize, false);\n      } else {\n        _this._detectElementResize.addResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_unregisterResizeListener\", function (element) {\n      if (element === window) {\n        window.removeEventListener('resize', _this._onResize, false);\n      } else if (element) {\n        _this._detectElementResize.removeResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__handleWindowScrollEvent\", function () {\n      if (!_this._isMounted) {\n        return;\n      }\n\n      var onScroll = _this.props.onScroll;\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        var scrollOffset = getScrollOffset(scrollElement);\n        var scrollLeft = Math.max(0, scrollOffset.left - _this._positionFromLeft);\n        var scrollTop = Math.max(0, scrollOffset.top - _this._positionFromTop);\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        onScroll({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__resetIsScrolling\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(WindowScroller, [{\n    key: \"updatePosition\",\n    value: function updatePosition() {\n      var scrollElement = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.scrollElement;\n      var onResize = this.props.onResize;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width;\n      var thisNode = this._child || ReactDOM.findDOMNode(this);\n\n      if (thisNode instanceof Element && scrollElement) {\n        var offset = getPositionOffset(thisNode, scrollElement);\n        this._positionFromTop = offset.top;\n        this._positionFromLeft = offset.left;\n      }\n\n      var dimensions = getDimensions(scrollElement, this.props);\n\n      if (height !== dimensions.height || width !== dimensions.width) {\n        this.setState({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n        onResize({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var scrollElement = this.props.scrollElement;\n      this._detectElementResize = createDetectElementResize();\n      this.updatePosition(scrollElement);\n\n      if (scrollElement) {\n        registerScrollListener(this, scrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n\n      this._isMounted = true;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var scrollElement = this.props.scrollElement;\n      var prevScrollElement = prevProps.scrollElement;\n\n      if (prevScrollElement !== scrollElement && prevScrollElement != null && scrollElement != null) {\n        this.updatePosition(scrollElement);\n        unregisterScrollListener(this, prevScrollElement);\n        registerScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(prevScrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var scrollElement = this.props.scrollElement;\n\n      if (scrollElement) {\n        unregisterScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(scrollElement);\n      }\n\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state2 = this.state,\n          isScrolling = _this$state2.isScrolling,\n          scrollTop = _this$state2.scrollTop,\n          scrollLeft = _this$state2.scrollLeft,\n          height = _this$state2.height,\n          width = _this$state2.width;\n      return children({\n        onChildScroll: this._onChildScroll,\n        registerChild: this._registerChild,\n        height: height,\n        isScrolling: isScrolling,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        width: width\n      });\n    }\n  }]);\n\n  return WindowScroller;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /**\n   * Function responsible for rendering children.\n   * This function should implement the following signature:\n   * ({ height, isScrolling, scrollLeft, scrollTop, width }) => PropTypes.element\n   */\n  \"children\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-resize: ({ height, width }) */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-scroll: ({ scrollLeft, scrollTop }) */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** Element to attach scroll event listeners. Defaults to window. */\n  \"scrollElement\": PropTypes.oneOfType([PropTypes.any, function () {\n    return (typeof Element === \"function\" ? PropTypes.instanceOf(Element) : PropTypes.any).apply(this, arguments);\n  }]),\n\n  /**\n   * Wait this amount of time after the last scroll event before resetting child `pointer-events`.\n   */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Height used for server-side rendering */\n  \"serverHeight\": PropTypes.number.isRequired,\n\n  /** Width used for server-side rendering */\n  \"serverWidth\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(WindowScroller, \"defaultProps\", {\n  onResize: function onResize() {},\n  onScroll: function onScroll() {},\n  scrollingResetTimeInterval: IS_SCROLLING_TIMEOUT,\n  scrollElement: getWindow(),\n  serverHeight: 0,\n  serverWidth: 0\n});\n\nexport { WindowScroller as default };\nimport PropTypes from \"prop-types\";","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport useTheme from '../styles/useTheme';\nimport IconButton from '../IconButton';\n/**\n * @ignore - internal component.\n */\n\nvar _ref = /*#__PURE__*/React.createElement(KeyboardArrowRight, null);\n\nvar _ref2 = /*#__PURE__*/React.createElement(KeyboardArrowLeft, null);\n\nvar _ref3 = /*#__PURE__*/React.createElement(KeyboardArrowLeft, null);\n\nvar _ref4 = /*#__PURE__*/React.createElement(KeyboardArrowRight, null);\n\nvar TablePaginationActions = /*#__PURE__*/React.forwardRef(function TablePaginationActions(props, ref) {\n  var backIconButtonProps = props.backIconButtonProps,\n      count = props.count,\n      nextIconButtonProps = props.nextIconButtonProps,\n      onChangePage = props.onChangePage,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      other = _objectWithoutProperties(props, [\"backIconButtonProps\", \"count\", \"nextIconButtonProps\", \"onChangePage\", \"page\", \"rowsPerPage\"]);\n\n  var theme = useTheme();\n\n  var handleBackButtonClick = function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  };\n\n  var handleNextButtonClick = function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(IconButton, _extends({\n    onClick: handleBackButtonClick,\n    disabled: page === 0,\n    color: \"inherit\"\n  }, backIconButtonProps), theme.direction === 'rtl' ? _ref : _ref2), /*#__PURE__*/React.createElement(IconButton, _extends({\n    onClick: handleNextButtonClick,\n    disabled: count !== -1 ? page >= Math.ceil(count / rowsPerPage) - 1 : false,\n    color: \"inherit\"\n  }, nextIconButtonProps), theme.direction === 'rtl' ? _ref3 : _ref4));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePaginationActions.propTypes = {\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) element.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onChangePage: PropTypes.func.isRequired,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: PropTypes.number.isRequired,\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired\n} : void 0;\nexport default TablePaginationActions;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@material-ui/utils';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport InputBase from '../InputBase';\nimport MenuItem from '../MenuItem';\nimport Select from '../Select';\nimport TableCell from '../TableCell';\nimport Toolbar from '../Toolbar';\nimport Typography from '../Typography';\nimport TablePaginationActions from './TablePaginationActions';\nimport useId from '../utils/unstable_useId';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.primary,\n      fontSize: theme.typography.pxToRem(14),\n      overflow: 'auto',\n      // Increase the specificity to override TableCell.\n      '&:last-child': {\n        padding: 0\n      }\n    },\n\n    /* Styles applied to the Toolbar component. */\n    toolbar: {\n      minHeight: 52,\n      paddingRight: 2\n    },\n\n    /* Styles applied to the spacer element. */\n    spacer: {\n      flex: '1 1 100%'\n    },\n\n    /* Styles applied to the caption Typography components if `variant=\"caption\"`. */\n    caption: {\n      flexShrink: 0\n    },\n    // TODO v5: `.selectRoot` should be merged with `.input`\n\n    /* Styles applied to the Select component root element. */\n    selectRoot: {\n      marginRight: 32,\n      marginLeft: 8\n    },\n\n    /* Styles applied to the Select component `select` class. */\n    select: {\n      paddingLeft: 8,\n      paddingRight: 24,\n      textAlign: 'right',\n      textAlignLast: 'right' // Align <select> on Chrome.\n\n    },\n    // TODO v5: remove\n\n    /* Styles applied to the Select component `icon` class. */\n    selectIcon: {},\n\n    /* Styles applied to the `InputBase` component. */\n    input: {\n      color: 'inherit',\n      fontSize: 'inherit',\n      flexShrink: 0\n    },\n\n    /* Styles applied to the MenuItem component. */\n    menuItem: {},\n\n    /* Styles applied to the internal `TablePaginationActions` component. */\n    actions: {\n      flexShrink: 0,\n      marginLeft: 20\n    }\n  };\n};\n\nvar defaultLabelDisplayedRows = function defaultLabelDisplayedRows(_ref) {\n  var from = _ref.from,\n      to = _ref.to,\n      count = _ref.count;\n  return \"\".concat(from, \"-\").concat(to, \" of \").concat(count !== -1 ? count : \"more than \".concat(to));\n};\n\nvar defaultRowsPerPageOptions = [10, 25, 50, 100];\n/**\n * A `TableCell` based component for placing inside `TableFooter` for pagination.\n */\n\nvar TablePagination = /*#__PURE__*/React.forwardRef(function TablePagination(props, ref) {\n  var _props$ActionsCompone = props.ActionsComponent,\n      ActionsComponent = _props$ActionsCompone === void 0 ? TablePaginationActions : _props$ActionsCompone,\n      backIconButtonProps = props.backIconButtonProps,\n      _props$backIconButton = props.backIconButtonText,\n      backIconButtonText = _props$backIconButton === void 0 ? 'Previous page' : _props$backIconButton,\n      classes = props.classes,\n      className = props.className,\n      colSpanProp = props.colSpan,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? TableCell : _props$component,\n      count = props.count,\n      _props$labelDisplayed = props.labelDisplayedRows,\n      labelDisplayedRows = _props$labelDisplayed === void 0 ? defaultLabelDisplayedRows : _props$labelDisplayed,\n      _props$labelRowsPerPa = props.labelRowsPerPage,\n      labelRowsPerPage = _props$labelRowsPerPa === void 0 ? 'Rows per page:' : _props$labelRowsPerPa,\n      nextIconButtonProps = props.nextIconButtonProps,\n      _props$nextIconButton = props.nextIconButtonText,\n      nextIconButtonText = _props$nextIconButton === void 0 ? 'Next page' : _props$nextIconButton,\n      onChangePage = props.onChangePage,\n      onChangeRowsPerPage = props.onChangeRowsPerPage,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      _props$rowsPerPageOpt = props.rowsPerPageOptions,\n      rowsPerPageOptions = _props$rowsPerPageOpt === void 0 ? defaultRowsPerPageOptions : _props$rowsPerPageOpt,\n      _props$SelectProps = props.SelectProps,\n      SelectProps = _props$SelectProps === void 0 ? {} : _props$SelectProps,\n      other = _objectWithoutProperties(props, [\"ActionsComponent\", \"backIconButtonProps\", \"backIconButtonText\", \"classes\", \"className\", \"colSpan\", \"component\", \"count\", \"labelDisplayedRows\", \"labelRowsPerPage\", \"nextIconButtonProps\", \"nextIconButtonText\", \"onChangePage\", \"onChangeRowsPerPage\", \"page\", \"rowsPerPage\", \"rowsPerPageOptions\", \"SelectProps\"]);\n\n  var colSpan;\n\n  if (Component === TableCell || Component === 'td') {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n\n  var selectId = useId();\n  var labelId = useId();\n  var MenuItemComponent = SelectProps.native ? 'option' : MenuItem;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    colSpan: colSpan,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(Toolbar, {\n    className: classes.toolbar\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.spacer\n  }), rowsPerPageOptions.length > 1 && /*#__PURE__*/React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"body2\",\n    className: classes.caption,\n    id: labelId\n  }, labelRowsPerPage), rowsPerPageOptions.length > 1 && /*#__PURE__*/React.createElement(Select, _extends({\n    classes: {\n      select: classes.select,\n      icon: classes.selectIcon\n    },\n    input: /*#__PURE__*/React.createElement(InputBase, {\n      className: clsx(classes.input, classes.selectRoot)\n    }),\n    value: rowsPerPage,\n    onChange: onChangeRowsPerPage,\n    id: selectId,\n    labelId: labelId\n  }, SelectProps), rowsPerPageOptions.map(function (rowsPerPageOption) {\n    return /*#__PURE__*/React.createElement(MenuItemComponent, {\n      className: classes.menuItem,\n      key: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption,\n      value: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption\n    }, rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption);\n  })), /*#__PURE__*/React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"body2\",\n    className: classes.caption\n  }, labelDisplayedRows({\n    from: count === 0 ? 0 : page * rowsPerPage + 1,\n    to: count !== -1 ? Math.min(count, (page + 1) * rowsPerPage) : (page + 1) * rowsPerPage,\n    count: count === -1 ? -1 : count,\n    page: page\n  })), /*#__PURE__*/React.createElement(ActionsComponent, {\n    className: classes.actions,\n    backIconButtonProps: _extends({\n      title: backIconButtonText,\n      'aria-label': backIconButtonText\n    }, backIconButtonProps),\n    count: count,\n    nextIconButtonProps: _extends({\n      title: nextIconButtonText,\n      'aria-label': nextIconButtonText\n    }, nextIconButtonProps),\n    onChangePage: onChangePage,\n    page: page,\n    rowsPerPage: rowsPerPage\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePagination.propTypes = {\n  /**\n   * The component used for displaying the actions.\n   * Either a string to use a HTML element or a component.\n   */\n  ActionsComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) component.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * Text label for the back arrow icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  backIconButtonText: PropTypes.string,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * The total number of rows.\n   *\n   * To enable server side pagination for an unknown number of items, provide -1.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`\n   * object.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  labelDisplayedRows: PropTypes.func,\n\n  /**\n   * Customize the rows per page label.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  labelRowsPerPage: PropTypes.node,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Text label for the next arrow icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  nextIconButtonText: PropTypes.string,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onChangePage: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onChangeRowsPerPage: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(PropTypes.number.isRequired, function (props) {\n    var count = props.count,\n        page = props.page,\n        rowsPerPage = props.rowsPerPage;\n\n    if (count === -1) {\n      return null;\n    }\n\n    var newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n\n    if (page < 0 || page > newLastPage) {\n      return new Error('Material-UI: The page prop of a TablePagination is out of range ' + \"(0 to \".concat(newLastPage, \", but page is \").concat(page, \").\"));\n    }\n\n    return null;\n  }),\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired,\n\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   */\n  rowsPerPageOptions: PropTypes.array,\n\n  /**\n   * Props applied to the rows per page [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTablePagination'\n})(TablePagination);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport ArrowDownwardIcon from '../internal/svg-icons/ArrowDownward';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      cursor: 'pointer',\n      display: 'inline-flex',\n      justifyContent: 'flex-start',\n      flexDirection: 'inherit',\n      alignItems: 'center',\n      '&:focus': {\n        color: theme.palette.text.secondary\n      },\n      '&:hover': {\n        color: theme.palette.text.secondary,\n        '& $icon': {\n          opacity: 0.5\n        }\n      },\n      '&$active': {\n        color: theme.palette.text.primary,\n        // && instead of & is a workaround for https://github.com/cssinjs/jss/issues/1045\n        '&& $icon': {\n          opacity: 1,\n          color: theme.palette.text.secondary\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the root element if `active={true}`. */\n    active: {},\n\n    /* Styles applied to the icon component. */\n    icon: {\n      fontSize: 18,\n      marginRight: 4,\n      marginLeft: 4,\n      opacity: 0,\n      transition: theme.transitions.create(['opacity', 'transform'], {\n        duration: theme.transitions.duration.shorter\n      }),\n      userSelect: 'none'\n    },\n\n    /* Styles applied to the icon component if `direction=\"desc\"`. */\n    iconDirectionDesc: {\n      transform: 'rotate(0deg)'\n    },\n\n    /* Styles applied to the icon component if `direction=\"asc\"`. */\n    iconDirectionAsc: {\n      transform: 'rotate(180deg)'\n    }\n  };\n};\n/**\n * A button based label for placing inside `TableCell` for column sorting.\n */\n\nvar TableSortLabel = /*#__PURE__*/React.forwardRef(function TableSortLabel(props, ref) {\n  var _props$active = props.active,\n      active = _props$active === void 0 ? false : _props$active,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'asc' : _props$direction,\n      _props$hideSortIcon = props.hideSortIcon,\n      hideSortIcon = _props$hideSortIcon === void 0 ? false : _props$hideSortIcon,\n      _props$IconComponent = props.IconComponent,\n      IconComponent = _props$IconComponent === void 0 ? ArrowDownwardIcon : _props$IconComponent,\n      other = _objectWithoutProperties(props, [\"active\", \"children\", \"classes\", \"className\", \"direction\", \"hideSortIcon\", \"IconComponent\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className, active && classes.active),\n    component: \"span\",\n    disableRipple: true,\n    ref: ref\n  }, other), children, hideSortIcon && !active ? null : /*#__PURE__*/React.createElement(IconComponent, {\n    className: clsx(classes.icon, classes[\"iconDirection\".concat(capitalize(direction))])\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableSortLabel.propTypes = {\n  /**\n   * If `true`, the label will have the active styling (should be true for the sorted column).\n   */\n  active: PropTypes.bool,\n\n  /**\n   * Label contents, the arrow will be appended automatically.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The current sort direction.\n   */\n  direction: PropTypes.oneOf(['asc', 'desc']),\n\n  /**\n   * Hide sort icon when active is false.\n   */\n  hideSortIcon: PropTypes.bool,\n\n  /**\n   * Sort icon to use.\n   */\n  IconComponent: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableSortLabel'\n})(TableSortLabel);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport TableContext from './TableContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'table',\n      width: '100%',\n      borderCollapse: 'collapse',\n      borderSpacing: 0,\n      '& caption': _extends({}, theme.typography.body2, {\n        padding: theme.spacing(2),\n        color: theme.palette.text.secondary,\n        textAlign: 'left',\n        captionSide: 'bottom'\n      })\n    },\n\n    /* Styles applied to the root element if `stickyHeader={true}`. */\n    stickyHeader: {\n      borderCollapse: 'separate'\n    }\n  };\n};\nvar defaultComponent = 'table';\nvar Table = /*#__PURE__*/React.forwardRef(function Table(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      _props$padding = props.padding,\n      padding = _props$padding === void 0 ? 'default' : _props$padding,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$stickyHeader = props.stickyHeader,\n      stickyHeader = _props$stickyHeader === void 0 ? false : _props$stickyHeader,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"padding\", \"size\", \"stickyHeader\"]);\n\n  var table = React.useMemo(function () {\n    return {\n      padding: padding,\n      size: size,\n      stickyHeader: stickyHeader\n    };\n  }, [padding, size, stickyHeader]);\n  return /*#__PURE__*/React.createElement(TableContext.Provider, {\n    value: table\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    role: Component === defaultComponent ? null : 'table',\n    ref: ref,\n    className: clsx(classes.root, className, stickyHeader && classes.stickyHeader)\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Table.propTypes = {\n  /**\n   * The content of the table, normally `TableHead` and `TableBody`.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Allows TableCells to inherit padding of the Table.\n   */\n  padding: PropTypes.oneOf(['default', 'checkbox', 'none']),\n\n  /**\n   * Allows TableCells to inherit size of the Table.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * Set the header sticky.\n   *\n   * ⚠️ It doesn't work with IE 11.\n   */\n  stickyHeader: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTable'\n})(Table);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table-footer-group'\n  }\n};\nvar tablelvl2 = {\n  variant: 'footer'\n};\nvar defaultComponent = 'tfoot';\nvar TableFooter = /*#__PURE__*/React.forwardRef(function TableFooter(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Tablelvl2Context.Provider, {\n    value: tablelvl2\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: Component === defaultComponent ? null : 'rowgroup'\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableFooter.propTypes = {\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableFooter'\n})(TableFooter);","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import { deepmerge } from '@material-ui/utils';\nimport createMuiTheme from './createMuiTheme';\nexport default function createMuiStrictModeTheme(options) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  return createMuiTheme.apply(void 0, [deepmerge({\n    unstable_strictMode: true\n  }, options)].concat(args));\n}","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nexport function isUnitless(value) {\n  return String(parseFloat(value)).length === String(value).length;\n} // Ported from Compass\n// https://github.com/Compass/compass/blob/master/core/stylesheets/compass/typography/_units.scss\n// Emulate the sass function \"unit\"\n\nexport function getUnit(input) {\n  return String(input).match(/[\\d.\\-+]*\\s*(.*)/)[1] || '';\n} // Emulate the sass function \"unitless\"\n\nexport function toUnitless(length) {\n  return parseFloat(length);\n} // Convert any CSS <length> or <percentage> value to any another.\n// From https://github.com/KyleAMathews/convert-css-length\n\nexport function convertLength(baseFontSize) {\n  return function (length, toUnit) {\n    var fromUnit = getUnit(length); // Optimize for cases where `from` and `to` units are accidentally the same.\n\n    if (fromUnit === toUnit) {\n      return length;\n    } // Convert input length to pixels.\n\n\n    var pxLength = toUnitless(length);\n\n    if (fromUnit !== 'px') {\n      if (fromUnit === 'em') {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n      } else if (fromUnit === 'rem') {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n        return length;\n      }\n    } // Convert length in pixels to the output unit\n\n\n    var outputLength = pxLength;\n\n    if (toUnit !== 'px') {\n      if (toUnit === 'em') {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else if (toUnit === 'rem') {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else {\n        return length;\n      }\n    }\n\n    return parseFloat(outputLength.toFixed(5)) + toUnit;\n  };\n}\nexport function alignProperty(_ref) {\n  var size = _ref.size,\n      grid = _ref.grid;\n  var sizeBelow = size - size % grid;\n  var sizeAbove = sizeBelow + grid;\n  return size - sizeBelow < sizeAbove - size ? sizeBelow : sizeAbove;\n} // fontGrid finds a minimal grid (in rem) for the fontSize values so that the\n// lineHeight falls under a x pixels grid, 4px in the case of Material Design,\n// without changing the relative line height\n\nexport function fontGrid(_ref2) {\n  var lineHeight = _ref2.lineHeight,\n      pixels = _ref2.pixels,\n      htmlFontSize = _ref2.htmlFontSize;\n  return pixels / (lineHeight * htmlFontSize);\n}\n/**\n * generate a responsive version of a given CSS property\n * @example\n * responsiveProperty({\n *   cssProperty: 'fontSize',\n *   min: 15,\n *   max: 20,\n *   unit: 'px',\n *   breakpoints: [300, 600],\n * })\n *\n * // this returns\n *\n * {\n *   fontSize: '15px',\n *   '@media (min-width:300px)': {\n *     fontSize: '17.5px',\n *   },\n *   '@media (min-width:600px)': {\n *     fontSize: '20px',\n *   },\n * }\n *\n * @param {Object} params\n * @param {string} params.cssProperty - The CSS property to be made responsive\n * @param {number} params.min - The smallest value of the CSS property\n * @param {number} params.max - The largest value of the CSS property\n * @param {string} [params.unit] - The unit to be used for the CSS property\n * @param {Array.number} [params.breakpoints]  - An array of breakpoints\n * @param {number} [params.alignStep] - Round scaled value to fall under this grid\n * @returns {Object} responsive styles for {params.cssProperty}\n */\n\nexport function responsiveProperty(_ref3) {\n  var cssProperty = _ref3.cssProperty,\n      min = _ref3.min,\n      max = _ref3.max,\n      _ref3$unit = _ref3.unit,\n      unit = _ref3$unit === void 0 ? 'rem' : _ref3$unit,\n      _ref3$breakpoints = _ref3.breakpoints,\n      breakpoints = _ref3$breakpoints === void 0 ? [600, 960, 1280] : _ref3$breakpoints,\n      _ref3$transform = _ref3.transform,\n      transform = _ref3$transform === void 0 ? null : _ref3$transform;\n\n  var output = _defineProperty({}, cssProperty, \"\".concat(min).concat(unit));\n\n  var factor = (max - min) / breakpoints[breakpoints.length - 1];\n  breakpoints.forEach(function (breakpoint) {\n    var value = min + factor * breakpoint;\n\n    if (transform !== null) {\n      value = transform(value);\n    }\n\n    output[\"@media (min-width:\".concat(breakpoint, \"px)\")] = _defineProperty({}, cssProperty, \"\".concat(Math.round(value * 10000) / 10000).concat(unit));\n  });\n  return output;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@material-ui/utils\";\nimport { isUnitless, convertLength, responsiveProperty, alignProperty, fontGrid } from './cssUtils';\nexport default function responsiveFontSizes(themeInput) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$breakpoints = options.breakpoints,\n      breakpoints = _options$breakpoints === void 0 ? ['sm', 'md', 'lg'] : _options$breakpoints,\n      _options$disableAlign = options.disableAlign,\n      disableAlign = _options$disableAlign === void 0 ? false : _options$disableAlign,\n      _options$factor = options.factor,\n      factor = _options$factor === void 0 ? 2 : _options$factor,\n      _options$variants = options.variants,\n      variants = _options$variants === void 0 ? ['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline'] : _options$variants;\n\n  var theme = _extends({}, themeInput);\n\n  theme.typography = _extends({}, theme.typography);\n  var typography = theme.typography; // Convert between css lengths e.g. em->px or px->rem\n  // Set the baseFontSize for your project. Defaults to 16px (also the browser default).\n\n  var convert = convertLength(typography.htmlFontSize);\n  var breakpointValues = breakpoints.map(function (x) {\n    return theme.breakpoints.values[x];\n  });\n  variants.forEach(function (variant) {\n    var style = typography[variant];\n    var remFontSize = parseFloat(convert(style.fontSize, 'rem'));\n\n    if (remFontSize <= 1) {\n      return;\n    }\n\n    var maxFontSize = remFontSize;\n    var minFontSize = 1 + (maxFontSize - 1) / factor;\n    var lineHeight = style.lineHeight;\n\n    if (!isUnitless(lineHeight) && !disableAlign) {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? \"Material-UI: Unsupported non-unitless line height with grid alignment.\\nUse unitless line heights instead.\" : _formatMuiErrorMessage(6));\n    }\n\n    if (!isUnitless(lineHeight)) {\n      // make it unitless\n      lineHeight = parseFloat(convert(lineHeight, 'rem')) / parseFloat(remFontSize);\n    }\n\n    var transform = null;\n\n    if (!disableAlign) {\n      transform = function transform(value) {\n        return alignProperty({\n          size: value,\n          grid: fontGrid({\n            pixels: 4,\n            lineHeight: lineHeight,\n            htmlFontSize: typography.htmlFontSize\n          })\n        });\n      };\n    }\n\n    typography[variant] = _extends({}, style, responsiveProperty({\n      cssProperty: 'fontSize',\n      min: minFontSize,\n      max: maxFontSize,\n      unit: 'rem',\n      breakpoints: breakpointValues,\n      transform: transform\n    }));\n  });\n  return theme;\n}","import { withThemeCreator } from '@material-ui/styles';\nimport defaultTheme from './defaultTheme';\nvar withTheme = withThemeCreator({\n  defaultTheme: defaultTheme\n});\nexport default withTheme;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","var _typeof = require(\"../helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bpfrpt_proptype_VisibleCellRange = exports.bpfrpt_proptype_Alignment = exports.bpfrpt_proptype_OverscanIndicesGetter = exports.bpfrpt_proptype_OverscanIndices = exports.bpfrpt_proptype_OverscanIndicesGetterParams = exports.bpfrpt_proptype_RenderedSection = exports.bpfrpt_proptype_ScrollbarPresenceChange = exports.bpfrpt_proptype_Scroll = exports.bpfrpt_proptype_NoContentRenderer = exports.bpfrpt_proptype_CellSize = exports.bpfrpt_proptype_CellSizeGetter = exports.bpfrpt_proptype_CellRangeRenderer = exports.bpfrpt_proptype_CellRangeRendererParams = exports.bpfrpt_proptype_StyleCache = exports.bpfrpt_proptype_CellCache = exports.bpfrpt_proptype_CellRenderer = exports.bpfrpt_proptype_CellRendererParams = exports.bpfrpt_proptype_CellPosition = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _ScalingCellSizeAndPositionManager = _interopRequireDefault(require(\"./utils/ScalingCellSizeAndPositionManager\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar bpfrpt_proptype_CellPosition = process.env.NODE_ENV === 'production' ? null : {\n  \"columnIndex\": _propTypes[\"default\"].number.isRequired,\n  \"rowIndex\": _propTypes[\"default\"].number.isRequired\n};\nexports.bpfrpt_proptype_CellPosition = bpfrpt_proptype_CellPosition;\nvar bpfrpt_proptype_CellRendererParams = process.env.NODE_ENV === 'production' ? null : {\n  \"columnIndex\": _propTypes[\"default\"].number.isRequired,\n  \"isScrolling\": _propTypes[\"default\"].bool.isRequired,\n  \"isVisible\": _propTypes[\"default\"].bool.isRequired,\n  \"key\": _propTypes[\"default\"].string.isRequired,\n  \"parent\": _propTypes[\"default\"].object.isRequired,\n  \"rowIndex\": _propTypes[\"default\"].number.isRequired,\n  \"style\": _propTypes[\"default\"].object.isRequired\n};\nexports.bpfrpt_proptype_CellRendererParams = bpfrpt_proptype_CellRendererParams;\nvar bpfrpt_proptype_CellRenderer = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].func;\nexports.bpfrpt_proptype_CellRenderer = bpfrpt_proptype_CellRenderer;\nvar bpfrpt_proptype_CellCache = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].objectOf(_propTypes[\"default\"].node.isRequired);\nexports.bpfrpt_proptype_CellCache = bpfrpt_proptype_CellCache;\nvar bpfrpt_proptype_StyleCache = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].objectOf(_propTypes[\"default\"].object.isRequired);\nexports.bpfrpt_proptype_StyleCache = bpfrpt_proptype_StyleCache;\nvar bpfrpt_proptype_CellRangeRendererParams = process.env.NODE_ENV === 'production' ? null : {\n  \"cellCache\": _propTypes[\"default\"].objectOf(_propTypes[\"default\"].node.isRequired).isRequired,\n  \"cellRenderer\": _propTypes[\"default\"].func.isRequired,\n  \"columnSizeAndPositionManager\": function columnSizeAndPositionManager() {\n    return (typeof _ScalingCellSizeAndPositionManager[\"default\"] === \"function\" ? _propTypes[\"default\"].instanceOf(_ScalingCellSizeAndPositionManager[\"default\"]).isRequired : _propTypes[\"default\"].any.isRequired).apply(this, arguments);\n  },\n  \"columnStartIndex\": _propTypes[\"default\"].number.isRequired,\n  \"columnStopIndex\": _propTypes[\"default\"].number.isRequired,\n  \"deferredMeasurementCache\": _propTypes[\"default\"].object,\n  \"horizontalOffsetAdjustment\": _propTypes[\"default\"].number.isRequired,\n  \"isScrolling\": _propTypes[\"default\"].bool.isRequired,\n  \"isScrollingOptOut\": _propTypes[\"default\"].bool.isRequired,\n  \"parent\": _propTypes[\"default\"].object.isRequired,\n  \"rowSizeAndPositionManager\": function rowSizeAndPositionManager() {\n    return (typeof _ScalingCellSizeAndPositionManager[\"default\"] === \"function\" ? _propTypes[\"default\"].instanceOf(_ScalingCellSizeAndPositionManager[\"default\"]).isRequired : _propTypes[\"default\"].any.isRequired).apply(this, arguments);\n  },\n  \"rowStartIndex\": _propTypes[\"default\"].number.isRequired,\n  \"rowStopIndex\": _propTypes[\"default\"].number.isRequired,\n  \"scrollLeft\": _propTypes[\"default\"].number.isRequired,\n  \"scrollTop\": _propTypes[\"default\"].number.isRequired,\n  \"styleCache\": _propTypes[\"default\"].objectOf(_propTypes[\"default\"].object.isRequired).isRequired,\n  \"verticalOffsetAdjustment\": _propTypes[\"default\"].number.isRequired,\n  \"visibleColumnIndices\": _propTypes[\"default\"].object.isRequired,\n  \"visibleRowIndices\": _propTypes[\"default\"].object.isRequired\n};\nexports.bpfrpt_proptype_CellRangeRendererParams = bpfrpt_proptype_CellRangeRendererParams;\nvar bpfrpt_proptype_CellRangeRenderer = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].func;\nexports.bpfrpt_proptype_CellRangeRenderer = bpfrpt_proptype_CellRangeRenderer;\nvar bpfrpt_proptype_CellSizeGetter = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].func;\nexports.bpfrpt_proptype_CellSizeGetter = bpfrpt_proptype_CellSizeGetter;\nvar bpfrpt_proptype_CellSize = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].func, _propTypes[\"default\"].number]);\nexports.bpfrpt_proptype_CellSize = bpfrpt_proptype_CellSize;\nvar bpfrpt_proptype_NoContentRenderer = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].func;\nexports.bpfrpt_proptype_NoContentRenderer = bpfrpt_proptype_NoContentRenderer;\nvar bpfrpt_proptype_Scroll = process.env.NODE_ENV === 'production' ? null : {\n  \"clientHeight\": _propTypes[\"default\"].number.isRequired,\n  \"clientWidth\": _propTypes[\"default\"].number.isRequired,\n  \"scrollHeight\": _propTypes[\"default\"].number.isRequired,\n  \"scrollLeft\": _propTypes[\"default\"].number.isRequired,\n  \"scrollTop\": _propTypes[\"default\"].number.isRequired,\n  \"scrollWidth\": _propTypes[\"default\"].number.isRequired\n};\nexports.bpfrpt_proptype_Scroll = bpfrpt_proptype_Scroll;\nvar bpfrpt_proptype_ScrollbarPresenceChange = process.env.NODE_ENV === 'production' ? null : {\n  \"horizontal\": _propTypes[\"default\"].bool.isRequired,\n  \"vertical\": _propTypes[\"default\"].bool.isRequired,\n  \"size\": _propTypes[\"default\"].number.isRequired\n};\nexports.bpfrpt_proptype_ScrollbarPresenceChange = bpfrpt_proptype_ScrollbarPresenceChange;\nvar bpfrpt_proptype_RenderedSection = process.env.NODE_ENV === 'production' ? null : {\n  \"columnOverscanStartIndex\": _propTypes[\"default\"].number.isRequired,\n  \"columnOverscanStopIndex\": _propTypes[\"default\"].number.isRequired,\n  \"columnStartIndex\": _propTypes[\"default\"].number.isRequired,\n  \"columnStopIndex\": _propTypes[\"default\"].number.isRequired,\n  \"rowOverscanStartIndex\": _propTypes[\"default\"].number.isRequired,\n  \"rowOverscanStopIndex\": _propTypes[\"default\"].number.isRequired,\n  \"rowStartIndex\": _propTypes[\"default\"].number.isRequired,\n  \"rowStopIndex\": _propTypes[\"default\"].number.isRequired\n};\nexports.bpfrpt_proptype_RenderedSection = bpfrpt_proptype_RenderedSection;\nvar bpfrpt_proptype_OverscanIndicesGetterParams = process.env.NODE_ENV === 'production' ? null : {\n  // One of SCROLL_DIRECTION_HORIZONTAL or SCROLL_DIRECTION_VERTICAL\n  \"direction\": _propTypes[\"default\"].oneOf([\"horizontal\", \"vertical\"]).isRequired,\n  // One of SCROLL_DIRECTION_BACKWARD or SCROLL_DIRECTION_FORWARD\n  \"scrollDirection\": _propTypes[\"default\"].oneOf([-1, 1]).isRequired,\n  // Number of rows or columns in the current axis\n  \"cellCount\": _propTypes[\"default\"].number.isRequired,\n  // Maximum number of cells to over-render in either direction\n  \"overscanCellsCount\": _propTypes[\"default\"].number.isRequired,\n  // Begin of range of visible cells\n  \"startIndex\": _propTypes[\"default\"].number.isRequired,\n  // End of range of visible cells\n  \"stopIndex\": _propTypes[\"default\"].number.isRequired\n};\nexports.bpfrpt_proptype_OverscanIndicesGetterParams = bpfrpt_proptype_OverscanIndicesGetterParams;\nvar bpfrpt_proptype_OverscanIndices = process.env.NODE_ENV === 'production' ? null : {\n  \"overscanStartIndex\": _propTypes[\"default\"].number.isRequired,\n  \"overscanStopIndex\": _propTypes[\"default\"].number.isRequired\n};\nexports.bpfrpt_proptype_OverscanIndices = bpfrpt_proptype_OverscanIndices;\nvar bpfrpt_proptype_OverscanIndicesGetter = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].func;\nexports.bpfrpt_proptype_OverscanIndicesGetter = bpfrpt_proptype_OverscanIndicesGetter;\nvar bpfrpt_proptype_Alignment = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].oneOf([\"auto\", \"end\", \"start\", \"center\"]);\nexports.bpfrpt_proptype_Alignment = bpfrpt_proptype_Alignment;\nvar bpfrpt_proptype_VisibleCellRange = process.env.NODE_ENV === 'production' ? null : {\n  \"start\": _propTypes[\"default\"].number,\n  \"stop\": _propTypes[\"default\"].number\n};\nexports.bpfrpt_proptype_VisibleCellRange = bpfrpt_proptype_VisibleCellRange;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nfunction componentWillMount() {\n  // Call this.constructor.gDSFP to support sub-classes.\n  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);\n  if (state !== null && state !== undefined) {\n    this.setState(state);\n  }\n}\n\nfunction componentWillReceiveProps(nextProps) {\n  // Call this.constructor.gDSFP to support sub-classes.\n  // Use the setState() updater to ensure state isn't stale in certain edge cases.\n  function updater(prevState) {\n    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);\n    return state !== null && state !== undefined ? state : null;\n  }\n  // Binding \"this\" is important for shallow renderer support.\n  this.setState(updater.bind(this));\n}\n\nfunction componentWillUpdate(nextProps, nextState) {\n  try {\n    var prevProps = this.props;\n    var prevState = this.state;\n    this.props = nextProps;\n    this.state = nextState;\n    this.__reactInternalSnapshotFlag = true;\n    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(\n      prevProps,\n      prevState\n    );\n  } finally {\n    this.props = prevProps;\n    this.state = prevState;\n  }\n}\n\n// React may warn about cWM/cWRP/cWU methods being deprecated.\n// Add a flag to suppress these warnings for this special case.\ncomponentWillMount.__suppressDeprecationWarning = true;\ncomponentWillReceiveProps.__suppressDeprecationWarning = true;\ncomponentWillUpdate.__suppressDeprecationWarning = true;\n\nfunction polyfill(Component) {\n  var prototype = Component.prototype;\n\n  if (!prototype || !prototype.isReactComponent) {\n    throw new Error('Can only polyfill class components');\n  }\n\n  if (\n    typeof Component.getDerivedStateFromProps !== 'function' &&\n    typeof prototype.getSnapshotBeforeUpdate !== 'function'\n  ) {\n    return Component;\n  }\n\n  // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n  // Error if any of these lifecycles are present,\n  // Because they would work differently between older and newer (16.3+) versions of React.\n  var foundWillMountName = null;\n  var foundWillReceivePropsName = null;\n  var foundWillUpdateName = null;\n  if (typeof prototype.componentWillMount === 'function') {\n    foundWillMountName = 'componentWillMount';\n  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {\n    foundWillMountName = 'UNSAFE_componentWillMount';\n  }\n  if (typeof prototype.componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'componentWillReceiveProps';\n  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n  }\n  if (typeof prototype.componentWillUpdate === 'function') {\n    foundWillUpdateName = 'componentWillUpdate';\n  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {\n    foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n  }\n  if (\n    foundWillMountName !== null ||\n    foundWillReceivePropsName !== null ||\n    foundWillUpdateName !== null\n  ) {\n    var componentName = Component.displayName || Component.name;\n    var newApiName =\n      typeof Component.getDerivedStateFromProps === 'function'\n        ? 'getDerivedStateFromProps()'\n        : 'getSnapshotBeforeUpdate()';\n\n    throw Error(\n      'Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' +\n        componentName +\n        ' uses ' +\n        newApiName +\n        ' but also contains the following legacy lifecycles:' +\n        (foundWillMountName !== null ? '\\n  ' + foundWillMountName : '') +\n        (foundWillReceivePropsName !== null\n          ? '\\n  ' + foundWillReceivePropsName\n          : '') +\n        (foundWillUpdateName !== null ? '\\n  ' + foundWillUpdateName : '') +\n        '\\n\\nThe above lifecycles should be removed. Learn more about this warning here:\\n' +\n        'https://fb.me/react-async-component-lifecycle-hooks'\n    );\n  }\n\n  // React <= 16.2 does not support static getDerivedStateFromProps.\n  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.\n  // Newer versions of React will ignore these lifecycles if gDSFP exists.\n  if (typeof Component.getDerivedStateFromProps === 'function') {\n    prototype.componentWillMount = componentWillMount;\n    prototype.componentWillReceiveProps = componentWillReceiveProps;\n  }\n\n  // React <= 16.2 does not support getSnapshotBeforeUpdate.\n  // As a workaround, use cWU to invoke the new lifecycle.\n  // Newer versions of React will ignore that lifecycle if gSBU exists.\n  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {\n    if (typeof prototype.componentDidUpdate !== 'function') {\n      throw new Error(\n        'Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype'\n      );\n    }\n\n    prototype.componentWillUpdate = componentWillUpdate;\n\n    var componentDidUpdate = prototype.componentDidUpdate;\n\n    prototype.componentDidUpdate = function componentDidUpdatePolyfill(\n      prevProps,\n      prevState,\n      maybeSnapshot\n    ) {\n      // 16.3+ will not execute our will-update method;\n      // It will pass a snapshot value to did-update though.\n      // Older versions will require our polyfilled will-update value.\n      // We need to handle both cases, but can't just check for the presence of \"maybeSnapshot\",\n      // Because for <= 15.x versions this might be a \"prevContext\" object.\n      // We also can't just check \"__reactInternalSnapshot\",\n      // Because get-snapshot might return a falsy value.\n      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.\n      var snapshot = this.__reactInternalSnapshotFlag\n        ? this.__reactInternalSnapshot\n        : maybeSnapshot;\n\n      componentDidUpdate.call(this, prevProps, prevState, snapshot);\n    };\n  }\n\n  return Component;\n}\n\nexport { polyfill };\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _CellSizeAndPositionManager = _interopRequireDefault(require(\"./CellSizeAndPositionManager\"));\n\nvar _maxElementSize = require(\"./maxElementSize.js\");\n\nvar _types = require(\"../types\");\n\n/**\n * Extends CellSizeAndPositionManager and adds scaling behavior for lists that are too large to fit within a browser's native limits.\n */\nvar ScalingCellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  function ScalingCellSizeAndPositionManager(_ref) {\n    var _ref$maxScrollSize = _ref.maxScrollSize,\n        maxScrollSize = _ref$maxScrollSize === void 0 ? (0, _maxElementSize.getMaxElementSize)() : _ref$maxScrollSize,\n        params = (0, _objectWithoutProperties2[\"default\"])(_ref, [\"maxScrollSize\"]);\n    (0, _classCallCheck2[\"default\"])(this, ScalingCellSizeAndPositionManager);\n    (0, _defineProperty2[\"default\"])(this, \"_cellSizeAndPositionManager\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_maxScrollSize\", void 0);\n    // Favor composition over inheritance to simplify IE10 support\n    this._cellSizeAndPositionManager = new _CellSizeAndPositionManager[\"default\"](params);\n    this._maxScrollSize = maxScrollSize;\n  }\n\n  (0, _createClass2[\"default\"])(ScalingCellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return this._cellSizeAndPositionManager.getTotalSize() > this._maxScrollSize;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(params) {\n      this._cellSizeAndPositionManager.configure(params);\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellSizeAndPositionManager.getCellCount();\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._cellSizeAndPositionManager.getEstimatedCellSize();\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._cellSizeAndPositionManager.getLastMeasuredIndex();\n    }\n    /**\n     * Number of pixels a cell at the given position (offset) should be shifted in order to fit within the scaled container.\n     * The offset passed to this function is scaled (safe) as well.\n     */\n\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment(_ref2) {\n      var containerSize = _ref2.containerSize,\n          offset = _ref2.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      var offsetPercentage = this._getOffsetPercentage({\n        containerSize: containerSize,\n        offset: offset,\n        totalSize: safeTotalSize\n      });\n\n      return Math.round(offsetPercentage * (safeTotalSize - totalSize));\n    }\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfCell(index);\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfLastMeasuredCell();\n    }\n    /** See CellSizeAndPositionManager#getTotalSize */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return Math.min(this._maxScrollSize, this._cellSizeAndPositionManager.getTotalSize());\n    }\n    /** See CellSizeAndPositionManager#getUpdatedOffsetForIndex */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n      currentOffset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: currentOffset\n      });\n\n      var offset = this._cellSizeAndPositionManager.getUpdatedOffsetForIndex({\n        align: align,\n        containerSize: containerSize,\n        currentOffset: currentOffset,\n        targetIndex: targetIndex\n      });\n\n      return this._offsetToSafeOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n    /** See CellSizeAndPositionManager#getVisibleCellRange */\n\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(_ref4) {\n      var containerSize = _ref4.containerSize,\n          offset = _ref4.offset;\n      offset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n      return this._cellSizeAndPositionManager.getVisibleCellRange({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._cellSizeAndPositionManager.resetCell(index);\n    }\n  }, {\n    key: \"_getOffsetPercentage\",\n    value: function _getOffsetPercentage(_ref5) {\n      var containerSize = _ref5.containerSize,\n          offset = _ref5.offset,\n          totalSize = _ref5.totalSize;\n      return totalSize <= containerSize ? 0 : offset / (totalSize - containerSize);\n    }\n  }, {\n    key: \"_offsetToSafeOffset\",\n    value: function _offsetToSafeOffset(_ref6) {\n      var containerSize = _ref6.containerSize,\n          offset = _ref6.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: totalSize\n        });\n\n        return Math.round(offsetPercentage * (safeTotalSize - containerSize));\n      }\n    }\n  }, {\n    key: \"_safeOffsetToOffset\",\n    value: function _safeOffsetToOffset(_ref7) {\n      var containerSize = _ref7.containerSize,\n          offset = _ref7.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: safeTotalSize\n        });\n\n        return Math.round(offsetPercentage * (totalSize - containerSize));\n      }\n    }\n  }]);\n  return ScalingCellSizeAndPositionManager;\n}();\n\nexports[\"default\"] = ScalingCellSizeAndPositionManager;","export default !!(typeof window !== 'undefined' && window.document && window.document.createElement);","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bpfrpt_proptype_CellMeasureCache = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar bpfrpt_proptype_CellMeasureCache = process.env.NODE_ENV === 'production' ? null : {\n  \"hasFixedWidth\": _propTypes[\"default\"].func.isRequired,\n  \"hasFixedHeight\": _propTypes[\"default\"].func.isRequired,\n  \"has\": _propTypes[\"default\"].func.isRequired,\n  \"set\": _propTypes[\"default\"].func.isRequired,\n  \"getHeight\": _propTypes[\"default\"].func.isRequired,\n  \"getWidth\": _propTypes[\"default\"].func.isRequired\n};\nexports.bpfrpt_proptype_CellMeasureCache = bpfrpt_proptype_CellMeasureCache;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = defaultOverscanIndicesGetter;\nexports.SCROLL_DIRECTION_VERTICAL = exports.SCROLL_DIRECTION_HORIZONTAL = exports.SCROLL_DIRECTION_FORWARD = exports.SCROLL_DIRECTION_BACKWARD = void 0;\n\nvar _types = require(\"./types\");\n\nvar SCROLL_DIRECTION_BACKWARD = -1;\nexports.SCROLL_DIRECTION_BACKWARD = SCROLL_DIRECTION_BACKWARD;\nvar SCROLL_DIRECTION_FORWARD = 1;\nexports.SCROLL_DIRECTION_FORWARD = SCROLL_DIRECTION_FORWARD;\nvar SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexports.SCROLL_DIRECTION_HORIZONTAL = SCROLL_DIRECTION_HORIZONTAL;\nvar SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexports.SCROLL_DIRECTION_VERTICAL = SCROLL_DIRECTION_VERTICAL;\n\nfunction defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex)\n    };\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = defaultCellRangeRenderer;\n\nvar _types = require(\"./types\");\n\n/**\n * Default implementation of cellRangeRenderer used by Grid.\n * This renderer supports cell-caching while the user is scrolling.\n */\nfunction defaultCellRangeRenderer(_ref) {\n  var cellCache = _ref.cellCache,\n      cellRenderer = _ref.cellRenderer,\n      columnSizeAndPositionManager = _ref.columnSizeAndPositionManager,\n      columnStartIndex = _ref.columnStartIndex,\n      columnStopIndex = _ref.columnStopIndex,\n      deferredMeasurementCache = _ref.deferredMeasurementCache,\n      horizontalOffsetAdjustment = _ref.horizontalOffsetAdjustment,\n      isScrolling = _ref.isScrolling,\n      isScrollingOptOut = _ref.isScrollingOptOut,\n      parent = _ref.parent,\n      rowSizeAndPositionManager = _ref.rowSizeAndPositionManager,\n      rowStartIndex = _ref.rowStartIndex,\n      rowStopIndex = _ref.rowStopIndex,\n      styleCache = _ref.styleCache,\n      verticalOffsetAdjustment = _ref.verticalOffsetAdjustment,\n      visibleColumnIndices = _ref.visibleColumnIndices,\n      visibleRowIndices = _ref.visibleRowIndices;\n  var renderedCells = []; // Browsers have native size limits for elements (eg Chrome 33M pixels, IE 1.5M pixes).\n  // User cannot scroll beyond these size limitations.\n  // In order to work around this, ScalingCellSizeAndPositionManager compresses offsets.\n  // We should never cache styles for compressed offsets though as this can lead to bugs.\n  // See issue #576 for more.\n\n  var areOffsetsAdjusted = columnSizeAndPositionManager.areOffsetsAdjusted() || rowSizeAndPositionManager.areOffsetsAdjusted();\n  var canCacheStyle = !isScrolling && !areOffsetsAdjusted;\n\n  for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n    var rowDatum = rowSizeAndPositionManager.getSizeAndPositionOfCell(rowIndex);\n\n    for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n      var columnDatum = columnSizeAndPositionManager.getSizeAndPositionOfCell(columnIndex);\n      var isVisible = columnIndex >= visibleColumnIndices.start && columnIndex <= visibleColumnIndices.stop && rowIndex >= visibleRowIndices.start && rowIndex <= visibleRowIndices.stop;\n      var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n      var style = void 0; // Cache style objects so shallow-compare doesn't re-render unnecessarily.\n\n      if (canCacheStyle && styleCache[key]) {\n        style = styleCache[key];\n      } else {\n        // In deferred mode, cells will be initially rendered before we know their size.\n        // Don't interfere with CellMeasurer's measurements by setting an invalid size.\n        if (deferredMeasurementCache && !deferredMeasurementCache.has(rowIndex, columnIndex)) {\n          // Position not-yet-measured cells at top/left 0,0,\n          // And give them width/height of 'auto' so they can grow larger than the parent Grid if necessary.\n          // Positioning them further to the right/bottom influences their measured size.\n          style = {\n            height: 'auto',\n            left: 0,\n            position: 'absolute',\n            top: 0,\n            width: 'auto'\n          };\n        } else {\n          style = {\n            height: rowDatum.size,\n            left: columnDatum.offset + horizontalOffsetAdjustment,\n            position: 'absolute',\n            top: rowDatum.offset + verticalOffsetAdjustment,\n            width: columnDatum.size\n          };\n          styleCache[key] = style;\n        }\n      }\n\n      var cellRendererParams = {\n        columnIndex: columnIndex,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent,\n        rowIndex: rowIndex,\n        style: style\n      };\n      var renderedCell = void 0; // Avoid re-creating cells while scrolling.\n      // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n      // If a scroll is in progress- cache and reuse cells.\n      // This cache will be thrown away once scrolling completes.\n      // However if we are scaling scroll positions and sizes, we should also avoid caching.\n      // This is because the offset changes slightly as scroll position changes and caching leads to stale values.\n      // For more info refer to issue #395\n      //\n      // If isScrollingOptOut is specified, we always cache cells.\n      // For more info refer to issue #1028\n\n      if ((isScrollingOptOut || isScrolling) && !horizontalOffsetAdjustment && !verticalOffsetAdjustment) {\n        if (!cellCache[key]) {\n          cellCache[key] = cellRenderer(cellRendererParams);\n        }\n\n        renderedCell = cellCache[key]; // If the user is no longer scrolling, don't cache cells.\n        // This makes dynamic cell content difficult for users and would also lead to a heavier memory footprint.\n      } else {\n        renderedCell = cellRenderer(cellRendererParams);\n      }\n\n      if (renderedCell == null || renderedCell === false) {\n        continue;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        warnAboutMissingStyle(parent, renderedCell);\n      }\n\n      renderedCells.push(renderedCell);\n    }\n  }\n\n  return renderedCells;\n}\n\nfunction warnAboutMissingStyle(parent, renderedCell) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (renderedCell) {\n      // If the direct child is a CellMeasurer, then we should check its child\n      // See issue #611\n      if (renderedCell.type && renderedCell.type.__internalCellMeasurerFlag) {\n        renderedCell = renderedCell.props.children;\n      }\n\n      if (renderedCell && renderedCell.props && renderedCell.props.style === undefined && parent.__warnedAboutMissingStyle !== true) {\n        parent.__warnedAboutMissingStyle = true;\n        console.warn('Rendered cell should include style property for positioning.');\n      }\n    }\n  }\n}","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar TableContext = /*#__PURE__*/React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  TableContext.displayName = 'TableContext';\n}\n\nexport default TableContext;","export { default } from './TableCell';","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport { darken, fade, lighten } from '../styles/colorManipulator';\nimport TableContext from '../Table/TableContext';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body2, {\n      display: 'table-cell',\n      verticalAlign: 'inherit',\n      // Workaround for a rendering bug with spanned columns in Chrome 62.0.\n      // Removes the alpha (sets it to 1), and lightens or darkens the theme color.\n      borderBottom: \"1px solid\\n    \".concat(theme.palette.type === 'light' ? lighten(fade(theme.palette.divider, 1), 0.88) : darken(fade(theme.palette.divider, 1), 0.68)),\n      textAlign: 'left',\n      padding: 16\n    }),\n\n    /* Styles applied to the root element if `variant=\"head\"` or `context.table.head`. */\n    head: {\n      color: theme.palette.text.primary,\n      lineHeight: theme.typography.pxToRem(24),\n      fontWeight: theme.typography.fontWeightMedium\n    },\n\n    /* Styles applied to the root element if `variant=\"body\"` or `context.table.body`. */\n    body: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `variant=\"footer\"` or `context.table.footer`. */\n    footer: {\n      color: theme.palette.text.secondary,\n      lineHeight: theme.typography.pxToRem(21),\n      fontSize: theme.typography.pxToRem(12)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      padding: '6px 24px 6px 16px',\n      '&:last-child': {\n        paddingRight: 16\n      },\n      '&$paddingCheckbox': {\n        width: 24,\n        // prevent the checkbox column from growing\n        padding: '0 12px 0 16px',\n        '&:last-child': {\n          paddingLeft: 12,\n          paddingRight: 16\n        },\n        '& > *': {\n          padding: 0\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `padding=\"checkbox\"`. */\n    paddingCheckbox: {\n      width: 48,\n      // prevent the checkbox column from growing\n      padding: '0 0 0 4px',\n      '&:last-child': {\n        paddingLeft: 0,\n        paddingRight: 4\n      }\n    },\n\n    /* Styles applied to the root element if `padding=\"none\"`. */\n    paddingNone: {\n      padding: 0,\n      '&:last-child': {\n        padding: 0\n      }\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right',\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `context.table.stickyHeader={true}`. */\n    stickyHeader: {\n      position: 'sticky',\n      top: 0,\n      left: 0,\n      zIndex: 2,\n      backgroundColor: theme.palette.background.default\n    }\n  };\n};\n/**\n * The component renders a `<th>` element when the parent context is a header\n * or otherwise a `<td>` element.\n */\n\nvar TableCell = /*#__PURE__*/React.forwardRef(function TableCell(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      component = props.component,\n      paddingProp = props.padding,\n      scopeProp = props.scope,\n      sizeProp = props.size,\n      sortDirection = props.sortDirection,\n      variantProp = props.variant,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"component\", \"padding\", \"scope\", \"size\", \"sortDirection\", \"variant\"]);\n\n  var table = React.useContext(TableContext);\n  var tablelvl2 = React.useContext(Tablelvl2Context);\n  var isHeadCell = tablelvl2 && tablelvl2.variant === 'head';\n  var role;\n  var Component;\n\n  if (component) {\n    Component = component;\n    role = isHeadCell ? 'columnheader' : 'cell';\n  } else {\n    Component = isHeadCell ? 'th' : 'td';\n  }\n\n  var scope = scopeProp;\n\n  if (!scope && isHeadCell) {\n    scope = 'col';\n  }\n\n  var padding = paddingProp || (table && table.padding ? table.padding : 'default');\n  var size = sizeProp || (table && table.size ? table.size : 'medium');\n  var variant = variantProp || tablelvl2 && tablelvl2.variant;\n  var ariaSort = null;\n\n  if (sortDirection) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, classes[variant], className, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], padding !== 'default' && classes[\"padding\".concat(capitalize(padding))], size !== 'medium' && classes[\"size\".concat(capitalize(size))], variant === 'head' && table && table.stickyHeader && classes.stickyHeader),\n    \"aria-sort\": ariaSort,\n    role: role,\n    scope: scope\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Set the text-align on the table cell content.\n   *\n   * Monetary or generally number fields **should be right aligned** as that allows\n   * you to add them up quickly in your head without having to worry about decimals.\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n\n  /**\n   * The table cell contents.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Sets the padding applied to the cell.\n   * By default, the Table parent component set the value (`default`).\n   */\n  padding: PropTypes.oneOf(['checkbox', 'default', 'none']),\n\n  /**\n   * Set scope attribute.\n   */\n  scope: PropTypes.string,\n\n  /**\n   * Specify the size of the cell.\n   * By default, the Table parent component set the value (`medium`).\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * Set aria-sort direction.\n   */\n  sortDirection: PropTypes.oneOf(['asc', 'desc', false]),\n\n  /**\n   * Specify the cell type.\n   * By default, the TableHead, TableBody or TableFooter parent component set the value.\n   */\n  variant: PropTypes.oneOf(['body', 'footer', 'head'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableCell'\n})(TableCell);","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar Tablelvl2Context = /*#__PURE__*/React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  Tablelvl2Context.displayName = 'Tablelvl2Context';\n}\n\nexport default Tablelvl2Context;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function get() {\n    return _AutoSizer[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"AutoSizer\", {\n  enumerable: true,\n  get: function get() {\n    return _AutoSizer[\"default\"];\n  }\n});\n\nvar _AutoSizer = _interopRequireDefault(require(\"./AutoSizer\"));","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React from 'react';\n\nvar Component = function (_React$Component) {\n  _inherits(Component, _React$Component);\n\n  function Component() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Component);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _initialiseProps.call(_this), _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  Component.prototype.getArgs = function getArgs() {\n    var state = this.state,\n        props = this.props,\n        setState = this._setState,\n        forceUpdate = this._forceUpdate;\n\n    return {\n      state: state,\n      props: props,\n      setState: setState,\n      forceUpdate: forceUpdate\n    };\n  };\n\n  Component.prototype.componentDidMount = function componentDidMount() {\n    if (this.props.didMount) this.props.didMount(this.getArgs());\n  };\n\n  Component.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState) {\n    if (this.props.shouldUpdate) return this.props.shouldUpdate({\n      props: this.props,\n      state: this.state,\n      nextProps: nextProps,\n      nextState: nextState\n    });else return true;\n  };\n\n  Component.prototype.componentWillUnmount = function componentWillUnmount() {\n    if (this.props.willUnmount) this.props.willUnmount({\n      state: this.state,\n      props: this.props\n    });\n  };\n\n  Component.prototype.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n    if (this.props.didUpdate) this.props.didUpdate(Object.assign(this.getArgs(), {\n      prevProps: prevProps,\n      prevState: prevState\n    }));\n  };\n\n  Component.prototype.render = function render() {\n    var _props = this.props,\n        children = _props.children,\n        render = _props.render;\n\n    return children ? typeof children === 'function' ? children(this.getArgs()) : children : render ? render(this.getArgs()) : null;\n  };\n\n  return Component;\n}(React.Component);\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this2 = this;\n\n  this.state = this.props.initialState;\n\n  this._setState = function () {\n    return _this2.setState.apply(_this2, arguments);\n  };\n\n  this._forceUpdate = function () {\n    return _this2.forceUpdate.apply(_this2, arguments);\n  };\n};\n\nexport default Component;","/**\n * Detect Element Resize.\n * https://github.com/sdecima/javascript-detect-element-resize\n * Sebastian Decima\n *\n * Forked from version 0.5.3; includes the following modifications:\n * 1) Guard against unsafe 'window' and 'document' references (to support SSR).\n * 2) Defer initialization code via a top-level function wrapper (to support SSR).\n * 3) Avoid unnecessary reflows by not measuring size for scroll events bubbling from children.\n * 4) Add nonce for style element.\n * 5) Added support for injecting custom window object\n **/\nexport default function createDetectElementResize(nonce, hostWindow) {\n  // Check `document` and `window` in case of server-side rendering\n  var _window;\n\n  if (typeof hostWindow !== 'undefined') {\n    _window = hostWindow;\n  } else if (typeof window !== 'undefined') {\n    _window = window;\n  } else if (typeof self !== 'undefined') {\n    _window = self;\n  } else {\n    _window = global;\n  }\n\n  var attachEvent = typeof _window.document !== 'undefined' && _window.document.attachEvent;\n\n  if (!attachEvent) {\n    var requestFrame = function () {\n      var raf = _window.requestAnimationFrame || _window.mozRequestAnimationFrame || _window.webkitRequestAnimationFrame || function (fn) {\n        return _window.setTimeout(fn, 20);\n      };\n\n      return function (fn) {\n        return raf(fn);\n      };\n    }();\n\n    var cancelFrame = function () {\n      var cancel = _window.cancelAnimationFrame || _window.mozCancelAnimationFrame || _window.webkitCancelAnimationFrame || _window.clearTimeout;\n      return function (id) {\n        return cancel(id);\n      };\n    }();\n\n    var resetTriggers = function resetTriggers(element) {\n      var triggers = element.__resizeTriggers__,\n          expand = triggers.firstElementChild,\n          contract = triggers.lastElementChild,\n          expandChild = expand.firstElementChild;\n      contract.scrollLeft = contract.scrollWidth;\n      contract.scrollTop = contract.scrollHeight;\n      expandChild.style.width = expand.offsetWidth + 1 + 'px';\n      expandChild.style.height = expand.offsetHeight + 1 + 'px';\n      expand.scrollLeft = expand.scrollWidth;\n      expand.scrollTop = expand.scrollHeight;\n    };\n\n    var checkTriggers = function checkTriggers(element) {\n      return element.offsetWidth != element.__resizeLast__.width || element.offsetHeight != element.__resizeLast__.height;\n    };\n\n    var scrollListener = function scrollListener(e) {\n      // Don't measure (which forces) reflow for scrolls that happen inside of children!\n      if (e.target.className && typeof e.target.className.indexOf === 'function' && e.target.className.indexOf('contract-trigger') < 0 && e.target.className.indexOf('expand-trigger') < 0) {\n        return;\n      }\n\n      var element = this;\n      resetTriggers(this);\n\n      if (this.__resizeRAF__) {\n        cancelFrame(this.__resizeRAF__);\n      }\n\n      this.__resizeRAF__ = requestFrame(function () {\n        if (checkTriggers(element)) {\n          element.__resizeLast__.width = element.offsetWidth;\n          element.__resizeLast__.height = element.offsetHeight;\n\n          element.__resizeListeners__.forEach(function (fn) {\n            fn.call(element, e);\n          });\n        }\n      });\n    };\n    /* Detect CSS Animations support to detect element display/re-attach */\n\n\n    var animation = false,\n        keyframeprefix = '',\n        animationstartevent = 'animationstart',\n        domPrefixes = 'Webkit Moz O ms'.split(' '),\n        startEvents = 'webkitAnimationStart animationstart oAnimationStart MSAnimationStart'.split(' '),\n        pfx = '';\n    {\n      var elm = _window.document.createElement('fakeelement');\n\n      if (elm.style.animationName !== undefined) {\n        animation = true;\n      }\n\n      if (animation === false) {\n        for (var i = 0; i < domPrefixes.length; i++) {\n          if (elm.style[domPrefixes[i] + 'AnimationName'] !== undefined) {\n            pfx = domPrefixes[i];\n            keyframeprefix = '-' + pfx.toLowerCase() + '-';\n            animationstartevent = startEvents[i];\n            animation = true;\n            break;\n          }\n        }\n      }\n    }\n    var animationName = 'resizeanim';\n    var animationKeyframes = '@' + keyframeprefix + 'keyframes ' + animationName + ' { from { opacity: 0; } to { opacity: 0; } } ';\n    var animationStyle = keyframeprefix + 'animation: 1ms ' + animationName + '; ';\n  }\n\n  var createStyles = function createStyles(doc) {\n    if (!doc.getElementById('detectElementResize')) {\n      //opacity:0 works around a chrome bug https://code.google.com/p/chromium/issues/detail?id=286360\n      var css = (animationKeyframes ? animationKeyframes : '') + '.resize-triggers { ' + (animationStyle ? animationStyle : '') + 'visibility: hidden; opacity: 0; } ' + '.resize-triggers, .resize-triggers > div, .contract-trigger:before { content: \" \"; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; z-index: -1; } .resize-triggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',\n          head = doc.head || doc.getElementsByTagName('head')[0],\n          style = doc.createElement('style');\n      style.id = 'detectElementResize';\n      style.type = 'text/css';\n\n      if (nonce != null) {\n        style.setAttribute('nonce', nonce);\n      }\n\n      if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n      } else {\n        style.appendChild(doc.createTextNode(css));\n      }\n\n      head.appendChild(style);\n    }\n  };\n\n  var addResizeListener = function addResizeListener(element, fn) {\n    if (attachEvent) {\n      element.attachEvent('onresize', fn);\n    } else {\n      if (!element.__resizeTriggers__) {\n        var doc = element.ownerDocument;\n\n        var elementStyle = _window.getComputedStyle(element);\n\n        if (elementStyle && elementStyle.position == 'static') {\n          element.style.position = 'relative';\n        }\n\n        createStyles(doc);\n        element.__resizeLast__ = {};\n        element.__resizeListeners__ = [];\n        (element.__resizeTriggers__ = doc.createElement('div')).className = 'resize-triggers';\n        element.__resizeTriggers__.innerHTML = '<div class=\"expand-trigger\"><div></div></div>' + '<div class=\"contract-trigger\"></div>';\n        element.appendChild(element.__resizeTriggers__);\n        resetTriggers(element);\n        element.addEventListener('scroll', scrollListener, true);\n        /* Listen for a css animation to detect element display/re-attach */\n\n        if (animationstartevent) {\n          element.__resizeTriggers__.__animationListener__ = function animationListener(e) {\n            if (e.animationName == animationName) {\n              resetTriggers(element);\n            }\n          };\n\n          element.__resizeTriggers__.addEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n        }\n      }\n\n      element.__resizeListeners__.push(fn);\n    }\n  };\n\n  var removeResizeListener = function removeResizeListener(element, fn) {\n    if (attachEvent) {\n      element.detachEvent('onresize', fn);\n    } else {\n      element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n\n      if (!element.__resizeListeners__.length) {\n        element.removeEventListener('scroll', scrollListener, true);\n\n        if (element.__resizeTriggers__.__animationListener__) {\n          element.__resizeTriggers__.removeEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n\n          element.__resizeTriggers__.__animationListener__ = null;\n        }\n\n        try {\n          element.__resizeTriggers__ = !element.removeChild(element.__resizeTriggers__);\n        } catch (e) {// Preact compat; see developit/preact-compat/issues/228\n        }\n      }\n    }\n  };\n\n  return {\n    addResizeListener: addResizeListener,\n    removeResizeListener: removeResizeListener\n  };\n}","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nexports.default = MuiTable;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _MultiGrid = require('react-virtualized/dist/commonjs/MultiGrid');\n\nvar _MultiGrid2 = _interopRequireDefault(_MultiGrid);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _Table = require('@material-ui/core/Table');\n\nvar _Table2 = _interopRequireDefault(_Table);\n\nvar _TableCell = require('@material-ui/core/TableCell');\n\nvar _TableCell2 = _interopRequireDefault(_TableCell);\n\nvar _TableFooter = require('@material-ui/core/TableFooter');\n\nvar _TableFooter2 = _interopRequireDefault(_TableFooter);\n\nvar _TablePagination = require('@material-ui/core/TablePagination');\n\nvar _TablePagination2 = _interopRequireDefault(_TablePagination);\n\nvar _TableSortLabel = require('@material-ui/core/TableSortLabel');\n\nvar _TableSortLabel2 = _interopRequireDefault(_TableSortLabel);\n\nvar _styles = require('@material-ui/core/styles');\n\nvar _reactDraggable = require('react-draggable');\n\nvar _reactDraggable2 = _interopRequireDefault(_reactDraggable);\n\nvar _utils = require('./utils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar FOOTER_BORDER_HEIGHT = 1;\n\nvar useStyles = (0, _styles.makeStyles)(function (theme) {\n  return {\n    table: {\n      boxSizing: 'border-box',\n\n      '& .topLeftGrid': {\n        backgroundColor: theme.palette.grey[theme.palette.type === 'dark' ? 800 : 200],\n        borderBottom: '2px solid ' + theme.palette.divider,\n        borderRight: '2px solid ' + theme.palette.divider,\n        color: theme.palette.text.secondary,\n        fontSize: theme.typography.pxToRem(12),\n\n        // Hide scrollbars on Chrome/Safari/IE\n        '&::-webkit-scrollbar': {\n          display: 'none'\n        },\n        '-ms-overflow-style': 'none'\n      },\n\n      '& .topRightGrid': {\n        backgroundColor: theme.palette.grey[theme.palette.type === 'dark' ? 800 : 200],\n        borderBottom: '2px solid ' + theme.palette.divider,\n        color: theme.palette.text.secondary,\n        fontSize: theme.typography.pxToRem(12),\n\n        // Hide scrollbars on Chrome/Safari/IE\n        '&::-webkit-scrollbar': {\n          display: 'none'\n        },\n        '-ms-overflow-style': 'none'\n      },\n\n      '& .bottomLeftGrid': {\n        backgroundColor: theme.palette.grey[theme.palette.type === 'dark' ? 800 : 200],\n        borderRight: '2px solid ' + theme.palette.divider,\n        color: theme.palette.text.secondary,\n        fontSize: theme.typography.pxToRem(13),\n\n        // Hide scrollbars on Chrome/Safari/IE\n        '&::-webkit-scrollbar': {\n          display: 'none'\n        },\n        '-ms-overflow-style': 'none'\n      },\n\n      '& .bottomRightGrid': {\n        color: theme.palette.text.primary,\n        fontSize: theme.typography.pxToRem(13),\n        outline: 'none' // See: https://github.com/bvaughn/react-virtualized/issues/381\n      }\n    },\n    cell: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    cellClickable: {\n      cursor: 'pointer'\n    },\n    cellSelected: {\n      backgroundColor: theme.palette.grey[theme.palette.type === 'dark' ? 900 : 100]\n    },\n    cellHovered: {\n      backgroundColor: theme.palette.grey[theme.palette.type === 'dark' ? 800 : 200]\n    },\n    cellDisabled: {\n      opacity: 0.5\n    },\n    cellContents: {\n      width: '100%',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      textOverflow: 'ellipsis'\n    },\n    cellHeader: {\n      fontSize: theme.typography.pxToRem(12),\n      fontWeight: theme.typography.fontWeightMedium,\n      color: theme.palette.text.secondary\n    },\n    cellInLastColumn: {\n      paddingRight: theme.spacing(3)\n    },\n    cellInLastRow: {\n      borderBottom: 'none'\n    },\n    footer: {\n      borderTop: FOOTER_BORDER_HEIGHT + 'px solid ' + theme.palette.divider\n    },\n    dragHandle: {\n      flex: '0 0 16px',\n      zIndex: 2,\n      cursor: 'col-resize',\n      color: '#0085ff'\n    },\n    DragHandleActive: {\n      color: '#0b6fcc',\n      zIndex: 3\n    },\n    DragHandleIcon: {\n      flex: '0 0 12px',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  };\n});\n\nvar calculateWidths = function calculateWidths(_ref) {\n  var resizable = _ref.resizable,\n      Columns = _ref.columns;\n\n  var widths = [];\n  if (resizable) {\n    var initialWidth = 1;\n    var columns = [];\n    Columns.forEach(function (c) {\n      if (c.width) {\n        widths[c.name] = 0.1;\n        initialWidth = initialWidth - 0.1;\n      } else {\n        columns.push(c);\n      }\n    });\n    columns.forEach(function (c) {\n      widths[c.name] = initialWidth / columns.length;\n    });\n  }\n  return widths;\n};\n\nvar useCellRenderer = function useCellRenderer(_ref2) {\n  var recomputeGridSize = _ref2.recomputeGridSize,\n      columns = _ref2.columns,\n      width = _ref2.width,\n      includeHeaders = _ref2.includeHeaders,\n      data = _ref2.data,\n      columnWidth = _ref2.columnWidth,\n      isCellHovered = _ref2.isCellHovered,\n      isCellSelected = _ref2.isCellSelected,\n      isCellDisabled = _ref2.isCellDisabled,\n      classes = _ref2.classes,\n      orderBy = _ref2.orderBy,\n      orderDirection = _ref2.orderDirection,\n      onHeaderClick = _ref2.onHeaderClick,\n      onCellClick = _ref2.onCellClick,\n      onCellDoubleClick = _ref2.onCellDoubleClick,\n      onCellContextMenu = _ref2.onCellContextMenu,\n      resizable = _ref2.resizable,\n      defaultCellProps = _ref2.cellProps;\n\n  var _React$useState = _react2.default.useState({\n    hoveredColumn: null,\n    hoveredRowData: null\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      _React$useState2$ = _React$useState2[0],\n      hoveredColumn = _React$useState2$.hoveredColumn,\n      hoveredRowData = _React$useState2$.hoveredRowData,\n      setHovered = _React$useState2[1];\n\n  var _React$useState3 = _react2.default.useState(calculateWidths({ resizable: resizable, columns: columns })),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      widths = _React$useState4[0],\n      setWidths = _React$useState4[1];\n\n  _react2.default.useEffect(function () {\n    recomputeGridSize();\n  }, [recomputeGridSize, hoveredColumn, hoveredRowData, widths]);\n\n  var resizableColumnWidths = _react2.default.useCallback(function (index, columns, tableWidth) {\n    return widths[columns[index].name] * tableWidth;\n  }, [widths]);\n\n  var getColumnWidth = _react2.default.useCallback(function (_ref3) {\n    var index = _ref3.index;\n    return typeof columnWidth === 'function' ? columnWidth({ index: index, columns: columns, width: width }) : resizable ? resizableColumnWidths(index, columns, width) : (0, _utils.calcColumnWidth)(index, columns, width);\n  }, [columnWidth, resizable, columns, width, resizableColumnWidths]);\n\n  var resizeRow = _react2.default.useCallback(function (_ref4) {\n    var dataKey = _ref4.dataKey,\n        deltaX = _ref4.deltaX;\n    return setWidths(function (prev) {\n      var _extends2;\n\n      var delta = deltaX / width;\n      var index = columns.findIndex(function (c) {\n        return c.name === dataKey;\n      });\n      var nextDataKey = columns[index + 1].name;\n      return _extends({}, prev, (_extends2 = {}, _defineProperty(_extends2, dataKey, prev[dataKey] + delta), _defineProperty(_extends2, nextDataKey, prev[nextDataKey] - delta), _extends2));\n    });\n  }, [setWidths, columns, width]);\n\n  var handleDrag = _react2.default.useCallback(function (dataKey) {\n    return function (event, _ref5) {\n      var deltaX = _ref5.deltaX;\n      return resizeRow({\n        dataKey: dataKey,\n        deltaX: deltaX\n      });\n    };\n  }, [resizeRow]);\n\n  var handleMouse = _react2.default.useCallback(function (hoveredColumn, hoveredRowData) {\n    return function (e) {\n      return setHovered({\n        hoveredColumn: hoveredColumn,\n        hoveredRowData: hoveredRowData\n      });\n    };\n  }, [setHovered]);\n\n  var cellRenderer = function cellRenderer(_ref6) {\n    var _classNames;\n\n    var columnIndex = _ref6.columnIndex,\n        rowIndex = _ref6.rowIndex,\n        key = _ref6.key,\n        style = _ref6.style;\n\n    var column = columns[columnIndex];\n    var isHeader = includeHeaders && rowIndex === 0;\n    var headerOffset = includeHeaders ? 1 : 0;\n    var rowData = data && data[rowIndex - headerOffset] || {};\n\n    var isSelected = isCellSelected && isCellSelected(column, rowData);\n    var isDisabled = isCellDisabled && isCellDisabled(column, rowData);\n\n    var isHovered = hoveredColumn && hoveredRowData && isCellHovered && isCellHovered(column, rowData, hoveredColumn, hoveredRowData);\n\n    var resolveCellProps = function resolveCellProps(cellProps) {\n      return typeof cellProps === 'function' ? cellProps(column, rowData, hoveredColumn, hoveredRowData) : cellProps;\n    };\n    // TODO: Deep merge (do not override all defaultCellProps styles if column.cellProps.styles defined?)\n\n    var _resolveCellProps$res = _extends({}, resolveCellProps(defaultCellProps), resolveCellProps(column.cellProps)),\n        cellStyle = _resolveCellProps$res.style,\n        cellProps = _objectWithoutProperties(_resolveCellProps$res, ['style']);\n\n    var contents = _react2.default.createElement(\n      'div',\n      { className: classes.cellContents },\n      _react2.default.createElement(\n        'span',\n        { style: { flex: 'auto' } },\n        isHeader ? column.header != null ? column.header : column.name : column.cell ? column.cell(rowData) : rowData[column.name]\n      ),\n      _react2.default.createElement(\n        'span',\n        { style: { float: 'right' } },\n        isHeader && resizable && columnIndex < columns.length - 1 && _react2.default.createElement(\n          _reactDraggable2.default,\n          {\n            axis: 'x',\n            defaultClassName: classes.dragHandle,\n            defaultClassNameDragging: classes.DragHandleActive,\n            onDrag: handleDrag(column.name),\n            position: { x: 0 }\n          },\n          _react2.default.createElement(\n            'span',\n            { className: classes.DragHandleIcon },\n            '\\u22EE'\n          )\n        )\n      )\n    );\n\n    var hasCellClick = !isHeader && onCellClick;\n    var hasCellDoubleClick = !isHeader && onCellDoubleClick;\n    var hasCellContextMenu = !isHeader && onCellContextMenu;\n    var isClickable = hasCellClick || hasCellDoubleClick || hasCellContextMenu || column.onClick;\n\n    var className = (0, _classnames2.default)(classes.cell, (_classNames = {}, _defineProperty(_classNames, classes.cellClickable, isClickable), _defineProperty(_classNames, classes.cellHovered, isHovered), _defineProperty(_classNames, classes.cellSelected, isSelected), _defineProperty(_classNames, classes.cellDisabled, isDisabled), _defineProperty(_classNames, classes.cellHeader, isHeader), _defineProperty(_classNames, classes.cellInLastColumn, columnIndex === columns.length - 1), _defineProperty(_classNames, classes.cellInLastRow, !isHeader && rowIndex === (data ? data.length : 0)), _classNames));\n\n    return _react2.default.createElement(\n      _TableCell2.default,\n      _extends({\n        component: 'div',\n        className: className,\n        key: key,\n        onMouseEnter: handleMouse(column, rowData),\n        onMouseLeave: handleMouse(null, null),\n        style: _extends({}, style, cellStyle)\n      }, hasCellClick && {\n        onClick: function onClick(event) {\n          return onCellClick(event, { column: column, rowData: rowData, data: data });\n        }\n      }, hasCellDoubleClick && {\n        onDoubleClick: function onDoubleClick(event) {\n          return onCellDoubleClick(event, { column: column, rowData: rowData, data: data });\n        }\n      }, hasCellContextMenu && {\n        onContextMenu: function onContextMenu(event) {\n          return onCellContextMenu(event, { column: column, rowData: rowData, data: data });\n        }\n      }, cellProps),\n      isHeader && column.onHeaderClick !== false && (column.onHeaderClick || onHeaderClick) ? _react2.default.createElement(\n        _TableSortLabel2.default,\n        {\n          active: orderBy && (orderBy === column.name || orderBy === column.orderBy) && rowIndex === 0,\n          style: { width: 'inherit' } // fix text overflowing\n          , direction: orderDirection,\n          onClick: function onClick(event) {\n            return column.onHeaderClick ? column.onHeaderClick(event, { column: column }) : onHeaderClick(event, { column: column });\n          }\n        },\n        contents\n      ) : isHeader && column.resizable ? _react2.default.createElement(\n        _react2.default.Fragment,\n        null,\n        contents,\n        _react2.default.createElement(\n          _reactDraggable2.default,\n          {\n            axis: 'x',\n            defaultClassName: 'DragHandle',\n            defaultClassNameDragging: 'DragHandleActive',\n            onDrag: handleDrag(column.name),\n            position: { x: 0 }\n          },\n          _react2.default.createElement(\n            'span',\n            { className: 'DragHandleIcon' },\n            '\\u22EE'\n          )\n        )\n      ) : contents\n    );\n  };\n\n  return { cellRenderer: cellRenderer, columnWidth: getColumnWidth };\n};\n\nfunction MuiTable(_ref7) {\n  var data = _ref7.data,\n      columns = _ref7.columns,\n      width = _ref7.width,\n      height = _ref7.height,\n      _ref7$maxHeight = _ref7.maxHeight,\n      maxHeight = _ref7$maxHeight === undefined ? null : _ref7$maxHeight,\n      pagination = _ref7.pagination,\n      fitHeightToRows = _ref7.fitHeightToRows,\n      _ref7$fixedRowCount = _ref7.fixedRowCount,\n      fixedRowCount = _ref7$fixedRowCount === undefined ? 0 : _ref7$fixedRowCount,\n      _ref7$fixedColumnCoun = _ref7.fixedColumnCount,\n      fixedColumnCount = _ref7$fixedColumnCoun === undefined ? 0 : _ref7$fixedColumnCoun,\n      _ref7$rowHeight = _ref7.rowHeight,\n      rowHeight = _ref7$rowHeight === undefined ? 48 : _ref7$rowHeight,\n      style = _ref7.style,\n      columnWidth = _ref7.columnWidth,\n      _ref7$includeHeaders = _ref7.includeHeaders,\n      includeHeaders = _ref7$includeHeaders === undefined ? false : _ref7$includeHeaders,\n      isCellHovered = _ref7.isCellHovered,\n      isCellSelected = _ref7.isCellSelected,\n      isCellDisabled = _ref7.isCellDisabled,\n      Classes = _ref7.classes,\n      orderBy = _ref7.orderBy,\n      orderDirection = _ref7.orderDirection,\n      onHeaderClick = _ref7.onHeaderClick,\n      onCellClick = _ref7.onCellClick,\n      onCellDoubleClick = _ref7.onCellDoubleClick,\n      onCellContextMenu = _ref7.onCellContextMenu,\n      resizable = _ref7.resizable,\n      cellProps = _ref7.cellProps,\n      other = _objectWithoutProperties(_ref7, ['data', 'columns', 'width', 'height', 'maxHeight', 'pagination', 'fitHeightToRows', 'fixedRowCount', 'fixedColumnCount', 'rowHeight', 'style', 'columnWidth', 'includeHeaders', 'isCellHovered', 'isCellSelected', 'isCellDisabled', 'classes', 'orderBy', 'orderDirection', 'onHeaderClick', 'onCellClick', 'onCellDoubleClick', 'onCellContextMenu', 'resizable', 'cellProps']);\n\n  var classes = useStyles({ classes: Classes });\n  var theme = (0, _styles.useTheme)();\n\n  var multiGrid = _react2.default.useRef(null);\n\n  var recomputeGridSize = _react2.default.useCallback(function () {\n    return multiGrid.current && multiGrid.current.recomputeGridSize();\n  }, [multiGrid]);\n\n  _react2.default.useEffect(function () {\n    recomputeGridSize();\n  }, [columns, data, height, width, recomputeGridSize]);\n\n  var calculatedHeight = 0;\n  if (height) {\n    calculatedHeight = height; // fixed height\n  } else if (pagination && pagination.rowsPerPage && !fitHeightToRows) {\n    var rowCount = pagination.rowsPerPage + (fixedRowCount ? fixedRowCount : includeHeaders ? 1 : 0);\n    calculatedHeight = rowCount * rowHeight;\n  } else if (Array.isArray(data)) {\n    var _rowCount = data.length + (fixedRowCount ? fixedRowCount : includeHeaders ? 1 : 0);\n    calculatedHeight = _rowCount * rowHeight;\n  }\n\n  var paginationHeight = theme.mixins.toolbar.minHeight + FOOTER_BORDER_HEIGHT;\n\n  var calculatedHeightWithFooter = calculatedHeight + (pagination ? paginationHeight : 0);\n  var containerHeight = maxHeight != null ? Math.min(calculatedHeightWithFooter, maxHeight) : calculatedHeightWithFooter;\n  var multiGridHeight = containerHeight - (pagination ? paginationHeight : 0);\n\n  return _react2.default.createElement(\n    _Table2.default,\n    _extends({\n      component: 'div',\n      style: _extends({ width: width, height: containerHeight }, style),\n      className: classes.table\n    }, other),\n    _react2.default.createElement(_MultiGrid2.default, _extends({}, useCellRenderer({\n      recomputeGridSize: recomputeGridSize,\n      data: data,\n      columns: columns,\n      width: width,\n      classes: classes,\n      includeHeaders: includeHeaders,\n      columnWidth: columnWidth,\n      isCellHovered: isCellHovered,\n      isCellSelected: isCellSelected,\n      isCellDisabled: isCellDisabled,\n      orderBy: orderBy,\n      orderDirection: orderDirection,\n      onHeaderClick: onHeaderClick,\n      onCellClick: onCellClick,\n      onCellDoubleClick: onCellDoubleClick,\n      onCellContextMenu: onCellContextMenu,\n      resizable: resizable,\n      cellProps: cellProps\n    }), {\n      ref: multiGrid,\n      width: width,\n      columnCount: Array.isArray(columns) ? columns.length : 0,\n      fixedColumnCount: fixedColumnCount,\n      enableFixedColumnScroll: fixedColumnCount > 0,\n      height: multiGridHeight,\n      rowHeight: rowHeight,\n      rowCount: Array.isArray(data) ? data.length + (includeHeaders ? 1 : 0) : 0,\n      fixedRowCount: fixedRowCount,\n      enableFixedRowScroll: fixedRowCount > 0\n      // TODO: Read these from `classes` without classes.table inheritance?  How to pass props.classes down to override?\n      , classNameTopLeftGrid: 'topLeftGrid',\n      classNameTopRightGrid: 'topRightGrid',\n      classNameBottomLeftGrid: 'bottomLeftGrid',\n      classNameBottomRightGrid: 'bottomRightGrid'\n    })),\n    pagination && _react2.default.createElement(\n      _TableFooter2.default,\n      { component: 'div', className: classes.footer },\n      _react2.default.createElement(_TablePagination2.default, _extends({ component: 'div' }, pagination))\n    )\n  );\n}\n\nMuiTable.propTypes = {\n  data: _propTypes2.default.array,\n  columns: _propTypes2.default.array,\n  width: _propTypes2.default.number,\n  height: _propTypes2.default.number,\n  maxHeight: _propTypes2.default.number,\n  pagination: _propTypes2.default.object,\n  fitHeightToRows: _propTypes2.default.bool,\n  fixedRowCount: _propTypes2.default.number,\n  fixedColumnCount: _propTypes2.default.number,\n  rowHeight: _propTypes2.default.number,\n  columnWidth: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.func]),\n  includeHeaders: _propTypes2.default.bool,\n  orderBy: _propTypes2.default.string,\n  orderDirection: _propTypes2.default.string,\n  onHeaderClick: _propTypes2.default.func,\n  onCellClick: _propTypes2.default.func,\n  onCellDoubleClick: _propTypes2.default.func,\n  onCellContextMenu: _propTypes2.default.func,\n  noPointer: _propTypes2.default.bool,\n  isCellHovered: _propTypes2.default.func,\n  isCellSelected: _propTypes2.default.func,\n  isCellDisabled: _propTypes2.default.func,\n  classes: _propTypes2.default.object,\n  cellProps: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.func]),\n  style: _propTypes2.default.object\n};","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"MultiGrid\", {\n  enumerable: true,\n  get: function get() {\n    return _MultiGrid[\"default\"];\n  }\n});\nexports[\"default\"] = void 0;\n\nvar _MultiGrid = _interopRequireDefault(require(\"./MultiGrid\"));\n\nvar _default = _MultiGrid[\"default\"];\nexports[\"default\"] = _default;","\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactLifecyclesCompat = require(\"react-lifecycles-compat\");\n\nvar _CellMeasurerCacheDecorator = _interopRequireDefault(require(\"./CellMeasurerCacheDecorator\"));\n\nvar _Grid = _interopRequireDefault(require(\"../Grid\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar SCROLLBAR_SIZE_BUFFER = 20;\n/**\n * Renders 1, 2, or 4 Grids depending on configuration.\n * A main (body) Grid will always be rendered.\n * Optionally, 1-2 Grids for sticky header rows will also be rendered.\n * If no sticky columns, only 1 sticky header Grid will be rendered.\n * If sticky columns, 2 sticky header Grids will be rendered.\n */\n\nvar MultiGrid =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  (0, _inherits2[\"default\"])(MultiGrid, _React$PureComponent);\n\n  function MultiGrid(props, context) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, MultiGrid);\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(MultiGrid).call(this, props, context));\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"state\", {\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollbarSize: 0,\n      showHorizontalScrollbar: false,\n      showVerticalScrollbar: false\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_deferredInvalidateColumnIndex\", null);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_deferredInvalidateRowIndex\", null);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_bottomLeftGridRef\", function (ref) {\n      _this._bottomLeftGrid = ref;\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_bottomRightGridRef\", function (ref) {\n      _this._bottomRightGrid = ref;\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_cellRendererBottomLeftGrid\", function (_ref) {\n      var rowIndex = _ref.rowIndex,\n          rest = (0, _objectWithoutProperties2[\"default\"])(_ref, [\"rowIndex\"]);\n      var _this$props = _this.props,\n          cellRenderer = _this$props.cellRenderer,\n          fixedRowCount = _this$props.fixedRowCount,\n          rowCount = _this$props.rowCount;\n\n      if (rowIndex === rowCount - fixedRowCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            height: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          parent: (0, _assertThisInitialized2[\"default\"])(_this),\n          rowIndex: rowIndex + fixedRowCount\n        }));\n      }\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_cellRendererBottomRightGrid\", function (_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex,\n          rest = (0, _objectWithoutProperties2[\"default\"])(_ref2, [\"columnIndex\", \"rowIndex\"]);\n      var _this$props2 = _this.props,\n          cellRenderer = _this$props2.cellRenderer,\n          fixedColumnCount = _this$props2.fixedColumnCount,\n          fixedRowCount = _this$props2.fixedRowCount;\n      return cellRenderer(_objectSpread({}, rest, {\n        columnIndex: columnIndex + fixedColumnCount,\n        parent: (0, _assertThisInitialized2[\"default\"])(_this),\n        rowIndex: rowIndex + fixedRowCount\n      }));\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_cellRendererTopRightGrid\", function (_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rest = (0, _objectWithoutProperties2[\"default\"])(_ref3, [\"columnIndex\"]);\n      var _this$props3 = _this.props,\n          cellRenderer = _this$props3.cellRenderer,\n          columnCount = _this$props3.columnCount,\n          fixedColumnCount = _this$props3.fixedColumnCount;\n\n      if (columnIndex === columnCount - fixedColumnCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            width: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          columnIndex: columnIndex + fixedColumnCount,\n          parent: (0, _assertThisInitialized2[\"default\"])(_this)\n        }));\n      }\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_columnWidthRightGrid\", function (_ref4) {\n      var index = _ref4.index;\n      var _this$props4 = _this.props,\n          columnCount = _this$props4.columnCount,\n          fixedColumnCount = _this$props4.fixedColumnCount,\n          columnWidth = _this$props4.columnWidth;\n      var _this$state = _this.state,\n          scrollbarSize = _this$state.scrollbarSize,\n          showHorizontalScrollbar = _this$state.showHorizontalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showHorizontalScrollbar && index === columnCount - fixedColumnCount) {\n        return scrollbarSize;\n      }\n\n      return typeof columnWidth === 'function' ? columnWidth({\n        index: index + fixedColumnCount\n      }) : columnWidth;\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onScroll\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft,\n          scrollTop = scrollInfo.scrollTop;\n\n      _this.setState({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      var onScroll = _this.props.onScroll;\n\n      if (onScroll) {\n        onScroll(scrollInfo);\n      }\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onScrollbarPresenceChange\", function (_ref5) {\n      var horizontal = _ref5.horizontal,\n          size = _ref5.size,\n          vertical = _ref5.vertical;\n      var _this$state2 = _this.state,\n          showHorizontalScrollbar = _this$state2.showHorizontalScrollbar,\n          showVerticalScrollbar = _this$state2.showVerticalScrollbar;\n\n      if (horizontal !== showHorizontalScrollbar || vertical !== showVerticalScrollbar) {\n        _this.setState({\n          scrollbarSize: size,\n          showHorizontalScrollbar: horizontal,\n          showVerticalScrollbar: vertical\n        });\n\n        var onScrollbarPresenceChange = _this.props.onScrollbarPresenceChange;\n\n        if (typeof onScrollbarPresenceChange === 'function') {\n          onScrollbarPresenceChange({\n            horizontal: horizontal,\n            size: size,\n            vertical: vertical\n          });\n        }\n      }\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onScrollLeft\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft;\n\n      _this._onScroll({\n        scrollLeft: scrollLeft,\n        scrollTop: _this.state.scrollTop\n      });\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onScrollTop\", function (scrollInfo) {\n      var scrollTop = scrollInfo.scrollTop;\n\n      _this._onScroll({\n        scrollTop: scrollTop,\n        scrollLeft: _this.state.scrollLeft\n      });\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_rowHeightBottomGrid\", function (_ref6) {\n      var index = _ref6.index;\n      var _this$props5 = _this.props,\n          fixedRowCount = _this$props5.fixedRowCount,\n          rowCount = _this$props5.rowCount,\n          rowHeight = _this$props5.rowHeight;\n      var _this$state3 = _this.state,\n          scrollbarSize = _this$state3.scrollbarSize,\n          showVerticalScrollbar = _this$state3.showVerticalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showVerticalScrollbar && index === rowCount - fixedRowCount) {\n        return scrollbarSize;\n      }\n\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: index + fixedRowCount\n      }) : rowHeight;\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_topLeftGridRef\", function (ref) {\n      _this._topLeftGrid = ref;\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_topRightGridRef\", function (ref) {\n      _this._topRightGrid = ref;\n    });\n    var deferredMeasurementCache = props.deferredMeasurementCache,\n        _fixedColumnCount = props.fixedColumnCount,\n        _fixedRowCount = props.fixedRowCount;\n\n    _this._maybeCalculateCachedStyles(true);\n\n    if (deferredMeasurementCache) {\n      _this._deferredMeasurementCacheBottomLeftGrid = _fixedRowCount > 0 ? new _CellMeasurerCacheDecorator[\"default\"]({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: 0,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheBottomRightGrid = _fixedColumnCount > 0 || _fixedRowCount > 0 ? new _CellMeasurerCacheDecorator[\"default\"]({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheTopRightGrid = _fixedColumnCount > 0 ? new _CellMeasurerCacheDecorator[\"default\"]({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: 0\n      }) : deferredMeasurementCache;\n    }\n\n    return _this;\n  }\n\n  (0, _createClass2[\"default\"])(MultiGrid, [{\n    key: \"forceUpdateGrids\",\n    value: function forceUpdateGrids() {\n      this._bottomLeftGrid && this._bottomLeftGrid.forceUpdate();\n      this._bottomRightGrid && this._bottomRightGrid.forceUpdate();\n      this._topLeftGrid && this._topLeftGrid.forceUpdate();\n      this._topRightGrid && this._topRightGrid.forceUpdate();\n    }\n    /** See Grid#invalidateCellSizeAfterRender */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender() {\n      var _ref7 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref7$columnIndex = _ref7.columnIndex,\n          columnIndex = _ref7$columnIndex === void 0 ? 0 : _ref7$columnIndex,\n          _ref7$rowIndex = _ref7.rowIndex,\n          rowIndex = _ref7$rowIndex === void 0 ? 0 : _ref7$rowIndex;\n\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      this._bottomLeftGrid && this._bottomLeftGrid.measureAllCells();\n      this._bottomRightGrid && this._bottomRightGrid.measureAllCells();\n      this._topLeftGrid && this._topLeftGrid.measureAllCells();\n      this._topRightGrid && this._topRightGrid.measureAllCells();\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref8 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref8$columnIndex = _ref8.columnIndex,\n          columnIndex = _ref8$columnIndex === void 0 ? 0 : _ref8$columnIndex,\n          _ref8$rowIndex = _ref8.rowIndex,\n          rowIndex = _ref8$rowIndex === void 0 ? 0 : _ref8$rowIndex;\n\n      var _this$props6 = this.props,\n          fixedColumnCount = _this$props6.fixedColumnCount,\n          fixedRowCount = _this$props6.fixedRowCount;\n      var adjustedColumnIndex = Math.max(0, columnIndex - fixedColumnCount);\n      var adjustedRowIndex = Math.max(0, rowIndex - fixedRowCount);\n      this._bottomLeftGrid && this._bottomLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._bottomRightGrid && this._bottomRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._topLeftGrid && this._topLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: rowIndex\n      });\n      this._topRightGrid && this._topRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: rowIndex\n      });\n      this._leftGridWidth = null;\n      this._topGridHeight = null;\n\n      this._maybeCalculateCachedStyles(true);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props7 = this.props,\n          scrollLeft = _this$props7.scrollLeft,\n          scrollTop = _this$props7.scrollTop;\n\n      if (scrollLeft > 0 || scrollTop > 0) {\n        var newState = {};\n\n        if (scrollLeft > 0) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop > 0) {\n          newState.scrollTop = scrollTop;\n        }\n\n        this.setState(newState);\n      }\n\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props8 = this.props,\n          onScroll = _this$props8.onScroll,\n          onSectionRendered = _this$props8.onSectionRendered,\n          onScrollbarPresenceChange = _this$props8.onScrollbarPresenceChange,\n          scrollLeftProp = _this$props8.scrollLeft,\n          scrollToColumn = _this$props8.scrollToColumn,\n          scrollTopProp = _this$props8.scrollTop,\n          scrollToRow = _this$props8.scrollToRow,\n          rest = (0, _objectWithoutProperties2[\"default\"])(_this$props8, [\"onScroll\", \"onSectionRendered\", \"onScrollbarPresenceChange\", \"scrollLeft\", \"scrollToColumn\", \"scrollTop\", \"scrollToRow\"]);\n\n      this._prepareForRender(); // Don't render any of our Grids if there are no cells.\n      // This mirrors what Grid does,\n      // And prevents us from recording inaccurage measurements when used with CellMeasurer.\n\n\n      if (this.props.width === 0 || this.props.height === 0) {\n        return null;\n      } // scrollTop and scrollLeft props are explicitly filtered out and ignored\n\n\n      var _this$state4 = this.state,\n          scrollLeft = _this$state4.scrollLeft,\n          scrollTop = _this$state4.scrollTop;\n      return React.createElement(\"div\", {\n        style: this._containerOuterStyle\n      }, React.createElement(\"div\", {\n        style: this._containerTopStyle\n      }, this._renderTopLeftGrid(rest), this._renderTopRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollLeft: scrollLeft\n      }))), React.createElement(\"div\", {\n        style: this._containerBottomStyle\n      }, this._renderBottomLeftGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollTop: scrollTop\n      })), this._renderBottomRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        onSectionRendered: onSectionRendered,\n        scrollLeft: scrollLeft,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow,\n        scrollTop: scrollTop\n      }))));\n    }\n  }, {\n    key: \"_getBottomGridHeight\",\n    value: function _getBottomGridHeight(props) {\n      var height = props.height;\n\n      var topGridHeight = this._getTopGridHeight(props);\n\n      return height - topGridHeight;\n    }\n  }, {\n    key: \"_getLeftGridWidth\",\n    value: function _getLeftGridWidth(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          columnWidth = props.columnWidth;\n\n      if (this._leftGridWidth == null) {\n        if (typeof columnWidth === 'function') {\n          var leftGridWidth = 0;\n\n          for (var index = 0; index < fixedColumnCount; index++) {\n            leftGridWidth += columnWidth({\n              index: index\n            });\n          }\n\n          this._leftGridWidth = leftGridWidth;\n        } else {\n          this._leftGridWidth = columnWidth * fixedColumnCount;\n        }\n      }\n\n      return this._leftGridWidth;\n    }\n  }, {\n    key: \"_getRightGridWidth\",\n    value: function _getRightGridWidth(props) {\n      var width = props.width;\n\n      var leftGridWidth = this._getLeftGridWidth(props);\n\n      return width - leftGridWidth;\n    }\n  }, {\n    key: \"_getTopGridHeight\",\n    value: function _getTopGridHeight(props) {\n      var fixedRowCount = props.fixedRowCount,\n          rowHeight = props.rowHeight;\n\n      if (this._topGridHeight == null) {\n        if (typeof rowHeight === 'function') {\n          var topGridHeight = 0;\n\n          for (var index = 0; index < fixedRowCount; index++) {\n            topGridHeight += rowHeight({\n              index: index\n            });\n          }\n\n          this._topGridHeight = topGridHeight;\n        } else {\n          this._topGridHeight = rowHeight * fixedRowCount;\n        }\n      }\n\n      return this._topGridHeight;\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n        this.forceUpdate();\n      }\n    }\n    /**\n     * Avoid recreating inline styles each render; this bypasses Grid's shallowCompare.\n     * This method recalculates styles only when specific props change.\n     */\n\n  }, {\n    key: \"_maybeCalculateCachedStyles\",\n    value: function _maybeCalculateCachedStyles(resetAll) {\n      var _this$props9 = this.props,\n          columnWidth = _this$props9.columnWidth,\n          enableFixedColumnScroll = _this$props9.enableFixedColumnScroll,\n          enableFixedRowScroll = _this$props9.enableFixedRowScroll,\n          height = _this$props9.height,\n          fixedColumnCount = _this$props9.fixedColumnCount,\n          fixedRowCount = _this$props9.fixedRowCount,\n          rowHeight = _this$props9.rowHeight,\n          style = _this$props9.style,\n          styleBottomLeftGrid = _this$props9.styleBottomLeftGrid,\n          styleBottomRightGrid = _this$props9.styleBottomRightGrid,\n          styleTopLeftGrid = _this$props9.styleTopLeftGrid,\n          styleTopRightGrid = _this$props9.styleTopRightGrid,\n          width = _this$props9.width;\n      var sizeChange = resetAll || height !== this._lastRenderedHeight || width !== this._lastRenderedWidth;\n      var leftSizeChange = resetAll || columnWidth !== this._lastRenderedColumnWidth || fixedColumnCount !== this._lastRenderedFixedColumnCount;\n      var topSizeChange = resetAll || fixedRowCount !== this._lastRenderedFixedRowCount || rowHeight !== this._lastRenderedRowHeight;\n\n      if (resetAll || sizeChange || style !== this._lastRenderedStyle) {\n        this._containerOuterStyle = _objectSpread({\n          height: height,\n          overflow: 'visible',\n          // Let :focus outline show through\n          width: width\n        }, style);\n      }\n\n      if (resetAll || sizeChange || topSizeChange) {\n        this._containerTopStyle = {\n          height: this._getTopGridHeight(this.props),\n          position: 'relative',\n          width: width\n        };\n        this._containerBottomStyle = {\n          height: height - this._getTopGridHeight(this.props),\n          overflow: 'visible',\n          // Let :focus outline show through\n          position: 'relative',\n          width: width\n        };\n      }\n\n      if (resetAll || styleBottomLeftGrid !== this._lastRenderedStyleBottomLeftGrid) {\n        this._bottomLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: enableFixedColumnScroll ? 'auto' : 'hidden',\n          position: 'absolute'\n        }, styleBottomLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleBottomRightGrid !== this._lastRenderedStyleBottomRightGrid) {\n        this._bottomRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          position: 'absolute'\n        }, styleBottomRightGrid);\n      }\n\n      if (resetAll || styleTopLeftGrid !== this._lastRenderedStyleTopLeftGrid) {\n        this._topLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleTopRightGrid !== this._lastRenderedStyleTopRightGrid) {\n        this._topRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          overflowX: enableFixedRowScroll ? 'auto' : 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopRightGrid);\n      }\n\n      this._lastRenderedColumnWidth = columnWidth;\n      this._lastRenderedFixedColumnCount = fixedColumnCount;\n      this._lastRenderedFixedRowCount = fixedRowCount;\n      this._lastRenderedHeight = height;\n      this._lastRenderedRowHeight = rowHeight;\n      this._lastRenderedStyle = style;\n      this._lastRenderedStyleBottomLeftGrid = styleBottomLeftGrid;\n      this._lastRenderedStyleBottomRightGrid = styleBottomRightGrid;\n      this._lastRenderedStyleTopLeftGrid = styleTopLeftGrid;\n      this._lastRenderedStyleTopRightGrid = styleTopRightGrid;\n      this._lastRenderedWidth = width;\n    }\n  }, {\n    key: \"_prepareForRender\",\n    value: function _prepareForRender() {\n      if (this._lastRenderedColumnWidth !== this.props.columnWidth || this._lastRenderedFixedColumnCount !== this.props.fixedColumnCount) {\n        this._leftGridWidth = null;\n      }\n\n      if (this._lastRenderedFixedRowCount !== this.props.fixedRowCount || this._lastRenderedRowHeight !== this.props.rowHeight) {\n        this._topGridHeight = null;\n      }\n\n      this._maybeCalculateCachedStyles();\n\n      this._lastRenderedColumnWidth = this.props.columnWidth;\n      this._lastRenderedFixedColumnCount = this.props.fixedColumnCount;\n      this._lastRenderedFixedRowCount = this.props.fixedRowCount;\n      this._lastRenderedRowHeight = this.props.rowHeight;\n    }\n  }, {\n    key: \"_renderBottomLeftGrid\",\n    value: function _renderBottomLeftGrid(props) {\n      var enableFixedColumnScroll = props.enableFixedColumnScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          hideBottomLeftGridScrollbar = props.hideBottomLeftGridScrollbar;\n      var showVerticalScrollbar = this.state.showVerticalScrollbar;\n\n      if (!fixedColumnCount) {\n        return null;\n      }\n\n      var additionalRowCount = showVerticalScrollbar ? 1 : 0,\n          height = this._getBottomGridHeight(props),\n          width = this._getLeftGridWidth(props),\n          scrollbarSize = this.state.showVerticalScrollbar ? this.state.scrollbarSize : 0,\n          gridWidth = hideBottomLeftGridScrollbar ? width + scrollbarSize : width;\n\n      var bottomLeftGrid = React.createElement(_Grid[\"default\"], (0, _extends2[\"default\"])({}, props, {\n        cellRenderer: this._cellRendererBottomLeftGrid,\n        className: this.props.classNameBottomLeftGrid,\n        columnCount: fixedColumnCount,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomLeftGrid,\n        height: height,\n        onScroll: enableFixedColumnScroll ? this._onScrollTop : undefined,\n        ref: this._bottomLeftGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount) + additionalRowCount,\n        rowHeight: this._rowHeightBottomGrid,\n        style: this._bottomLeftGridStyle,\n        tabIndex: null,\n        width: gridWidth\n      }));\n\n      if (hideBottomLeftGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"BottomLeftGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._bottomLeftGridStyle, {\n            height: height,\n            width: width,\n            overflowY: 'hidden'\n          })\n        }, bottomLeftGrid);\n      }\n\n      return bottomLeftGrid;\n    }\n  }, {\n    key: \"_renderBottomRightGrid\",\n    value: function _renderBottomRightGrid(props) {\n      var columnCount = props.columnCount,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          scrollToColumn = props.scrollToColumn,\n          scrollToRow = props.scrollToRow;\n      return React.createElement(_Grid[\"default\"], (0, _extends2[\"default\"])({}, props, {\n        cellRenderer: this._cellRendererBottomRightGrid,\n        className: this.props.classNameBottomRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount),\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomRightGrid,\n        height: this._getBottomGridHeight(props),\n        onScroll: this._onScroll,\n        onScrollbarPresenceChange: this._onScrollbarPresenceChange,\n        ref: this._bottomRightGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount),\n        rowHeight: this._rowHeightBottomGrid,\n        scrollToColumn: scrollToColumn - fixedColumnCount,\n        scrollToRow: scrollToRow - fixedRowCount,\n        style: this._bottomRightGridStyle,\n        width: this._getRightGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopLeftGrid\",\n    value: function _renderTopLeftGrid(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount;\n\n      if (!fixedColumnCount || !fixedRowCount) {\n        return null;\n      }\n\n      return React.createElement(_Grid[\"default\"], (0, _extends2[\"default\"])({}, props, {\n        className: this.props.classNameTopLeftGrid,\n        columnCount: fixedColumnCount,\n        height: this._getTopGridHeight(props),\n        ref: this._topLeftGridRef,\n        rowCount: fixedRowCount,\n        style: this._topLeftGridStyle,\n        tabIndex: null,\n        width: this._getLeftGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopRightGrid\",\n    value: function _renderTopRightGrid(props) {\n      var columnCount = props.columnCount,\n          enableFixedRowScroll = props.enableFixedRowScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          scrollLeft = props.scrollLeft,\n          hideTopRightGridScrollbar = props.hideTopRightGridScrollbar;\n      var _this$state5 = this.state,\n          showHorizontalScrollbar = _this$state5.showHorizontalScrollbar,\n          scrollbarSize = _this$state5.scrollbarSize;\n\n      if (!fixedRowCount) {\n        return null;\n      }\n\n      var additionalColumnCount = showHorizontalScrollbar ? 1 : 0,\n          height = this._getTopGridHeight(props),\n          width = this._getRightGridWidth(props),\n          additionalHeight = showHorizontalScrollbar ? scrollbarSize : 0;\n\n      var gridHeight = height,\n          style = this._topRightGridStyle;\n\n      if (hideTopRightGridScrollbar) {\n        gridHeight = height + additionalHeight;\n        style = _objectSpread({}, this._topRightGridStyle, {\n          left: 0\n        });\n      }\n\n      var topRightGrid = React.createElement(_Grid[\"default\"], (0, _extends2[\"default\"])({}, props, {\n        cellRenderer: this._cellRendererTopRightGrid,\n        className: this.props.classNameTopRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount) + additionalColumnCount,\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheTopRightGrid,\n        height: gridHeight,\n        onScroll: enableFixedRowScroll ? this._onScrollLeft : undefined,\n        ref: this._topRightGridRef,\n        rowCount: fixedRowCount,\n        scrollLeft: scrollLeft,\n        style: style,\n        tabIndex: null,\n        width: width\n      }));\n\n      if (hideTopRightGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"TopRightGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._topRightGridStyle, {\n            height: height,\n            width: width,\n            overflowX: 'hidden'\n          })\n        }, topRightGrid);\n      }\n\n      return topRightGrid;\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null && nextProps.scrollLeft >= 0 ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null && nextProps.scrollTop >= 0 ? nextProps.scrollTop : prevState.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n  return MultiGrid;\n}(React.PureComponent);\n\n(0, _defineProperty2[\"default\"])(MultiGrid, \"defaultProps\", {\n  classNameBottomLeftGrid: '',\n  classNameBottomRightGrid: '',\n  classNameTopLeftGrid: '',\n  classNameTopRightGrid: '',\n  enableFixedColumnScroll: false,\n  enableFixedRowScroll: false,\n  fixedColumnCount: 0,\n  fixedRowCount: 0,\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  styleBottomLeftGrid: {},\n  styleBottomRightGrid: {},\n  styleTopLeftGrid: {},\n  styleTopRightGrid: {},\n  hideTopRightGridScrollbar: false,\n  hideBottomLeftGridScrollbar: false\n});\nMultiGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  classNameBottomLeftGrid: _propTypes[\"default\"].string.isRequired,\n  classNameBottomRightGrid: _propTypes[\"default\"].string.isRequired,\n  classNameTopLeftGrid: _propTypes[\"default\"].string.isRequired,\n  classNameTopRightGrid: _propTypes[\"default\"].string.isRequired,\n  enableFixedColumnScroll: _propTypes[\"default\"].bool.isRequired,\n  enableFixedRowScroll: _propTypes[\"default\"].bool.isRequired,\n  fixedColumnCount: _propTypes[\"default\"].number.isRequired,\n  fixedRowCount: _propTypes[\"default\"].number.isRequired,\n  onScrollbarPresenceChange: _propTypes[\"default\"].func,\n  style: _propTypes[\"default\"].object.isRequired,\n  styleBottomLeftGrid: _propTypes[\"default\"].object.isRequired,\n  styleBottomRightGrid: _propTypes[\"default\"].object.isRequired,\n  styleTopLeftGrid: _propTypes[\"default\"].object.isRequired,\n  styleTopRightGrid: _propTypes[\"default\"].object.isRequired,\n  hideTopRightGridScrollbar: _propTypes[\"default\"].bool,\n  hideBottomLeftGridScrollbar: _propTypes[\"default\"].bool\n} : {};\n(0, _reactLifecyclesCompat.polyfill)(MultiGrid);\nvar _default = MultiGrid;\nexports[\"default\"] = _default;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _CellMeasurer = require(\"../CellMeasurer\");\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCacheDecorator =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCacheDecorator() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    (0, _classCallCheck2[\"default\"])(this, CellMeasurerCacheDecorator);\n    (0, _defineProperty2[\"default\"])(this, \"_cellMeasurerCache\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_columnIndexOffset\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_rowIndexOffset\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      _this._cellMeasurerCache.columnWidth({\n        index: index + _this._columnIndexOffset\n      });\n    });\n    (0, _defineProperty2[\"default\"])(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      _this._cellMeasurerCache.rowHeight({\n        index: index + _this._rowIndexOffset\n      });\n    });\n    var cellMeasurerCache = params.cellMeasurerCache,\n        _params$columnIndexOf = params.columnIndexOffset,\n        columnIndexOffset = _params$columnIndexOf === void 0 ? 0 : _params$columnIndexOf,\n        _params$rowIndexOffse = params.rowIndexOffset,\n        rowIndexOffset = _params$rowIndexOffse === void 0 ? 0 : _params$rowIndexOffse;\n    this._cellMeasurerCache = cellMeasurerCache;\n    this._columnIndexOffset = columnIndexOffset;\n    this._rowIndexOffset = rowIndexOffset;\n  }\n\n  (0, _createClass2[\"default\"])(CellMeasurerCacheDecorator, [{\n    key: \"clear\",\n    value: function clear(rowIndex, columnIndex) {\n      this._cellMeasurerCache.clear(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellMeasurerCache.clearAll();\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._cellMeasurerCache.hasFixedHeight();\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._cellMeasurerCache.hasFixedWidth();\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getHeight(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getWidth(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.has(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      this._cellMeasurerCache.set(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset, width, height);\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultWidth;\n    }\n  }]);\n  return CellMeasurerCacheDecorator;\n}();\n\nexports[\"default\"] = CellMeasurerCacheDecorator;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"CellMeasurer\", {\n  enumerable: true,\n  get: function get() {\n    return _CellMeasurer[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"CellMeasurerCache\", {\n  enumerable: true,\n  get: function get() {\n    return _CellMeasurerCache[\"default\"];\n  }\n});\nexports[\"default\"] = void 0;\n\nvar _CellMeasurer = _interopRequireDefault(require(\"./CellMeasurer\"));\n\nvar _CellMeasurerCache = _interopRequireDefault(require(\"./CellMeasurerCache\"));\n\nvar _default = _CellMeasurer[\"default\"];\nexports[\"default\"] = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf3 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactDom = require(\"react-dom\");\n\nvar _types = require(\"./types\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _class, _temp;\n\n/**\n * Wraps a cell and measures its rendered content.\n * Measurements are stored in a per-cell cache.\n * Cached-content is not be re-measured.\n */\nvar CellMeasurer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  (0, _inherits2[\"default\"])(CellMeasurer, _React$PureComponent);\n\n  function CellMeasurer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, CellMeasurer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3[\"default\"])(CellMeasurer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_child\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_measure\", function () {\n      var _this$props = _this.props,\n          cache = _this$props.cache,\n          _this$props$columnInd = _this$props.columnIndex,\n          columnIndex = _this$props$columnInd === void 0 ? 0 : _this$props$columnInd,\n          parent = _this$props.parent,\n          _this$props$rowIndex = _this$props.rowIndex,\n          rowIndex = _this$props$rowIndex === void 0 ? _this.props.index || 0 : _this$props$rowIndex;\n\n      var _this$_getCellMeasure = _this._getCellMeasurements(),\n          height = _this$_getCellMeasure.height,\n          width = _this$_getCellMeasure.width;\n\n      if (height !== cache.getHeight(rowIndex, columnIndex) || width !== cache.getWidth(rowIndex, columnIndex)) {\n        cache.set(rowIndex, columnIndex, width, height);\n\n        if (parent && typeof parent.recomputeGridSize === 'function') {\n          parent.recomputeGridSize({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('CellMeasurer registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      if (element) {\n        _this._maybeMeasureCell();\n      }\n    });\n    return _this;\n  }\n\n  (0, _createClass2[\"default\"])(CellMeasurer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return typeof children === 'function' ? children({\n        measure: this._measure,\n        registerChild: this._registerChild\n      }) : children;\n    }\n  }, {\n    key: \"_getCellMeasurements\",\n    value: function _getCellMeasurements() {\n      var cache = this.props.cache;\n      var node = this._child || (0, _reactDom.findDOMNode)(this); // TODO Check for a bad combination of fixedWidth and missing numeric width or vice versa with height\n\n      if (node && node.ownerDocument && node.ownerDocument.defaultView && node instanceof node.ownerDocument.defaultView.HTMLElement) {\n        var styleWidth = node.style.width;\n        var styleHeight = node.style.height; // If we are re-measuring a cell that has already been measured,\n        // It will have a hard-coded width/height from the previous measurement.\n        // The fact that we are measuring indicates this measurement is probably stale,\n        // So explicitly clear it out (eg set to \"auto\") so we can recalculate.\n        // See issue #593 for more info.\n        // Even if we are measuring initially- if we're inside of a MultiGrid component,\n        // Explicitly clear width/height before measuring to avoid being tainted by another Grid.\n        // eg top/left Grid renders before bottom/right Grid\n        // Since the CellMeasurerCache is shared between them this taints derived cell size values.\n\n        if (!cache.hasFixedWidth()) {\n          node.style.width = 'auto';\n        }\n\n        if (!cache.hasFixedHeight()) {\n          node.style.height = 'auto';\n        }\n\n        var height = Math.ceil(node.offsetHeight);\n        var width = Math.ceil(node.offsetWidth); // Reset after measuring to avoid breaking styles; see #660\n\n        if (styleWidth) {\n          node.style.width = styleWidth;\n        }\n\n        if (styleHeight) {\n          node.style.height = styleHeight;\n        }\n\n        return {\n          height: height,\n          width: width\n        };\n      } else {\n        return {\n          height: 0,\n          width: 0\n        };\n      }\n    }\n  }, {\n    key: \"_maybeMeasureCell\",\n    value: function _maybeMeasureCell() {\n      var _this$props2 = this.props,\n          cache = _this$props2.cache,\n          _this$props2$columnIn = _this$props2.columnIndex,\n          columnIndex = _this$props2$columnIn === void 0 ? 0 : _this$props2$columnIn,\n          parent = _this$props2.parent,\n          _this$props2$rowIndex = _this$props2.rowIndex,\n          rowIndex = _this$props2$rowIndex === void 0 ? this.props.index || 0 : _this$props2$rowIndex;\n\n      if (!cache.has(rowIndex, columnIndex)) {\n        var _this$_getCellMeasure2 = this._getCellMeasurements(),\n            height = _this$_getCellMeasure2.height,\n            width = _this$_getCellMeasure2.width;\n\n        cache.set(rowIndex, columnIndex, width, height); // If size has changed, let Grid know to re-render.\n\n        if (parent && typeof parent.invalidateCellSizeAfterRender === 'function') {\n          parent.invalidateCellSizeAfterRender({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    }\n  }]);\n  return CellMeasurer;\n}(React.PureComponent), (0, _defineProperty2[\"default\"])(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"cache\": function cache() {\n    return (typeof _types.bpfrpt_proptype_CellMeasureCache === \"function\" ? _types.bpfrpt_proptype_CellMeasureCache.isRequired ? _types.bpfrpt_proptype_CellMeasureCache.isRequired : _types.bpfrpt_proptype_CellMeasureCache : _propTypes[\"default\"].shape(_types.bpfrpt_proptype_CellMeasureCache).isRequired).apply(this, arguments);\n  },\n  \"children\": _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].func, _propTypes[\"default\"].node]).isRequired,\n  \"columnIndex\": _propTypes[\"default\"].number,\n  \"index\": _propTypes[\"default\"].number,\n  \"parent\": _propTypes[\"default\"].shape({\n    invalidateCellSizeAfterRender: _propTypes[\"default\"].func,\n    recomputeGridSize: _propTypes[\"default\"].func\n  }).isRequired,\n  \"rowIndex\": _propTypes[\"default\"].number\n}), _temp); // Used for DEV mode warning check\n\nexports[\"default\"] = CellMeasurer;\n(0, _defineProperty2[\"default\"])(CellMeasurer, \"__internalCellMeasurerFlag\", false);\n\nif (process.env.NODE_ENV !== 'production') {\n  CellMeasurer.__internalCellMeasurerFlag = true;\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.DEFAULT_WIDTH = exports.DEFAULT_HEIGHT = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _types = require(\"./types\");\n\nvar DEFAULT_HEIGHT = 30;\nexports.DEFAULT_HEIGHT = DEFAULT_HEIGHT;\nvar DEFAULT_WIDTH = 100; // Enables more intelligent mapping of a given column and row index to an item ID.\n// This prevents a cell cache from being invalidated when its parent collection is modified.\n\nexports.DEFAULT_WIDTH = DEFAULT_WIDTH;\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCache =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCache() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    (0, _classCallCheck2[\"default\"])(this, CellMeasurerCache);\n    (0, _defineProperty2[\"default\"])(this, \"_cellHeightCache\", {});\n    (0, _defineProperty2[\"default\"])(this, \"_cellWidthCache\", {});\n    (0, _defineProperty2[\"default\"])(this, \"_columnWidthCache\", {});\n    (0, _defineProperty2[\"default\"])(this, \"_rowHeightCache\", {});\n    (0, _defineProperty2[\"default\"])(this, \"_defaultHeight\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_defaultWidth\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_minHeight\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_minWidth\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_keyMapper\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_hasFixedHeight\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_hasFixedWidth\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_columnCount\", 0);\n    (0, _defineProperty2[\"default\"])(this, \"_rowCount\", 0);\n    (0, _defineProperty2[\"default\"])(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      var key = _this._keyMapper(0, index);\n\n      return _this._columnWidthCache[key] !== undefined ? _this._columnWidthCache[key] : _this._defaultWidth;\n    });\n    (0, _defineProperty2[\"default\"])(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      var key = _this._keyMapper(index, 0);\n\n      return _this._rowHeightCache[key] !== undefined ? _this._rowHeightCache[key] : _this._defaultHeight;\n    });\n    var defaultHeight = params.defaultHeight,\n        defaultWidth = params.defaultWidth,\n        fixedHeight = params.fixedHeight,\n        fixedWidth = params.fixedWidth,\n        keyMapper = params.keyMapper,\n        minHeight = params.minHeight,\n        minWidth = params.minWidth;\n    this._hasFixedHeight = fixedHeight === true;\n    this._hasFixedWidth = fixedWidth === true;\n    this._minHeight = minHeight || 0;\n    this._minWidth = minWidth || 0;\n    this._keyMapper = keyMapper || defaultKeyMapper;\n    this._defaultHeight = Math.max(this._minHeight, typeof defaultHeight === 'number' ? defaultHeight : DEFAULT_HEIGHT);\n    this._defaultWidth = Math.max(this._minWidth, typeof defaultWidth === 'number' ? defaultWidth : DEFAULT_WIDTH);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (this._hasFixedHeight === false && this._hasFixedWidth === false) {\n        console.warn(\"CellMeasurerCache should only measure a cell's width or height. \" + 'You have configured CellMeasurerCache to measure both. ' + 'This will result in poor performance.');\n      }\n\n      if (this._hasFixedHeight === false && this._defaultHeight === 0) {\n        console.warn('Fixed height CellMeasurerCache should specify a :defaultHeight greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n\n      if (this._hasFixedWidth === false && this._defaultWidth === 0) {\n        console.warn('Fixed width CellMeasurerCache should specify a :defaultWidth greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n    }\n  }\n\n  (0, _createClass2[\"default\"])(CellMeasurerCache, [{\n    key: \"clear\",\n    value: function clear(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      delete this._cellHeightCache[key];\n      delete this._cellWidthCache[key];\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellHeightCache = {};\n      this._cellWidthCache = {};\n      this._columnWidthCache = {};\n      this._rowHeightCache = {};\n      this._rowCount = 0;\n      this._columnCount = 0;\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._hasFixedHeight;\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._hasFixedWidth;\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedHeight) {\n        return this._defaultHeight;\n      } else {\n        var _key = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellHeightCache[_key] !== undefined ? Math.max(this._minHeight, this._cellHeightCache[_key]) : this._defaultHeight;\n      }\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedWidth) {\n        return this._defaultWidth;\n      } else {\n        var _key2 = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellWidthCache[_key2] !== undefined ? Math.max(this._minWidth, this._cellWidthCache[_key2]) : this._defaultWidth;\n      }\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      return this._cellHeightCache[key] !== undefined;\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      if (columnIndex >= this._columnCount) {\n        this._columnCount = columnIndex + 1;\n      }\n\n      if (rowIndex >= this._rowCount) {\n        this._rowCount = rowIndex + 1;\n      } // Size is cached per cell so we don't have to re-measure if cells are re-ordered.\n\n\n      this._cellHeightCache[key] = height;\n      this._cellWidthCache[key] = width;\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"_updateCachedColumnAndRowSizes\",\n    value: function _updateCachedColumnAndRowSizes(rowIndex, columnIndex) {\n      // :columnWidth and :rowHeight are derived based on all cells in a column/row.\n      // Pre-cache these derived values for faster lookup later.\n      // Reads are expected to occur more frequently than writes in this case.\n      // Only update non-fixed dimensions though to avoid doing unnecessary work.\n      if (!this._hasFixedWidth) {\n        var columnWidth = 0;\n\n        for (var i = 0; i < this._rowCount; i++) {\n          columnWidth = Math.max(columnWidth, this.getWidth(i, columnIndex));\n        }\n\n        var columnKey = this._keyMapper(0, columnIndex);\n\n        this._columnWidthCache[columnKey] = columnWidth;\n      }\n\n      if (!this._hasFixedHeight) {\n        var rowHeight = 0;\n\n        for (var _i = 0; _i < this._columnCount; _i++) {\n          rowHeight = Math.max(rowHeight, this.getHeight(rowIndex, _i));\n        }\n\n        var rowKey = this._keyMapper(rowIndex, 0);\n\n        this._rowHeightCache[rowKey] = rowHeight;\n      }\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._defaultWidth;\n    }\n  }]);\n  return CellMeasurerCache;\n}();\n\nexports[\"default\"] = CellMeasurerCache;\n\nfunction defaultKeyMapper(rowIndex, columnIndex) {\n  return \"\".concat(rowIndex, \"-\").concat(columnIndex);\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function get() {\n    return _Grid[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"Grid\", {\n  enumerable: true,\n  get: function get() {\n    return _Grid[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"accessibilityOverscanIndicesGetter\", {\n  enumerable: true,\n  get: function get() {\n    return _accessibilityOverscanIndicesGetter[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"defaultCellRangeRenderer\", {\n  enumerable: true,\n  get: function get() {\n    return _defaultCellRangeRenderer[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"defaultOverscanIndicesGetter\", {\n  enumerable: true,\n  get: function get() {\n    return _defaultOverscanIndicesGetter[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"bpfrpt_proptype_NoContentRenderer\", {\n  enumerable: true,\n  get: function get() {\n    return _types.bpfrpt_proptype_NoContentRenderer;\n  }\n});\nObject.defineProperty(exports, \"bpfrpt_proptype_Alignment\", {\n  enumerable: true,\n  get: function get() {\n    return _types.bpfrpt_proptype_Alignment;\n  }\n});\nObject.defineProperty(exports, \"bpfrpt_proptype_CellPosition\", {\n  enumerable: true,\n  get: function get() {\n    return _types.bpfrpt_proptype_CellPosition;\n  }\n});\nObject.defineProperty(exports, \"bpfrpt_proptype_CellSize\", {\n  enumerable: true,\n  get: function get() {\n    return _types.bpfrpt_proptype_CellSize;\n  }\n});\nObject.defineProperty(exports, \"bpfrpt_proptype_OverscanIndicesGetter\", {\n  enumerable: true,\n  get: function get() {\n    return _types.bpfrpt_proptype_OverscanIndicesGetter;\n  }\n});\nObject.defineProperty(exports, \"bpfrpt_proptype_RenderedSection\", {\n  enumerable: true,\n  get: function get() {\n    return _types.bpfrpt_proptype_RenderedSection;\n  }\n});\nObject.defineProperty(exports, \"bpfrpt_proptype_CellRendererParams\", {\n  enumerable: true,\n  get: function get() {\n    return _types.bpfrpt_proptype_CellRendererParams;\n  }\n});\nObject.defineProperty(exports, \"bpfrpt_proptype_Scroll\", {\n  enumerable: true,\n  get: function get() {\n    return _types.bpfrpt_proptype_Scroll;\n  }\n});\n\nvar _Grid = _interopRequireDefault(require(\"./Grid\"));\n\nvar _accessibilityOverscanIndicesGetter = _interopRequireDefault(require(\"./accessibilityOverscanIndicesGetter\"));\n\nvar _defaultCellRangeRenderer = _interopRequireDefault(require(\"./defaultCellRangeRenderer\"));\n\nvar _defaultOverscanIndicesGetter = _interopRequireDefault(require(\"./defaultOverscanIndicesGetter\"));\n\nvar _types = require(\"./types\");","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.DEFAULT_SCROLLING_RESET_TIME_INTERVAL = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\n\nvar _calculateSizeAndPositionDataAndUpdateScrollOffset = _interopRequireDefault(require(\"./utils/calculateSizeAndPositionDataAndUpdateScrollOffset\"));\n\nvar _ScalingCellSizeAndPositionManager = _interopRequireDefault(require(\"./utils/ScalingCellSizeAndPositionManager\"));\n\nvar _createCallbackMemoizer = _interopRequireDefault(require(\"../utils/createCallbackMemoizer\"));\n\nvar _defaultOverscanIndicesGetter = _interopRequireWildcard(require(\"./defaultOverscanIndicesGetter\"));\n\nvar _updateScrollIndexHelper = _interopRequireDefault(require(\"./utils/updateScrollIndexHelper\"));\n\nvar _defaultCellRangeRenderer = _interopRequireDefault(require(\"./defaultCellRangeRenderer\"));\n\nvar _scrollbarSize = _interopRequireDefault(require(\"dom-helpers/scrollbarSize\"));\n\nvar _reactLifecyclesCompat = require(\"react-lifecycles-compat\");\n\nvar _requestAnimationTimeout = require(\"../utils/requestAnimationTimeout\");\n\nvar _types = require(\"./types\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\nvar DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nexports.DEFAULT_SCROLLING_RESET_TIME_INTERVAL = DEFAULT_SCROLLING_RESET_TIME_INTERVAL;\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n\nvar renderNull = function renderNull() {\n  return null;\n};\n\n/**\n * Renders tabular data with virtualization along the vertical and horizontal axes.\n * Row heights and column widths must be known ahead of time and specified as properties.\n */\nvar Grid = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  (0, _inherits2[\"default\"])(Grid, _React$PureComponent);\n\n  // Invokes onSectionRendered callback only when start/stop row or column indices change\n  function Grid(props) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, Grid);\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(Grid).call(this, props));\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onGridRenderedMemoizer\", (0, _createCallbackMemoizer[\"default\"])());\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onScrollMemoizer\", (0, _createCallbackMemoizer[\"default\"])(false));\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_deferredInvalidateColumnIndex\", null);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_deferredInvalidateRowIndex\", null);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_recomputeScrollLeftFlag\", false);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_recomputeScrollTopFlag\", false);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_horizontalScrollBarSize\", 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_verticalScrollBarSize\", 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_scrollbarPresenceChanged\", false);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_scrollingContainer\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_childrenToDisplay\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_columnStartIndex\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_columnStopIndex\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_rowStartIndex\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_rowStopIndex\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_renderedColumnStartIndex\", 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_renderedColumnStopIndex\", 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_renderedRowStartIndex\", 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_renderedRowStopIndex\", 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_initialScrollTop\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_initialScrollLeft\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_disablePointerEventsTimeoutId\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_styleCache\", {});\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_cellCache\", {});\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_debounceScrollEndedCallback\", function () {\n      _this._disablePointerEventsTimeoutId = null; // isScrolling is used to determine if we reset styleCache\n\n      _this.setState({\n        isScrolling: false,\n        needToResetStyleCache: false\n      });\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_invokeOnGridRenderedHelper\", function () {\n      var onSectionRendered = _this.props.onSectionRendered;\n\n      _this._onGridRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          columnOverscanStartIndex: _this._columnStartIndex,\n          columnOverscanStopIndex: _this._columnStopIndex,\n          columnStartIndex: _this._renderedColumnStartIndex,\n          columnStopIndex: _this._renderedColumnStopIndex,\n          rowOverscanStartIndex: _this._rowStartIndex,\n          rowOverscanStopIndex: _this._rowStopIndex,\n          rowStartIndex: _this._renderedRowStartIndex,\n          rowStopIndex: _this._renderedRowStopIndex\n        }\n      });\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target === _this._scrollingContainer) {\n        _this.handleScrollEvent(event.target);\n      }\n    });\n    var columnSizeAndPositionManager = new _ScalingCellSizeAndPositionManager[\"default\"]({\n      cellCount: props.columnCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.columnWidth)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedColumnSize(props)\n    });\n    var rowSizeAndPositionManager = new _ScalingCellSizeAndPositionManager[\"default\"]({\n      cellCount: props.rowCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.rowHeight)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedRowSize(props)\n    });\n    _this.state = {\n      instanceProps: {\n        columnSizeAndPositionManager: columnSizeAndPositionManager,\n        rowSizeAndPositionManager: rowSizeAndPositionManager,\n        prevColumnWidth: props.columnWidth,\n        prevRowHeight: props.rowHeight,\n        prevColumnCount: props.columnCount,\n        prevRowCount: props.rowCount,\n        prevIsScrolling: props.isScrolling === true,\n        prevScrollToColumn: props.scrollToColumn,\n        prevScrollToRow: props.scrollToRow,\n        scrollbarSize: 0,\n        scrollbarSizeMeasured: false\n      },\n      isScrolling: false,\n      scrollDirectionHorizontal: _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD,\n      scrollDirectionVertical: _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollPositionChangeReason: null,\n      needToResetStyleCache: false\n    };\n\n    if (props.scrollToRow > 0) {\n      _this._initialScrollTop = _this._getCalculatedScrollTop(props, _this.state);\n    }\n\n    if (props.scrollToColumn > 0) {\n      _this._initialScrollLeft = _this._getCalculatedScrollLeft(props, _this.state);\n    }\n\n    return _this;\n  }\n  /**\n   * Gets offsets for a given cell and alignment.\n   */\n\n\n  (0, _createClass2[\"default\"])(Grid, [{\n    key: \"getOffsetForCell\",\n    value: function getOffsetForCell() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$alignment = _ref.alignment,\n          alignment = _ref$alignment === void 0 ? this.props.scrollToAlignment : _ref$alignment,\n          _ref$columnIndex = _ref.columnIndex,\n          columnIndex = _ref$columnIndex === void 0 ? this.props.scrollToColumn : _ref$columnIndex,\n          _ref$rowIndex = _ref.rowIndex,\n          rowIndex = _ref$rowIndex === void 0 ? this.props.scrollToRow : _ref$rowIndex;\n\n      var offsetProps = _objectSpread({}, this.props, {\n        scrollToAlignment: alignment,\n        scrollToColumn: columnIndex,\n        scrollToRow: rowIndex\n      });\n\n      return {\n        scrollLeft: this._getCalculatedScrollLeft(offsetProps),\n        scrollTop: this._getCalculatedScrollTop(offsetProps)\n      };\n    }\n    /**\n     * Gets estimated total rows' height.\n     */\n\n  }, {\n    key: \"getTotalRowsHeight\",\n    value: function getTotalRowsHeight() {\n      return this.state.instanceProps.rowSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * Gets estimated total columns' width.\n     */\n\n  }, {\n    key: \"getTotalColumnsWidth\",\n    value: function getTotalColumnsWidth() {\n      return this.state.instanceProps.columnSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * This method handles a scroll event originating from an external scroll control.\n     * It's an advanced method and should probably not be used unless you're implementing a custom scroll-bar solution.\n     */\n\n  }, {\n    key: \"handleScrollEvent\",\n    value: function handleScrollEvent(_ref2) {\n      var _ref2$scrollLeft = _ref2.scrollLeft,\n          scrollLeftParam = _ref2$scrollLeft === void 0 ? 0 : _ref2$scrollLeft,\n          _ref2$scrollTop = _ref2.scrollTop,\n          scrollTopParam = _ref2$scrollTop === void 0 ? 0 : _ref2$scrollTop;\n\n      // On iOS, we can arrive at negative offsets by swiping past the start.\n      // To prevent flicker here, we make playing in the negative offset zone cause nothing to happen.\n      if (scrollTopParam < 0) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      this._debounceScrollEnded();\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          autoWidth = _this$props.autoWidth,\n          height = _this$props.height,\n          width = _this$props.width;\n      var instanceProps = this.state.instanceProps; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollbarSize = instanceProps.scrollbarSize;\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var scrollLeft = Math.min(Math.max(0, totalColumnsWidth - width + scrollbarSize), scrollLeftParam);\n      var scrollTop = Math.min(Math.max(0, totalRowsHeight - height + scrollbarSize), scrollTopParam); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (this.state.scrollLeft !== scrollLeft || this.state.scrollTop !== scrollTop) {\n        // Track scrolling direction so we can more efficiently overscan rows to reduce empty space around the edges while scrolling.\n        // Don't change direction for an axis unless scroll offset has changed.\n        var scrollDirectionHorizontal = scrollLeft !== this.state.scrollLeft ? scrollLeft > this.state.scrollLeft ? _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD : _defaultOverscanIndicesGetter.SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionHorizontal;\n        var scrollDirectionVertical = scrollTop !== this.state.scrollTop ? scrollTop > this.state.scrollTop ? _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD : _defaultOverscanIndicesGetter.SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionVertical;\n        var newState = {\n          isScrolling: true,\n          scrollDirectionHorizontal: scrollDirectionHorizontal,\n          scrollDirectionVertical: scrollDirectionVertical,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.OBSERVED\n        };\n\n        if (!autoHeight) {\n          newState.scrollTop = scrollTop;\n        }\n\n        if (!autoWidth) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        newState.needToResetStyleCache = false;\n        this.setState(newState);\n      }\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalColumnsWidth: totalColumnsWidth,\n        totalRowsHeight: totalRowsHeight\n      });\n    }\n    /**\n     * Invalidate Grid size and recompute visible cells.\n     * This is a deferred wrapper for recomputeGridSize().\n     * It sets a flag to be evaluated on cDM/cDU to avoid unnecessary renders.\n     * This method is intended for advanced use-cases like CellMeasurer.\n     */\n    // @TODO (bvaughn) Add automated test coverage for this.\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rowIndex = _ref3.rowIndex;\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /**\n     * Pre-measure all columns and rows in a Grid.\n     * Typically cells are only measured as needed and estimated sizes are used for cells that have not yet been measured.\n     * This method ensures that the next call to getTotalSize() returns an exact size (as opposed to just an estimated one).\n     */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      var _this$props2 = this.props,\n          columnCount = _this$props2.columnCount,\n          rowCount = _this$props2.rowCount;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.getSizeAndPositionOfCell(columnCount - 1);\n      instanceProps.rowSizeAndPositionManager.getSizeAndPositionOfCell(rowCount - 1);\n    }\n    /**\n     * Forced recompute of row heights and column widths.\n     * This function should be called if dynamic column or row sizes have changed but nothing else has.\n     * Since Grid only receives :columnCount and :rowCount it has no way of detecting when the underlying data changes.\n     */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref4$columnIndex = _ref4.columnIndex,\n          columnIndex = _ref4$columnIndex === void 0 ? 0 : _ref4$columnIndex,\n          _ref4$rowIndex = _ref4.rowIndex,\n          rowIndex = _ref4$rowIndex === void 0 ? 0 : _ref4$rowIndex;\n\n      var _this$props3 = this.props,\n          scrollToColumn = _this$props3.scrollToColumn,\n          scrollToRow = _this$props3.scrollToRow;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.resetCell(columnIndex);\n      instanceProps.rowSizeAndPositionManager.resetCell(rowIndex); // Cell sizes may be determined by a function property.\n      // In this case the cDU handler can't know if they changed.\n      // Store this flag to let the next cDU pass know it needs to recompute the scroll offset.\n\n      this._recomputeScrollLeftFlag = scrollToColumn >= 0 && (this.state.scrollDirectionHorizontal === _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD ? columnIndex <= scrollToColumn : columnIndex >= scrollToColumn);\n      this._recomputeScrollTopFlag = scrollToRow >= 0 && (this.state.scrollDirectionVertical === _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD ? rowIndex <= scrollToRow : rowIndex >= scrollToRow); // Clear cell cache in case we are scrolling;\n      // Invalid row heights likely mean invalid cached content as well.\n\n      this._styleCache = {};\n      this._cellCache = {};\n      this.forceUpdate();\n    }\n    /**\n     * Ensure column and row are visible.\n     */\n\n  }, {\n    key: \"scrollToCell\",\n    value: function scrollToCell(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n      var columnCount = this.props.columnCount;\n      var props = this.props; // Don't adjust scroll offset for single-column grids (eg List, Table).\n      // This can cause a funky scroll offset because of the vertical scrollbar width.\n\n      if (columnCount > 1 && columnIndex !== undefined) {\n        this._updateScrollLeftForScrollToColumn(_objectSpread({}, props, {\n          scrollToColumn: columnIndex\n        }));\n      }\n\n      if (rowIndex !== undefined) {\n        this._updateScrollTopForScrollToRow(_objectSpread({}, props, {\n          scrollToRow: rowIndex\n        }));\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          getScrollbarSize = _this$props4.getScrollbarSize,\n          height = _this$props4.height,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToColumn = _this$props4.scrollToColumn,\n          scrollTop = _this$props4.scrollTop,\n          scrollToRow = _this$props4.scrollToRow,\n          width = _this$props4.width;\n      var instanceProps = this.state.instanceProps; // Reset initial offsets to be ignored in browser\n\n      this._initialScrollTop = 0;\n      this._initialScrollLeft = 0; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n\n      if (!instanceProps.scrollbarSizeMeasured) {\n        this.setState(function (prevState) {\n          var stateUpdate = _objectSpread({}, prevState, {\n            needToResetStyleCache: false\n          });\n\n          stateUpdate.instanceProps.scrollbarSize = getScrollbarSize();\n          stateUpdate.instanceProps.scrollbarSizeMeasured = true;\n          return stateUpdate;\n        });\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 || typeof scrollTop === 'number' && scrollTop >= 0) {\n        var stateUpdate = Grid._getScrollToPositionStateUpdate({\n          prevState: this.state,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        if (stateUpdate) {\n          stateUpdate.needToResetStyleCache = false;\n          this.setState(stateUpdate);\n        }\n      } // refs don't work in `react-test-renderer`\n\n\n      if (this._scrollingContainer) {\n        // setting the ref's scrollLeft and scrollTop.\n        // Somehow in MultiGrid the main grid doesn't trigger a update on mount.\n        if (this._scrollingContainer.scrollLeft !== this.state.scrollLeft) {\n          this._scrollingContainer.scrollLeft = this.state.scrollLeft;\n        }\n\n        if (this._scrollingContainer.scrollTop !== this.state.scrollTop) {\n          this._scrollingContainer.scrollTop = this.state.scrollTop;\n        }\n      } // Don't update scroll offset if the size is 0; we don't render any cells in this case.\n      // Setting a state may cause us to later thing we've updated the offce when we haven't.\n\n\n      var sizeIsBiggerThanZero = height > 0 && width > 0;\n\n      if (scrollToColumn >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollLeftForScrollToColumn();\n      }\n\n      if (scrollToRow >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollTopForScrollToRow();\n      } // Update onRowsRendered callback\n\n\n      this._invokeOnGridRenderedHelper(); // Initialize onScroll callback\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalColumnsWidth: instanceProps.columnSizeAndPositionManager.getTotalSize(),\n        totalRowsHeight: instanceProps.rowSizeAndPositionManager.getTotalSize()\n      });\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) New scroll-to-cell props have been set\n     */\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      var _this$props5 = this.props,\n          autoHeight = _this$props5.autoHeight,\n          autoWidth = _this$props5.autoWidth,\n          columnCount = _this$props5.columnCount,\n          height = _this$props5.height,\n          rowCount = _this$props5.rowCount,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToColumn = _this$props5.scrollToColumn,\n          scrollToRow = _this$props5.scrollToRow,\n          width = _this$props5.width;\n      var _this$state = this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollPositionChangeReason = _this$state.scrollPositionChangeReason,\n          scrollTop = _this$state.scrollTop,\n          instanceProps = _this$state.instanceProps; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // Handle edge case where column or row count has only just increased over 0.\n      // In this case we may have to restore a previously-specified scroll offset.\n      // For more info see bvaughn/react-virtualized/issues/218\n\n\n      var columnOrRowCountJustIncreasedFromZero = columnCount > 0 && prevProps.columnCount === 0 || rowCount > 0 && prevProps.rowCount === 0; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        // @TRICKY :autoHeight and :autoWidth properties instructs Grid to leave :scrollTop and :scrollLeft management to an external HOC (eg WindowScroller).\n        // In this case we should avoid checking scrollingContainer.scrollTop and scrollingContainer.scrollLeft since it forces layout/flow.\n        if (!autoWidth && scrollLeft >= 0 && (scrollLeft !== this._scrollingContainer.scrollLeft || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (!autoHeight && scrollTop >= 0 && (scrollTop !== this._scrollingContainer.scrollTop || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Special case where the previous size was 0:\n      // In this case we don't show any windowed cells at all.\n      // So we should always recalculate offset afterwards.\n\n\n      var sizeJustIncreasedFromZero = (prevProps.width === 0 || prevProps.height === 0) && height > 0 && width > 0; // Update scroll offsets if the current :scrollToColumn or :scrollToRow values requires it\n      // @TODO Do we also need this check or can the one in componentWillUpdate() suffice?\n\n      if (this._recomputeScrollLeftFlag) {\n        this._recomputeScrollLeftFlag = false;\n\n        this._updateScrollLeftForScrollToColumn(this.props);\n      } else {\n        (0, _updateScrollIndexHelper[\"default\"])({\n          cellSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          previousCellsCount: prevProps.columnCount,\n          previousCellSize: prevProps.columnWidth,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToColumn,\n          previousSize: prevProps.width,\n          scrollOffset: scrollLeft,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToColumn,\n          size: width,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollLeftForScrollToColumn(_this2.props);\n          }\n        });\n      }\n\n      if (this._recomputeScrollTopFlag) {\n        this._recomputeScrollTopFlag = false;\n\n        this._updateScrollTopForScrollToRow(this.props);\n      } else {\n        (0, _updateScrollIndexHelper[\"default\"])({\n          cellSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          previousCellsCount: prevProps.rowCount,\n          previousCellSize: prevProps.rowHeight,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToRow,\n          previousSize: prevProps.height,\n          scrollOffset: scrollTop,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToRow,\n          size: height,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollTopForScrollToRow(_this2.props);\n          }\n        });\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnGridRenderedHelper(); // Changes to :scrollLeft or :scrollTop should also notify :onScroll listeners\n\n\n      if (scrollLeft !== prevState.scrollLeft || scrollTop !== prevState.scrollTop) {\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n\n        this._invokeOnScrollMemoizer({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          totalColumnsWidth: totalColumnsWidth,\n          totalRowsHeight: totalRowsHeight\n        });\n      }\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        (0, _requestAnimationTimeout.cancelAnimationTimeout)(this._disablePointerEventsTimeoutId);\n      }\n    }\n    /**\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoContainerWidth = _this$props6.autoContainerWidth,\n          autoHeight = _this$props6.autoHeight,\n          autoWidth = _this$props6.autoWidth,\n          className = _this$props6.className,\n          containerProps = _this$props6.containerProps,\n          containerRole = _this$props6.containerRole,\n          containerStyle = _this$props6.containerStyle,\n          height = _this$props6.height,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          role = _this$props6.role,\n          style = _this$props6.style,\n          tabIndex = _this$props6.tabIndex,\n          width = _this$props6.width;\n      var _this$state2 = this.state,\n          instanceProps = _this$state2.instanceProps,\n          needToResetStyleCache = _this$state2.needToResetStyleCache;\n\n      var isScrolling = this._isScrolling();\n\n      var gridStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        width: autoWidth ? 'auto' : width,\n        WebkitOverflowScrolling: 'touch',\n        willChange: 'transform'\n      };\n\n      if (needToResetStyleCache) {\n        this._styleCache = {};\n      } // calculate _styleCache here\n      // if state.isScrolling (not from _isScrolling) then reset\n\n\n      if (!this.state.isScrolling) {\n        this._resetStyleCache();\n      } // calculate children to render here\n\n\n      this._calculateChildrenToRender(this.props, this.state);\n\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize(); // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n      var horizontalScrollBarSize = totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n\n      if (horizontalScrollBarSize !== this._horizontalScrollBarSize || verticalScrollBarSize !== this._verticalScrollBarSize) {\n        this._horizontalScrollBarSize = horizontalScrollBarSize;\n        this._verticalScrollBarSize = verticalScrollBarSize;\n        this._scrollbarPresenceChanged = true;\n      } // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n\n      gridStyle.overflowX = totalColumnsWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      gridStyle.overflowY = totalRowsHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      var childrenToDisplay = this._childrenToDisplay;\n      var showNoContentRenderer = childrenToDisplay.length === 0 && height > 0 && width > 0;\n      return React.createElement(\"div\", (0, _extends2[\"default\"])({\n        ref: this._setScrollingContainerRef\n      }, containerProps, {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-readonly\": this.props['aria-readonly'],\n        className: (0, _clsx[\"default\"])('ReactVirtualized__Grid', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({}, gridStyle, {}, style),\n        tabIndex: tabIndex\n      }), childrenToDisplay.length > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Grid__innerScrollContainer\",\n        role: containerRole,\n        style: _objectSpread({\n          width: autoContainerWidth ? 'auto' : totalColumnsWidth,\n          height: totalRowsHeight,\n          maxWidth: totalColumnsWidth,\n          maxHeight: totalRowsHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }, containerStyle)\n      }, childrenToDisplay), showNoContentRenderer && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n  }, {\n    key: \"_calculateChildrenToRender\",\n    value: function _calculateChildrenToRender() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      var cellRenderer = props.cellRenderer,\n          cellRangeRenderer = props.cellRangeRenderer,\n          columnCount = props.columnCount,\n          deferredMeasurementCache = props.deferredMeasurementCache,\n          height = props.height,\n          overscanColumnCount = props.overscanColumnCount,\n          overscanIndicesGetter = props.overscanIndicesGetter,\n          overscanRowCount = props.overscanRowCount,\n          rowCount = props.rowCount,\n          width = props.width,\n          isScrollingOptOut = props.isScrollingOptOut;\n      var scrollDirectionHorizontal = state.scrollDirectionHorizontal,\n          scrollDirectionVertical = state.scrollDirectionVertical,\n          instanceProps = state.instanceProps;\n      var scrollTop = this._initialScrollTop > 0 ? this._initialScrollTop : state.scrollTop;\n      var scrollLeft = this._initialScrollLeft > 0 ? this._initialScrollLeft : state.scrollLeft;\n\n      var isScrolling = this._isScrolling(props, state);\n\n      this._childrenToDisplay = []; // Render only enough columns and rows to cover the visible area of the grid.\n\n      if (height > 0 && width > 0) {\n        var visibleColumnIndices = instanceProps.columnSizeAndPositionManager.getVisibleCellRange({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var visibleRowIndices = instanceProps.rowSizeAndPositionManager.getVisibleCellRange({\n          containerSize: height,\n          offset: scrollTop\n        });\n        var horizontalOffsetAdjustment = instanceProps.columnSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var verticalOffsetAdjustment = instanceProps.rowSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: height,\n          offset: scrollTop\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        this._renderedColumnStartIndex = visibleColumnIndices.start;\n        this._renderedColumnStopIndex = visibleColumnIndices.stop;\n        this._renderedRowStartIndex = visibleRowIndices.start;\n        this._renderedRowStopIndex = visibleRowIndices.stop;\n        var overscanColumnIndices = overscanIndicesGetter({\n          direction: 'horizontal',\n          cellCount: columnCount,\n          overscanCellsCount: overscanColumnCount,\n          scrollDirection: scrollDirectionHorizontal,\n          startIndex: typeof visibleColumnIndices.start === 'number' ? visibleColumnIndices.start : 0,\n          stopIndex: typeof visibleColumnIndices.stop === 'number' ? visibleColumnIndices.stop : -1\n        });\n        var overscanRowIndices = overscanIndicesGetter({\n          direction: 'vertical',\n          cellCount: rowCount,\n          overscanCellsCount: overscanRowCount,\n          scrollDirection: scrollDirectionVertical,\n          startIndex: typeof visibleRowIndices.start === 'number' ? visibleRowIndices.start : 0,\n          stopIndex: typeof visibleRowIndices.stop === 'number' ? visibleRowIndices.stop : -1\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        var columnStartIndex = overscanColumnIndices.overscanStartIndex;\n        var columnStopIndex = overscanColumnIndices.overscanStopIndex;\n        var rowStartIndex = overscanRowIndices.overscanStartIndex;\n        var rowStopIndex = overscanRowIndices.overscanStopIndex; // Advanced use-cases (eg CellMeasurer) require batched measurements to determine accurate sizes.\n\n        if (deferredMeasurementCache) {\n          // If rows have a dynamic height, scan the rows we are about to render.\n          // If any have not yet been measured, then we need to render all columns initially,\n          // Because the height of the row is equal to the tallest cell within that row,\n          // (And so we can't know the height without measuring all column-cells first).\n          if (!deferredMeasurementCache.hasFixedHeight()) {\n            for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n              if (!deferredMeasurementCache.has(rowIndex, 0)) {\n                columnStartIndex = 0;\n                columnStopIndex = columnCount - 1;\n                break;\n              }\n            }\n          } // If columns have a dynamic width, scan the columns we are about to render.\n          // If any have not yet been measured, then we need to render all rows initially,\n          // Because the width of the column is equal to the widest cell within that column,\n          // (And so we can't know the width without measuring all row-cells first).\n\n\n          if (!deferredMeasurementCache.hasFixedWidth()) {\n            for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n              if (!deferredMeasurementCache.has(0, columnIndex)) {\n                rowStartIndex = 0;\n                rowStopIndex = rowCount - 1;\n                break;\n              }\n            }\n          }\n        }\n\n        this._childrenToDisplay = cellRangeRenderer({\n          cellCache: this._cellCache,\n          cellRenderer: cellRenderer,\n          columnSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          columnStartIndex: columnStartIndex,\n          columnStopIndex: columnStopIndex,\n          deferredMeasurementCache: deferredMeasurementCache,\n          horizontalOffsetAdjustment: horizontalOffsetAdjustment,\n          isScrolling: isScrolling,\n          isScrollingOptOut: isScrollingOptOut,\n          parent: this,\n          rowSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          rowStartIndex: rowStartIndex,\n          rowStopIndex: rowStopIndex,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          styleCache: this._styleCache,\n          verticalOffsetAdjustment: verticalOffsetAdjustment,\n          visibleColumnIndices: visibleColumnIndices,\n          visibleRowIndices: visibleRowIndices\n        }); // update the indices\n\n        this._columnStartIndex = columnStartIndex;\n        this._columnStopIndex = columnStopIndex;\n        this._rowStartIndex = rowStartIndex;\n        this._rowStopIndex = rowStopIndex;\n      }\n    }\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Grid.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_debounceScrollEnded\",\n    value: function _debounceScrollEnded() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._disablePointerEventsTimeoutId) {\n        (0, _requestAnimationTimeout.cancelAnimationTimeout)(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = (0, _requestAnimationTimeout.requestAnimationTimeout)(this._debounceScrollEndedCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n\n    /**\n     * Check for batched CellMeasurer size invalidations.\n     * This will occur the first time one or more previously unmeasured cells are rendered.\n     */\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number' && typeof this._deferredInvalidateRowIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n      }\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref6) {\n      var _this3 = this;\n\n      var scrollLeft = _ref6.scrollLeft,\n          scrollTop = _ref6.scrollTop,\n          totalColumnsWidth = _ref6.totalColumnsWidth,\n          totalRowsHeight = _ref6.totalRowsHeight;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref7) {\n          var scrollLeft = _ref7.scrollLeft,\n              scrollTop = _ref7.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalRowsHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalColumnsWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_isScrolling\",\n    value: function _isScrolling() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      // If isScrolling is defined in props, use it to override the value in state\n      // This is a performance optimization for WindowScroller + Grid\n      return Object.hasOwnProperty.call(props, 'isScrolling') ? Boolean(props.isScrolling) : Boolean(state.isScrolling);\n    }\n  }, {\n    key: \"_maybeCallOnScrollbarPresenceChange\",\n    value: function _maybeCallOnScrollbarPresenceChange() {\n      if (this._scrollbarPresenceChanged) {\n        var onScrollbarPresenceChange = this.props.onScrollbarPresenceChange;\n        this._scrollbarPresenceChanged = false;\n        onScrollbarPresenceChange({\n          horizontal: this._horizontalScrollBarSize > 0,\n          size: this.state.instanceProps.scrollbarSize,\n          vertical: this._verticalScrollBarSize > 0\n        });\n      }\n    }\n  }, {\n    key: \"scrollToPosition\",\n\n    /**\n     * Scroll to the specified offset(s).\n     * Useful for animating position changes.\n     */\n    value: function scrollToPosition(_ref8) {\n      var scrollLeft = _ref8.scrollLeft,\n          scrollTop = _ref8.scrollTop;\n\n      var stateUpdate = Grid._getScrollToPositionStateUpdate({\n        prevState: this.state,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollLeft(props, state);\n    }\n  }, {\n    key: \"_updateScrollLeftForScrollToColumn\",\n    value: function _updateScrollLeftForScrollToColumn() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollLeftForScrollToColumnStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollTop(props, state);\n    }\n  }, {\n    key: \"_resetStyleCache\",\n    value: function _resetStyleCache() {\n      var styleCache = this._styleCache;\n      var cellCache = this._cellCache;\n      var isScrollingOptOut = this.props.isScrollingOptOut; // Reset cell and style caches once scrolling stops.\n      // This makes Grid simpler to use (since cells commonly change).\n      // And it keeps the caches from growing too large.\n      // Performance is most sensitive when a user is scrolling.\n      // Don't clear visible cells from cellCache if isScrollingOptOut is specified.\n      // This keeps the cellCache to a resonable size.\n\n      this._cellCache = {};\n      this._styleCache = {}; // Copy over the visible cell styles so avoid unnecessary re-render.\n\n      for (var rowIndex = this._rowStartIndex; rowIndex <= this._rowStopIndex; rowIndex++) {\n        for (var columnIndex = this._columnStartIndex; columnIndex <= this._columnStopIndex; columnIndex++) {\n          var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n          this._styleCache[key] = styleCache[key];\n\n          if (isScrollingOptOut) {\n            this._cellCache[key] = cellCache[key];\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_updateScrollTopForScrollToRow\",\n    value: function _updateScrollTopForScrollToRow() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollTopForScrollToRowStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var newState = {};\n\n      if (nextProps.columnCount === 0 && prevState.scrollLeft !== 0 || nextProps.rowCount === 0 && prevState.scrollTop !== 0) {\n        newState.scrollLeft = 0;\n        newState.scrollTop = 0; // only use scroll{Left,Top} from props if scrollTo{Column,Row} isn't specified\n        // scrollTo{Column,Row} should override scroll{Left,Top}\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft && nextProps.scrollToColumn < 0 || nextProps.scrollTop !== prevState.scrollTop && nextProps.scrollToRow < 0) {\n        Object.assign(newState, Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: nextProps.scrollLeft,\n          scrollTop: nextProps.scrollTop\n        }));\n      }\n\n      var instanceProps = prevState.instanceProps; // Initially we should not clearStyleCache\n\n      newState.needToResetStyleCache = false;\n\n      if (nextProps.columnWidth !== instanceProps.prevColumnWidth || nextProps.rowHeight !== instanceProps.prevRowHeight) {\n        // Reset cache. set it to {} in render\n        newState.needToResetStyleCache = true;\n      }\n\n      instanceProps.columnSizeAndPositionManager.configure({\n        cellCount: nextProps.columnCount,\n        estimatedCellSize: Grid._getEstimatedColumnSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.columnWidth)\n      });\n      instanceProps.rowSizeAndPositionManager.configure({\n        cellCount: nextProps.rowCount,\n        estimatedCellSize: Grid._getEstimatedRowSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.rowHeight)\n      });\n\n      if (instanceProps.prevColumnCount === 0 || instanceProps.prevRowCount === 0) {\n        instanceProps.prevColumnCount = 0;\n        instanceProps.prevRowCount = 0;\n      } // If scrolling is controlled outside this component, clear cache when scrolling stops\n\n\n      if (nextProps.autoHeight && nextProps.isScrolling === false && instanceProps.prevIsScrolling === true) {\n        Object.assign(newState, {\n          isScrolling: false\n        });\n      }\n\n      var maybeStateA;\n      var maybeStateB;\n      (0, _calculateSizeAndPositionDataAndUpdateScrollOffset[\"default\"])({\n        cellCount: instanceProps.prevColumnCount,\n        cellSize: typeof instanceProps.prevColumnWidth === 'number' ? instanceProps.prevColumnWidth : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.columnSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.columnCount,\n        nextCellSize: typeof nextProps.columnWidth === 'number' ? nextProps.columnWidth : null,\n        nextScrollToIndex: nextProps.scrollToColumn,\n        scrollToIndex: instanceProps.prevScrollToColumn,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateA = Grid._getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState);\n        }\n      });\n      (0, _calculateSizeAndPositionDataAndUpdateScrollOffset[\"default\"])({\n        cellCount: instanceProps.prevRowCount,\n        cellSize: typeof instanceProps.prevRowHeight === 'number' ? instanceProps.prevRowHeight : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.rowSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.rowCount,\n        nextCellSize: typeof nextProps.rowHeight === 'number' ? nextProps.rowHeight : null,\n        nextScrollToIndex: nextProps.scrollToRow,\n        scrollToIndex: instanceProps.prevScrollToRow,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateB = Grid._getScrollTopForScrollToRowStateUpdate(nextProps, prevState);\n        }\n      });\n      instanceProps.prevColumnCount = nextProps.columnCount;\n      instanceProps.prevColumnWidth = nextProps.columnWidth;\n      instanceProps.prevIsScrolling = nextProps.isScrolling === true;\n      instanceProps.prevRowCount = nextProps.rowCount;\n      instanceProps.prevRowHeight = nextProps.rowHeight;\n      instanceProps.prevScrollToColumn = nextProps.scrollToColumn;\n      instanceProps.prevScrollToRow = nextProps.scrollToRow; // getting scrollBarSize (moved from componentWillMount)\n\n      instanceProps.scrollbarSize = nextProps.getScrollbarSize();\n\n      if (instanceProps.scrollbarSize === undefined) {\n        instanceProps.scrollbarSizeMeasured = false;\n        instanceProps.scrollbarSize = 0;\n      } else {\n        instanceProps.scrollbarSizeMeasured = true;\n      }\n\n      newState.instanceProps = instanceProps;\n      return _objectSpread({}, newState, {}, maybeStateA, {}, maybeStateB);\n    }\n  }, {\n    key: \"_getEstimatedColumnSize\",\n    value: function _getEstimatedColumnSize(props) {\n      return typeof props.columnWidth === 'number' ? props.columnWidth : props.estimatedColumnSize;\n    }\n  }, {\n    key: \"_getEstimatedRowSize\",\n    value: function _getEstimatedRowSize(props) {\n      return typeof props.rowHeight === 'number' ? props.rowHeight : props.estimatedRowSize;\n    }\n  }, {\n    key: \"_getScrollToPositionStateUpdate\",\n\n    /**\n     * Get the updated state after scrolling to\n     * scrollLeft and scrollTop\n     */\n    value: function _getScrollToPositionStateUpdate(_ref9) {\n      var prevState = _ref9.prevState,\n          scrollLeft = _ref9.scrollLeft,\n          scrollTop = _ref9.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0) {\n        newState.scrollDirectionHorizontal = scrollLeft > prevState.scrollLeft ? _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD : _defaultOverscanIndicesGetter.SCROLL_DIRECTION_BACKWARD;\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (typeof scrollTop === 'number' && scrollTop >= 0) {\n        newState.scrollDirectionVertical = scrollTop > prevState.scrollTop ? _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD : _defaultOverscanIndicesGetter.SCROLL_DIRECTION_BACKWARD;\n        newState.scrollTop = scrollTop;\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft || typeof scrollTop === 'number' && scrollTop >= 0 && scrollTop !== prevState.scrollTop) {\n        return newState;\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_wrapSizeGetter\",\n    value: function _wrapSizeGetter(value) {\n      return typeof value === 'function' ? value : function () {\n        return value;\n      };\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft(nextProps, prevState) {\n      var columnCount = nextProps.columnCount,\n          height = nextProps.height,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToColumn = nextProps.scrollToColumn,\n          width = nextProps.width;\n      var scrollLeft = prevState.scrollLeft,\n          instanceProps = prevState.instanceProps;\n\n      if (columnCount > 0) {\n        var finalColumn = columnCount - 1;\n        var targetIndex = scrollToColumn < 0 ? finalColumn : Math.min(finalColumn, scrollToColumn);\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n        return instanceProps.columnSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: width - scrollBarSize,\n          currentOffset: scrollLeft,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollLeftForScrollToColumnStateUpdate\",\n    value: function _getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState) {\n      var scrollLeft = prevState.scrollLeft;\n\n      var calculatedScrollLeft = Grid._getCalculatedScrollLeft(nextProps, prevState);\n\n      if (typeof calculatedScrollLeft === 'number' && calculatedScrollLeft >= 0 && scrollLeft !== calculatedScrollLeft) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: calculatedScrollLeft,\n          scrollTop: -1\n        });\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop(nextProps, prevState) {\n      var height = nextProps.height,\n          rowCount = nextProps.rowCount,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToRow = nextProps.scrollToRow,\n          width = nextProps.width;\n      var scrollTop = prevState.scrollTop,\n          instanceProps = prevState.instanceProps;\n\n      if (rowCount > 0) {\n        var finalRow = rowCount - 1;\n        var targetIndex = scrollToRow < 0 ? finalRow : Math.min(finalRow, scrollToRow);\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n        return instanceProps.rowSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: height - scrollBarSize,\n          currentOffset: scrollTop,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollTopForScrollToRowStateUpdate\",\n    value: function _getScrollTopForScrollToRowStateUpdate(nextProps, prevState) {\n      var scrollTop = prevState.scrollTop;\n\n      var calculatedScrollTop = Grid._getCalculatedScrollTop(nextProps, prevState);\n\n      if (typeof calculatedScrollTop === 'number' && calculatedScrollTop >= 0 && scrollTop !== calculatedScrollTop) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: -1,\n          scrollTop: calculatedScrollTop\n        });\n      }\n\n      return {};\n    }\n  }]);\n  return Grid;\n}(React.PureComponent), (0, _defineProperty2[\"default\"])(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": _propTypes[\"default\"].string.isRequired,\n  \"aria-readonly\": _propTypes[\"default\"].bool,\n\n  /**\n   * Set the width of the inner scrollable container to 'auto'.\n   * This is useful for single-column Grids to ensure that the column doesn't extend below a vertical scrollbar.\n   */\n  \"autoContainerWidth\": _propTypes[\"default\"].bool.isRequired,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoHeight\": _propTypes[\"default\"].bool.isRequired,\n\n  /**\n   * Removes fixed width from the scrollingContainer so that the total width of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoWidth\": _propTypes[\"default\"].bool.isRequired,\n\n  /** Responsible for rendering a cell given an row and column index.  */\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof _types.bpfrpt_proptype_CellRenderer === \"function\" ? _types.bpfrpt_proptype_CellRenderer.isRequired ? _types.bpfrpt_proptype_CellRenderer.isRequired : _types.bpfrpt_proptype_CellRenderer : _propTypes[\"default\"].shape(_types.bpfrpt_proptype_CellRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a group of cells given their index ranges.  */\n  \"cellRangeRenderer\": function cellRangeRenderer() {\n    return (typeof _types.bpfrpt_proptype_CellRangeRenderer === \"function\" ? _types.bpfrpt_proptype_CellRangeRenderer.isRequired ? _types.bpfrpt_proptype_CellRangeRenderer.isRequired : _types.bpfrpt_proptype_CellRangeRenderer : _propTypes[\"default\"].shape(_types.bpfrpt_proptype_CellRangeRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Optional custom CSS class name to attach to root Grid element.  */\n  \"className\": _propTypes[\"default\"].string,\n\n  /** Number of columns in grid.  */\n  \"columnCount\": _propTypes[\"default\"].number.isRequired,\n\n  /** Either a fixed column width (number) or a function that returns the width of a column given its index.  */\n  \"columnWidth\": function columnWidth() {\n    return (typeof _types.bpfrpt_proptype_CellSize === \"function\" ? _types.bpfrpt_proptype_CellSize.isRequired ? _types.bpfrpt_proptype_CellSize.isRequired : _types.bpfrpt_proptype_CellSize : _propTypes[\"default\"].shape(_types.bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Unfiltered props for the Grid container. */\n  \"containerProps\": _propTypes[\"default\"].object,\n\n  /** ARIA role for the cell-container.  */\n  \"containerRole\": _propTypes[\"default\"].string.isRequired,\n\n  /** Optional inline style applied to inner cell-container */\n  \"containerStyle\": _propTypes[\"default\"].object.isRequired,\n\n  /**\n   * If CellMeasurer is used to measure this Grid's children, this should be a pointer to its CellMeasurerCache.\n   * A shared CellMeasurerCache reference enables Grid and CellMeasurer to share measurement data.\n   */\n  \"deferredMeasurementCache\": _propTypes[\"default\"].object,\n\n  /**\n   * Used to estimate the total width of a Grid before all of its columns have actually been measured.\n   * The estimated total width is adjusted as columns are rendered.\n   */\n  \"estimatedColumnSize\": _propTypes[\"default\"].number.isRequired,\n\n  /**\n   * Used to estimate the total height of a Grid before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": _propTypes[\"default\"].number.isRequired,\n\n  /** Exposed for testing purposes only.  */\n  \"getScrollbarSize\": _propTypes[\"default\"].func.isRequired,\n\n  /** Height of Grid; this property determines the number of visible (vs virtualized) rows.  */\n  \"height\": _propTypes[\"default\"].number.isRequired,\n\n  /** Optional custom id to attach to root Grid element.  */\n  \"id\": _propTypes[\"default\"].string,\n\n  /**\n   * Override internal is-scrolling state tracking.\n   * This property is primarily intended for use with the WindowScroller component.\n   */\n  \"isScrolling\": _propTypes[\"default\"].bool,\n\n  /**\n   * Opt-out of isScrolling param passed to cellRangeRenderer.\n   * To avoid the extra render when scroll stops.\n   */\n  \"isScrollingOptOut\": _propTypes[\"default\"].bool.isRequired,\n\n  /** Optional renderer to be used in place of rows when either :rowCount or :columnCount is 0.  */\n  \"noContentRenderer\": function noContentRenderer() {\n    return (typeof _types.bpfrpt_proptype_NoContentRenderer === \"function\" ? _types.bpfrpt_proptype_NoContentRenderer.isRequired ? _types.bpfrpt_proptype_NoContentRenderer.isRequired : _types.bpfrpt_proptype_NoContentRenderer : _propTypes[\"default\"].shape(_types.bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": _propTypes[\"default\"].func.isRequired,\n\n  /**\n   * Called whenever a horizontal or vertical scrollbar is added or removed.\n   * This prop is not intended for end-user use;\n   * It is used by MultiGrid to support fixed-row/fixed-column scroll syncing.\n   */\n  \"onScrollbarPresenceChange\": _propTypes[\"default\"].func.isRequired,\n\n  /** Callback invoked with information about the section of the Grid that was just rendered.  */\n  \"onSectionRendered\": _propTypes[\"default\"].func.isRequired,\n\n  /**\n   * Number of columns to render before/after the visible section of the grid.\n   * These columns can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanColumnCount\": _propTypes[\"default\"].number.isRequired,\n\n  /**\n   * Calculates the number of cells to overscan before and after a specified range.\n   * This function ensures that overscanning doesn't exceed the available cells.\n   */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof _types.bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? _types.bpfrpt_proptype_OverscanIndicesGetter.isRequired ? _types.bpfrpt_proptype_OverscanIndicesGetter.isRequired : _types.bpfrpt_proptype_OverscanIndicesGetter : _propTypes[\"default\"].shape(_types.bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible section of the grid.\n   * These rows can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanRowCount\": _propTypes[\"default\"].number.isRequired,\n\n  /** ARIA role for the grid element.  */\n  \"role\": _propTypes[\"default\"].string.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * Should implement the following interface: ({ index: number }): number\n   */\n  \"rowHeight\": function rowHeight() {\n    return (typeof _types.bpfrpt_proptype_CellSize === \"function\" ? _types.bpfrpt_proptype_CellSize.isRequired ? _types.bpfrpt_proptype_CellSize.isRequired : _types.bpfrpt_proptype_CellSize : _propTypes[\"default\"].shape(_types.bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in grid.  */\n  \"rowCount\": _propTypes[\"default\"].number.isRequired,\n\n  /** Wait this amount of time after the last scroll event before resetting Grid `pointer-events`. */\n  \"scrollingResetTimeInterval\": _propTypes[\"default\"].number.isRequired,\n\n  /** Horizontal offset. */\n  \"scrollLeft\": _propTypes[\"default\"].number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof _types.bpfrpt_proptype_Alignment === \"function\" ? _types.bpfrpt_proptype_Alignment.isRequired ? _types.bpfrpt_proptype_Alignment.isRequired : _types.bpfrpt_proptype_Alignment : _propTypes[\"default\"].shape(_types.bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Column index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToColumn\": _propTypes[\"default\"].number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": _propTypes[\"default\"].number,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToRow\": _propTypes[\"default\"].number.isRequired,\n\n  /** Optional inline style */\n  \"style\": _propTypes[\"default\"].object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": _propTypes[\"default\"].number,\n\n  /** Width of Grid; this property determines the number of visible (vs virtualized) columns.  */\n  \"width\": _propTypes[\"default\"].number.isRequired\n}), _temp);\n(0, _defineProperty2[\"default\"])(Grid, \"defaultProps\", {\n  'aria-label': 'grid',\n  'aria-readonly': true,\n  autoContainerWidth: false,\n  autoHeight: false,\n  autoWidth: false,\n  cellRangeRenderer: _defaultCellRangeRenderer[\"default\"],\n  containerRole: 'rowgroup',\n  containerStyle: {},\n  estimatedColumnSize: 100,\n  estimatedRowSize: 30,\n  getScrollbarSize: _scrollbarSize[\"default\"],\n  noContentRenderer: renderNull,\n  onScroll: function onScroll() {},\n  onScrollbarPresenceChange: function onScrollbarPresenceChange() {},\n  onSectionRendered: function onSectionRendered() {},\n  overscanColumnCount: 0,\n  overscanIndicesGetter: _defaultOverscanIndicesGetter[\"default\"],\n  overscanRowCount: 10,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  scrollToAlignment: 'auto',\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  tabIndex: 0,\n  isScrollingOptOut: false\n});\n(0, _reactLifecyclesCompat.polyfill)(Grid);\nvar _default = Grid;\nexports[\"default\"] = _default;"],"sourceRoot":""}