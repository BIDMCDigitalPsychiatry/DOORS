{"version":3,"sources":["../node_modules/react-virtualized/dist/commonjs/MultiGrid/index.js","../node_modules/react-virtualized/dist/commonjs/MultiGrid/MultiGrid.js","../node_modules/@babel/runtime/helpers/setPrototypeOf.js","../node_modules/react-virtualized/dist/commonjs/MultiGrid/CellMeasurerCacheDecorator.js","../node_modules/react-virtualized/dist/commonjs/CellMeasurer/index.js","../node_modules/react-virtualized/dist/commonjs/CellMeasurer/CellMeasurer.js","../node_modules/react-virtualized/dist/commonjs/CellMeasurer/CellMeasurerCache.js","../node_modules/react-virtualized/dist/commonjs/Grid/index.js","../node_modules/react-virtualized/dist/commonjs/Grid/Grid.js","../node_modules/react-virtualized/dist/commonjs/Grid/utils/calculateSizeAndPositionDataAndUpdateScrollOffset.js","../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/commonjs/Grid/utils/maxElementSize.js","../node_modules/react-virtualized/dist/commonjs/utils/createCallbackMemoizer.js","../node_modules/react-virtualized/dist/commonjs/Grid/utils/updateScrollIndexHelper.js","../node_modules/react-virtualized/dist/commonjs/utils/requestAnimationTimeout.js","../node_modules/react-virtualized/dist/commonjs/utils/animationFrame.js","../node_modules/react-virtualized/dist/commonjs/Grid/accessibilityOverscanIndicesGetter.js","../node_modules/mui-virtualized-table/dist/utils.js","../node_modules/react-virtualized/dist/commonjs/AutoSizer/AutoSizer.js","../node_modules/react-virtualized/dist/commonjs/vendor/detectElementResize.js","../node_modules/@babel/runtime/helpers/toConsumableArray.js","../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/slicedToArray.js","../node_modules/@babel/runtime/helpers/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/nonIterableRest.js","../node_modules/react-virtualized/dist/es/Grid/utils/calculateSizeAndPositionDataAndUpdateScrollOffset.js","../node_modules/react-virtualized/dist/es/Grid/utils/CellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/es/Grid/utils/maxElementSize.js","../node_modules/react-virtualized/dist/es/Grid/utils/ScalingCellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/es/utils/createCallbackMemoizer.js","../node_modules/react-virtualized/dist/es/Grid/utils/updateScrollIndexHelper.js","../node_modules/react-virtualized/dist/es/utils/animationFrame.js","../node_modules/react-virtualized/dist/es/Grid/Grid.js","../node_modules/react-virtualized/dist/es/utils/requestAnimationTimeout.js","../node_modules/react-virtualized/dist/es/Grid/defaultOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/es/Grid/defaultCellRangeRenderer.js","../node_modules/react-virtualized/dist/es/Grid/accessibilityOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/es/ArrowKeyStepper/types.js","../node_modules/react-virtualized/dist/es/ArrowKeyStepper/ArrowKeyStepper.js","../node_modules/react-virtualized/dist/es/AutoSizer/AutoSizer.js","../node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurer.js","../node_modules/react-virtualized/dist/es/CellMeasurer/CellMeasurerCache.js","../node_modules/react-virtualized/dist/es/Collection/CollectionView.js","../node_modules/react-virtualized/dist/es/Collection/Section.js","../node_modules/react-virtualized/dist/es/Collection/SectionManager.js","../node_modules/react-virtualized/dist/es/utils/getUpdatedOffsetForIndex.js","../node_modules/react-virtualized/dist/es/Collection/Collection.js","../node_modules/react-virtualized/dist/es/Collection/utils/calculateSizeAndPositionData.js","../node_modules/react-virtualized/dist/es/Collection/index.js","../node_modules/react-virtualized/dist/es/ColumnSizer/ColumnSizer.js","../node_modules/react-virtualized/dist/es/ColumnSizer/index.js","../node_modules/react-virtualized/dist/es/InfiniteLoader/InfiniteLoader.js","../node_modules/react-virtualized/dist/es/InfiniteLoader/index.js","../node_modules/react-virtualized/dist/es/List/List.js","../node_modules/react-virtualized/dist/es/vendor/binarySearchBounds.js","../node_modules/react-virtualized/dist/es/vendor/intervalTree.js","../node_modules/react-virtualized/dist/es/Masonry/PositionCache.js","../node_modules/react-virtualized/dist/es/Masonry/Masonry.js","../node_modules/react-virtualized/dist/es/Masonry/index.js","../node_modules/react-virtualized/dist/es/MultiGrid/CellMeasurerCacheDecorator.js","../node_modules/react-virtualized/dist/es/MultiGrid/MultiGrid.js","../node_modules/react-virtualized/dist/es/ScrollSync/ScrollSync.js","../node_modules/react-virtualized/dist/es/Table/defaultHeaderRowRenderer.js","../node_modules/react-virtualized/dist/es/Table/SortDirection.js","../node_modules/react-virtualized/dist/es/Table/SortIndicator.js","../node_modules/react-virtualized/dist/es/Table/defaultHeaderRenderer.js","../node_modules/react-virtualized/dist/es/Table/defaultRowRenderer.js","../node_modules/react-virtualized/dist/es/Table/Column.js","../node_modules/react-virtualized/dist/es/Table/Table.js","../node_modules/react-virtualized/dist/es/Table/defaultCellDataGetter.js","../node_modules/react-virtualized/dist/es/Table/defaultCellRenderer.js","../node_modules/react-virtualized/dist/es/Table/index.js","../node_modules/react-virtualized/dist/es/WindowScroller/utils/onScroll.js","../node_modules/react-virtualized/dist/es/WindowScroller/utils/dimensions.js","../node_modules/react-virtualized/dist/es/WindowScroller/WindowScroller.js","../node_modules/@material-ui/core/esm/TablePagination/TablePaginationActions.js","../node_modules/@material-ui/core/esm/TablePagination/TablePagination.js","../node_modules/@material-ui/core/esm/internal/svg-icons/ArrowDownward.js","../node_modules/@material-ui/core/esm/TableSortLabel/TableSortLabel.js","../node_modules/@material-ui/core/esm/Table/Table.js","../node_modules/@material-ui/core/esm/TableFooter/TableFooter.js","../node_modules/@material-ui/icons/esm/CheckBox.js","../node_modules/@material-ui/icons/esm/IndeterminateCheckBox.js","../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/createClass.js","../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../node_modules/@material-ui/core/esm/styles/createMuiStrictModeTheme.js","../node_modules/@material-ui/core/esm/styles/cssUtils.js","../node_modules/@material-ui/core/esm/styles/responsiveFontSizes.js","../node_modules/@material-ui/core/esm/styles/withTheme.js","../node_modules/@babel/runtime/helpers/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/inherits.js","../node_modules/react-virtualized/dist/commonjs/Grid/types.js","../node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js","../node_modules/react-virtualized/dist/commonjs/Grid/utils/ScalingCellSizeAndPositionManager.js","../node_modules/dom-helpers/esm/canUseDOM.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/react-virtualized/dist/commonjs/CellMeasurer/types.js","../node_modules/react-virtualized/dist/commonjs/Grid/defaultOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/commonjs/Grid/defaultCellRangeRenderer.js","../node_modules/@material-ui/core/esm/Table/TableContext.js","../node_modules/@material-ui/core/esm/TableCell/index.js","../node_modules/@material-ui/core/esm/TableCell/TableCell.js","../node_modules/@material-ui/core/esm/Table/Tablelvl2Context.js","../node_modules/react-virtualized/dist/commonjs/AutoSizer/index.js","../node_modules/@reactions/component/es/index.js","../node_modules/react-virtualized/dist/es/vendor/detectElementResize.js","../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../node_modules/mui-virtualized-table/dist/index.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","enumerable","get","_MultiGrid","_default","_interopRequireWildcard","_extends2","_objectWithoutProperties2","_classCallCheck2","_createClass2","_possibleConstructorReturn2","_getPrototypeOf2","_assertThisInitialized2","_inherits2","_defineProperty2","React","_reactLifecyclesCompat","_CellMeasurerCacheDecorator","_Grid","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","MultiGrid","_React$PureComponent","props","context","_this","this","call","scrollLeft","scrollTop","scrollbarSize","showHorizontalScrollbar","showVerticalScrollbar","ref","_bottomLeftGrid","_bottomRightGrid","_ref","rowIndex","rest","_this$props","cellRenderer","fixedRowCount","rowCount","createElement","style","height","parent","_ref2","columnIndex","_this$props2","fixedColumnCount","_ref3","_this$props3","columnCount","width","_ref4","index","_this$props4","columnWidth","_this$state","state","scrollInfo","setState","onScroll","_ref5","horizontal","size","vertical","_this$state2","onScrollbarPresenceChange","_onScroll","_ref6","_this$props5","rowHeight","_this$state3","_topLeftGrid","_topRightGrid","deferredMeasurementCache","_fixedColumnCount","_fixedRowCount","_maybeCalculateCachedStyles","_deferredMeasurementCacheBottomLeftGrid","cellMeasurerCache","columnIndexOffset","rowIndexOffset","_deferredMeasurementCacheBottomRightGrid","_deferredMeasurementCacheTopRightGrid","forceUpdate","_ref7","undefined","_ref7$columnIndex","_ref7$rowIndex","_deferredInvalidateColumnIndex","Math","min","_deferredInvalidateRowIndex","measureAllCells","_ref8","_ref8$columnIndex","_ref8$rowIndex","_this$props6","adjustedColumnIndex","max","adjustedRowIndex","recomputeGridSize","_leftGridWidth","_topGridHeight","_this$props7","newState","_handleInvalidatedGridSize","_this$props8","onSectionRendered","scrollToColumn","scrollToRow","_prepareForRender","_this$state4","_containerOuterStyle","_containerTopStyle","_renderTopLeftGrid","_renderTopRightGrid","_containerBottomStyle","_renderBottomLeftGrid","_renderBottomRightGrid","_getTopGridHeight","leftGridWidth","_getLeftGridWidth","topGridHeight","resetAll","_this$props9","enableFixedColumnScroll","enableFixedRowScroll","styleBottomLeftGrid","styleBottomRightGrid","styleTopLeftGrid","styleTopRightGrid","sizeChange","_lastRenderedHeight","_lastRenderedWidth","leftSizeChange","_lastRenderedColumnWidth","_lastRenderedFixedColumnCount","topSizeChange","_lastRenderedFixedRowCount","_lastRenderedRowHeight","_lastRenderedStyle","overflow","position","_lastRenderedStyleBottomLeftGrid","_bottomLeftGridStyle","left","overflowX","overflowY","_lastRenderedStyleBottomRightGrid","_bottomRightGridStyle","_lastRenderedStyleTopLeftGrid","_topLeftGridStyle","top","_lastRenderedStyleTopRightGrid","_topRightGridStyle","hideBottomLeftGridScrollbar","additionalRowCount","_getBottomGridHeight","gridWidth","bottomLeftGrid","_cellRendererBottomLeftGrid","className","classNameBottomLeftGrid","_onScrollTop","_bottomLeftGridRef","_rowHeightBottomGrid","tabIndex","_cellRendererBottomRightGrid","classNameBottomRightGrid","_columnWidthRightGrid","_onScrollbarPresenceChange","_bottomRightGridRef","_getRightGridWidth","classNameTopLeftGrid","_topLeftGridRef","hideTopRightGridScrollbar","_this$state5","additionalColumnCount","additionalHeight","gridHeight","topRightGrid","_cellRendererTopRightGrid","classNameTopRightGrid","_onScrollLeft","_topRightGridRef","nextProps","prevState","PureComponent","propTypes","polyfill","_setPrototypeOf","o","p","module","setPrototypeOf","__proto__","CellMeasurerCacheDecorator","params","_cellMeasurerCache","_columnIndexOffset","_rowIndexOffset","_params$columnIndexOf","_params$rowIndexOffse","clear","clearAll","hasFixedHeight","hasFixedWidth","getHeight","getWidth","has","set","defaultHeight","defaultWidth","_CellMeasurer","_CellMeasurerCache","_class","_temp","_getPrototypeOf3","_reactDom","CellMeasurer","_len","args","Array","_key","concat","cache","_this$props$columnInd","_this$props$rowIndex","_this$_getCellMeasure","_getCellMeasurements","element","Element","console","warn","_child","_maybeMeasureCell","children","measure","_measure","registerChild","_registerChild","node","findDOMNode","ownerDocument","defaultView","HTMLElement","styleWidth","styleHeight","ceil","offsetHeight","offsetWidth","_this$props2$columnIn","_this$props2$rowIndex","_this$_getCellMeasure2","invalidateCellSizeAfterRender","DEFAULT_WIDTH","DEFAULT_HEIGHT","CellMeasurerCache","_keyMapper","_columnWidthCache","_defaultWidth","_rowHeightCache","_defaultHeight","fixedHeight","fixedWidth","keyMapper","minHeight","minWidth","_hasFixedHeight","_hasFixedWidth","_minHeight","_minWidth","defaultKeyMapper","_cellHeightCache","_cellWidthCache","_updateCachedColumnAndRowSizes","_rowCount","_columnCount","_key2","columnKey","_i","rowKey","_accessibilityOverscanIndicesGetter","_defaultCellRangeRenderer","_defaultOverscanIndicesGetter","_types","bpfrpt_proptype_NoContentRenderer","bpfrpt_proptype_Alignment","bpfrpt_proptype_CellPosition","bpfrpt_proptype_CellSize","bpfrpt_proptype_OverscanIndicesGetter","bpfrpt_proptype_RenderedSection","bpfrpt_proptype_CellRendererParams","bpfrpt_proptype_Scroll","DEFAULT_SCROLLING_RESET_TIME_INTERVAL","_clsx","_calculateSizeAndPositionDataAndUpdateScrollOffset","_ScalingCellSizeAndPositionManager","_createCallbackMemoizer","_updateScrollIndexHelper","_scrollbarSize","_requestAnimationTimeout","SCROLL_POSITION_CHANGE_REASONS","Grid","_disablePointerEventsTimeoutId","isScrolling","needToResetStyleCache","_onGridRenderedMemoizer","callback","indices","columnOverscanStartIndex","_columnStartIndex","columnOverscanStopIndex","_columnStopIndex","columnStartIndex","_renderedColumnStartIndex","columnStopIndex","_renderedColumnStopIndex","rowOverscanStartIndex","_rowStartIndex","rowOverscanStopIndex","_rowStopIndex","rowStartIndex","_renderedRowStartIndex","rowStopIndex","_renderedRowStopIndex","_scrollingContainer","event","handleScrollEvent","columnSizeAndPositionManager","cellCount","cellSizeGetter","_wrapSizeGetter","estimatedCellSize","_getEstimatedColumnSize","rowSizeAndPositionManager","_getEstimatedRowSize","instanceProps","prevColumnWidth","prevRowHeight","prevColumnCount","prevRowCount","prevIsScrolling","prevScrollToColumn","prevScrollToRow","scrollbarSizeMeasured","scrollDirectionHorizontal","SCROLL_DIRECTION_FORWARD","scrollDirectionVertical","scrollPositionChangeReason","_initialScrollTop","_getCalculatedScrollTop","_initialScrollLeft","_getCalculatedScrollLeft","_ref$alignment","alignment","scrollToAlignment","_ref$columnIndex","_ref$rowIndex","offsetProps","getTotalSize","_ref2$scrollLeft","scrollLeftParam","_ref2$scrollTop","scrollTopParam","_debounceScrollEnded","autoHeight","autoWidth","totalRowsHeight","totalColumnsWidth","SCROLL_DIRECTION_BACKWARD","_invokeOnScrollMemoizer","getSizeAndPositionOfCell","_ref4$columnIndex","_ref4$rowIndex","resetCell","_recomputeScrollLeftFlag","_recomputeScrollTopFlag","_styleCache","_cellCache","_updateScrollLeftForScrollToColumn","_updateScrollTopForScrollToRow","getScrollbarSize","stateUpdate","_getScrollToPositionStateUpdate","sizeIsBiggerThanZero","_invokeOnGridRenderedHelper","_maybeCallOnScrollbarPresenceChange","prevProps","_this2","columnOrRowCountJustIncreasedFromZero","sizeJustIncreasedFromZero","cellSizeAndPositionManager","previousCellsCount","previousCellSize","previousScrollToAlignment","previousScrollToIndex","previousSize","scrollOffset","scrollToIndex","updateScrollIndexCallback","cancelAnimationTimeout","autoContainerWidth","containerProps","containerRole","containerStyle","id","noContentRenderer","role","_isScrolling","gridStyle","boxSizing","direction","WebkitOverflowScrolling","willChange","_resetStyleCache","_calculateChildrenToRender","verticalScrollBarSize","horizontalScrollBarSize","_horizontalScrollBarSize","_verticalScrollBarSize","_scrollbarPresenceChanged","childrenToDisplay","_childrenToDisplay","showNoContentRenderer","_setScrollingContainerRef","maxWidth","maxHeight","pointerEvents","cellRangeRenderer","overscanColumnCount","overscanIndicesGetter","overscanRowCount","isScrollingOptOut","visibleColumnIndices","getVisibleCellRange","containerSize","offset","visibleRowIndices","horizontalOffsetAdjustment","getOffsetAdjustment","verticalOffsetAdjustment","start","stop","overscanColumnIndices","overscanCellsCount","scrollDirection","startIndex","stopIndex","overscanRowIndices","overscanStartIndex","overscanStopIndex","cellCache","styleCache","scrollingResetTimeInterval","requestAnimationTimeout","_debounceScrollEndedCallback","_this3","_onScrollMemoizer","_this3$props","clientHeight","clientWidth","scrollHeight","scrollWidth","hasOwnProperty","Boolean","_getScrollLeftForScrollToColumnStateUpdate","_getScrollTopForScrollToRowStateUpdate","assign","maybeStateA","maybeStateB","configure","cellSize","computeMetadataCallback","computeMetadataCallbackProps","nextCellsCount","nextCellSize","nextScrollToIndex","updateScrollOffsetForScrollToIndex","estimatedColumnSize","estimatedRowSize","_ref9","finalColumn","targetIndex","scrollBarSize","getUpdatedOffsetForIndex","align","currentOffset","calculatedScrollLeft","finalRow","calculatedScrollTop","CellSizeAndPositionManager","_cellSizeGetter","_cellCount","_estimatedCellSize","_lastMeasuredIndex","Error","lastMeasuredCellSizeAndPosition","getSizeAndPositionOfLastMeasuredCell","isNaN","_cellSizeAndPositionData","_lastBatchedIndex","_ref3$align","idealOffset","datum","maxOffset","minOffset","totalSize","_findNearestCell","high","low","middle","floor","interval","_binarySearch","lastMeasuredIndex","_exponentialSearch","getMaxElementSize","window","chrome","requireAllKeys","cachedIndices","allInitialized","every","isArray","indexChanged","some","cachedValue","join","getCellCount","hasScrollToIndex","sizeHasChanged","bpfrpt_proptype_AnimationTimeoutId","_animationFrame","frame","caf","delay","Promise","resolve","then","Date","now","raf","timeout","win","request","self","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","cancel","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","clearTimeout","SCROLL_DIRECTION_VERTICAL","SCROLL_DIRECTION_HORIZONTAL","getDeterministicColumnWidth","column","tableWidth","percentageBasedWidth","percentAsString","parseFloat","percentToFixedWidth","calcColumnWidth","columns","totalAllocatedWidth","reduce","result","c","variableWidthColumns","initialDistributedWidthPerColumn","activeMinWidthColumns","allocatedMinWidth","remainingWidth","_detectElementResize","AutoSizer","_React$Component","disableHeight","disableWidth","onResize","_parentNode","_window","getComputedStyle","paddingLeft","parseInt","paddingRight","paddingTop","paddingBottom","newHeight","newWidth","autoSizer","_autoSizer","nonce","parentNode","addResizeListener","_onResize","removeResizeListener","outerStyle","childParams","_setRef","Component","hostWindow","global","attachEvent","document","requestFrame","fn","cancelFrame","resetTriggers","triggers","__resizeTriggers__","expand","firstElementChild","contract","lastElementChild","expandChild","scrollListener","e","indexOf","__resizeRAF__","__resizeLast__","checkTriggers","__resizeListeners__","animation","keyframeprefix","animationstartevent","domPrefixes","split","startEvents","pfx","elm","animationName","toLowerCase","animationKeyframes","animationStyle","doc","elementStyle","getElementById","css","head","getElementsByTagName","type","setAttribute","styleSheet","cssText","appendChild","createTextNode","createStyles","innerHTML","addEventListener","__animationListener__","detachEvent","splice","removeEventListener","removeChild","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","arr","arrayLikeToArray","iter","Symbol","iterator","from","TypeError","arrayWithHoles","iterableToArrayLimit","nonIterableRest","_arr","_n","_d","_e","_s","next","done","err","calculateSizeAndPositionDataAndUpdateScrollOffset","_classCallCheck","_defineProperty","_createClass","ScalingCellSizeAndPositionManager","_ref$maxScrollSize","maxScrollSize","_objectWithoutProperties","_cellSizeAndPositionManager","_maxScrollSize","getEstimatedCellSize","getLastMeasuredIndex","safeTotalSize","offsetPercentage","_getOffsetPercentage","round","_safeOffsetToOffset","_offsetToSafeOffset","createCallbackMemoizer","updateScrollIndexHelper","_possibleConstructorReturn","_getPrototypeOf","_assertThisInitialized","_inherits","_extends","clsx","renderedCells","areOffsetsAdjusted","canCacheStyle","rowDatum","columnDatum","isVisible","cellRendererParams","renderedCell","defaultOverscanIndicesGetter","ArrowKeyStepper","disabled","mode","_this$_getScrollState","_getScrollState","scrollToColumnPrevious","scrollToRowPrevious","_this$_getScrollState2","preventDefault","_updateScrollState","_this$_getScrollState3","onKeyDown","_onKeyDown","_onSectionRendered","isControlled","onScrollToChange","createDetectElementResize","CollectionView","cellLayoutManager","_onSectionRenderedMemoizer","getLastRenderedIndices","scrollToCell","scrollPosition","getScrollPositionForCell","cellIndex","_setScrollPosition","_enablePointerEventsAfterDelay","isScrollingChange","_cellLayoutManager$ge","totalHeight","totalWidth","cancelable","_scrollbarSizeMeasured","_calculateSizeAndPositionDataOnNextUpdate","_updateScrollPositionForScrollToCell","_invokeOnSectionRenderedHelper","_cellLayoutManager$ge2","horizontalOverscanSize","verticalOverscanSize","_lastRenderedCellCount","_lastRenderedCellLayoutManager","calculateSizeAndPositionData","_cellLayoutManager$ge3","right","bottom","cellRenderers","x","y","collectionStyle","Section","_indexMap","_indices","SectionManager","sectionSize","_sectionSize","_cellMetadata","_sections","getSections","section","getCellIndices","map","sectionXStart","sectionXStop","sectionYStart","sectionYStop","sections","sectionX","sectionY","toString","cellMetadatum","addCellIndex","_ref$align","cellOffset","Collection","_lastRenderedCellIndices","_isScrollingChange","bind","_setCollectionViewRef","_collectionView","recomputeCellSizesAndPositions","data","cellSizeAndPositionGetter","cellMetadata","sectionManager","registerCell","_calculateSizeAndPositionData","_sectionManager","_height","_width","cellGroupRenderer","getCellMetadata","cellRendererProps","ColumnSizer","columnMaxWidth","columnMinWidth","_registeredChild","safeColumnMinWidth","safeColumnMaxWidth","adjustedWidth","getColumnWidth","child","InfiniteLoader","_loadMoreRowsMemoizer","_onRowsRendered","autoReload","_doStuff","_lastRenderedStartIndex","_lastRenderedStopIndex","onRowsRendered","unloadedRanges","loadMoreRows","unloadedRange","promise","lastRenderedStartIndex","lastRenderedStopIndex","isRangeVisible","component","currentIndex","recomputeSize","recomputeRowHeights","forceUpdateReactVirtualizedComponent","isRowLoaded","minimumBatchSize","threshold","rangeStartIndex","rangeStopIndex","potentialStopIndex","_index","firstUnloadedRange","_index2","scanForUnloadedRanges","squashedUnloadedRanges","_toConsumableArray","_loadUnloadedRanges","registeredChild","List","rowRenderer","widthDescriptor","writable","getOffsetForCell","_ref6$columnIndex","_ref6$rowIndex","scrollToPosition","noRowsRenderer","classNames","_cellRenderer","accessibilityOverscanIndicesGetter","ge","a","l","h","m","_GEP","_GEA","gt","_GTP","_GTA","lt","_LTP","_LTA","le","_LEP","_LEA","eq","_EQP","_EQA","IntervalTreeNode","mid","leftPoints","rightPoints","count","proto","prototype","copy","b","rebuild","intervals","ntree","createIntervalTree","rebuildWithInterval","rebuildWithoutInterval","idx","reportLeftRange","hi","cb","r","reportRightRange","lo","reportRange","compareNumbers","compareBegin","d","compareEnd","pts","sort","leftIntervals","rightIntervals","centerIntervals","s","slice","IntervalTree","root","insert","weight","bounds","remove","n","queryPoint","queryInterval","tproto","PositionCache","defaultCellHeight","unmeasuredCellCount","tallestColumnSize","renderCallback","_intervalTree","_slicedToArray","_leftMap","columnSizeMap","_columnSizeMap","columnHeight","Masonry","eventScrollTop","currentTarget","_getEstimatedTotalHeight","_debounceResetIsScrolling","_positionCache","_invalidateOnUpdateStartIndex","_invalidateOnUpdateStopIndex","_populatePositionCache","_checkInvalidateOnUpdate","_invokeOnScrollCallback","_invokeOnCellsRenderedCallback","_debounceResetIsScrollingId","overscanByPixels","rowDirection","estimateTotalHeight","shortestColumnSize","measuredCellCount","range","_style","batchSize","_startIndex","_stopIndex","_debounceResetIsScrollingCallback","estimatedColumnCount","_onScrollMemoized","_startIndexMemoized","_stopIndexMemoized","onCellsRendered","cellPositioner","_cellPositioner","setPosition","noop","ScrollSync","defaultHeaderRowRenderer","SortDirection","ASC","DESC","SortIndicator","sortDirection","viewBox","fill","defaultHeaderRenderer","dataKey","label","sortBy","showSortIndicator","title","defaultRowRenderer","onRowClick","onRowDoubleClick","onRowMouseOut","onRowMouseOver","onRowRightClick","rowData","a11yProps","onClick","onDoubleClick","onMouseOut","onMouseOver","onContextMenu","Column","cellDataGetter","cellData","String","defaultSortDirection","flexGrow","flexShrink","headerRenderer","Table","scrollbarWidth","_createColumn","_createRow","_ref3$columnIndex","_ref3$rowIndex","_setScrollbarWidth","disableHeader","gridClassName","headerHeight","headerRowRenderer","rowClassName","rowStyle","availableRowsHeight","rowClass","rowStyleObject","_cachedColumnStyles","toArray","flexStyles","_getFlexStyleForColumn","_getHeaderColumns","onColumnClick","_column$props","columnData","headerOnClick","headerOnKeyDown","headerTabIndex","headerAriaSort","headerAriaLabel","headerClassName","headerStyle","onHeaderClick","_column$props2","disableSort","sortEnabled","ReactVirtualized__Table__sortableHeaderColumn","renderedHeader","newSortDirection","rowGetter","flattenedStyle","_getRowHeight","customStyle","flexValue","flex","msFlex","WebkitFlex","_this4","_createHeader","getScrollbarWidth","mountedInstances","originalBodyPointerEvents","disablePointerEventsTimeoutId","enablePointerEventsIfDisabled","body","enablePointerEventsAfterDelayCallback","instance","__resetIsScrolling","onScrollWindow","maximumTimeout","enablePointerEventsAfterDelay","scrollElement","__handleWindowScrollEvent","registerScrollListener","unregisterScrollListener","isWindow","getBoundingBox","getBoundingClientRect","getDimensions","innerHeight","innerWidth","serverHeight","serverWidth","getPositionOffset","container","documentElement","containerElement","elementRect","containerRect","getScrollOffset","_elementRect","_containerRect","scrollY","scrollX","getWindow","WindowScroller","updatePosition","scrollTo","_positionFromTop","_isMounted","_positionFromLeft","thisNode","ReactDOM","dimensions","_registerResizeListener","prevScrollElement","_unregisterResizeListener","onChildScroll","_onChildScroll","KeyboardArrowRight","KeyboardArrowLeft","TablePaginationActions","backIconButtonProps","nextIconButtonProps","onChangePage","page","rowsPerPage","other","theme","useTheme","IconButton","color","defaultLabelDisplayedRows","to","defaultRowsPerPageOptions","TablePagination","colSpan","_props$ActionsCompone","ActionsComponent","_props$backIconButton","backIconButtonText","classes","colSpanProp","_props$component","TableCell","_props$labelDisplayed","labelDisplayedRows","_props$labelRowsPerPa","labelRowsPerPage","_props$nextIconButton","nextIconButtonText","onChangeRowsPerPage","_props$rowsPerPageOpt","rowsPerPageOptions","_props$SelectProps","SelectProps","selectId","useId","labelId","MenuItemComponent","native","MenuItem","Toolbar","toolbar","spacer","Typography","variant","caption","Select","select","icon","selectIcon","input","InputBase","selectRoot","onChange","rowsPerPageOption","menuItem","actions","withStyles","palette","text","primary","fontSize","typography","pxToRem","padding","marginRight","marginLeft","textAlign","textAlignLast","name","createSvgIcon","TableSortLabel","_props$active","active","_props$direction","_props$hideSortIcon","hideSortIcon","_props$IconComponent","IconComponent","ArrowDownwardIcon","ButtonBase","disableRipple","capitalize","cursor","display","justifyContent","flexDirection","alignItems","secondary","opacity","transition","transitions","create","duration","shorter","userSelect","iconDirectionDesc","transform","iconDirectionAsc","_props$padding","_props$size","_props$stickyHeader","stickyHeader","table","TableContext","Provider","borderCollapse","borderSpacing","body2","spacing","captionSide","tablelvl2","TableFooter","Tablelvl2Context","Constructor","_defineProperties","descriptor","configurable","protoProps","staticProps","_typeof","assertThisInitialized","createMuiStrictModeTheme","options","createMuiTheme","deepmerge","unstable_strictMode","isUnitless","toUnitless","convertLength","baseFontSize","toUnit","fromUnit","match","pxLength","outputLength","toFixed","alignProperty","grid","sizeBelow","sizeAbove","fontGrid","lineHeight","pixels","htmlFontSize","responsiveProperty","cssProperty","_ref3$unit","unit","_ref3$breakpoints","breakpoints","_ref3$transform","output","factor","breakpoint","responsiveFontSizes","themeInput","_options$breakpoints","_options$disableAlign","disableAlign","_options$factor","_options$variants","variants","convert","breakpointValues","values","remFontSize","maxFontSize","minFontSize","_formatMuiErrorMessage","withTheme","withThemeCreator","defaultTheme","ReferenceError","getPrototypeOf","subClass","superClass","constructor","bpfrpt_proptype_VisibleCellRange","bpfrpt_proptype_OverscanIndices","bpfrpt_proptype_OverscanIndicesGetterParams","bpfrpt_proptype_ScrollbarPresenceChange","bpfrpt_proptype_CellSizeGetter","bpfrpt_proptype_CellRangeRenderer","bpfrpt_proptype_CellRangeRendererParams","bpfrpt_proptype_StyleCache","bpfrpt_proptype_CellCache","bpfrpt_proptype_CellRenderer","componentWillMount","getDerivedStateFromProps","componentWillReceiveProps","componentWillUpdate","nextState","__reactInternalSnapshotFlag","__reactInternalSnapshot","getSnapshotBeforeUpdate","isReactComponent","foundWillMountName","foundWillReceivePropsName","foundWillUpdateName","UNSAFE_componentWillMount","UNSAFE_componentWillReceiveProps","UNSAFE_componentWillUpdate","componentName","displayName","newApiName","componentDidUpdate","maybeSnapshot","snapshot","__suppressDeprecationWarning","_CellSizeAndPositionManager","_maxElementSize","recalc","canUseDOM","scrollDiv","bpfrpt_proptype_CellMeasureCache","_props$align","paddingProp","scopeProp","scope","sizeProp","variantProp","isHeadCell","ariaSort","verticalAlign","borderBottom","lighten","fade","divider","darken","fontWeight","fontWeightMedium","footer","sizeSmall","paddingCheckbox","paddingNone","alignLeft","alignCenter","alignRight","alignJustify","zIndex","backgroundColor","background","default","_AutoSizer","_initialiseProps","getArgs","_setState","_forceUpdate","componentDidMount","didMount","shouldComponentUpdate","shouldUpdate","componentWillUnmount","willUnmount","didUpdate","render","_props","initialState","len","arr2","minLen","test","sliceIterator","MuiTable","_react2","_propTypes2","_MultiGrid2","_classnames2","_Table2","_TableCell2","_TableFooter2","_TablePagination2","_TableSortLabel2","_styles","_reactDraggable2","_utils","obj","__esModule","useStyles","makeStyles","grey","borderRight","outline","cell","cellClickable","cellSelected","cellHovered","cellDisabled","cellContents","whiteSpace","textOverflow","cellHeader","cellInLastColumn","cellInLastRow","borderTop","FOOTER_BORDER_HEIGHT","dragHandle","DragHandleActive","DragHandleIcon","_ref7$maxHeight","pagination","fitHeightToRows","_ref7$fixedRowCount","_ref7$fixedColumnCoun","_ref7$rowHeight","_ref7$includeHeaders","includeHeaders","isCellHovered","isCellSelected","isCellDisabled","Classes","orderBy","orderDirection","onCellClick","onCellDoubleClick","onCellContextMenu","resizable","cellProps","multiGrid","useRef","useCallback","current","useEffect","calculatedHeight","paginationHeight","mixins","calculatedHeightWithFooter","containerHeight","multiGridHeight","defaultCellProps","_React$useState","useState","hoveredColumn","hoveredRowData","_React$useState2","_React$useState2$","setHovered","_React$useState3","Columns","widths","initialWidth","calculateWidths","_React$useState4","setWidths","resizableColumnWidths","resizeRow","deltaX","prev","delta","findIndex","nextDataKey","handleDrag","handleMouse","_classNames","isHeader","isSelected","isDisabled","isHovered","resolveCellProps","_resolveCellProps$res","cellStyle","contents","header","float","axis","defaultClassName","defaultClassNameDragging","onDrag","hasCellClick","hasCellDoubleClick","hasCellContextMenu","isClickable","onMouseEnter","onMouseLeave","Fragment","useCellRenderer","array","number","bool","oneOfType","func","string","noPointer"],"mappings":"gGAEA,IAAIA,EAAyBC,EAAQ,IAErCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETH,OAAOC,eAAeC,EAAS,YAAa,CAC1CE,YAAY,EACZC,IAAK,WACH,OAAOC,EAAU,WAGrBJ,EAAO,aAAc,EAErB,IAAII,EAAaR,EAAuBC,EAAQ,OAE5CQ,EAAWD,EAAU,QACzBJ,EAAO,QAAcK,G,kCChBrB,IAAIC,EAA0BT,EAAQ,KAElCD,EAAyBC,EAAQ,IAErCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAO,aAAc,EAErB,IAAIO,EAAYX,EAAuBC,EAAQ,KAE3CW,EAA4BZ,EAAuBC,EAAQ,MAE3DY,EAAmBb,EAAuBC,EAAQ,MAElDa,EAAgBd,EAAuBC,EAAQ,MAE/Cc,EAA8Bf,EAAuBC,EAAQ,MAE7De,EAAmBhB,EAAuBC,EAAQ,MAElDgB,EAA0BjB,EAAuBC,EAAQ,MAEzDiB,EAAalB,EAAuBC,EAAQ,MAE5CkB,EAAmBnB,EAAuBC,EAAQ,MAIlDmB,GAFapB,EAAuBC,EAAQ,KAEpCS,EAAwBT,EAAQ,KAExCoB,EAAyBpB,EAAQ,KAEjCqB,EAA8BtB,EAAuBC,EAAQ,OAE7DsB,EAAQvB,EAAuBC,EAAQ,OAE3C,SAASuB,EAAQC,EAAQC,GAAkB,IAAIC,EAAOzB,OAAOyB,KAAKF,GAAS,GAAIvB,OAAO0B,sBAAuB,CAAE,IAAIC,EAAU3B,OAAO0B,sBAAsBH,GAAaC,IAAgBG,EAAUA,EAAQC,QAAO,SAAUC,GAAO,OAAO7B,OAAO8B,yBAAyBP,EAAQM,GAAKzB,eAAgBqB,EAAKM,KAAKC,MAAMP,EAAME,GAAY,OAAOF,EAE9U,SAASQ,EAAcC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAAyB,MAAhBF,UAAUD,GAAaC,UAAUD,GAAK,GAAQA,EAAI,EAAKb,EAAQgB,GAAQ,GAAMC,SAAQ,SAAUC,IAAO,EAAIvB,EAAgB,SAAaiB,EAAQM,EAAKF,EAAOE,OAAsBxC,OAAOyC,0BAA6BzC,OAAO0C,iBAAiBR,EAAQlC,OAAOyC,0BAA0BH,IAAmBhB,EAAQgB,GAAQC,SAAQ,SAAUC,GAAOxC,OAAOC,eAAeiC,EAAQM,EAAKxC,OAAO8B,yBAAyBQ,EAAQE,OAAe,OAAON,EAE9gB,IASIS,EAEJ,SAAUC,GAGR,SAASD,EAAUE,EAAOC,GACxB,IAAIC,GAEJ,EAAIpC,EAAgB,SAAaqC,KAAML,GACvCI,GAAQ,EAAIlC,EAA2B,SAAamC,MAAM,EAAIlC,EAAgB,SAAa6B,GAAWM,KAAKD,KAAMH,EAAOC,KACxH,EAAI7B,EAAgB,UAAa,EAAIF,EAAuB,SAAagC,GAAQ,QAAS,CACxFG,WAAY,EACZC,UAAW,EACXC,cAAe,EACfC,yBAAyB,EACzBC,uBAAuB,KAEzB,EAAIrC,EAAgB,UAAa,EAAIF,EAAuB,SAAagC,GAAQ,iCAAkC,OACnH,EAAI9B,EAAgB,UAAa,EAAIF,EAAuB,SAAagC,GAAQ,8BAA+B,OAChH,EAAI9B,EAAgB,UAAa,EAAIF,EAAuB,SAAagC,GAAQ,sBAAsB,SAAUQ,GAC/GR,EAAMS,gBAAkBD,MAE1B,EAAItC,EAAgB,UAAa,EAAIF,EAAuB,SAAagC,GAAQ,uBAAuB,SAAUQ,GAChHR,EAAMU,iBAAmBF,MAE3B,EAAItC,EAAgB,UAAa,EAAIF,EAAuB,SAAagC,GAAQ,+BAA+B,SAAUW,GACxH,IAAIC,EAAWD,EAAKC,SAChBC,GAAO,EAAIlD,EAAyB,SAAagD,EAAM,CAAC,aACxDG,EAAcd,EAAMF,MACpBiB,EAAeD,EAAYC,aAC3BC,EAAgBF,EAAYE,cAGhC,OAAIJ,IAFWE,EAAYG,SAECD,EACnB7C,EAAM+C,cAAc,MAAO,CAChCzB,IAAKoB,EAAKpB,IACV0B,MAAOjC,EAAc,GAAI2B,EAAKM,MAAO,CACnCC,OA9CgB,OAkDbL,EAAa7B,EAAc,GAAI2B,EAAM,CAC1CQ,QAAQ,EAAIrD,EAAuB,SAAagC,GAChDY,SAAUA,EAAWI,SAI3B,EAAI9C,EAAgB,UAAa,EAAIF,EAAuB,SAAagC,GAAQ,gCAAgC,SAAUsB,GACzH,IAAIC,EAAcD,EAAMC,YACpBX,EAAWU,EAAMV,SACjBC,GAAO,EAAIlD,EAAyB,SAAa2D,EAAO,CAAC,cAAe,aACxEE,EAAexB,EAAMF,MACrBiB,EAAeS,EAAaT,aAC5BU,EAAmBD,EAAaC,iBAChCT,EAAgBQ,EAAaR,cACjC,OAAOD,EAAa7B,EAAc,GAAI2B,EAAM,CAC1CU,YAAaA,EAAcE,EAC3BJ,QAAQ,EAAIrD,EAAuB,SAAagC,GAChDY,SAAUA,EAAWI,SAGzB,EAAI9C,EAAgB,UAAa,EAAIF,EAAuB,SAAagC,GAAQ,6BAA6B,SAAU0B,GACtH,IAAIH,EAAcG,EAAMH,YACpBV,GAAO,EAAIlD,EAAyB,SAAa+D,EAAO,CAAC,gBACzDC,EAAe3B,EAAMF,MACrBiB,EAAeY,EAAaZ,aAC5Ba,EAAcD,EAAaC,YAC3BH,EAAmBE,EAAaF,iBAEpC,OAAIF,IAAgBK,EAAcH,EACzBtD,EAAM+C,cAAc,MAAO,CAChCzB,IAAKoB,EAAKpB,IACV0B,MAAOjC,EAAc,GAAI2B,EAAKM,MAAO,CACnCU,MAlFgB,OAsFbd,EAAa7B,EAAc,GAAI2B,EAAM,CAC1CU,YAAaA,EAAcE,EAC3BJ,QAAQ,EAAIrD,EAAuB,SAAagC,UAItD,EAAI9B,EAAgB,UAAa,EAAIF,EAAuB,SAAagC,GAAQ,yBAAyB,SAAU8B,GAClH,IAAIC,EAAQD,EAAMC,MACdC,EAAehC,EAAMF,MACrB8B,EAAcI,EAAaJ,YAC3BH,EAAmBO,EAAaP,iBAChCQ,EAAcD,EAAaC,YAC3BC,EAAclC,EAAMmC,MACpB9B,EAAgB6B,EAAY7B,cAMhC,OAL8B6B,EAAY5B,yBAKXyB,IAAUH,EAAcH,EAC9CpB,EAGqB,oBAAhB4B,EAA6BA,EAAY,CACrDF,MAAOA,EAAQN,IACZQ,MAEP,EAAI/D,EAAgB,UAAa,EAAIF,EAAuB,SAAagC,GAAQ,aAAa,SAAUoC,GACtG,IAAIjC,EAAaiC,EAAWjC,WACxBC,EAAYgC,EAAWhC,UAE3BJ,EAAMqC,SAAS,CACblC,WAAYA,EACZC,UAAWA,IAGb,IAAIkC,EAAWtC,EAAMF,MAAMwC,SAEvBA,GACFA,EAASF,OAGb,EAAIlE,EAAgB,UAAa,EAAIF,EAAuB,SAAagC,GAAQ,8BAA8B,SAAUuC,GACvH,IAAIC,EAAaD,EAAMC,WACnBC,EAAOF,EAAME,KACbC,EAAWH,EAAMG,SACjBC,EAAe3C,EAAMmC,MACrB7B,EAA0BqC,EAAarC,wBACvCC,EAAwBoC,EAAapC,sBAEzC,GAAIiC,IAAelC,GAA2BoC,IAAanC,EAAuB,CAChFP,EAAMqC,SAAS,CACbhC,cAAeoC,EACfnC,wBAAyBkC,EACzBjC,sBAAuBmC,IAGzB,IAAIE,EAA4B5C,EAAMF,MAAM8C,0BAEH,oBAA9BA,GACTA,EAA0B,CACxBJ,WAAYA,EACZC,KAAMA,EACNC,SAAUA,SAKlB,EAAIxE,EAAgB,UAAa,EAAIF,EAAuB,SAAagC,GAAQ,iBAAiB,SAAUoC,GAC1G,IAAIjC,EAAaiC,EAAWjC,WAE5BH,EAAM6C,UAAU,CACd1C,WAAYA,EACZC,UAAWJ,EAAMmC,MAAM/B,gBAG3B,EAAIlC,EAAgB,UAAa,EAAIF,EAAuB,SAAagC,GAAQ,gBAAgB,SAAUoC,GACzG,IAAIhC,EAAYgC,EAAWhC,UAE3BJ,EAAM6C,UAAU,CACdzC,UAAWA,EACXD,WAAYH,EAAMmC,MAAMhC,iBAG5B,EAAIjC,EAAgB,UAAa,EAAIF,EAAuB,SAAagC,GAAQ,wBAAwB,SAAU8C,GACjH,IAAIf,EAAQe,EAAMf,MACdgB,EAAe/C,EAAMF,MACrBkB,EAAgB+B,EAAa/B,cAC7BC,EAAW8B,EAAa9B,SACxB+B,EAAYD,EAAaC,UACzBC,EAAejD,EAAMmC,MACrB9B,EAAgB4C,EAAa5C,cAMjC,OAL4B4C,EAAa1C,uBAKZwB,IAAUd,EAAWD,EACzCX,EAGmB,oBAAd2C,EAA2BA,EAAU,CACjDjB,MAAOA,EAAQf,IACZgC,MAEP,EAAI9E,EAAgB,UAAa,EAAIF,EAAuB,SAAagC,GAAQ,mBAAmB,SAAUQ,GAC5GR,EAAMkD,aAAe1C,MAEvB,EAAItC,EAAgB,UAAa,EAAIF,EAAuB,SAAagC,GAAQ,oBAAoB,SAAUQ,GAC7GR,EAAMmD,cAAgB3C,KAExB,IAAI4C,EAA2BtD,EAAMsD,yBACjCC,EAAoBvD,EAAM2B,iBAC1B6B,EAAiBxD,EAAMkB,cAsB3B,OApBAhB,EAAMuD,6BAA4B,GAE9BH,IACFpD,EAAMwD,wCAA0CF,EAAiB,EAAI,IAAIjF,EAA2B,QAAY,CAC9GoF,kBAAmBL,EACnBM,kBAAmB,EACnBC,eAAgBL,IACbF,EACLpD,EAAM4D,yCAA2CP,EAAoB,GAAKC,EAAiB,EAAI,IAAIjF,EAA2B,QAAY,CACxIoF,kBAAmBL,EACnBM,kBAAmBL,EACnBM,eAAgBL,IACbF,EACLpD,EAAM6D,sCAAwCR,EAAoB,EAAI,IAAIhF,EAA2B,QAAY,CAC/GoF,kBAAmBL,EACnBM,kBAAmBL,EACnBM,eAAgB,IACbP,GAGApD,EAkgBT,OAntBA,EAAI/B,EAAU,SAAa2B,EAAWC,IAoNtC,EAAIhC,EAAa,SAAa+B,EAAW,CAAC,CACxCH,IAAK,mBACLrC,MAAO,WACL6C,KAAKQ,iBAAmBR,KAAKQ,gBAAgBqD,cAC7C7D,KAAKS,kBAAoBT,KAAKS,iBAAiBoD,cAC/C7D,KAAKiD,cAAgBjD,KAAKiD,aAAaY,cACvC7D,KAAKkD,eAAiBlD,KAAKkD,cAAcW,gBAI1C,CACDrE,IAAK,gCACLrC,MAAO,WACL,IAAI2G,EAAQ1E,UAAUC,OAAS,QAAsB0E,IAAjB3E,UAAU,GAAmBA,UAAU,GAAK,GAC5E4E,EAAoBF,EAAMxC,YAC1BA,OAAoC,IAAtB0C,EAA+B,EAAIA,EACjDC,EAAiBH,EAAMnD,SACvBA,OAA8B,IAAnBsD,EAA4B,EAAIA,EAE/CjE,KAAKkE,+BAAgF,kBAAxClE,KAAKkE,+BAA8CC,KAAKC,IAAIpE,KAAKkE,+BAAgC5C,GAAeA,EAC7JtB,KAAKqE,4BAA0E,kBAArCrE,KAAKqE,4BAA2CF,KAAKC,IAAIpE,KAAKqE,4BAA6B1D,GAAYA,IAIlJ,CACDnB,IAAK,kBACLrC,MAAO,WACL6C,KAAKQ,iBAAmBR,KAAKQ,gBAAgB8D,kBAC7CtE,KAAKS,kBAAoBT,KAAKS,iBAAiB6D,kBAC/CtE,KAAKiD,cAAgBjD,KAAKiD,aAAaqB,kBACvCtE,KAAKkD,eAAiBlD,KAAKkD,cAAcoB,oBAI1C,CACD9E,IAAK,oBACLrC,MAAO,WACL,IAAIoH,EAAQnF,UAAUC,OAAS,QAAsB0E,IAAjB3E,UAAU,GAAmBA,UAAU,GAAK,GAC5EoF,EAAoBD,EAAMjD,YAC1BA,OAAoC,IAAtBkD,EAA+B,EAAIA,EACjDC,EAAiBF,EAAM5D,SACvBA,OAA8B,IAAnB8D,EAA4B,EAAIA,EAE3CC,EAAe1E,KAAKH,MACpB2B,EAAmBkD,EAAalD,iBAChCT,EAAgB2D,EAAa3D,cAC7B4D,EAAsBR,KAAKS,IAAI,EAAGtD,EAAcE,GAChDqD,EAAmBV,KAAKS,IAAI,EAAGjE,EAAWI,GAC9Cf,KAAKQ,iBAAmBR,KAAKQ,gBAAgBsE,kBAAkB,CAC7DxD,YAAaA,EACbX,SAAUkE,IAEZ7E,KAAKS,kBAAoBT,KAAKS,iBAAiBqE,kBAAkB,CAC/DxD,YAAaqD,EACbhE,SAAUkE,IAEZ7E,KAAKiD,cAAgBjD,KAAKiD,aAAa6B,kBAAkB,CACvDxD,YAAaA,EACbX,SAAUA,IAEZX,KAAKkD,eAAiBlD,KAAKkD,cAAc4B,kBAAkB,CACzDxD,YAAaqD,EACbhE,SAAUA,IAEZX,KAAK+E,eAAiB,KACtB/E,KAAKgF,eAAiB,KAEtBhF,KAAKsD,6BAA4B,KAElC,CACD9D,IAAK,oBACLrC,MAAO,WACL,IAAI8H,EAAejF,KAAKH,MACpBK,EAAa+E,EAAa/E,WAC1BC,EAAY8E,EAAa9E,UAE7B,GAAID,EAAa,GAAKC,EAAY,EAAG,CACnC,IAAI+E,EAAW,GAEXhF,EAAa,IACfgF,EAAShF,WAAaA,GAGpBC,EAAY,IACd+E,EAAS/E,UAAYA,GAGvBH,KAAKoC,SAAS8C,GAGhBlF,KAAKmF,+BAEN,CACD3F,IAAK,qBACLrC,MAAO,WACL6C,KAAKmF,+BAEN,CACD3F,IAAK,SACLrC,MAAO,WACL,IAAIiI,EAAepF,KAAKH,MACpBwC,EAAW+C,EAAa/C,SACxBgD,EAAoBD,EAAaC,kBAGjCC,GAF4BF,EAAazC,0BACxByC,EAAalF,WACbkF,EAAaE,gBAE9BC,GADgBH,EAAajF,UACfiF,EAAaG,aAC3B3E,GAAO,EAAIlD,EAAyB,SAAa0H,EAAc,CAAC,WAAY,oBAAqB,4BAA6B,aAAc,iBAAkB,YAAa,gBAO/K,GALApF,KAAKwF,oBAKoB,IAArBxF,KAAKH,MAAM+B,OAAqC,IAAtB5B,KAAKH,MAAMsB,OACvC,OAAO,KAIT,IAAIsE,EAAezF,KAAKkC,MACpBhC,EAAauF,EAAavF,WAC1BC,EAAYsF,EAAatF,UAC7B,OAAOjC,EAAM+C,cAAc,MAAO,CAChCC,MAAOlB,KAAK0F,sBACXxH,EAAM+C,cAAc,MAAO,CAC5BC,MAAOlB,KAAK2F,oBACX3F,KAAK4F,mBAAmBhF,GAAOZ,KAAK6F,oBAAoB5G,EAAc,GAAI2B,EAAM,CACjFyB,SAAUA,EACVnC,WAAYA,MACRhC,EAAM+C,cAAc,MAAO,CAC/BC,MAAOlB,KAAK8F,uBACX9F,KAAK+F,sBAAsB9G,EAAc,GAAI2B,EAAM,CACpDyB,SAAUA,EACVlC,UAAWA,KACRH,KAAKgG,uBAAuB/G,EAAc,GAAI2B,EAAM,CACvDyB,SAAUA,EACVgD,kBAAmBA,EACnBnF,WAAYA,EACZoF,eAAgBA,EAChBC,YAAaA,EACbpF,UAAWA,SAGd,CACDX,IAAK,uBACLrC,MAAO,SAA8B0C,GAKnC,OAJaA,EAAMsB,OAECnB,KAAKiG,kBAAkBpG,KAI5C,CACDL,IAAK,oBACLrC,MAAO,SAA2B0C,GAChC,IAAI2B,EAAmB3B,EAAM2B,iBACzBQ,EAAcnC,EAAMmC,YAExB,GAA2B,MAAvBhC,KAAK+E,eACP,GAA2B,oBAAhB/C,EAA4B,CAGrC,IAFA,IAAIkE,EAAgB,EAEXpE,EAAQ,EAAGA,EAAQN,EAAkBM,IAC5CoE,GAAiBlE,EAAY,CAC3BF,MAAOA,IAIX9B,KAAK+E,eAAiBmB,OAEtBlG,KAAK+E,eAAiB/C,EAAcR,EAIxC,OAAOxB,KAAK+E,iBAEb,CACDvF,IAAK,qBACLrC,MAAO,SAA4B0C,GAKjC,OAJYA,EAAM+B,MAEE5B,KAAKmG,kBAAkBtG,KAI5C,CACDL,IAAK,oBACLrC,MAAO,SAA2B0C,GAChC,IAAIkB,EAAgBlB,EAAMkB,cACtBgC,EAAYlD,EAAMkD,UAEtB,GAA2B,MAAvB/C,KAAKgF,eACP,GAAyB,oBAAdjC,EAA0B,CAGnC,IAFA,IAAIqD,EAAgB,EAEXtE,EAAQ,EAAGA,EAAQf,EAAee,IACzCsE,GAAiBrD,EAAU,CACzBjB,MAAOA,IAIX9B,KAAKgF,eAAiBoB,OAEtBpG,KAAKgF,eAAiBjC,EAAYhC,EAItC,OAAOf,KAAKgF,iBAEb,CACDxF,IAAK,6BACLrC,MAAO,WACL,GAAmD,kBAAxC6C,KAAKkE,+BAA6C,CAC3D,IAAI5C,EAActB,KAAKkE,+BACnBvD,EAAWX,KAAKqE,4BACpBrE,KAAKkE,+BAAiC,KACtClE,KAAKqE,4BAA8B,KACnCrE,KAAK8E,kBAAkB,CACrBxD,YAAaA,EACbX,SAAUA,IAEZX,KAAK6D,iBAQR,CACDrE,IAAK,8BACLrC,MAAO,SAAqCkJ,GAC1C,IAAIC,EAAetG,KAAKH,MACpBmC,EAAcsE,EAAatE,YAC3BuE,EAA0BD,EAAaC,wBACvCC,EAAuBF,EAAaE,qBACpCrF,EAASmF,EAAanF,OACtBK,EAAmB8E,EAAa9E,iBAChCT,EAAgBuF,EAAavF,cAC7BgC,EAAYuD,EAAavD,UACzB7B,EAAQoF,EAAapF,MACrBuF,EAAsBH,EAAaG,oBACnCC,EAAuBJ,EAAaI,qBACpCC,EAAmBL,EAAaK,iBAChCC,EAAoBN,EAAaM,kBACjChF,EAAQ0E,EAAa1E,MACrBiF,EAAaR,GAAYlF,IAAWnB,KAAK8G,qBAAuBlF,IAAU5B,KAAK+G,mBAC/EC,EAAiBX,GAAYrE,IAAgBhC,KAAKiH,0BAA4BzF,IAAqBxB,KAAKkH,8BACxGC,EAAgBd,GAAYtF,IAAkBf,KAAKoH,4BAA8BrE,IAAc/C,KAAKqH,wBAEpGhB,GAAYQ,GAAc3F,IAAUlB,KAAKsH,sBAC3CtH,KAAK0F,qBAAuBzG,EAAc,CACxCkC,OAAQA,EACRoG,SAAU,UAEV3F,MAAOA,GACNV,KAGDmF,GAAYQ,GAAcM,KAC5BnH,KAAK2F,mBAAqB,CACxBxE,OAAQnB,KAAKiG,kBAAkBjG,KAAKH,OACpC2H,SAAU,WACV5F,MAAOA,GAET5B,KAAK8F,sBAAwB,CAC3B3E,OAAQA,EAASnB,KAAKiG,kBAAkBjG,KAAKH,OAC7C0H,SAAU,UAEVC,SAAU,WACV5F,MAAOA,KAIPyE,GAAYI,IAAwBzG,KAAKyH,oCAC3CzH,KAAK0H,qBAAuBzI,EAAc,CACxC0I,KAAM,EACNC,UAAW,SACXC,UAAWtB,EAA0B,OAAS,SAC9CiB,SAAU,YACTf,KAGDJ,GAAYW,GAAkBN,IAAyB1G,KAAK8H,qCAC9D9H,KAAK+H,sBAAwB9I,EAAc,CACzC0I,KAAM3H,KAAKmG,kBAAkBnG,KAAKH,OAClC2H,SAAU,YACTd,KAGDL,GAAYM,IAAqB3G,KAAKgI,iCACxChI,KAAKiI,kBAAoBhJ,EAAc,CACrC0I,KAAM,EACNC,UAAW,SACXC,UAAW,SACXL,SAAU,WACVU,IAAK,GACJvB,KAGDN,GAAYW,GAAkBJ,IAAsB5G,KAAKmI,kCAC3DnI,KAAKoI,mBAAqBnJ,EAAc,CACtC0I,KAAM3H,KAAKmG,kBAAkBnG,KAAKH,OAClC+H,UAAWpB,EAAuB,OAAS,SAC3CqB,UAAW,SACXL,SAAU,WACVU,IAAK,GACJtB,IAGL5G,KAAKiH,yBAA2BjF,EAChChC,KAAKkH,8BAAgC1F,EACrCxB,KAAKoH,2BAA6BrG,EAClCf,KAAK8G,oBAAsB3F,EAC3BnB,KAAKqH,uBAAyBtE,EAC9B/C,KAAKsH,mBAAqBpG,EAC1BlB,KAAKyH,iCAAmChB,EACxCzG,KAAK8H,kCAAoCpB,EACzC1G,KAAKgI,8BAAgCrB,EACrC3G,KAAKmI,+BAAiCvB,EACtC5G,KAAK+G,mBAAqBnF,IAE3B,CACDpC,IAAK,oBACLrC,MAAO,WACD6C,KAAKiH,2BAA6BjH,KAAKH,MAAMmC,aAAehC,KAAKkH,gCAAkClH,KAAKH,MAAM2B,mBAChHxB,KAAK+E,eAAiB,MAGpB/E,KAAKoH,6BAA+BpH,KAAKH,MAAMkB,eAAiBf,KAAKqH,yBAA2BrH,KAAKH,MAAMkD,YAC7G/C,KAAKgF,eAAiB,MAGxBhF,KAAKsD,8BAELtD,KAAKiH,yBAA2BjH,KAAKH,MAAMmC,YAC3ChC,KAAKkH,8BAAgClH,KAAKH,MAAM2B,iBAChDxB,KAAKoH,2BAA6BpH,KAAKH,MAAMkB,cAC7Cf,KAAKqH,uBAAyBrH,KAAKH,MAAMkD,YAE1C,CACDvD,IAAK,wBACLrC,MAAO,SAA+B0C,GACpC,IAAI0G,EAA0B1G,EAAM0G,wBAChC/E,EAAmB3B,EAAM2B,iBACzBT,EAAgBlB,EAAMkB,cACtBC,EAAWnB,EAAMmB,SACjBqH,EAA8BxI,EAAMwI,4BACpC/H,EAAwBN,KAAKkC,MAAM5B,sBAEvC,IAAKkB,EACH,OAAO,KAGT,IAAI8G,EAAqBhI,EAAwB,EAAI,EACjDa,EAASnB,KAAKuI,qBAAqB1I,GACnC+B,EAAQ5B,KAAKmG,kBAAkBtG,GAC/BO,EAAgBJ,KAAKkC,MAAM5B,sBAAwBN,KAAKkC,MAAM9B,cAAgB,EAC9EoI,EAAYH,EAA8BzG,EAAQxB,EAAgBwB,EAElE6G,EAAiBvK,EAAM+C,cAAc5C,EAAK,SAAa,EAAIZ,EAAS,SAAa,GAAIoC,EAAO,CAC9FiB,aAAcd,KAAK0I,4BACnBC,UAAW3I,KAAKH,MAAM+I,wBACtBjH,YAAaH,EACb2B,yBAA0BnD,KAAKuD,wCAC/BpC,OAAQA,EACRkB,SAAUkE,EAA0BvG,KAAK6I,kBAAe9E,EACxDxD,IAAKP,KAAK8I,mBACV9H,SAAUmD,KAAKS,IAAI,EAAG5D,EAAWD,GAAiBuH,EAClDvF,UAAW/C,KAAK+I,qBAChB7H,MAAOlB,KAAK0H,qBACZsB,SAAU,KACVpH,MAAO4G,KAGT,OAAIH,EACKnK,EAAM+C,cAAc,MAAO,CAChC0H,UAAW,+BACXzH,MAAOjC,EAAc,GAAIe,KAAK0H,qBAAsB,CAClDvG,OAAQA,EACRS,MAAOA,EACPiG,UAAW,YAEZY,GAGEA,IAER,CACDjJ,IAAK,yBACLrC,MAAO,SAAgC0C,GACrC,IAAI8B,EAAc9B,EAAM8B,YACpBH,EAAmB3B,EAAM2B,iBACzBT,EAAgBlB,EAAMkB,cACtBC,EAAWnB,EAAMmB,SACjBsE,EAAiBzF,EAAMyF,eACvBC,EAAc1F,EAAM0F,YACxB,OAAOrH,EAAM+C,cAAc5C,EAAK,SAAa,EAAIZ,EAAS,SAAa,GAAIoC,EAAO,CAChFiB,aAAcd,KAAKiJ,6BACnBN,UAAW3I,KAAKH,MAAMqJ,yBACtBvH,YAAawC,KAAKS,IAAI,EAAGjD,EAAcH,GACvCQ,YAAahC,KAAKmJ,sBAClBhG,yBAA0BnD,KAAK2D,yCAC/BxC,OAAQnB,KAAKuI,qBAAqB1I,GAClCwC,SAAUrC,KAAK4C,UACfD,0BAA2B3C,KAAKoJ,2BAChC7I,IAAKP,KAAKqJ,oBACVrI,SAAUmD,KAAKS,IAAI,EAAG5D,EAAWD,GACjCgC,UAAW/C,KAAK+I,qBAChBzD,eAAgBA,EAAiB9D,EACjC+D,YAAaA,EAAcxE,EAC3BG,MAAOlB,KAAK+H,sBACZnG,MAAO5B,KAAKsJ,mBAAmBzJ,QAGlC,CACDL,IAAK,qBACLrC,MAAO,SAA4B0C,GACjC,IAAI2B,EAAmB3B,EAAM2B,iBACzBT,EAAgBlB,EAAMkB,cAE1B,OAAKS,GAAqBT,EAInB7C,EAAM+C,cAAc5C,EAAK,SAAa,EAAIZ,EAAS,SAAa,GAAIoC,EAAO,CAChF8I,UAAW3I,KAAKH,MAAM0J,qBACtB5H,YAAaH,EACbL,OAAQnB,KAAKiG,kBAAkBpG,GAC/BU,IAAKP,KAAKwJ,gBACVxI,SAAUD,EACVG,MAAOlB,KAAKiI,kBACZe,SAAU,KACVpH,MAAO5B,KAAKmG,kBAAkBtG,MAXvB,OAcV,CACDL,IAAK,sBACLrC,MAAO,SAA6B0C,GAClC,IAAI8B,EAAc9B,EAAM8B,YACpB6E,EAAuB3G,EAAM2G,qBAC7BhF,EAAmB3B,EAAM2B,iBACzBT,EAAgBlB,EAAMkB,cACtBb,EAAaL,EAAMK,WACnBuJ,EAA4B5J,EAAM4J,0BAClCC,EAAe1J,KAAKkC,MACpB7B,EAA0BqJ,EAAarJ,wBACvCD,EAAgBsJ,EAAatJ,cAEjC,IAAKW,EACH,OAAO,KAGT,IAAI4I,EAAwBtJ,EAA0B,EAAI,EACtDc,EAASnB,KAAKiG,kBAAkBpG,GAChC+B,EAAQ5B,KAAKsJ,mBAAmBzJ,GAChC+J,EAAmBvJ,EAA0BD,EAAgB,EAE7DyJ,EAAa1I,EACbD,EAAQlB,KAAKoI,mBAEbqB,IACFI,EAAa1I,EAASyI,EACtB1I,EAAQjC,EAAc,GAAIe,KAAKoI,mBAAoB,CACjDT,KAAM,KAIV,IAAImC,EAAe5L,EAAM+C,cAAc5C,EAAK,SAAa,EAAIZ,EAAS,SAAa,GAAIoC,EAAO,CAC5FiB,aAAcd,KAAK+J,0BACnBpB,UAAW3I,KAAKH,MAAMmK,sBACtBrI,YAAawC,KAAKS,IAAI,EAAGjD,EAAcH,GAAoBmI,EAC3D3H,YAAahC,KAAKmJ,sBAClBhG,yBAA0BnD,KAAK4D,sCAC/BzC,OAAQ0I,EACRxH,SAAUmE,EAAuBxG,KAAKiK,mBAAgBlG,EACtDxD,IAAKP,KAAKkK,iBACVlJ,SAAUD,EACVb,WAAYA,EACZgB,MAAOA,EACP8H,SAAU,KACVpH,MAAOA,KAGT,OAAI6H,EACKvL,EAAM+C,cAAc,MAAO,CAChC0H,UAAW,6BACXzH,MAAOjC,EAAc,GAAIe,KAAKoI,mBAAoB,CAChDjH,OAAQA,EACRS,MAAOA,EACPgG,UAAW,YAEZkC,GAGEA,KAEP,CAAC,CACHtK,IAAK,2BACLrC,MAAO,SAAkCgN,EAAWC,GAClD,OAAID,EAAUjK,aAAekK,EAAUlK,YAAciK,EAAUhK,YAAciK,EAAUjK,UAC9E,CACLD,WAAoC,MAAxBiK,EAAUjK,YAAsBiK,EAAUjK,YAAc,EAAIiK,EAAUjK,WAAakK,EAAUlK,WACzGC,UAAkC,MAAvBgK,EAAUhK,WAAqBgK,EAAUhK,WAAa,EAAIgK,EAAUhK,UAAYiK,EAAUjK,WAIlG,SAGJR,EAptBT,CAqtBEzB,EAAMmM,gBAER,EAAIpM,EAAgB,SAAa0B,EAAW,eAAgB,CAC1DiJ,wBAAyB,GACzBM,yBAA0B,GAC1BK,qBAAsB,GACtBS,sBAAuB,GACvBzD,yBAAyB,EACzBC,sBAAsB,EACtBhF,iBAAkB,EAClBT,cAAe,EACfuE,gBAAiB,EACjBC,aAAc,EACdrE,MAAO,GACPuF,oBAAqB,GACrBC,qBAAsB,GACtBC,iBAAkB,GAClBC,kBAAmB,GACnB6C,2BAA2B,EAC3BpB,6BAA6B,IAE/B1I,EAAU2K,UAiBN,IACJ,EAAInM,EAAuBoM,UAAU5K,GACrC,IAAIpC,EAAWoC,EACfzC,EAAO,QAAcK,G,mBCpzBrB,SAASiN,EAAgBC,EAAGC,GAM1B,OALAC,EAAOzN,QAAUsN,EAAkBxN,OAAO4N,gBAAkB,SAAyBH,EAAGC,GAEtF,OADAD,EAAEI,UAAYH,EACPD,GAGFD,EAAgBC,EAAGC,GAG5BC,EAAOzN,QAAUsN,G,kCCPjB,IAAI1N,EAAyBC,EAAQ,IAErCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAO,aAAc,EAErB,IAAIS,EAAmBb,EAAuBC,EAAQ,MAElDa,EAAgBd,EAAuBC,EAAQ,MAE/CkB,EAAmBnB,EAAuBC,EAAQ,MAOlD+N,GALgB/N,EAAQ,MAO5B,WACE,SAAS+N,IACP,IAAI/K,EAAQC,KAER+K,EAAS3L,UAAUC,OAAS,QAAsB0E,IAAjB3E,UAAU,GAAmBA,UAAU,GAAK,IACjF,EAAIzB,EAAgB,SAAaqC,KAAM8K,IACvC,EAAI7M,EAAgB,SAAa+B,KAAM,0BAAsB,IAC7D,EAAI/B,EAAgB,SAAa+B,KAAM,0BAAsB,IAC7D,EAAI/B,EAAgB,SAAa+B,KAAM,uBAAmB,IAC1D,EAAI/B,EAAgB,SAAa+B,KAAM,eAAe,SAAUU,GAC9D,IAAIoB,EAAQpB,EAAKoB,MAEjB/B,EAAMiL,mBAAmBhJ,YAAY,CACnCF,MAAOA,EAAQ/B,EAAMkL,yBAGzB,EAAIhN,EAAgB,SAAa+B,KAAM,aAAa,SAAUqB,GAC5D,IAAIS,EAAQT,EAAMS,MAElB/B,EAAMiL,mBAAmBjI,UAAU,CACjCjB,MAAOA,EAAQ/B,EAAMmL,qBAGzB,IAAI1H,EAAoBuH,EAAOvH,kBAC3B2H,EAAwBJ,EAAOtH,kBAC/BA,OAA8C,IAA1B0H,EAAmC,EAAIA,EAC3DC,EAAwBL,EAAOrH,eAC/BA,OAA2C,IAA1B0H,EAAmC,EAAIA,EAC5DpL,KAAKgL,mBAAqBxH,EAC1BxD,KAAKiL,mBAAqBxH,EAC1BzD,KAAKkL,gBAAkBxH,EAyDzB,OAtDA,EAAI9F,EAAa,SAAakN,EAA4B,CAAC,CACzDtL,IAAK,QACLrC,MAAO,SAAewD,EAAUW,GAC9BtB,KAAKgL,mBAAmBK,MAAM1K,EAAWX,KAAKkL,gBAAiB5J,EAActB,KAAKiL,sBAEnF,CACDzL,IAAK,WACLrC,MAAO,WACL6C,KAAKgL,mBAAmBM,aAEzB,CACD9L,IAAK,iBACLrC,MAAO,WACL,OAAO6C,KAAKgL,mBAAmBO,mBAEhC,CACD/L,IAAK,gBACLrC,MAAO,WACL,OAAO6C,KAAKgL,mBAAmBQ,kBAEhC,CACDhM,IAAK,YACLrC,MAAO,SAAmBwD,GACxB,IAAIW,EAAclC,UAAUC,OAAS,QAAsB0E,IAAjB3E,UAAU,GAAmBA,UAAU,GAAK,EACtF,OAAOY,KAAKgL,mBAAmBS,UAAU9K,EAAWX,KAAKkL,gBAAiB5J,EAActB,KAAKiL,sBAE9F,CACDzL,IAAK,WACLrC,MAAO,SAAkBwD,GACvB,IAAIW,EAAclC,UAAUC,OAAS,QAAsB0E,IAAjB3E,UAAU,GAAmBA,UAAU,GAAK,EACtF,OAAOY,KAAKgL,mBAAmBU,SAAS/K,EAAWX,KAAKkL,gBAAiB5J,EAActB,KAAKiL,sBAE7F,CACDzL,IAAK,MACLrC,MAAO,SAAawD,GAClB,IAAIW,EAAclC,UAAUC,OAAS,QAAsB0E,IAAjB3E,UAAU,GAAmBA,UAAU,GAAK,EACtF,OAAOY,KAAKgL,mBAAmBW,IAAIhL,EAAWX,KAAKkL,gBAAiB5J,EAActB,KAAKiL,sBAExF,CACDzL,IAAK,MACLrC,MAAO,SAAawD,EAAUW,EAAaM,EAAOT,GAChDnB,KAAKgL,mBAAmBY,IAAIjL,EAAWX,KAAKkL,gBAAiB5J,EAActB,KAAKiL,mBAAoBrJ,EAAOT,KAE5G,CACD3B,IAAK,gBACLnC,IAAK,WACH,OAAO2C,KAAKgL,mBAAmBa,gBAEhC,CACDrM,IAAK,eACLnC,IAAK,WACH,OAAO2C,KAAKgL,mBAAmBc,iBAG5BhB,EAvFT,IA0FA5N,EAAO,QAAc4N,G,kCC9GrB,IAAIhO,EAAyBC,EAAQ,IAErCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETH,OAAOC,eAAeC,EAAS,eAAgB,CAC7CE,YAAY,EACZC,IAAK,WACH,OAAO0O,EAAa,WAGxB/O,OAAOC,eAAeC,EAAS,oBAAqB,CAClDE,YAAY,EACZC,IAAK,WACH,OAAO2O,EAAkB,WAG7B9O,EAAO,aAAc,EAErB,IAAI6O,EAAgBjP,EAAuBC,EAAQ,OAE/CiP,EAAqBlP,EAAuBC,EAAQ,OAEpDQ,EAAWwO,EAAa,QAC5B7O,EAAO,QAAcK,G,kCCxBrB,IAAIT,EAAyBC,EAAQ,IAEjCS,EAA0BT,EAAQ,KAEtCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAO,aAAc,EAErB,IAsBI+O,EAAQC,EAtBRvO,EAAmBb,EAAuBC,EAAQ,MAElDa,EAAgBd,EAAuBC,EAAQ,MAE/Cc,EAA8Bf,EAAuBC,EAAQ,MAE7DoP,EAAmBrP,EAAuBC,EAAQ,MAElDgB,EAA0BjB,EAAuBC,EAAQ,MAEzDiB,EAAalB,EAAuBC,EAAQ,MAE5CkB,EAAmBnB,EAAuBC,EAAQ,MAElDmB,EAAQV,EAAwBT,EAAQ,IAExCqP,EAAYrP,EAAQ,IAapBsP,GAXStP,EAAQ,KAEJD,EAAuBC,EAAQ,KAS5BmP,EAAQD,EAE5B,SAAUrM,GAGR,SAASyM,IACP,IAAIvO,EAEAiC,GAEJ,EAAIpC,EAAgB,SAAaqC,KAAMqM,GAEvC,IAAK,IAAIC,EAAOlN,UAAUC,OAAQkN,EAAO,IAAIC,MAAMF,GAAOG,EAAO,EAAGA,EAAOH,EAAMG,IAC/EF,EAAKE,GAAQrN,UAAUqN,GAwCzB,OArCA1M,GAAQ,EAAIlC,EAA2B,SAAamC,MAAOlC,GAAmB,EAAIqO,EAAgB,SAAaE,IAAepM,KAAKjB,MAAMlB,EAAkB,CAACkC,MAAM0M,OAAOH,MACzK,EAAItO,EAAgB,UAAa,EAAIF,EAAuB,SAAagC,GAAQ,cAAU,IAC3F,EAAI9B,EAAgB,UAAa,EAAIF,EAAuB,SAAagC,GAAQ,YAAY,WAC3F,IAAIc,EAAcd,EAAMF,MACpB8M,EAAQ9L,EAAY8L,MACpBC,EAAwB/L,EAAYS,YACpCA,OAAwC,IAA1BsL,EAAmC,EAAIA,EACrDxL,EAASP,EAAYO,OACrByL,EAAuBhM,EAAYF,SACnCA,OAAoC,IAAzBkM,EAAkC9M,EAAMF,MAAMiC,OAAS,EAAI+K,EAEtEC,EAAwB/M,EAAMgN,uBAC9B5L,EAAS2L,EAAsB3L,OAC/BS,EAAQkL,EAAsBlL,MAE9BT,IAAWwL,EAAMlB,UAAU9K,EAAUW,IAAgBM,IAAU+K,EAAMjB,SAAS/K,EAAUW,KAC1FqL,EAAMf,IAAIjL,EAAUW,EAAaM,EAAOT,GAEpCC,GAA8C,oBAA7BA,EAAO0D,mBAC1B1D,EAAO0D,kBAAkB,CACvBxD,YAAaA,EACbX,SAAUA,SAKlB,EAAI1C,EAAgB,UAAa,EAAIF,EAAuB,SAAagC,GAAQ,kBAAkB,SAAUiN,IACvGA,GAAaA,aAAmBC,SAClCC,QAAQC,KAAK,mEAGfpN,EAAMqN,OAASJ,EAEXA,GACFjN,EAAMsN,uBAGHtN,EAiGT,OAnJA,EAAI/B,EAAU,SAAaqO,EAAczM,IAqDzC,EAAIhC,EAAa,SAAayO,EAAc,CAAC,CAC3C7M,IAAK,oBACLrC,MAAO,WACL6C,KAAKqN,sBAEN,CACD7N,IAAK,qBACLrC,MAAO,WACL6C,KAAKqN,sBAEN,CACD7N,IAAK,SACLrC,MAAO,WACL,IAAImQ,EAAWtN,KAAKH,MAAMyN,SAC1B,MAA2B,oBAAbA,EAA0BA,EAAS,CAC/CC,QAASvN,KAAKwN,SACdC,cAAezN,KAAK0N,iBACjBJ,IAEN,CACD9N,IAAK,uBACLrC,MAAO,WACL,IAAIwP,EAAQ3M,KAAKH,MAAM8M,MACnBgB,EAAO3N,KAAKoN,SAAU,EAAIhB,EAAUwB,aAAa5N,MAErD,GAAI2N,GAAQA,EAAKE,eAAiBF,EAAKE,cAAcC,aAAeH,aAAgBA,EAAKE,cAAcC,YAAYC,YAAa,CAC9H,IAAIC,EAAaL,EAAKzM,MAAMU,MACxBqM,EAAcN,EAAKzM,MAAMC,OAUxBwL,EAAMnB,kBACTmC,EAAKzM,MAAMU,MAAQ,QAGhB+K,EAAMpB,mBACToC,EAAKzM,MAAMC,OAAS,QAGtB,IAAIA,EAASgD,KAAK+J,KAAKP,EAAKQ,cACxBvM,EAAQuC,KAAK+J,KAAKP,EAAKS,aAU3B,OARIJ,IACFL,EAAKzM,MAAMU,MAAQoM,GAGjBC,IACFN,EAAKzM,MAAMC,OAAS8M,GAGf,CACL9M,OAAQA,EACRS,MAAOA,GAGT,MAAO,CACLT,OAAQ,EACRS,MAAO,KAIZ,CACDpC,IAAK,oBACLrC,MAAO,WACL,IAAIoE,EAAevB,KAAKH,MACpB8M,EAAQpL,EAAaoL,MACrB0B,EAAwB9M,EAAaD,YACrCA,OAAwC,IAA1B+M,EAAmC,EAAIA,EACrDjN,EAASG,EAAaH,OACtBkN,EAAwB/M,EAAaZ,SACrCA,OAAqC,IAA1B2N,EAAmCtO,KAAKH,MAAMiC,OAAS,EAAIwM,EAE1E,IAAK3B,EAAMhB,IAAIhL,EAAUW,GAAc,CACrC,IAAIiN,EAAyBvO,KAAK+M,uBAC9B5L,EAASoN,EAAuBpN,OAChCS,EAAQ2M,EAAuB3M,MAEnC+K,EAAMf,IAAIjL,EAAUW,EAAaM,EAAOT,GAEpCC,GAA0D,oBAAzCA,EAAOoN,+BAC1BpN,EAAOoN,8BAA8B,CACnClN,YAAaA,EACbX,SAAUA,SAMb0L,EApJT,CAqJEnO,EAAMmM,gBAAgB,EAAIpM,EAAgB,SAAagO,EAAQ,YAAqD,MAYlHC,GAEJhP,EAAO,QAAcmP,GACrB,EAAIpO,EAAgB,SAAaoO,EAAc,8BAA8B,I,kCC5M7E,IAAIvP,EAAyBC,EAAQ,IAErCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAO,QAAcA,EAAQuR,cAAgBvR,EAAQwR,oBAAiB,EAEtE,IAAI/Q,EAAmBb,EAAuBC,EAAQ,MAElDa,EAAgBd,EAAuBC,EAAQ,MAE/CkB,EAAmBnB,EAAuBC,EAAQ,MAEzCA,EAAQ,KAGrBG,EAAQwR,eADa,GAKrBxR,EAAQuR,cAHY,IAQpB,IAAIE,EAEJ,WACE,SAASA,IACP,IAAI5O,EAAQC,KAER+K,EAAS3L,UAAUC,OAAS,QAAsB0E,IAAjB3E,UAAU,GAAmBA,UAAU,GAAK,IACjF,EAAIzB,EAAgB,SAAaqC,KAAM2O,IACvC,EAAI1Q,EAAgB,SAAa+B,KAAM,mBAAoB,KAC3D,EAAI/B,EAAgB,SAAa+B,KAAM,kBAAmB,KAC1D,EAAI/B,EAAgB,SAAa+B,KAAM,oBAAqB,KAC5D,EAAI/B,EAAgB,SAAa+B,KAAM,kBAAmB,KAC1D,EAAI/B,EAAgB,SAAa+B,KAAM,sBAAkB,IACzD,EAAI/B,EAAgB,SAAa+B,KAAM,qBAAiB,IACxD,EAAI/B,EAAgB,SAAa+B,KAAM,kBAAc,IACrD,EAAI/B,EAAgB,SAAa+B,KAAM,iBAAa,IACpD,EAAI/B,EAAgB,SAAa+B,KAAM,kBAAc,IACrD,EAAI/B,EAAgB,SAAa+B,KAAM,uBAAmB,IAC1D,EAAI/B,EAAgB,SAAa+B,KAAM,sBAAkB,IACzD,EAAI/B,EAAgB,SAAa+B,KAAM,eAAgB,IACvD,EAAI/B,EAAgB,SAAa+B,KAAM,YAAa,IACpD,EAAI/B,EAAgB,SAAa+B,KAAM,eAAe,SAAUU,GAC9D,IAAIoB,EAAQpB,EAAKoB,MAEbtC,EAAMO,EAAM6O,WAAW,EAAG9M,GAE9B,YAAwCiC,IAAjChE,EAAM8O,kBAAkBrP,GAAqBO,EAAM8O,kBAAkBrP,GAAOO,EAAM+O,kBAE3F,EAAI7Q,EAAgB,SAAa+B,KAAM,aAAa,SAAUqB,GAC5D,IAAIS,EAAQT,EAAMS,MAEdtC,EAAMO,EAAM6O,WAAW9M,EAAO,GAElC,YAAsCiC,IAA/BhE,EAAMgP,gBAAgBvP,GAAqBO,EAAMgP,gBAAgBvP,GAAOO,EAAMiP,kBAEvF,IAAInD,EAAgBd,EAAOc,cACvBC,EAAef,EAAOe,aACtBmD,EAAclE,EAAOkE,YACrBC,EAAanE,EAAOmE,WACpBC,EAAYpE,EAAOoE,UACnBC,EAAYrE,EAAOqE,UACnBC,EAAWtE,EAAOsE,SACtBrP,KAAKsP,iBAAkC,IAAhBL,EACvBjP,KAAKuP,gBAAgC,IAAfL,EACtBlP,KAAKwP,WAAaJ,GAAa,EAC/BpP,KAAKyP,UAAYJ,GAAY,EAC7BrP,KAAK4O,WAAaO,GAAaO,EAC/B1P,KAAKgP,eAAiB7K,KAAKS,IAAI5E,KAAKwP,WAAqC,kBAAlB3D,EAA6BA,EAzDnE,IA0DjB7L,KAAK8O,cAAgB3K,KAAKS,IAAI5E,KAAKyP,UAAmC,kBAAjB3D,EAA4BA,EAxDjE,KAyMlB,OAhIA,EAAIlO,EAAa,SAAa+Q,EAAmB,CAAC,CAChDnP,IAAK,QACLrC,MAAO,SAAewD,GACpB,IAAIW,EAAclC,UAAUC,OAAS,QAAsB0E,IAAjB3E,UAAU,GAAmBA,UAAU,GAAK,EAElFI,EAAMQ,KAAK4O,WAAWjO,EAAUW,UAE7BtB,KAAK2P,iBAAiBnQ,UACtBQ,KAAK4P,gBAAgBpQ,GAE5BQ,KAAK6P,+BAA+BlP,EAAUW,KAE/C,CACD9B,IAAK,WACLrC,MAAO,WACL6C,KAAK2P,iBAAmB,GACxB3P,KAAK4P,gBAAkB,GACvB5P,KAAK6O,kBAAoB,GACzB7O,KAAK+O,gBAAkB,GACvB/O,KAAK8P,UAAY,EACjB9P,KAAK+P,aAAe,IAErB,CACDvQ,IAAK,iBACLrC,MAAO,WACL,OAAO6C,KAAKsP,kBAEb,CACD9P,IAAK,gBACLrC,MAAO,WACL,OAAO6C,KAAKuP,iBAEb,CACD/P,IAAK,YACLrC,MAAO,SAAmBwD,GACxB,IAAIW,EAAclC,UAAUC,OAAS,QAAsB0E,IAAjB3E,UAAU,GAAmBA,UAAU,GAAK,EAEtF,GAAIY,KAAKsP,gBACP,OAAOtP,KAAKgP,eAEZ,IAAIvC,EAAOzM,KAAK4O,WAAWjO,EAAUW,GAErC,YAAuCyC,IAAhC/D,KAAK2P,iBAAiBlD,GAAsBtI,KAAKS,IAAI5E,KAAKwP,WAAYxP,KAAK2P,iBAAiBlD,IAASzM,KAAKgP,iBAGpH,CACDxP,IAAK,WACLrC,MAAO,SAAkBwD,GACvB,IAAIW,EAAclC,UAAUC,OAAS,QAAsB0E,IAAjB3E,UAAU,GAAmBA,UAAU,GAAK,EAEtF,GAAIY,KAAKuP,eACP,OAAOvP,KAAK8O,cAEZ,IAAIkB,EAAQhQ,KAAK4O,WAAWjO,EAAUW,GAEtC,YAAuCyC,IAAhC/D,KAAK4P,gBAAgBI,GAAuB7L,KAAKS,IAAI5E,KAAKyP,UAAWzP,KAAK4P,gBAAgBI,IAAUhQ,KAAK8O,gBAGnH,CACDtP,IAAK,MACLrC,MAAO,SAAawD,GAClB,IAAIW,EAAclC,UAAUC,OAAS,QAAsB0E,IAAjB3E,UAAU,GAAmBA,UAAU,GAAK,EAElFI,EAAMQ,KAAK4O,WAAWjO,EAAUW,GAEpC,YAAsCyC,IAA/B/D,KAAK2P,iBAAiBnQ,KAE9B,CACDA,IAAK,MACLrC,MAAO,SAAawD,EAAUW,EAAaM,EAAOT,GAChD,IAAI3B,EAAMQ,KAAK4O,WAAWjO,EAAUW,GAEhCA,GAAetB,KAAK+P,eACtB/P,KAAK+P,aAAezO,EAAc,GAGhCX,GAAYX,KAAK8P,YACnB9P,KAAK8P,UAAYnP,EAAW,GAI9BX,KAAK2P,iBAAiBnQ,GAAO2B,EAC7BnB,KAAK4P,gBAAgBpQ,GAAOoC,EAE5B5B,KAAK6P,+BAA+BlP,EAAUW,KAE/C,CACD9B,IAAK,iCACLrC,MAAO,SAAwCwD,EAAUW,GAKvD,IAAKtB,KAAKuP,eAAgB,CAGxB,IAFA,IAAIvN,EAAc,EAET7C,EAAI,EAAGA,EAAIa,KAAK8P,UAAW3Q,IAClC6C,EAAcmC,KAAKS,IAAI5C,EAAahC,KAAK0L,SAASvM,EAAGmC,IAGvD,IAAI2O,EAAYjQ,KAAK4O,WAAW,EAAGtN,GAEnCtB,KAAK6O,kBAAkBoB,GAAajO,EAGtC,IAAKhC,KAAKsP,gBAAiB,CAGzB,IAFA,IAAIvM,EAAY,EAEPmN,EAAK,EAAGA,EAAKlQ,KAAK+P,aAAcG,IACvCnN,EAAYoB,KAAKS,IAAI7B,EAAW/C,KAAKyL,UAAU9K,EAAUuP,IAG3D,IAAIC,EAASnQ,KAAK4O,WAAWjO,EAAU,GAEvCX,KAAK+O,gBAAgBoB,GAAUpN,KAGlC,CACDvD,IAAK,gBACLnC,IAAK,WACH,OAAO2C,KAAKgP,iBAEb,CACDxP,IAAK,eACLnC,IAAK,WACH,OAAO2C,KAAK8O,kBAGTH,EA/LT,GAoMA,SAASe,EAAiB/O,EAAUW,GAClC,MAAO,GAAGoL,OAAO/L,EAAU,KAAK+L,OAAOpL,GAHzCpE,EAAO,QAAcyR,G,kCC7NrB,IAAI7R,EAAyBC,EAAQ,IAErCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETH,OAAOC,eAAeC,EAAS,UAAW,CACxCE,YAAY,EACZC,IAAK,WACH,OAAOgB,EAAK,WAGhBrB,OAAOC,eAAeC,EAAS,OAAQ,CACrCE,YAAY,EACZC,IAAK,WACH,OAAOgB,EAAK,WAGhBrB,OAAOC,eAAeC,EAAS,qCAAsC,CACnEE,YAAY,EACZC,IAAK,WACH,OAAO+S,EAAmC,WAG9CpT,OAAOC,eAAeC,EAAS,2BAA4B,CACzDE,YAAY,EACZC,IAAK,WACH,OAAOgT,EAAyB,WAGpCrT,OAAOC,eAAeC,EAAS,+BAAgC,CAC7DE,YAAY,EACZC,IAAK,WACH,OAAOiT,EAA6B,WAGxCtT,OAAOC,eAAeC,EAAS,oCAAqC,CAClEE,YAAY,EACZC,IAAK,WACH,OAAOkT,EAAOC,qCAGlBxT,OAAOC,eAAeC,EAAS,4BAA6B,CAC1DE,YAAY,EACZC,IAAK,WACH,OAAOkT,EAAOE,6BAGlBzT,OAAOC,eAAeC,EAAS,+BAAgC,CAC7DE,YAAY,EACZC,IAAK,WACH,OAAOkT,EAAOG,gCAGlB1T,OAAOC,eAAeC,EAAS,2BAA4B,CACzDE,YAAY,EACZC,IAAK,WACH,OAAOkT,EAAOI,4BAGlB3T,OAAOC,eAAeC,EAAS,wCAAyC,CACtEE,YAAY,EACZC,IAAK,WACH,OAAOkT,EAAOK,yCAGlB5T,OAAOC,eAAeC,EAAS,kCAAmC,CAChEE,YAAY,EACZC,IAAK,WACH,OAAOkT,EAAOM,mCAGlB7T,OAAOC,eAAeC,EAAS,qCAAsC,CACnEE,YAAY,EACZC,IAAK,WACH,OAAOkT,EAAOO,sCAGlB9T,OAAOC,eAAeC,EAAS,yBAA0B,CACvDE,YAAY,EACZC,IAAK,WACH,OAAOkT,EAAOQ,0BAIlB,IAAI1S,EAAQvB,EAAuBC,EAAQ,OAEvCqT,EAAsCtT,EAAuBC,EAAQ,OAErEsT,EAA4BvT,EAAuBC,EAAQ,MAE3DuT,EAAgCxT,EAAuBC,EAAQ,MAE/DwT,EAASxT,EAAQ,M,kCC5FrB,IAAID,EAAyBC,EAAQ,IAEjCS,EAA0BT,EAAQ,KAEtCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAO,QAAcA,EAAQ8T,2CAAwC,EAErE,IA0CI/E,EAAQC,EA1CRzO,EAAYX,EAAuBC,EAAQ,KAE3CY,EAAmBb,EAAuBC,EAAQ,MAElDa,EAAgBd,EAAuBC,EAAQ,MAE/Cc,EAA8Bf,EAAuBC,EAAQ,MAE7De,EAAmBhB,EAAuBC,EAAQ,MAElDgB,EAA0BjB,EAAuBC,EAAQ,MAEzDiB,EAAalB,EAAuBC,EAAQ,MAE5CkB,EAAmBnB,EAAuBC,EAAQ,MAElDmB,EAAQV,EAAwBT,EAAQ,IAExCkU,EAAQnU,EAAuBC,EAAQ,IAEvCmU,EAAqDpU,EAAuBC,EAAQ,OAEpFoU,EAAqCrU,EAAuBC,EAAQ,MAEpEqU,EAA0BtU,EAAuBC,EAAQ,OAEzDuT,EAAgC9S,EAAwBT,EAAQ,MAEhEsU,EAA2BvU,EAAuBC,EAAQ,OAE1DsT,EAA4BvT,EAAuBC,EAAQ,MAE3DuU,EAAiBxU,EAAuBC,EAAQ,MAEhDoB,EAAyBpB,EAAQ,KAEjCwU,EAA2BxU,EAAQ,MAE1BA,EAAQ,KAEJD,EAAuBC,EAAQ,KAIhD,SAASuB,EAAQC,EAAQC,GAAkB,IAAIC,EAAOzB,OAAOyB,KAAKF,GAAS,GAAIvB,OAAO0B,sBAAuB,CAAE,IAAIC,EAAU3B,OAAO0B,sBAAsBH,GAAaC,IAAgBG,EAAUA,EAAQC,QAAO,SAAUC,GAAO,OAAO7B,OAAO8B,yBAAyBP,EAAQM,GAAKzB,eAAgBqB,EAAKM,KAAKC,MAAMP,EAAME,GAAY,OAAOF,EAE9U,SAASQ,EAAcC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAAyB,MAAhBF,UAAUD,GAAaC,UAAUD,GAAK,GAAQA,EAAI,EAAKb,EAAQgB,GAAQ,GAAMC,SAAQ,SAAUC,IAAO,EAAIvB,EAAgB,SAAaiB,EAAQM,EAAKF,EAAOE,OAAsBxC,OAAOyC,0BAA6BzC,OAAO0C,iBAAiBR,EAAQlC,OAAOyC,0BAA0BH,IAAmBhB,EAAQgB,GAAQC,SAAQ,SAAUC,GAAOxC,OAAOC,eAAeiC,EAAQM,EAAKxC,OAAO8B,yBAAyBQ,EAAQE,OAAe,OAAON,EAY9gBhC,EAAQ8T,sCANoC,IAO5C,IAAIQ,EACQ,WADRA,EAES,YAWTC,GAAQvF,EAAQD,EAEpB,SAAUrM,GAIR,SAAS6R,EAAK5R,GACZ,IAAIE,GAEJ,EAAIpC,EAAgB,SAAaqC,KAAMyR,GACvC1R,GAAQ,EAAIlC,EAA2B,SAAamC,MAAM,EAAIlC,EAAgB,SAAa2T,GAAMxR,KAAKD,KAAMH,KAC5G,EAAI5B,EAAgB,UAAa,EAAIF,EAAuB,SAAagC,GAAQ,2BAA2B,EAAIqR,EAAuB,aACvI,EAAInT,EAAgB,UAAa,EAAIF,EAAuB,SAAagC,GAAQ,qBAAqB,EAAIqR,EAAuB,UAAa,KAC9I,EAAInT,EAAgB,UAAa,EAAIF,EAAuB,SAAagC,GAAQ,iCAAkC,OACnH,EAAI9B,EAAgB,UAAa,EAAIF,EAAuB,SAAagC,GAAQ,8BAA+B,OAChH,EAAI9B,EAAgB,UAAa,EAAIF,EAAuB,SAAagC,GAAQ,4BAA4B,IAC7G,EAAI9B,EAAgB,UAAa,EAAIF,EAAuB,SAAagC,GAAQ,2BAA2B,IAC5G,EAAI9B,EAAgB,UAAa,EAAIF,EAAuB,SAAagC,GAAQ,2BAA4B,IAC7G,EAAI9B,EAAgB,UAAa,EAAIF,EAAuB,SAAagC,GAAQ,yBAA0B,IAC3G,EAAI9B,EAAgB,UAAa,EAAIF,EAAuB,SAAagC,GAAQ,6BAA6B,IAC9G,EAAI9B,EAAgB,UAAa,EAAIF,EAAuB,SAAagC,GAAQ,2BAAuB,IACxG,EAAI9B,EAAgB,UAAa,EAAIF,EAAuB,SAAagC,GAAQ,0BAAsB,IACvG,EAAI9B,EAAgB,UAAa,EAAIF,EAAuB,SAAagC,GAAQ,yBAAqB,IACtG,EAAI9B,EAAgB,UAAa,EAAIF,EAAuB,SAAagC,GAAQ,wBAAoB,IACrG,EAAI9B,EAAgB,UAAa,EAAIF,EAAuB,SAAagC,GAAQ,sBAAkB,IACnG,EAAI9B,EAAgB,UAAa,EAAIF,EAAuB,SAAagC,GAAQ,qBAAiB,IAClG,EAAI9B,EAAgB,UAAa,EAAIF,EAAuB,SAAagC,GAAQ,4BAA6B,IAC9G,EAAI9B,EAAgB,UAAa,EAAIF,EAAuB,SAAagC,GAAQ,2BAA4B,IAC7G,EAAI9B,EAAgB,UAAa,EAAIF,EAAuB,SAAagC,GAAQ,yBAA0B,IAC3G,EAAI9B,EAAgB,UAAa,EAAIF,EAAuB,SAAagC,GAAQ,wBAAyB,IAC1G,EAAI9B,EAAgB,UAAa,EAAIF,EAAuB,SAAagC,GAAQ,yBAAqB,IACtG,EAAI9B,EAAgB,UAAa,EAAIF,EAAuB,SAAagC,GAAQ,0BAAsB,IACvG,EAAI9B,EAAgB,UAAa,EAAIF,EAAuB,SAAagC,GAAQ,sCAAkC,IACnH,EAAI9B,EAAgB,UAAa,EAAIF,EAAuB,SAAagC,GAAQ,cAAe,KAChG,EAAI9B,EAAgB,UAAa,EAAIF,EAAuB,SAAagC,GAAQ,aAAc,KAC/F,EAAI9B,EAAgB,UAAa,EAAIF,EAAuB,SAAagC,GAAQ,gCAAgC,WAC/GA,EAAM2R,+BAAiC,KAEvC3R,EAAMqC,SAAS,CACbuP,aAAa,EACbC,uBAAuB,QAG3B,EAAI3T,EAAgB,UAAa,EAAIF,EAAuB,SAAagC,GAAQ,+BAA+B,WAC9G,IAAIsF,EAAoBtF,EAAMF,MAAMwF,kBAEpCtF,EAAM8R,wBAAwB,CAC5BC,SAAUzM,EACV0M,QAAS,CACPC,yBAA0BjS,EAAMkS,kBAChCC,wBAAyBnS,EAAMoS,iBAC/BC,iBAAkBrS,EAAMsS,0BACxBC,gBAAiBvS,EAAMwS,yBACvBC,sBAAuBzS,EAAM0S,eAC7BC,qBAAsB3S,EAAM4S,cAC5BC,cAAe7S,EAAM8S,uBACrBC,aAAc/S,EAAMgT,6BAI1B,EAAI9U,EAAgB,UAAa,EAAIF,EAAuB,SAAagC,GAAQ,6BAA6B,SAAUQ,GACtHR,EAAMiT,oBAAsBzS,MAE9B,EAAItC,EAAgB,UAAa,EAAIF,EAAuB,SAAagC,GAAQ,aAAa,SAAUkT,GAIlGA,EAAM/T,SAAWa,EAAMiT,qBACzBjT,EAAMmT,kBAAkBD,EAAM/T,WAGlC,IAAIiU,EAA+B,IAAIhC,EAAkC,QAAY,CACnFiC,UAAWvT,EAAM8B,YACjB0R,eAAgB,SAAwBtI,GACtC,OAAO0G,EAAK6B,gBAAgBzT,EAAMmC,YAA3ByP,CAAwC1G,IAEjDwI,kBAAmB9B,EAAK+B,wBAAwB3T,KAE9C4T,EAA4B,IAAItC,EAAkC,QAAY,CAChFiC,UAAWvT,EAAMmB,SACjBqS,eAAgB,SAAwBtI,GACtC,OAAO0G,EAAK6B,gBAAgBzT,EAAMkD,UAA3B0O,CAAsC1G,IAE/CwI,kBAAmB9B,EAAKiC,qBAAqB7T,KAiC/C,OA/BAE,EAAMmC,MAAQ,CACZyR,cAAe,CACbR,6BAA8BA,EAC9BM,0BAA2BA,EAC3BG,gBAAiB/T,EAAMmC,YACvB6R,cAAehU,EAAMkD,UACrB+Q,gBAAiBjU,EAAM8B,YACvBoS,aAAclU,EAAMmB,SACpBgT,iBAAuC,IAAtBnU,EAAM8R,YACvBsC,mBAAoBpU,EAAMyF,eAC1B4O,gBAAiBrU,EAAM0F,YACvBnF,cAAe,EACf+T,uBAAuB,GAEzBxC,aAAa,EACbyC,0BAA2B9D,EAA8B+D,yBACzDC,wBAAyBhE,EAA8B+D,yBACvDnU,WAAY,EACZC,UAAW,EACXoU,2BAA4B,KAC5B3C,uBAAuB,GAGrB/R,EAAM0F,YAAc,IACtBxF,EAAMyU,kBAAoBzU,EAAM0U,wBAAwB5U,EAAOE,EAAMmC,QAGnErC,EAAMyF,eAAiB,IACzBvF,EAAM2U,mBAAqB3U,EAAM4U,yBAAyB9U,EAAOE,EAAMmC,QAGlEnC,EA2iCT,OA5pCA,EAAI/B,EAAU,SAAayT,EAAM7R,IAwHjC,EAAIhC,EAAa,SAAa6T,EAAM,CAAC,CACnCjS,IAAK,mBACLrC,MAAO,WACL,IAAIuD,EAAOtB,UAAUC,OAAS,QAAsB0E,IAAjB3E,UAAU,GAAmBA,UAAU,GAAK,GAC3EwV,EAAiBlU,EAAKmU,UACtBA,OAA+B,IAAnBD,EAA4B5U,KAAKH,MAAMiV,kBAAoBF,EACvEG,EAAmBrU,EAAKY,YACxBA,OAAmC,IAArByT,EAA8B/U,KAAKH,MAAMyF,eAAiByP,EACxEC,EAAgBtU,EAAKC,SACrBA,OAA6B,IAAlBqU,EAA2BhV,KAAKH,MAAM0F,YAAcyP,EAE/DC,EAAchW,EAAc,GAAIe,KAAKH,MAAO,CAC9CiV,kBAAmBD,EACnBvP,eAAgBhE,EAChBiE,YAAa5E,IAGf,MAAO,CACLT,WAAYF,KAAK2U,yBAAyBM,GAC1C9U,UAAWH,KAAKyU,wBAAwBQ,MAO3C,CACDzV,IAAK,qBACLrC,MAAO,WACL,OAAO6C,KAAKkC,MAAMyR,cAAcF,0BAA0ByB,iBAM3D,CACD1V,IAAK,uBACLrC,MAAO,WACL,OAAO6C,KAAKkC,MAAMyR,cAAcR,6BAA6B+B,iBAO9D,CACD1V,IAAK,oBACLrC,MAAO,SAA2BkE,GAChC,IAAI8T,EAAmB9T,EAAMnB,WACzBkV,OAAuC,IAArBD,EAA8B,EAAIA,EACpDE,EAAkBhU,EAAMlB,UACxBmV,OAAqC,IAApBD,EAA6B,EAAIA,EAItD,KAAIC,EAAiB,GAArB,CAKAtV,KAAKuV,uBAEL,IAAI1U,EAAcb,KAAKH,MACnB2V,EAAa3U,EAAY2U,WACzBC,EAAY5U,EAAY4U,UACxBtU,EAASN,EAAYM,OACrBS,EAAQf,EAAYe,MACpB+R,EAAgB3T,KAAKkC,MAAMyR,cAK3BvT,EAAgBuT,EAAcvT,cAC9BsV,EAAkB/B,EAAcF,0BAA0ByB,eAC1DS,EAAoBhC,EAAcR,6BAA6B+B,eAC/DhV,EAAaiE,KAAKC,IAAID,KAAKS,IAAI,EAAG+Q,EAAoB/T,EAAQxB,GAAgBgV,GAC9EjV,EAAYgE,KAAKC,IAAID,KAAKS,IAAI,EAAG8Q,EAAkBvU,EAASf,GAAgBkV,GAKhF,GAAItV,KAAKkC,MAAMhC,aAAeA,GAAcF,KAAKkC,MAAM/B,YAAcA,EAAW,CAG9E,IAEI+E,EAAW,CACbyM,aAAa,EACbyC,0BAJ8BlU,IAAeF,KAAKkC,MAAMhC,WAAaA,EAAaF,KAAKkC,MAAMhC,WAAaoQ,EAA8B+D,yBAA2B/D,EAA8BsF,0BAA4B5V,KAAKkC,MAAMkS,0BAKxOE,wBAJ4BnU,IAAcH,KAAKkC,MAAM/B,UAAYA,EAAYH,KAAKkC,MAAM/B,UAAYmQ,EAA8B+D,yBAA2B/D,EAA8BsF,0BAA4B5V,KAAKkC,MAAMoS,wBAKlOC,2BAA4B/C,GAGzBgE,IACHtQ,EAAS/E,UAAYA,GAGlBsV,IACHvQ,EAAShF,WAAaA,GAGxBgF,EAAS0M,uBAAwB,EACjC5R,KAAKoC,SAAS8C,GAGhBlF,KAAK6V,wBAAwB,CAC3B3V,WAAYA,EACZC,UAAWA,EACXwV,kBAAmBA,EACnBD,gBAAiBA,OAWpB,CACDlW,IAAK,gCACLrC,MAAO,SAAuCsE,GAC5C,IAAIH,EAAcG,EAAMH,YACpBX,EAAWc,EAAMd,SACrBX,KAAKkE,+BAAgF,kBAAxClE,KAAKkE,+BAA8CC,KAAKC,IAAIpE,KAAKkE,+BAAgC5C,GAAeA,EAC7JtB,KAAKqE,4BAA0E,kBAArCrE,KAAKqE,4BAA2CF,KAAKC,IAAIpE,KAAKqE,4BAA6B1D,GAAYA,IAQlJ,CACDnB,IAAK,kBACLrC,MAAO,WACL,IAAIoE,EAAevB,KAAKH,MACpB8B,EAAcJ,EAAaI,YAC3BX,EAAWO,EAAaP,SACxB2S,EAAgB3T,KAAKkC,MAAMyR,cAC/BA,EAAcR,6BAA6B2C,yBAAyBnU,EAAc,GAClFgS,EAAcF,0BAA0BqC,yBAAyB9U,EAAW,KAQ7E,CACDxB,IAAK,oBACLrC,MAAO,WACL,IAAI0E,EAAQzC,UAAUC,OAAS,QAAsB0E,IAAjB3E,UAAU,GAAmBA,UAAU,GAAK,GAC5E2W,EAAoBlU,EAAMP,YAC1BA,OAAoC,IAAtByU,EAA+B,EAAIA,EACjDC,EAAiBnU,EAAMlB,SACvBA,OAA8B,IAAnBqV,EAA4B,EAAIA,EAE3CtU,EAAe1B,KAAKH,MACpByF,EAAiB5D,EAAa4D,eAC9BC,EAAc7D,EAAa6D,YAC3BoO,EAAgB3T,KAAKkC,MAAMyR,cAC/BA,EAAcR,6BAA6B8C,UAAU3U,GACrDqS,EAAcF,0BAA0BwC,UAAUtV,GAIlDX,KAAKkW,yBAA2B5Q,GAAkB,IAAMtF,KAAKkC,MAAMkS,4BAA8B9D,EAA8B+D,yBAA2B/S,GAAegE,EAAiBhE,GAAegE,GACzMtF,KAAKmW,wBAA0B5Q,GAAe,IAAMvF,KAAKkC,MAAMoS,0BAA4BhE,EAA8B+D,yBAA2B1T,GAAY4E,EAAc5E,GAAY4E,GAG1LvF,KAAKoW,YAAc,GACnBpW,KAAKqW,WAAa,GAClBrW,KAAK6D,gBAMN,CACDrE,IAAK,eACLrC,MAAO,SAAsBmF,GAC3B,IAAIhB,EAAcgB,EAAMhB,YACpBX,EAAW2B,EAAM3B,SACjBgB,EAAc3B,KAAKH,MAAM8B,YACzB9B,EAAQG,KAAKH,MAGb8B,EAAc,QAAqBoC,IAAhBzC,GACrBtB,KAAKsW,mCAAmCrX,EAAc,GAAIY,EAAO,CAC/DyF,eAAgBhE,UAIHyC,IAAbpD,GACFX,KAAKuW,+BAA+BtX,EAAc,GAAIY,EAAO,CAC3D0F,YAAa5E,OAIlB,CACDnB,IAAK,oBACLrC,MAAO,WACL,IAAI4E,EAAe/B,KAAKH,MACpB2W,EAAmBzU,EAAayU,iBAChCrV,EAASY,EAAaZ,OACtBjB,EAAa6B,EAAa7B,WAC1BoF,EAAiBvD,EAAauD,eAC9BnF,EAAY4B,EAAa5B,UACzBoF,EAAcxD,EAAawD,YAC3B3D,EAAQG,EAAaH,MACrB+R,EAAgB3T,KAAKkC,MAAMyR,cAsB/B,GApBA3T,KAAKwU,kBAAoB,EACzBxU,KAAK0U,mBAAqB,EAG1B1U,KAAKmF,6BAIAwO,EAAcQ,uBACjBnU,KAAKoC,UAAS,SAAUgI,GACtB,IAAIqM,EAAcxX,EAAc,GAAImL,EAAW,CAC7CwH,uBAAuB,IAKzB,OAFA6E,EAAY9C,cAAcvT,cAAgBoW,IAC1CC,EAAY9C,cAAcQ,uBAAwB,EAC3CsC,KAIe,kBAAfvW,GAA2BA,GAAc,GAA0B,kBAAdC,GAA0BA,GAAa,EAAG,CACxG,IAAIsW,EAAchF,EAAKiF,gCAAgC,CACrDtM,UAAWpK,KAAKkC,MAChBhC,WAAYA,EACZC,UAAWA,IAGTsW,IACFA,EAAY7E,uBAAwB,EACpC5R,KAAKoC,SAASqU,IAKdzW,KAAKgT,sBAGHhT,KAAKgT,oBAAoB9S,aAAeF,KAAKkC,MAAMhC,aACrDF,KAAKgT,oBAAoB9S,WAAaF,KAAKkC,MAAMhC,YAG/CF,KAAKgT,oBAAoB7S,YAAcH,KAAKkC,MAAM/B,YACpDH,KAAKgT,oBAAoB7S,UAAYH,KAAKkC,MAAM/B,YAMpD,IAAIwW,EAAuBxV,EAAS,GAAKS,EAAQ,EAE7C0D,GAAkB,GAAKqR,GACzB3W,KAAKsW,qCAGH/Q,GAAe,GAAKoR,GACtB3W,KAAKuW,iCAIPvW,KAAK4W,8BAGL5W,KAAK6V,wBAAwB,CAC3B3V,WAAYA,GAAc,EAC1BC,UAAWA,GAAa,EACxBwV,kBAAmBhC,EAAcR,6BAA6B+B,eAC9DQ,gBAAiB/B,EAAcF,0BAA0ByB,iBAG3DlV,KAAK6W,wCAQN,CACDrX,IAAK,qBACLrC,MAAO,SAA4B2Z,EAAW1M,GAC5C,IAAI2M,EAAS/W,KAET8C,EAAe9C,KAAKH,MACpB2V,EAAa1S,EAAa0S,WAC1BC,EAAY3S,EAAa2S,UACzB9T,EAAcmB,EAAanB,YAC3BR,EAAS2B,EAAa3B,OACtBH,EAAW8B,EAAa9B,SACxB8T,EAAoBhS,EAAagS,kBACjCxP,EAAiBxC,EAAawC,eAC9BC,EAAczC,EAAayC,YAC3B3D,EAAQkB,EAAalB,MACrBK,EAAcjC,KAAKkC,MACnBhC,EAAa+B,EAAY/B,WACzBqU,EAA6BtS,EAAYsS,2BACzCpU,EAAY8B,EAAY9B,UACxBwT,EAAgB1R,EAAY0R,cAGhC3T,KAAKmF,6BAKL,IAAI6R,EAAwCrV,EAAc,GAA+B,IAA1BmV,EAAUnV,aAAqBX,EAAW,GAA4B,IAAvB8V,EAAU9V,SAMpHuT,IAA+B/C,KAG5BiE,GAAavV,GAAc,IAAMA,IAAeF,KAAKgT,oBAAoB9S,YAAc8W,KAC1FhX,KAAKgT,oBAAoB9S,WAAaA,IAGnCsV,GAAcrV,GAAa,IAAMA,IAAcH,KAAKgT,oBAAoB7S,WAAa6W,KACxFhX,KAAKgT,oBAAoB7S,UAAYA,IAOzC,IAAI8W,GAAiD,IAApBH,EAAUlV,OAAoC,IAArBkV,EAAU3V,SAAiBA,EAAS,GAAKS,EAAQ,EAqD3G,GAlDI5B,KAAKkW,0BACPlW,KAAKkW,0BAA2B,EAEhClW,KAAKsW,mCAAmCtW,KAAKH,SAE7C,EAAIwR,EAAwB,SAAa,CACvC6F,2BAA4BvD,EAAcR,6BAC1CgE,mBAAoBL,EAAUnV,YAC9ByV,iBAAkBN,EAAU9U,YAC5BqV,0BAA2BP,EAAUhC,kBACrCwC,sBAAuBR,EAAUxR,eACjCiS,aAAcT,EAAUlV,MACxB4V,aAActX,EACd4U,kBAAmBA,EACnB2C,cAAenS,EACf9C,KAAMZ,EACNqV,0BAA2BA,EAC3BS,0BAA2B,WACzB,OAAOX,EAAOT,mCAAmCS,EAAOlX,UAK1DG,KAAKmW,yBACPnW,KAAKmW,yBAA0B,EAE/BnW,KAAKuW,+BAA+BvW,KAAKH,SAEzC,EAAIwR,EAAwB,SAAa,CACvC6F,2BAA4BvD,EAAcF,0BAC1C0D,mBAAoBL,EAAU9V,SAC9BoW,iBAAkBN,EAAU/T,UAC5BsU,0BAA2BP,EAAUhC,kBACrCwC,sBAAuBR,EAAUvR,YACjCgS,aAAcT,EAAU3V,OACxBqW,aAAcrX,EACd2U,kBAAmBA,EACnB2C,cAAelS,EACf/C,KAAMrB,EACN8V,0BAA2BA,EAC3BS,0BAA2B,WACzB,OAAOX,EAAOR,+BAA+BQ,EAAOlX,UAM1DG,KAAK4W,8BAGD1W,IAAekK,EAAUlK,YAAcC,IAAciK,EAAUjK,UAAW,CAC5E,IAAIuV,EAAkB/B,EAAcF,0BAA0ByB,eAC1DS,EAAoBhC,EAAcR,6BAA6B+B,eAEnElV,KAAK6V,wBAAwB,CAC3B3V,WAAYA,EACZC,UAAWA,EACXwV,kBAAmBA,EACnBD,gBAAiBA,IAIrB1V,KAAK6W,wCAEN,CACDrX,IAAK,uBACLrC,MAAO,WACD6C,KAAK0R,iCACP,EAAIH,EAAyBoG,wBAAwB3X,KAAK0R,kCAU7D,CACDlS,IAAK,SACLrC,MAAO,WACL,IAAIuH,EAAe1E,KAAKH,MACpB+X,EAAqBlT,EAAakT,mBAClCpC,EAAa9Q,EAAa8Q,WAC1BC,EAAY/Q,EAAa+Q,UACzB9M,EAAYjE,EAAaiE,UACzBkP,EAAiBnT,EAAamT,eAC9BC,EAAgBpT,EAAaoT,cAC7BC,EAAiBrT,EAAaqT,eAC9B5W,EAASuD,EAAavD,OACtB6W,EAAKtT,EAAasT,GAClBC,EAAoBvT,EAAauT,kBACjCC,EAAOxT,EAAawT,KACpBhX,EAAQwD,EAAaxD,MACrB8H,EAAWtE,EAAasE,SACxBpH,EAAQ8C,EAAa9C,MACrBc,EAAe1C,KAAKkC,MACpByR,EAAgBjR,EAAaiR,cAC7B/B,EAAwBlP,EAAakP,sBAErCD,EAAc3R,KAAKmY,eAEnBC,EAAY,CACdC,UAAW,aACXC,UAAW,MACXnX,OAAQqU,EAAa,OAASrU,EAC9BqG,SAAU,WACV5F,MAAO6T,EAAY,OAAS7T,EAC5B2W,wBAAyB,QACzBC,WAAY,aAGV5G,IACF5R,KAAKoW,YAAc,IAKhBpW,KAAKkC,MAAMyP,aACd3R,KAAKyY,mBAIPzY,KAAK0Y,2BAA2B1Y,KAAKH,MAAOG,KAAKkC,OAEjD,IAAIyT,EAAoBhC,EAAcR,6BAA6B+B,eAC/DQ,EAAkB/B,EAAcF,0BAA0ByB,eAI1DyD,EAAwBjD,EAAkBvU,EAASwS,EAAcvT,cAAgB,EACjFwY,EAA0BjD,EAAoB/T,EAAQ+R,EAAcvT,cAAgB,EAEpFwY,IAA4B5Y,KAAK6Y,0BAA4BF,IAA0B3Y,KAAK8Y,yBAC9F9Y,KAAK6Y,yBAA2BD,EAChC5Y,KAAK8Y,uBAAyBH,EAC9B3Y,KAAK+Y,2BAA4B,GAQnCX,EAAUxQ,UAAY+N,EAAoBgD,GAAyB/W,EAAQ,SAAW,OACtFwW,EAAUvQ,UAAY6N,EAAkBkD,GAA2BzX,EAAS,SAAW,OACvF,IAAI6X,EAAoBhZ,KAAKiZ,mBACzBC,EAAqD,IAA7BF,EAAkB3Z,QAAgB8B,EAAS,GAAKS,EAAQ,EACpF,OAAO1D,EAAM+C,cAAc,OAAO,EAAIxD,EAAS,SAAa,CAC1D8C,IAAKP,KAAKmZ,2BACTtB,EAAgB,CACjB,aAAc7X,KAAKH,MAAM,cACzB,gBAAiBG,KAAKH,MAAM,iBAC5B8I,WAAW,EAAIsI,EAAK,SAAa,yBAA0BtI,GAC3DqP,GAAIA,EACJ3V,SAAUrC,KAAK4C,UACfsV,KAAMA,EACNhX,MAAOjC,EAAc,GAAImZ,EAAW,GAAIlX,GACxC8H,SAAUA,IACRgQ,EAAkB3Z,OAAS,GAAKnB,EAAM+C,cAAc,MAAO,CAC7D0H,UAAW,+CACXuP,KAAMJ,EACN5W,MAAOjC,EAAc,CACnB2C,MAAOgW,EAAqB,OAASjC,EACrCxU,OAAQuU,EACR0D,SAAUzD,EACV0D,UAAW3D,EACXnO,SAAU,SACV+R,cAAe3H,EAAc,OAAS,GACtCnK,SAAU,YACTuQ,IACFiB,GAAoBE,GAAyBjB,OAIjD,CACDzY,IAAK,6BACLrC,MAAO,WACL,IAAI0C,EAAQT,UAAUC,OAAS,QAAsB0E,IAAjB3E,UAAU,GAAmBA,UAAU,GAAKY,KAAKH,MACjFqC,EAAQ9C,UAAUC,OAAS,QAAsB0E,IAAjB3E,UAAU,GAAmBA,UAAU,GAAKY,KAAKkC,MACjFpB,EAAejB,EAAMiB,aACrByY,EAAoB1Z,EAAM0Z,kBAC1B5X,EAAc9B,EAAM8B,YACpBwB,EAA2BtD,EAAMsD,yBACjChC,EAAStB,EAAMsB,OACfqY,EAAsB3Z,EAAM2Z,oBAC5BC,EAAwB5Z,EAAM4Z,sBAC9BC,EAAmB7Z,EAAM6Z,iBACzB1Y,EAAWnB,EAAMmB,SACjBY,EAAQ/B,EAAM+B,MACd+X,EAAoB9Z,EAAM8Z,kBAC1BvF,EAA4BlS,EAAMkS,0BAClCE,EAA0BpS,EAAMoS,wBAChCX,EAAgBzR,EAAMyR,cACtBxT,EAAYH,KAAKwU,kBAAoB,EAAIxU,KAAKwU,kBAAoBtS,EAAM/B,UACxED,EAAaF,KAAK0U,mBAAqB,EAAI1U,KAAK0U,mBAAqBxS,EAAMhC,WAE3EyR,EAAc3R,KAAKmY,aAAatY,EAAOqC,GAI3C,GAFAlC,KAAKiZ,mBAAqB,GAEtB9X,EAAS,GAAKS,EAAQ,EAAG,CAC3B,IAAIgY,EAAuBjG,EAAcR,6BAA6B0G,oBAAoB,CACxFC,cAAelY,EACfmY,OAAQ7Z,IAEN8Z,EAAoBrG,EAAcF,0BAA0BoG,oBAAoB,CAClFC,cAAe3Y,EACf4Y,OAAQ5Z,IAEN8Z,EAA6BtG,EAAcR,6BAA6B+G,oBAAoB,CAC9FJ,cAAelY,EACfmY,OAAQ7Z,IAENia,EAA2BxG,EAAcF,0BAA0ByG,oBAAoB,CACzFJ,cAAe3Y,EACf4Y,OAAQ5Z,IAGVH,KAAKqS,0BAA4BuH,EAAqBQ,MACtDpa,KAAKuS,yBAA2BqH,EAAqBS,KACrDra,KAAK6S,uBAAyBmH,EAAkBI,MAChDpa,KAAK+S,sBAAwBiH,EAAkBK,KAC/C,IAAIC,EAAwBb,EAAsB,CAChDnB,UAAW,aACXlF,UAAWzR,EACX4Y,mBAAoBf,EACpBgB,gBAAiBpG,EACjBqG,WAAkD,kBAA/Bb,EAAqBQ,MAAqBR,EAAqBQ,MAAQ,EAC1FM,UAAgD,kBAA9Bd,EAAqBS,KAAoBT,EAAqBS,MAAQ,IAEtFM,EAAqBlB,EAAsB,CAC7CnB,UAAW,WACXlF,UAAWpS,EACXuZ,mBAAoBb,EACpBc,gBAAiBlG,EACjBmG,WAA+C,kBAA5BT,EAAkBI,MAAqBJ,EAAkBI,MAAQ,EACpFM,UAA6C,kBAA3BV,EAAkBK,KAAoBL,EAAkBK,MAAQ,IAGhFjI,EAAmBkI,EAAsBM,mBACzCtI,EAAkBgI,EAAsBO,kBACxCjI,EAAgB+H,EAAmBC,mBACnC9H,EAAe6H,EAAmBE,kBAEtC,GAAI1X,EAA0B,CAK5B,IAAKA,EAAyBoI,iBAC5B,IAAK,IAAI5K,EAAWiS,EAAejS,GAAYmS,EAAcnS,IAC3D,IAAKwC,EAAyBwI,IAAIhL,EAAU,GAAI,CAC9CyR,EAAmB,EACnBE,EAAkB3Q,EAAc,EAChC,MASN,IAAKwB,EAAyBqI,gBAC5B,IAAK,IAAIlK,EAAc8Q,EAAkB9Q,GAAegR,EAAiBhR,IACvE,IAAK6B,EAAyBwI,IAAI,EAAGrK,GAAc,CACjDsR,EAAgB,EAChBE,EAAe9R,EAAW,EAC1B,OAMRhB,KAAKiZ,mBAAqBM,EAAkB,CAC1CuB,UAAW9a,KAAKqW,WAChBvV,aAAcA,EACdqS,6BAA8BQ,EAAcR,6BAC5Cf,iBAAkBA,EAClBE,gBAAiBA,EACjBnP,yBAA0BA,EAC1B8W,2BAA4BA,EAC5BtI,YAAaA,EACbgI,kBAAmBA,EACnBvY,OAAQpB,KACRyT,0BAA2BE,EAAcF,0BACzCb,cAAeA,EACfE,aAAcA,EACd5S,WAAYA,EACZC,UAAWA,EACX4a,WAAY/a,KAAKoW,YACjB+D,yBAA0BA,EAC1BP,qBAAsBA,EACtBI,kBAAmBA,IAGrBha,KAAKiS,kBAAoBG,EACzBpS,KAAKmS,iBAAmBG,EACxBtS,KAAKyS,eAAiBG,EACtB5S,KAAK2S,cAAgBG,KASxB,CACDtT,IAAK,uBACLrC,MAAO,WACL,IAAI6d,EAA6Bhb,KAAKH,MAAMmb,2BAExChb,KAAK0R,iCACP,EAAIH,EAAyBoG,wBAAwB3X,KAAK0R,gCAG5D1R,KAAK0R,gCAAiC,EAAIH,EAAyB0J,yBAAyBjb,KAAKkb,6BAA8BF,KAEhI,CACDxb,IAAK,6BAMLrC,MAAO,WACL,GAAmD,kBAAxC6C,KAAKkE,gCAA2F,kBAArClE,KAAKqE,4BAA0C,CACnH,IAAI/C,EAActB,KAAKkE,+BACnBvD,EAAWX,KAAKqE,4BACpBrE,KAAKkE,+BAAiC,KACtClE,KAAKqE,4BAA8B,KACnCrE,KAAK8E,kBAAkB,CACrBxD,YAAaA,EACbX,SAAUA,OAIf,CACDnB,IAAK,0BACLrC,MAAO,SAAiC0F,GACtC,IAAIsY,EAASnb,KAETE,EAAa2C,EAAM3C,WACnBC,EAAY0C,EAAM1C,UAClBwV,EAAoB9S,EAAM8S,kBAC1BD,EAAkB7S,EAAM6S,gBAE5B1V,KAAKob,kBAAkB,CACrBtJ,SAAU,SAAkBhO,GAC1B,IAAI5D,EAAa4D,EAAM5D,WACnBC,EAAY2D,EAAM3D,UAClBkb,EAAeF,EAAOtb,MACtBsB,EAASka,EAAala,QAG1BkB,EAFegZ,EAAahZ,UAEnB,CACPiZ,aAAcna,EACdoa,YAHUF,EAAazZ,MAIvB4Z,aAAc9F,EACdxV,WAAYA,EACZC,UAAWA,EACXsb,YAAa9F,KAGjB5D,QAAS,CACP7R,WAAYA,EACZC,UAAWA,OAIhB,CACDX,IAAK,eACLrC,MAAO,WACL,IAAI0C,EAAQT,UAAUC,OAAS,QAAsB0E,IAAjB3E,UAAU,GAAmBA,UAAU,GAAKY,KAAKH,MACjFqC,EAAQ9C,UAAUC,OAAS,QAAsB0E,IAAjB3E,UAAU,GAAmBA,UAAU,GAAKY,KAAKkC,MAGrF,OAAOlF,OAAO0e,eAAezb,KAAKJ,EAAO,eAAiB8b,QAAQ9b,EAAM8R,aAAegK,QAAQzZ,EAAMyP,eAEtG,CACDnS,IAAK,sCACLrC,MAAO,WACL,GAAI6C,KAAK+Y,0BAA2B,CAClC,IAAIpW,EAA4B3C,KAAKH,MAAM8C,0BAC3C3C,KAAK+Y,2BAA4B,EACjCpW,EAA0B,CACxBJ,WAAYvC,KAAK6Y,yBAA2B,EAC5CrW,KAAMxC,KAAKkC,MAAMyR,cAAcvT,cAC/BqC,SAAUzC,KAAK8Y,uBAAyB,OAI7C,CACDtZ,IAAK,mBAMLrC,MAAO,SAA0BoH,GAC/B,IAAIrE,EAAaqE,EAAMrE,WACnBC,EAAYoE,EAAMpE,UAElBsW,EAAchF,EAAKiF,gCAAgC,CACrDtM,UAAWpK,KAAKkC,MAChBhC,WAAYA,EACZC,UAAWA,IAGTsW,IACFA,EAAY7E,uBAAwB,EACpC5R,KAAKoC,SAASqU,MAGjB,CACDjX,IAAK,2BACLrC,MAAO,WACL,IAAI0C,EAAQT,UAAUC,OAAS,QAAsB0E,IAAjB3E,UAAU,GAAmBA,UAAU,GAAKY,KAAKH,MACjFqC,EAAQ9C,UAAUC,OAAS,QAAsB0E,IAAjB3E,UAAU,GAAmBA,UAAU,GAAKY,KAAKkC,MACrF,OAAOuP,EAAKkD,yBAAyB9U,EAAOqC,KAE7C,CACD1C,IAAK,qCACLrC,MAAO,WACL,IAAI0C,EAAQT,UAAUC,OAAS,QAAsB0E,IAAjB3E,UAAU,GAAmBA,UAAU,GAAKY,KAAKH,MACjFqC,EAAQ9C,UAAUC,OAAS,QAAsB0E,IAAjB3E,UAAU,GAAmBA,UAAU,GAAKY,KAAKkC,MAEjFuU,EAAchF,EAAKmK,2CAA2C/b,EAAOqC,GAErEuU,IACFA,EAAY7E,uBAAwB,EACpC5R,KAAKoC,SAASqU,MAGjB,CACDjX,IAAK,0BACLrC,MAAO,WACL,IAAI0C,EAAQT,UAAUC,OAAS,QAAsB0E,IAAjB3E,UAAU,GAAmBA,UAAU,GAAKY,KAAKH,MACjFqC,EAAQ9C,UAAUC,OAAS,QAAsB0E,IAAjB3E,UAAU,GAAmBA,UAAU,GAAKY,KAAKkC,MACrF,OAAOuP,EAAKgD,wBAAwB5U,EAAOqC,KAE5C,CACD1C,IAAK,mBACLrC,MAAO,WACL,IAAI4d,EAAa/a,KAAKoW,YAClB0E,EAAY9a,KAAKqW,WACjBsD,EAAoB3Z,KAAKH,MAAM8Z,kBAOnC3Z,KAAKqW,WAAa,GAClBrW,KAAKoW,YAAc,GAEnB,IAAK,IAAIzV,EAAWX,KAAKyS,eAAgB9R,GAAYX,KAAK2S,cAAehS,IACvE,IAAK,IAAIW,EAActB,KAAKiS,kBAAmB3Q,GAAetB,KAAKmS,iBAAkB7Q,IAAe,CAClG,IAAI9B,EAAM,GAAGkN,OAAO/L,EAAU,KAAK+L,OAAOpL,GAC1CtB,KAAKoW,YAAY5W,GAAOub,EAAWvb,GAE/Bma,IACF3Z,KAAKqW,WAAW7W,GAAOsb,EAAUtb,OAKxC,CACDA,IAAK,iCACLrC,MAAO,WACL,IAAI0C,EAAQT,UAAUC,OAAS,QAAsB0E,IAAjB3E,UAAU,GAAmBA,UAAU,GAAKY,KAAKH,MACjFqC,EAAQ9C,UAAUC,OAAS,QAAsB0E,IAAjB3E,UAAU,GAAmBA,UAAU,GAAKY,KAAKkC,MAEjFuU,EAAchF,EAAKoK,uCAAuChc,EAAOqC,GAEjEuU,IACFA,EAAY7E,uBAAwB,EACpC5R,KAAKoC,SAASqU,OAGhB,CAAC,CACHjX,IAAK,2BACLrC,MAAO,SAAkCgN,EAAWC,GAClD,IAAIlF,EAAW,GAEe,IAA1BiF,EAAUxI,aAA8C,IAAzByI,EAAUlK,YAA2C,IAAvBiK,EAAUnJ,UAA0C,IAAxBoJ,EAAUjK,WACrG+E,EAAShF,WAAa,EACtBgF,EAAS/E,UAAY,IAEZgK,EAAUjK,aAAekK,EAAUlK,YAAciK,EAAU7E,eAAiB,GAAK6E,EAAUhK,YAAciK,EAAUjK,WAAagK,EAAU5E,YAAc,IACjKvI,OAAO8e,OAAO5W,EAAUuM,EAAKiF,gCAAgC,CAC3DtM,UAAWA,EACXlK,WAAYiK,EAAUjK,WACtBC,UAAWgK,EAAUhK,aAIzB,IAgCI4b,EACAC,EAjCArI,EAAgBvJ,EAAUuJ,cAkF9B,OAhFAzO,EAAS0M,uBAAwB,EAE7BzH,EAAUnI,cAAgB2R,EAAcC,iBAAmBzJ,EAAUpH,YAAc4Q,EAAcE,gBAEnG3O,EAAS0M,uBAAwB,GAGnC+B,EAAcR,6BAA6B8I,UAAU,CACnD7I,UAAWjJ,EAAUxI,YACrB4R,kBAAmB9B,EAAK+B,wBAAwBrJ,GAChDkJ,eAAgB5B,EAAK6B,gBAAgBnJ,EAAUnI,eAEjD2R,EAAcF,0BAA0BwI,UAAU,CAChD7I,UAAWjJ,EAAUnJ,SACrBuS,kBAAmB9B,EAAKiC,qBAAqBvJ,GAC7CkJ,eAAgB5B,EAAK6B,gBAAgBnJ,EAAUpH,aAGX,IAAlC4Q,EAAcG,iBAAwD,IAA/BH,EAAcI,eACvDJ,EAAcG,gBAAkB,EAChCH,EAAcI,aAAe,GAI3B5J,EAAUqL,aAAwC,IAA1BrL,EAAUwH,cAA2D,IAAlCgC,EAAcK,iBAC3EhX,OAAO8e,OAAO5W,EAAU,CACtByM,aAAa,KAMjB,EAAIT,EAAkD,SAAa,CACjEkC,UAAWO,EAAcG,gBACzBoI,SAAmD,kBAAlCvI,EAAcC,gBAA+BD,EAAcC,gBAAkB,KAC9FuI,wBAAyB,WACvB,OAAOxI,EAAcR,6BAA6B8C,UAAU,IAE9DmG,6BAA8BjS,EAC9BkS,eAAgBlS,EAAUxI,YAC1B2a,aAA+C,kBAA1BnS,EAAUnI,YAA2BmI,EAAUnI,YAAc,KAClFua,kBAAmBpS,EAAU7E,eAC7BmS,cAAe9D,EAAcM,mBAC7BuI,mCAAoC,WAClCT,EAActK,EAAKmK,2CAA2CzR,EAAWC,OAG7E,EAAI8G,EAAkD,SAAa,CACjEkC,UAAWO,EAAcI,aACzBmI,SAAiD,kBAAhCvI,EAAcE,cAA6BF,EAAcE,cAAgB,KAC1FsI,wBAAyB,WACvB,OAAOxI,EAAcF,0BAA0BwC,UAAU,IAE3DmG,6BAA8BjS,EAC9BkS,eAAgBlS,EAAUnJ,SAC1Bsb,aAA6C,kBAAxBnS,EAAUpH,UAAyBoH,EAAUpH,UAAY,KAC9EwZ,kBAAmBpS,EAAU5E,YAC7BkS,cAAe9D,EAAcO,gBAC7BsI,mCAAoC,WAClCR,EAAcvK,EAAKoK,uCAAuC1R,EAAWC,MAGzEuJ,EAAcG,gBAAkB3J,EAAUxI,YAC1CgS,EAAcC,gBAAkBzJ,EAAUnI,YAC1C2R,EAAcK,iBAA4C,IAA1B7J,EAAUwH,YAC1CgC,EAAcI,aAAe5J,EAAUnJ,SACvC2S,EAAcE,cAAgB1J,EAAUpH,UACxC4Q,EAAcM,mBAAqB9J,EAAU7E,eAC7CqO,EAAcO,gBAAkB/J,EAAU5E,YAE1CoO,EAAcvT,cAAgB+J,EAAUqM,wBAEJzS,IAAhC4P,EAAcvT,eAChBuT,EAAcQ,uBAAwB,EACtCR,EAAcvT,cAAgB,GAE9BuT,EAAcQ,uBAAwB,EAGxCjP,EAASyO,cAAgBA,EAClB1U,EAAc,GAAIiG,EAAU,GAAI6W,EAAa,GAAIC,KAEzD,CACDxc,IAAK,0BACLrC,MAAO,SAAiC0C,GACtC,MAAoC,kBAAtBA,EAAMmC,YAA2BnC,EAAMmC,YAAcnC,EAAM4c,sBAE1E,CACDjd,IAAK,uBACLrC,MAAO,SAA8B0C,GACnC,MAAkC,kBAApBA,EAAMkD,UAAyBlD,EAAMkD,UAAYlD,EAAM6c,mBAEtE,CACDld,IAAK,kCAMLrC,MAAO,SAAyCwf,GAC9C,IAAIvS,EAAYuS,EAAMvS,UAClBlK,EAAayc,EAAMzc,WACnBC,EAAYwc,EAAMxc,UAClB+E,EAAW,CACbqP,2BAA4B/C,GAa9B,MAV0B,kBAAftR,GAA2BA,GAAc,IAClDgF,EAASkP,0BAA4BlU,EAAakK,EAAUlK,WAAaoQ,EAA8B+D,yBAA2B/D,EAA8BsF,0BAChK1Q,EAAShF,WAAaA,GAGC,kBAAdC,GAA0BA,GAAa,IAChD+E,EAASoP,wBAA0BnU,EAAYiK,EAAUjK,UAAYmQ,EAA8B+D,yBAA2B/D,EAA8BsF,0BAC5J1Q,EAAS/E,UAAYA,GAGG,kBAAfD,GAA2BA,GAAc,GAAKA,IAAekK,EAAUlK,YAAmC,kBAAdC,GAA0BA,GAAa,GAAKA,IAAciK,EAAUjK,UAClK+E,EAGF,KAER,CACD1F,IAAK,kBACLrC,MAAO,SAAyBA,GAC9B,MAAwB,oBAAVA,EAAuBA,EAAQ,WAC3C,OAAOA,KAGV,CACDqC,IAAK,2BACLrC,MAAO,SAAkCgN,EAAWC,GAClD,IAAIzI,EAAcwI,EAAUxI,YACxBR,EAASgJ,EAAUhJ,OACnB2T,EAAoB3K,EAAU2K,kBAC9BxP,EAAiB6E,EAAU7E,eAC3B1D,EAAQuI,EAAUvI,MAClB1B,EAAakK,EAAUlK,WACvByT,EAAgBvJ,EAAUuJ,cAE9B,GAAIhS,EAAc,EAAG,CACnB,IAAIib,EAAcjb,EAAc,EAC5Bkb,EAAcvX,EAAiB,EAAIsX,EAAczY,KAAKC,IAAIwY,EAAatX,GACvEoQ,EAAkB/B,EAAcF,0BAA0ByB,eAC1D4H,EAAgBnJ,EAAcQ,uBAAyBuB,EAAkBvU,EAASwS,EAAcvT,cAAgB,EACpH,OAAOuT,EAAcR,6BAA6B4J,yBAAyB,CACzEC,MAAOlI,EACPgF,cAAelY,EAAQkb,EACvBG,cAAe/c,EACf2c,YAAaA,IAIjB,OAAO,IAER,CACDrd,IAAK,6CACLrC,MAAO,SAAoDgN,EAAWC,GACpE,IAAIlK,EAAakK,EAAUlK,WAEvBgd,EAAuBzL,EAAKkD,yBAAyBxK,EAAWC,GAEpE,MAAoC,kBAAzB8S,GAAqCA,GAAwB,GAAKhd,IAAegd,EACnFzL,EAAKiF,gCAAgC,CAC1CtM,UAAWA,EACXlK,WAAYgd,EACZ/c,WAAY,IAIT,KAER,CACDX,IAAK,0BACLrC,MAAO,SAAiCgN,EAAWC,GACjD,IAAIjJ,EAASgJ,EAAUhJ,OACnBH,EAAWmJ,EAAUnJ,SACrB8T,EAAoB3K,EAAU2K,kBAC9BvP,EAAc4E,EAAU5E,YACxB3D,EAAQuI,EAAUvI,MAClBzB,EAAYiK,EAAUjK,UACtBwT,EAAgBvJ,EAAUuJ,cAE9B,GAAI3S,EAAW,EAAG,CAChB,IAAImc,EAAWnc,EAAW,EACtB6b,EAActX,EAAc,EAAI4X,EAAWhZ,KAAKC,IAAI+Y,EAAU5X,GAC9DoQ,EAAoBhC,EAAcR,6BAA6B+B,eAC/D4H,EAAgBnJ,EAAcQ,uBAAyBwB,EAAoB/T,EAAQ+R,EAAcvT,cAAgB,EACrH,OAAOuT,EAAcF,0BAA0BsJ,yBAAyB,CACtEC,MAAOlI,EACPgF,cAAe3Y,EAAS2b,EACxBG,cAAe9c,EACf0c,YAAaA,IAIjB,OAAO,IAER,CACDrd,IAAK,yCACLrC,MAAO,SAAgDgN,EAAWC,GAChE,IAAIjK,EAAYiK,EAAUjK,UAEtBid,EAAsB3L,EAAKgD,wBAAwBtK,EAAWC,GAElE,MAAmC,kBAAxBgT,GAAoCA,GAAuB,GAAKjd,IAAcid,EAChF3L,EAAKiF,gCAAgC,CAC1CtM,UAAWA,EACXlK,YAAa,EACbC,UAAWid,IAIR,OAGJ3L,EA7pCT,CA8pCEvT,EAAMmM,gBAAgB,EAAIpM,EAAgB,SAAagO,EAAQ,YAAqD,MAkLlHC,IACJ,EAAIjO,EAAgB,SAAawT,EAAM,eAAgB,CACrD,aAAc,OACd,iBAAiB,EACjBmG,oBAAoB,EACpBpC,YAAY,EACZC,WAAW,EACX8D,kBAAmBlJ,EAAyB,QAC5CyH,cAAe,WACfC,eAAgB,GAChB0E,oBAAqB,IACrBC,iBAAkB,GAClBlG,iBAAkBlF,EAAc,QAChC2G,kBAv2Ce,WACf,OAAO,MAu2CP5V,SAAU,aACVM,0BAA2B,aAC3B0C,kBAAmB,aACnBmU,oBAAqB,EACrBC,sBAAuBnJ,EAA6B,QACpDoJ,iBAAkB,GAClBxB,KAAM,OACN8C,2BA33C0C,IA43C1ClG,kBAAmB,OACnBxP,gBAAiB,EACjBC,aAAc,EACdrE,MAAO,GACP8H,SAAU,EACV2Q,mBAAmB,KAErB,EAAIxb,EAAuBoM,UAAUkH,GACrC,IAAIlU,EAAWkU,EACfvU,EAAO,QAAcK,G,kCCl8CrBP,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAO,QAKP,SAA2DwD,GACzD,IAAI0S,EAAY1S,EAAK0S,UACjB8I,EAAWxb,EAAKwb,SAChBC,EAA0Bzb,EAAKyb,wBAC/BC,EAA+B1b,EAAK0b,6BACpCC,EAAiB3b,EAAK2b,eACtBC,EAAe5b,EAAK4b,aACpBC,EAAoB7b,EAAK6b,kBACzB9E,EAAgB/W,EAAK+W,cACrB+E,EAAqC9b,EAAK8b,mCAI1CpJ,IAAciJ,IAAuC,kBAAbH,GAAiD,kBAAjBI,GAA8BJ,IAAaI,KACrHH,EAAwBC,GAGpB3E,GAAiB,GAAKA,IAAkB8E,GAC1CC,O,kCC1BN,IAAI1f,EAAyBC,EAAQ,IAErCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAO,aAAc,EAErB,IAAIS,EAAmBb,EAAuBC,EAAQ,MAElDa,EAAgBd,EAAuBC,EAAQ,MAE/CkB,EAAmBnB,EAAuBC,EAAQ,MAOlDsgB,GALStgB,EAAQ,KAOrB,WAKE,SAASsgB,EAA2B3c,GAClC,IAAI0S,EAAY1S,EAAK0S,UACjBC,EAAiB3S,EAAK2S,eACtBE,EAAoB7S,EAAK6S,mBAC7B,EAAI5V,EAAgB,SAAaqC,KAAMqd,IACvC,EAAIpf,EAAgB,SAAa+B,KAAM,2BAA4B,KACnE,EAAI/B,EAAgB,SAAa+B,KAAM,sBAAuB,IAC9D,EAAI/B,EAAgB,SAAa+B,KAAM,qBAAsB,IAC7D,EAAI/B,EAAgB,SAAa+B,KAAM,kBAAc,IACrD,EAAI/B,EAAgB,SAAa+B,KAAM,uBAAmB,IAC1D,EAAI/B,EAAgB,SAAa+B,KAAM,0BAAsB,GAC7DA,KAAKsd,gBAAkBjK,EACvBrT,KAAKud,WAAanK,EAClBpT,KAAKwd,mBAAqBjK,EAqQ5B,OAlQA,EAAI3V,EAAa,SAAayf,EAA4B,CAAC,CACzD7d,IAAK,qBACLrC,MAAO,WACL,OAAO,IAER,CACDqC,IAAK,YACLrC,MAAO,SAAmBkE,GACxB,IAAI+R,EAAY/R,EAAM+R,UAClBG,EAAoBlS,EAAMkS,kBAC1BF,EAAiBhS,EAAMgS,eAC3BrT,KAAKud,WAAanK,EAClBpT,KAAKwd,mBAAqBjK,EAC1BvT,KAAKsd,gBAAkBjK,IAExB,CACD7T,IAAK,eACLrC,MAAO,WACL,OAAO6C,KAAKud,aAEb,CACD/d,IAAK,uBACLrC,MAAO,WACL,OAAO6C,KAAKwd,qBAEb,CACDhe,IAAK,uBACLrC,MAAO,WACL,OAAO6C,KAAKyd,qBAEb,CACDje,IAAK,sBACLrC,MAAO,WACL,OAAO,IAOR,CACDqC,IAAK,2BACLrC,MAAO,SAAkC2E,GACvC,GAAIA,EAAQ,GAAKA,GAAS9B,KAAKud,WAC7B,MAAMG,MAAM,mBAAmBhR,OAAO5K,EAAO,4BAA4B4K,OAAO1M,KAAKud,aAGvF,GAAIzb,EAAQ9B,KAAKyd,mBAIf,IAHA,IAAIE,EAAkC3d,KAAK4d,uCACvC7D,EAAS4D,EAAgC5D,OAAS4D,EAAgCnb,KAE7ErD,EAAIa,KAAKyd,mBAAqB,EAAGte,GAAK2C,EAAO3C,IAAK,CACzD,IAAIqD,EAAOxC,KAAKsd,gBAAgB,CAC9Bxb,MAAO3C,IAKT,QAAa4E,IAATvB,GAAsBqb,MAAMrb,GAC9B,MAAMkb,MAAM,kCAAkChR,OAAOvN,EAAG,cAAcuN,OAAOlK,IAC3D,OAATA,GACTxC,KAAK8d,yBAAyB3e,GAAK,CACjC4a,OAAQA,EACRvX,KAAM,GAERxC,KAAK+d,kBAAoBjc,IAEzB9B,KAAK8d,yBAAyB3e,GAAK,CACjC4a,OAAQA,EACRvX,KAAMA,GAERuX,GAAUvX,EACVxC,KAAKyd,mBAAqB3b,GAKhC,OAAO9B,KAAK8d,yBAAyBhc,KAEtC,CACDtC,IAAK,uCACLrC,MAAO,WACL,OAAO6C,KAAKyd,oBAAsB,EAAIzd,KAAK8d,yBAAyB9d,KAAKyd,oBAAsB,CAC7F1D,OAAQ,EACRvX,KAAM,KAST,CACDhD,IAAK,eACLrC,MAAO,WACL,IAAIwgB,EAAkC3d,KAAK4d,uCAI3C,OAH+BD,EAAgC5D,OAAS4D,EAAgCnb,MAC/ExC,KAAKud,WAAavd,KAAKyd,mBAAqB,GACfzd,KAAKwd,qBAe5D,CACDhe,IAAK,2BACLrC,MAAO,SAAkCsE,GACvC,IAAIuc,EAAcvc,EAAMub,MACpBA,OAAwB,IAAhBgB,EAAyB,OAASA,EAC1ClE,EAAgBrY,EAAMqY,cACtBmD,EAAgBxb,EAAMwb,cACtBJ,EAAcpb,EAAMob,YAExB,GAAI/C,GAAiB,EACnB,OAAO,EAGT,IAGImE,EAHAC,EAAQle,KAAK8V,yBAAyB+G,GACtCsB,EAAYD,EAAMnE,OAClBqE,EAAYD,EAAYrE,EAAgBoE,EAAM1b,KAGlD,OAAQwa,GACN,IAAK,QACHiB,EAAcE,EACd,MAEF,IAAK,MACHF,EAAcG,EACd,MAEF,IAAK,SACHH,EAAcE,GAAarE,EAAgBoE,EAAM1b,MAAQ,EACzD,MAEF,QACEyb,EAAc9Z,KAAKS,IAAIwZ,EAAWja,KAAKC,IAAI+Z,EAAWlB,IAI1D,IAAIoB,EAAYre,KAAKkV,eACrB,OAAO/Q,KAAKS,IAAI,EAAGT,KAAKC,IAAIia,EAAYvE,EAAemE,MAExD,CACDze,IAAK,sBACLrC,MAAO,SAA6B4N,GAClC,IAAI+O,EAAgB/O,EAAO+O,cACvBC,EAAShP,EAAOgP,OAGpB,GAAkB,IAFF/Z,KAAKkV,eAGnB,MAAO,GAGT,IAAIiJ,EAAYpE,EAASD,EAErBM,EAAQpa,KAAKse,iBAAiBvE,GAE9BmE,EAAQle,KAAK8V,yBAAyBsE,GAC1CL,EAASmE,EAAMnE,OAASmE,EAAM1b,KAG9B,IAFA,IAAI6X,EAAOD,EAEJL,EAASoE,GAAa9D,EAAOra,KAAKud,WAAa,GACpDlD,IACAN,GAAU/Z,KAAK8V,yBAAyBuE,GAAM7X,KAGhD,MAAO,CACL4X,MAAOA,EACPC,KAAMA,KAST,CACD7a,IAAK,YACLrC,MAAO,SAAmB2E,GACxB9B,KAAKyd,mBAAqBtZ,KAAKC,IAAIpE,KAAKyd,mBAAoB3b,EAAQ,KAErE,CACDtC,IAAK,gBACLrC,MAAO,SAAuBohB,EAAMC,EAAKzE,GACvC,KAAOyE,GAAOD,GAAM,CAClB,IAAIE,EAASD,EAAMra,KAAKua,OAAOH,EAAOC,GAAO,GACzCvB,EAAgBjd,KAAK8V,yBAAyB2I,GAAQ1E,OAE1D,GAAIkD,IAAkBlD,EACpB,OAAO0E,EACExB,EAAgBlD,EACzByE,EAAMC,EAAS,EACNxB,EAAgBlD,IACzBwE,EAAOE,EAAS,GAIpB,OAAID,EAAM,EACDA,EAAM,EAEN,IAGV,CACDhf,IAAK,qBACLrC,MAAO,SAA4B2E,EAAOiY,GAGxC,IAFA,IAAI4E,EAAW,EAER7c,EAAQ9B,KAAKud,YAAcvd,KAAK8V,yBAAyBhU,GAAOiY,OAASA,GAC9EjY,GAAS6c,EACTA,GAAY,EAGd,OAAO3e,KAAK4e,cAAcza,KAAKC,IAAItC,EAAO9B,KAAKud,WAAa,GAAIpZ,KAAKua,MAAM5c,EAAQ,GAAIiY,KASxF,CACDva,IAAK,mBACLrC,MAAO,SAA0B4c,GAC/B,GAAI8D,MAAM9D,GACR,MAAM2D,MAAM,kBAAkBhR,OAAOqN,EAAQ,eAK/CA,EAAS5V,KAAKS,IAAI,EAAGmV,GACrB,IAAI4D,EAAkC3d,KAAK4d,uCACvCiB,EAAoB1a,KAAKS,IAAI,EAAG5E,KAAKyd,oBAEzC,OAAIE,EAAgC5D,QAAUA,EAErC/Z,KAAK4e,cAAcC,EAAmB,EAAG9E,GAKzC/Z,KAAK8e,mBAAmBD,EAAmB9E,OAIjDsD,EAvRT,IA0RAngB,EAAO,QAAcmgB,G,kCC9SrBrgB,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQ6hB,uBAAoB,EAsB5B7hB,EAAQ6hB,kBAVgB,WACtB,MARyB,qBAAXC,QAILA,OAAOC,OAPY,SADC,O,kCCJ/BjiB,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAO,QAKP,WACE,IAAIgiB,IAAiB9f,UAAUC,OAAS,QAAsB0E,IAAjB3E,UAAU,KAAmBA,UAAU,GAChF+f,EAAgB,GACpB,OAAO,SAAUze,GACf,IAAIoR,EAAWpR,EAAKoR,SAChBC,EAAUrR,EAAKqR,QACftT,EAAOzB,OAAOyB,KAAKsT,GACnBqN,GAAkBF,GAAkBzgB,EAAK4gB,OAAM,SAAU7f,GAC3D,IAAIrC,EAAQ4U,EAAQvS,GACpB,OAAOgN,MAAM8S,QAAQniB,GAASA,EAAMkC,OAAS,EAAIlC,GAAS,KAExDoiB,EAAe9gB,EAAKY,SAAWrC,OAAOyB,KAAK0gB,GAAe9f,QAAUZ,EAAK+gB,MAAK,SAAUhgB,GAC1F,IAAIigB,EAAcN,EAAc3f,GAC5BrC,EAAQ4U,EAAQvS,GACpB,OAAOgN,MAAM8S,QAAQniB,GAASsiB,EAAYC,KAAK,OAASviB,EAAMuiB,KAAK,KAAOD,IAAgBtiB,KAE5FgiB,EAAgBpN,EAEZqN,GAAkBG,GACpBzN,EAASC,M,kCC3Bf,IAAIjV,EAAyBC,EAAQ,IAErCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAO,QAMP,SAAiCwD,GAC/B,IAAIwb,EAAWxb,EAAKwb,SAChBhF,EAA6BxW,EAAKwW,2BAClCC,EAAqBzW,EAAKyW,mBAC1BC,EAAmB1W,EAAK0W,iBACxBC,EAA4B3W,EAAK2W,0BACjCC,EAAwB5W,EAAK4W,sBAC7BC,EAAe7W,EAAK6W,aACpBC,EAAe9W,EAAK8W,aACpB1C,EAAoBpU,EAAKoU,kBACzB2C,EAAgB/W,EAAK+W,cACrBjV,EAAO9B,EAAK8B,KACZyU,EAA4BvW,EAAKuW,0BACjCS,EAA4BhX,EAAKgX,0BACjCtE,EAAY8D,EAA2ByI,eACvCC,EAAmBnI,GAAiB,GAAKA,EAAgBrE,EACzDyM,EAAiBrd,IAAS+U,GAAgBN,IAA8BG,GAAwC,kBAAb8E,GAAyBA,IAAa9E,EAGzIwI,IAAqBC,GAAkB/K,IAAsBuC,GAA6BI,IAAkBH,GAC9GI,EAA0BD,IAEhBmI,GAAoBxM,EAAY,IAAM5Q,EAAO+U,GAAgBnE,EAAY+D,IAK/EK,EAAeN,EAA2BhC,eAAiB1S,GAC7DkV,EAA0BtE,EAAY,IAhCHtW,EAAuBC,EAAQ,MAE3DA,EAAQ,M,kCCTrB,IAAID,EAAyBC,EAAQ,IAErCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQ4iB,mCAAqC5iB,EAAQ+d,wBAA0B/d,EAAQya,4BAAyB,EAEhH,IAAIoI,EAAkBhjB,EAAQ,MAEbD,EAAuBC,EAAQ,KAKhDG,EAAQ4iB,mCAHyE,KAgBjF5iB,EAAQya,uBAXqB,SAAgCqI,GAC3D,OAAO,EAAID,EAAgBE,KAAKD,EAAMhI,KAiCxC9a,EAAQ+d,wBArBsB,SAAiCnJ,EAAUoO,GACvE,IAAI9F,EAEJ+F,QAAQC,UAAUC,MAAK,WACrBjG,EAAQkG,KAAKC,SAGf,IAQIP,EAAQ,CACVhI,IAAI,EAAI+H,EAAgBS,MATZ,SAASC,IACjBH,KAAKC,MAAQnG,GAAS8F,EACxBpO,EAAS7R,OAET+f,EAAMhI,IAAK,EAAI+H,EAAgBS,KAAKC,OAOxC,OAAOT,I,kCC1CT,IAAIU,EALJ1jB,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQ+iB,IAAM/iB,EAAQsjB,SAAM,EAc5B,IAAIG,GATFD,EADoB,qBAAX1B,OACHA,OACmB,qBAAT4B,KACVA,KAEA,IAKUC,uBAAyBH,EAAII,6BAA+BJ,EAAIK,0BAA4BL,EAAIM,wBAA0BN,EAAIO,yBAA2B,SAAUnP,GACnL,OAAO4O,EAAIQ,WAAWpP,EAAU,IAAO,KAGrCqP,EAAST,EAAIU,sBAAwBV,EAAIW,4BAA8BX,EAAIY,yBAA2BZ,EAAIa,uBAAyBb,EAAIc,wBAA0B,SAAUxJ,GAC7K0I,EAAIe,aAAazJ,IAGfwI,EAAMG,EACVzjB,EAAQsjB,IAAMA,EACd,IAAIP,EAAMkB,EACVjkB,EAAQ+iB,IAAMA,G,kCC5BdjjB,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAO,QAmBP,SAAsCwD,GACpC,IAAI0S,EAAY1S,EAAK0S,UACjBmH,EAAqB7Z,EAAK6Z,mBAC1BC,EAAkB9Z,EAAK8Z,gBACvBC,EAAa/Z,EAAK+Z,WAClBC,EAAYha,EAAKga,UAMrB,OAFAH,EAAqBpW,KAAKS,IAAI,EAAG2V,GArBJ,IAuBzBC,EACK,CACLI,mBAAoBzW,KAAKS,IAAI,EAAG6V,EAAa,GAC7CI,kBAAmB1W,KAAKC,IAAIgP,EAAY,EAAGsH,EAAYH,IAGlD,CACLK,mBAAoBzW,KAAKS,IAAI,EAAG6V,EAAaF,GAC7CM,kBAAmB1W,KAAKC,IAAIgP,EAAY,EAAGsH,EAAY,KArC7Dxd,EAAQwkB,0BAA4BxkB,EAAQykB,4BAA8BzkB,EAAQmX,yBAA2BnX,EAAQ0Y,+BAA4B,EAEpI7Y,EAAQ,KAGrBG,EAAQ0Y,2BADyB,EAGjC1Y,EAAQmX,yBADuB,EAG/BnX,EAAQykB,4BAD0B,aAQlCzkB,EAAQwkB,0BANwB,Y,kCCmBhC,SAASE,EAA4BC,EAAQC,GAC3C,GAA4B,kBAAjBD,EAAOjgB,MAEhB,OAAOigB,EAAOjgB,MACT,GAA4B,kBAAjBigB,EAAOjgB,MAAoB,CAE3C,IAAImgB,EAQR,SAA6BC,EAAiBF,GAC5C,OAAOG,WAAWD,GAAmB,IAAMF,EATdI,CAAoBL,EAAOjgB,MAAOkgB,GAC7D,OAAO3d,KAAKS,IAAImd,EAAsBF,EAAOxS,UAAY,GAGzD,OAAO,KA3CXrS,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQilB,gBACR,SAAyBrgB,EAAOsgB,EAASN,GACvC,IAAID,EAASO,EAAQtgB,GAEjBF,EAAQggB,EAA4BC,EAAQC,GAEhD,GAAIlgB,EACF,OAAOA,EAGT,IAAIygB,EAAsBD,EAAQE,QAAO,SAAUC,EAAQC,GACzD,OAAOD,GAAUX,EAA4BY,EAAGV,IAAe,KAC9D,GAGCW,EAAuBL,EAAQxjB,QAAO,SAAU4jB,GAClD,MAA0B,kBAAZA,EAAE5gB,OAAyC,kBAAZ4gB,EAAE5gB,SAE7C8gB,GAAoCZ,EAAaO,GAAuBI,EAAqBpjB,OAC7FsjB,EAAwBF,EAAqB7jB,QAAO,SAAU4jB,GAChE,OAAOA,EAAEnT,SAAWqT,EAAmCF,EAAEnT,SAAW,KAElEuT,EAAoBD,EAAsBL,QAAO,SAAUC,EAAQC,GACrE,OAAOD,EAASC,EAAEnT,WACjB,GACCwT,EAAiBf,EAAaO,EAAsBO,EAExD,OAAOze,KAAKS,IAAIid,EAAOxS,UAAY,EAAGwT,GAAkBJ,EAAqBpjB,OAASsjB,EAAsBtjB,W,kCC9B9G,IAAIvC,EAAyBC,EAAQ,IAEjCS,EAA0BT,EAAQ,KAEtCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAO,aAAc,EAErB,IAoBI+O,EAAQC,EApBRvO,EAAmBb,EAAuBC,EAAQ,MAElDa,EAAgBd,EAAuBC,EAAQ,MAE/Cc,EAA8Bf,EAAuBC,EAAQ,MAE7DoP,EAAmBrP,EAAuBC,EAAQ,MAElDgB,EAA0BjB,EAAuBC,EAAQ,MAEzDiB,EAAalB,EAAuBC,EAAQ,MAE5CkB,EAAmBnB,EAAuBC,EAAQ,MAElDmB,EAAQV,EAAwBT,EAAQ,IAExC+lB,EAAuBhmB,EAAuBC,EAAQ,OAEzCD,EAAuBC,EAAQ,KAIhD,SAASuB,EAAQC,EAAQC,GAAkB,IAAIC,EAAOzB,OAAOyB,KAAKF,GAAS,GAAIvB,OAAO0B,sBAAuB,CAAE,IAAIC,EAAU3B,OAAO0B,sBAAsBH,GAAaC,IAAgBG,EAAUA,EAAQC,QAAO,SAAUC,GAAO,OAAO7B,OAAO8B,yBAAyBP,EAAQM,GAAKzB,eAAgBqB,EAAKM,KAAKC,MAAMP,EAAME,GAAY,OAAOF,EAE9U,SAASQ,EAAcC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAAyB,MAAhBF,UAAUD,GAAaC,UAAUD,GAAK,GAAQA,EAAI,EAAKb,EAAQgB,GAAQ,GAAMC,SAAQ,SAAUC,IAAO,EAAIvB,EAAgB,SAAaiB,EAAQM,EAAKF,EAAOE,OAAsBxC,OAAOyC,0BAA6BzC,OAAO0C,iBAAiBR,EAAQlC,OAAOyC,0BAA0BH,IAAmBhB,EAAQgB,GAAQC,SAAQ,SAAUC,GAAOxC,OAAOC,eAAeiC,EAAQM,EAAKxC,OAAO8B,yBAAyBQ,EAAQE,OAAe,OAAON,EAE9gB,IAAI6jB,GAAa7W,EAAQD,EAEzB,SAAU+W,GAGR,SAASD,IACP,IAAIjlB,EAEAiC,GAEJ,EAAIpC,EAAgB,SAAaqC,KAAM+iB,GAEvC,IAAK,IAAIzW,EAAOlN,UAAUC,OAAQkN,EAAO,IAAIC,MAAMF,GAAOG,EAAO,EAAGA,EAAOH,EAAMG,IAC/EF,EAAKE,GAAQrN,UAAUqN,GAiDzB,OA9CA1M,GAAQ,EAAIlC,EAA2B,SAAamC,MAAOlC,GAAmB,EAAIqO,EAAgB,SAAa4W,IAAY9iB,KAAKjB,MAAMlB,EAAkB,CAACkC,MAAM0M,OAAOH,MACtK,EAAItO,EAAgB,UAAa,EAAIF,EAAuB,SAAagC,GAAQ,QAAS,CACxFoB,OAAQpB,EAAMF,MAAMgM,eAAiB,EACrCjK,MAAO7B,EAAMF,MAAMiM,cAAgB,KAErC,EAAI7N,EAAgB,UAAa,EAAIF,EAAuB,SAAagC,GAAQ,mBAAe,IAChG,EAAI9B,EAAgB,UAAa,EAAIF,EAAuB,SAAagC,GAAQ,kBAAc,IAC/F,EAAI9B,EAAgB,UAAa,EAAIF,EAAuB,SAAagC,GAAQ,eAAW,IAC5F,EAAI9B,EAAgB,UAAa,EAAIF,EAAuB,SAAagC,GAAQ,4BAAwB,IACzG,EAAI9B,EAAgB,UAAa,EAAIF,EAAuB,SAAagC,GAAQ,aAAa,WAC5F,IAAIc,EAAcd,EAAMF,MACpBojB,EAAgBpiB,EAAYoiB,cAC5BC,EAAeriB,EAAYqiB,aAC3BC,EAAWtiB,EAAYsiB,SAE3B,GAAIpjB,EAAMqjB,YAAa,CAIrB,IAAIjiB,EAASpB,EAAMqjB,YAAYjV,cAAgB,EAC3CvM,EAAQ7B,EAAMqjB,YAAYhV,aAAe,EAEzClN,GADMnB,EAAMsjB,SAAWrE,QACXsE,iBAAiBvjB,EAAMqjB,cAAgB,GACnDG,EAAcC,SAAStiB,EAAMqiB,YAAa,KAAO,EACjDE,EAAeD,SAAStiB,EAAMuiB,aAAc,KAAO,EACnDC,EAAaF,SAAStiB,EAAMwiB,WAAY,KAAO,EAC/CC,EAAgBH,SAAStiB,EAAMyiB,cAAe,KAAO,EACrDC,EAAYziB,EAASuiB,EAAaC,EAClCE,EAAWjiB,EAAQ2hB,EAAcE,IAEhCR,GAAiBljB,EAAMmC,MAAMf,SAAWyiB,IAAcV,GAAgBnjB,EAAMmC,MAAMN,QAAUiiB,KAC/F9jB,EAAMqC,SAAS,CACbjB,OAAQA,EAASuiB,EAAaC,EAC9B/hB,MAAOA,EAAQ2hB,EAAcE,IAG/BN,EAAS,CACPhiB,OAAQA,EACRS,MAAOA,UAKf,EAAI3D,EAAgB,UAAa,EAAIF,EAAuB,SAAagC,GAAQ,WAAW,SAAU+jB,GACpG/jB,EAAMgkB,WAAaD,KAEd/jB,EAgFT,OA3IA,EAAI/B,EAAU,SAAa+kB,EAAWC,IA8DtC,EAAIplB,EAAa,SAAamlB,EAAW,CAAC,CACxCvjB,IAAK,oBACLrC,MAAO,WACL,IAAI6mB,EAAQhkB,KAAKH,MAAMmkB,MAEnBhkB,KAAK+jB,YAAc/jB,KAAK+jB,WAAWE,YAAcjkB,KAAK+jB,WAAWE,WAAWpW,eAAiB7N,KAAK+jB,WAAWE,WAAWpW,cAAcC,aAAe9N,KAAK+jB,WAAWE,sBAAsBjkB,KAAK+jB,WAAWE,WAAWpW,cAAcC,YAAYC,cAIlP/N,KAAKojB,YAAcpjB,KAAK+jB,WAAWE,WACnCjkB,KAAKqjB,QAAUrjB,KAAK+jB,WAAWE,WAAWpW,cAAcC,YAGxD9N,KAAK8iB,sBAAuB,EAAIA,EAAoB,SAAakB,EAAOhkB,KAAKqjB,SAE7ErjB,KAAK8iB,qBAAqBoB,kBAAkBlkB,KAAKojB,YAAapjB,KAAKmkB,WAEnEnkB,KAAKmkB,eAGR,CACD3kB,IAAK,uBACLrC,MAAO,WACD6C,KAAK8iB,sBAAwB9iB,KAAKojB,aACpCpjB,KAAK8iB,qBAAqBsB,qBAAqBpkB,KAAKojB,YAAapjB,KAAKmkB,aAGzE,CACD3kB,IAAK,SACLrC,MAAO,WACL,IAAIoE,EAAevB,KAAKH,MACpByN,EAAW/L,EAAa+L,SACxB3E,EAAYpH,EAAaoH,UACzBsa,EAAgB1hB,EAAa0hB,cAC7BC,EAAe3hB,EAAa2hB,aAC5BhiB,EAAQK,EAAaL,MACrBe,EAAcjC,KAAKkC,MACnBf,EAASc,EAAYd,OACrBS,EAAQK,EAAYL,MAIpByiB,EAAa,CACf9c,SAAU,WAER+c,EAAc,GAyBlB,OAvBKrB,IACHoB,EAAWljB,OAAS,EACpBmjB,EAAYnjB,OAASA,GAGlB+hB,IACHmB,EAAWziB,MAAQ,EACnB0iB,EAAY1iB,MAAQA,GAgBf1D,EAAM+C,cAAc,MAAO,CAChC0H,UAAWA,EACXpI,IAAKP,KAAKukB,QACVrjB,MAAOjC,EAAc,GAAIolB,EAAY,GAAInjB,IACxCoM,EAASgX,QAGTvB,EA5IT,CA6IE7kB,EAAMsmB,YAAY,EAAIvmB,EAAgB,SAAagO,EAAQ,YAAqD,MA2B9GC,GACJhP,EAAO,QAAc6lB,GACrB,EAAI9kB,EAAgB,SAAa8kB,EAAW,eAAgB,CAC1DI,SAAU,aACVF,eAAe,EACfC,cAAc,EACdhiB,MAAO,M,mCCrNT,YAEAlE,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAO,QAcP,SAAmC8mB,EAAOS,GAExC,IAAIpB,EAGFA,EADwB,qBAAfoB,EACCA,EACiB,qBAAXzF,OACNA,OACe,qBAAT4B,KACNA,KAEA8D,EAGZ,IAAIC,EAA0C,qBAArBtB,EAAQuB,UAA4BvB,EAAQuB,SAASD,YAE9E,IAAKA,EAAa,CAChB,IAAIE,EAAe,WACjB,IAAIrE,EAAM6C,EAAQxC,uBAAyBwC,EAAQtC,0BAA4BsC,EAAQvC,6BAA+B,SAAUgE,GAC9H,OAAOzB,EAAQnC,WAAW4D,EAAI,KAGhC,OAAO,SAAUA,GACf,OAAOtE,EAAIsE,IANI,GAUfC,EAAc,WAChB,IAAI5D,EAASkC,EAAQjC,sBAAwBiC,EAAQ/B,yBAA2B+B,EAAQhC,4BAA8BgC,EAAQ5B,aAC9H,OAAO,SAAUzJ,GACf,OAAOmJ,EAAOnJ,IAHA,GAOdgN,EAAgB,SAAuBhY,GACzC,IAAIiY,EAAWjY,EAAQkY,mBACnBC,EAASF,EAASG,kBAClBC,EAAWJ,EAASK,iBACpBC,EAAcJ,EAAOC,kBACzBC,EAASnlB,WAAamlB,EAAS5J,YAC/B4J,EAASllB,UAAYklB,EAAS7J,aAC9B+J,EAAYrkB,MAAMU,MAAQujB,EAAO/W,YAAc,EAAI,KACnDmX,EAAYrkB,MAAMC,OAASgkB,EAAOhX,aAAe,EAAI,KACrDgX,EAAOjlB,WAAailB,EAAO1J,YAC3B0J,EAAOhlB,UAAYglB,EAAO3J,cAOxBgK,EAAiB,SAAwBC,GAE3C,KAAIA,EAAEvmB,OAAOyJ,WAAmD,oBAA/B8c,EAAEvmB,OAAOyJ,UAAU+c,SAA0BD,EAAEvmB,OAAOyJ,UAAU+c,QAAQ,oBAAsB,GAAKD,EAAEvmB,OAAOyJ,UAAU+c,QAAQ,kBAAoB,GAAnL,CAIA,IAAI1Y,EAAUhN,KACdglB,EAAchlB,MAEVA,KAAK2lB,eACPZ,EAAY/kB,KAAK2lB,eAGnB3lB,KAAK2lB,cAAgBd,GAAa,YAjBhB,SAAuB7X,GACzC,OAAOA,EAAQoB,aAAepB,EAAQ4Y,eAAehkB,OAASoL,EAAQmB,cAAgBnB,EAAQ4Y,eAAezkB,QAiBvG0kB,CAAc7Y,KAChBA,EAAQ4Y,eAAehkB,MAAQoL,EAAQoB,YACvCpB,EAAQ4Y,eAAezkB,OAAS6L,EAAQmB,aAExCnB,EAAQ8Y,oBAAoBvmB,SAAQ,SAAUulB,GAC5CA,EAAG7kB,KAAK+M,EAASyY,YAQrBM,GAAY,EACZC,EAAiB,GACjBC,EAAsB,iBACtBC,EAAc,kBAAkBC,MAAM,KACtCC,EAAc,uEAAuED,MAAM,KAC3FE,EAAM,GAEJC,EAAMjD,EAAQuB,SAAS3jB,cAAc,eAMzC,QAJgC8C,IAA5BuiB,EAAIplB,MAAMqlB,gBACZR,GAAY,IAGI,IAAdA,EACF,IAAK,IAAI5mB,EAAI,EAAGA,EAAI+mB,EAAY7mB,OAAQF,IACtC,QAAoD4E,IAAhDuiB,EAAIplB,MAAMglB,EAAY/mB,GAAK,iBAAgC,CAC7DknB,EAAMH,EAAY/mB,GAClB6mB,EAAiB,IAAMK,EAAIG,cAAgB,IAC3CP,EAAsBG,EAAYjnB,GAClC4mB,GAAY,EACZ,MAKR,IAAIQ,EAAgB,aAChBE,EAAqB,IAAMT,EAAiB,aAAeO,EAAgB,gDAC3EG,EAAiBV,EAAiB,kBAAoBO,EAAgB,KAuF5E,MAAO,CACLrC,kBA9DsB,SAA2BlX,EAAS8X,GAC1D,GAAIH,EACF3X,EAAQ2X,YAAY,WAAYG,OAC3B,CACL,IAAK9X,EAAQkY,mBAAoB,CAC/B,IAAIyB,EAAM3Z,EAAQa,cAEd+Y,EAAevD,EAAQC,iBAAiBtW,GAExC4Z,GAAyC,UAAzBA,EAAapf,WAC/BwF,EAAQ9L,MAAMsG,SAAW,YAjCd,SAAsBmf,GACvC,IAAKA,EAAIE,eAAe,uBAAwB,CAE9C,IAAIC,GAAOL,GAA0C,IAAM,uBAAyBC,GAAkC,IAA5G,6VACNK,EAAOJ,EAAII,MAAQJ,EAAIK,qBAAqB,QAAQ,GACpD9lB,EAAQylB,EAAI1lB,cAAc,SAC9BC,EAAM8W,GAAK,sBACX9W,EAAM+lB,KAAO,WAEA,MAATjD,GACF9iB,EAAMgmB,aAAa,QAASlD,GAG1B9iB,EAAMimB,WACRjmB,EAAMimB,WAAWC,QAAUN,EAE3B5lB,EAAMmmB,YAAYV,EAAIW,eAAeR,IAGvCC,EAAKM,YAAYnmB,IAiBfqmB,CAAaZ,GACb3Z,EAAQ4Y,eAAiB,GACzB5Y,EAAQ8Y,oBAAsB,IAC7B9Y,EAAQkY,mBAAqByB,EAAI1lB,cAAc,QAAQ0H,UAAY,kBACpEqE,EAAQkY,mBAAmBsC,UAAY,oFACvCxa,EAAQqa,YAAYra,EAAQkY,oBAC5BF,EAAchY,GACdA,EAAQya,iBAAiB,SAAUjC,GAAgB,GAG/CS,IACFjZ,EAAQkY,mBAAmBwC,sBAAwB,SAA2BjC,GACxEA,EAAEc,eAAiBA,GACrBvB,EAAchY,IAIlBA,EAAQkY,mBAAmBuC,iBAAiBxB,EAAqBjZ,EAAQkY,mBAAmBwC,wBAIhG1a,EAAQ8Y,oBAAoB/mB,KAAK+lB,KA6BnCV,qBAzByB,SAA8BpX,EAAS8X,GAChE,GAAIH,EACF3X,EAAQ2a,YAAY,WAAY7C,QAIhC,GAFA9X,EAAQ8Y,oBAAoB8B,OAAO5a,EAAQ8Y,oBAAoBJ,QAAQZ,GAAK,IAEvE9X,EAAQ8Y,oBAAoBzmB,OAAQ,CACvC2N,EAAQ6a,oBAAoB,SAAUrC,GAAgB,GAElDxY,EAAQkY,mBAAmBwC,wBAC7B1a,EAAQkY,mBAAmB2C,oBAAoB5B,EAAqBjZ,EAAQkY,mBAAmBwC,uBAE/F1a,EAAQkY,mBAAmBwC,sBAAwB,MAGrD,IACE1a,EAAQkY,oBAAsBlY,EAAQ8a,YAAY9a,EAAQkY,oBAC1D,MAAOO,W,uCC7MjB,IAAIsC,EAAoB,EAAQ,MAE5BC,EAAkB,EAAQ,MAE1BC,EAA6B,EAAQ,KAErCC,EAAoB,EAAQ,MAMhCvd,EAAOzN,QAJP,SAA4BirB,GAC1B,OAAOJ,EAAkBI,IAAQH,EAAgBG,IAAQF,EAA2BE,IAAQD,M,qBCT9F,IAAIE,EAAmB,EAAQ,KAM/Bzd,EAAOzN,QAJP,SAA4BirB,GAC1B,GAAI3b,MAAM8S,QAAQ6I,GAAM,OAAOC,EAAiBD,K,mBCClDxd,EAAOzN,QAJP,SAA0BmrB,GACxB,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYvrB,OAAOqrB,GAAO,OAAO7b,MAAMgc,KAAKH,K,mBCG1F1d,EAAOzN,QAJP,WACE,MAAM,IAAIurB,UAAU,0I,qBCDtB,IAAIC,EAAiB,EAAQ,MAEzBC,EAAuB,EAAQ,MAE/BV,EAA6B,EAAQ,KAErCW,EAAkB,EAAQ,MAM9Bje,EAAOzN,QAJP,SAAwBirB,EAAKhpB,GAC3B,OAAOupB,EAAeP,IAAQQ,EAAqBR,EAAKhpB,IAAM8oB,EAA2BE,EAAKhpB,IAAMypB,M,mBCLtGje,EAAOzN,QAJP,SAAyBirB,GACvB,GAAI3b,MAAM8S,QAAQ6I,GAAM,OAAOA,I,mBC0BjCxd,EAAOzN,QA3BP,SAA+BirB,EAAKhpB,GAClC,GAAsB,qBAAXmpB,QAA4BA,OAAOC,YAAYvrB,OAAOmrB,GAAjE,CACA,IAAIU,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKjlB,EAET,IACE,IAAK,IAAiCklB,EAA7B/Y,EAAKiY,EAAIG,OAAOC,cAAmBO,GAAMG,EAAK/Y,EAAGgZ,QAAQC,QAChEN,EAAK9pB,KAAKkqB,EAAG9rB,QAETgC,GAAK0pB,EAAKxpB,SAAWF,GAH8C2pB,GAAK,IAK9E,MAAOM,GACPL,GAAK,EACLC,EAAKI,EACL,QACA,IACON,GAAsB,MAAhB5Y,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAI6Y,EAAI,MAAMC,GAIlB,OAAOH,K,mBCpBTle,EAAOzN,QAJP,WACE,MAAM,IAAIurB,UAAU,+I,qTCEP,SAASY,EAAkD3oB,GACxE,IAAI0S,EAAY1S,EAAK0S,UACjB8I,EAAWxb,EAAKwb,SAChBC,EAA0Bzb,EAAKyb,wBAC/BC,EAA+B1b,EAAK0b,6BACpCC,EAAiB3b,EAAK2b,eACtBC,EAAe5b,EAAK4b,aACpBC,EAAoB7b,EAAK6b,kBACzB9E,EAAgB/W,EAAK+W,cACrB+E,EAAqC9b,EAAK8b,mCAI1CpJ,IAAciJ,IAAuC,kBAAbH,GAAiD,kBAAjBI,GAA8BJ,IAAaI,KACrHH,EAAwBC,GAGpB3E,GAAiB,GAAKA,IAAkB8E,GAC1CC,K,sBCdFa,G,MAEJ,WAKE,SAASA,EAA2B3c,GAClC,IAAI0S,EAAY1S,EAAK0S,UACjBC,EAAiB3S,EAAK2S,eACtBE,EAAoB7S,EAAK6S,kBAE7B+V,IAAgBtpB,KAAMqd,GAEtBkM,IAAgBvpB,KAAM,2BAA4B,IAElDupB,IAAgBvpB,KAAM,sBAAuB,GAE7CupB,IAAgBvpB,KAAM,qBAAsB,GAE5CupB,IAAgBvpB,KAAM,kBAAc,GAEpCupB,IAAgBvpB,KAAM,uBAAmB,GAEzCupB,IAAgBvpB,KAAM,0BAAsB,GAE5CA,KAAKsd,gBAAkBjK,EACvBrT,KAAKud,WAAanK,EAClBpT,KAAKwd,mBAAqBjK,EAsQ5B,OAnQAiW,IAAanM,EAA4B,CAAC,CACxC7d,IAAK,qBACLrC,MAAO,WACL,OAAO,IAER,CACDqC,IAAK,YACLrC,MAAO,SAAmBkE,GACxB,IAAI+R,EAAY/R,EAAM+R,UAClBG,EAAoBlS,EAAMkS,kBAC1BF,EAAiBhS,EAAMgS,eAC3BrT,KAAKud,WAAanK,EAClBpT,KAAKwd,mBAAqBjK,EAC1BvT,KAAKsd,gBAAkBjK,IAExB,CACD7T,IAAK,eACLrC,MAAO,WACL,OAAO6C,KAAKud,aAEb,CACD/d,IAAK,uBACLrC,MAAO,WACL,OAAO6C,KAAKwd,qBAEb,CACDhe,IAAK,uBACLrC,MAAO,WACL,OAAO6C,KAAKyd,qBAEb,CACDje,IAAK,sBACLrC,MAAO,WACL,OAAO,IAOR,CACDqC,IAAK,2BACLrC,MAAO,SAAkC2E,GACvC,GAAIA,EAAQ,GAAKA,GAAS9B,KAAKud,WAC7B,MAAMG,MAAM,mBAAmBhR,OAAO5K,EAAO,4BAA4B4K,OAAO1M,KAAKud,aAGvF,GAAIzb,EAAQ9B,KAAKyd,mBAIf,IAHA,IAAIE,EAAkC3d,KAAK4d,uCACvC7D,EAAS4D,EAAgC5D,OAAS4D,EAAgCnb,KAE7ErD,EAAIa,KAAKyd,mBAAqB,EAAGte,GAAK2C,EAAO3C,IAAK,CACzD,IAAIqD,EAAOxC,KAAKsd,gBAAgB,CAC9Bxb,MAAO3C,IAKT,QAAa4E,IAATvB,GAAsBqb,MAAMrb,GAC9B,MAAMkb,MAAM,kCAAkChR,OAAOvN,EAAG,cAAcuN,OAAOlK,IAC3D,OAATA,GACTxC,KAAK8d,yBAAyB3e,GAAK,CACjC4a,OAAQA,EACRvX,KAAM,GAERxC,KAAK+d,kBAAoBjc,IAEzB9B,KAAK8d,yBAAyB3e,GAAK,CACjC4a,OAAQA,EACRvX,KAAMA,GAERuX,GAAUvX,EACVxC,KAAKyd,mBAAqB3b,GAKhC,OAAO9B,KAAK8d,yBAAyBhc,KAEtC,CACDtC,IAAK,uCACLrC,MAAO,WACL,OAAO6C,KAAKyd,oBAAsB,EAAIzd,KAAK8d,yBAAyB9d,KAAKyd,oBAAsB,CAC7F1D,OAAQ,EACRvX,KAAM,KAST,CACDhD,IAAK,eACLrC,MAAO,WACL,IAAIwgB,EAAkC3d,KAAK4d,uCAI3C,OAH+BD,EAAgC5D,OAAS4D,EAAgCnb,MAC/ExC,KAAKud,WAAavd,KAAKyd,mBAAqB,GACfzd,KAAKwd,qBAe5D,CACDhe,IAAK,2BACLrC,MAAO,SAAkCsE,GACvC,IAAIuc,EAAcvc,EAAMub,MACpBA,OAAwB,IAAhBgB,EAAyB,OAASA,EAC1ClE,EAAgBrY,EAAMqY,cACtBmD,EAAgBxb,EAAMwb,cACtBJ,EAAcpb,EAAMob,YAExB,GAAI/C,GAAiB,EACnB,OAAO,EAGT,IAGImE,EAHAC,EAAQle,KAAK8V,yBAAyB+G,GACtCsB,EAAYD,EAAMnE,OAClBqE,EAAYD,EAAYrE,EAAgBoE,EAAM1b,KAGlD,OAAQwa,GACN,IAAK,QACHiB,EAAcE,EACd,MAEF,IAAK,MACHF,EAAcG,EACd,MAEF,IAAK,SACHH,EAAcE,GAAarE,EAAgBoE,EAAM1b,MAAQ,EACzD,MAEF,QACEyb,EAAc9Z,KAAKS,IAAIwZ,EAAWja,KAAKC,IAAI+Z,EAAWlB,IAI1D,IAAIoB,EAAYre,KAAKkV,eACrB,OAAO/Q,KAAKS,IAAI,EAAGT,KAAKC,IAAIia,EAAYvE,EAAemE,MAExD,CACDze,IAAK,sBACLrC,MAAO,SAA6B4N,GAClC,IAAI+O,EAAgB/O,EAAO+O,cACvBC,EAAShP,EAAOgP,OAGpB,GAAkB,IAFF/Z,KAAKkV,eAGnB,MAAO,GAGT,IAAIiJ,EAAYpE,EAASD,EAErBM,EAAQpa,KAAKse,iBAAiBvE,GAE9BmE,EAAQle,KAAK8V,yBAAyBsE,GAC1CL,EAASmE,EAAMnE,OAASmE,EAAM1b,KAG9B,IAFA,IAAI6X,EAAOD,EAEJL,EAASoE,GAAa9D,EAAOra,KAAKud,WAAa,GACpDlD,IACAN,GAAU/Z,KAAK8V,yBAAyBuE,GAAM7X,KAGhD,MAAO,CACL4X,MAAOA,EACPC,KAAMA,KAST,CACD7a,IAAK,YACLrC,MAAO,SAAmB2E,GACxB9B,KAAKyd,mBAAqBtZ,KAAKC,IAAIpE,KAAKyd,mBAAoB3b,EAAQ,KAErE,CACDtC,IAAK,gBACLrC,MAAO,SAAuBohB,EAAMC,EAAKzE,GACvC,KAAOyE,GAAOD,GAAM,CAClB,IAAIE,EAASD,EAAMra,KAAKua,OAAOH,EAAOC,GAAO,GACzCvB,EAAgBjd,KAAK8V,yBAAyB2I,GAAQ1E,OAE1D,GAAIkD,IAAkBlD,EACpB,OAAO0E,EACExB,EAAgBlD,EACzByE,EAAMC,EAAS,EACNxB,EAAgBlD,IACzBwE,EAAOE,EAAS,GAIpB,OAAID,EAAM,EACDA,EAAM,EAEN,IAGV,CACDhf,IAAK,qBACLrC,MAAO,SAA4B2E,EAAOiY,GAGxC,IAFA,IAAI4E,EAAW,EAER7c,EAAQ9B,KAAKud,YAAcvd,KAAK8V,yBAAyBhU,GAAOiY,OAASA,GAC9EjY,GAAS6c,EACTA,GAAY,EAGd,OAAO3e,KAAK4e,cAAcza,KAAKC,IAAItC,EAAO9B,KAAKud,WAAa,GAAIpZ,KAAKua,MAAM5c,EAAQ,GAAIiY,KASxF,CACDva,IAAK,mBACLrC,MAAO,SAA0B4c,GAC/B,GAAI8D,MAAM9D,GACR,MAAM2D,MAAM,kBAAkBhR,OAAOqN,EAAQ,eAK/CA,EAAS5V,KAAKS,IAAI,EAAGmV,GACrB,IAAI4D,EAAkC3d,KAAK4d,uCACvCiB,EAAoB1a,KAAKS,IAAI,EAAG5E,KAAKyd,oBAEzC,OAAIE,EAAgC5D,QAAUA,EAErC/Z,KAAK4e,cAAcC,EAAmB,EAAG9E,GAKzC/Z,KAAK8e,mBAAmBD,EAAmB9E,OAKjDsD,EAhST,ICEW0B,EAAoB,WAC7B,MARyB,qBAAXC,QAILA,OAAOC,OAPY,SADC,MCU3BwK,EAEJ,WACE,SAASA,EAAkC/oB,GACzC,IAAIgpB,EAAqBhpB,EAAKipB,cAC1BA,OAAuC,IAAvBD,EAAgC3K,IAAsB2K,EACtE3e,EAAS6e,IAAyBlpB,EAAM,CAAC,kBAE7C4oB,IAAgBtpB,KAAMypB,GAEtBF,IAAgBvpB,KAAM,mCAA+B,GAErDupB,IAAgBvpB,KAAM,sBAAkB,GAGxCA,KAAK6pB,4BAA8B,IAAIxM,EAA2BtS,GAClE/K,KAAK8pB,eAAiBH,EA0KxB,OAvKAH,IAAaC,EAAmC,CAAC,CAC/CjqB,IAAK,qBACLrC,MAAO,WACL,OAAO6C,KAAK6pB,4BAA4B3U,eAAiBlV,KAAK8pB,iBAE/D,CACDtqB,IAAK,YACLrC,MAAO,SAAmB4N,GACxB/K,KAAK6pB,4BAA4B5N,UAAUlR,KAE5C,CACDvL,IAAK,eACLrC,MAAO,WACL,OAAO6C,KAAK6pB,4BAA4BlK,iBAEzC,CACDngB,IAAK,uBACLrC,MAAO,WACL,OAAO6C,KAAK6pB,4BAA4BE,yBAEzC,CACDvqB,IAAK,uBACLrC,MAAO,WACL,OAAO6C,KAAK6pB,4BAA4BG,yBAOzC,CACDxqB,IAAK,sBACLrC,MAAO,SAA6BkE,GAClC,IAAIyY,EAAgBzY,EAAMyY,cACtBC,EAAS1Y,EAAM0Y,OAEfsE,EAAYre,KAAK6pB,4BAA4B3U,eAE7C+U,EAAgBjqB,KAAKkV,eAErBgV,EAAmBlqB,KAAKmqB,qBAAqB,CAC/CrQ,cAAeA,EACfC,OAAQA,EACRsE,UAAW4L,IAGb,OAAO9lB,KAAKimB,MAAMF,GAAoBD,EAAgB5L,MAEvD,CACD7e,IAAK,2BACLrC,MAAO,SAAkC2E,GACvC,OAAO9B,KAAK6pB,4BAA4B/T,yBAAyBhU,KAElE,CACDtC,IAAK,uCACLrC,MAAO,WACL,OAAO6C,KAAK6pB,4BAA4BjM,yCAIzC,CACDpe,IAAK,eACLrC,MAAO,WACL,OAAOgH,KAAKC,IAAIpE,KAAK8pB,eAAgB9pB,KAAK6pB,4BAA4B3U,kBAIvE,CACD1V,IAAK,2BACLrC,MAAO,SAAkCsE,GACvC,IAAIuc,EAAcvc,EAAMub,MACpBA,OAAwB,IAAhBgB,EAAyB,OAASA,EAC1ClE,EAAgBrY,EAAMqY,cACtBmD,EAAgBxb,EAAMwb,cACtBJ,EAAcpb,EAAMob,YACxBI,EAAgBjd,KAAKqqB,oBAAoB,CACvCvQ,cAAeA,EACfC,OAAQkD,IAGV,IAAIlD,EAAS/Z,KAAK6pB,4BAA4B9M,yBAAyB,CACrEC,MAAOA,EACPlD,cAAeA,EACfmD,cAAeA,EACfJ,YAAaA,IAGf,OAAO7c,KAAKsqB,oBAAoB,CAC9BxQ,cAAeA,EACfC,OAAQA,MAKX,CACDva,IAAK,sBACLrC,MAAO,SAA6B0E,GAClC,IAAIiY,EAAgBjY,EAAMiY,cACtBC,EAASlY,EAAMkY,OAKnB,OAJAA,EAAS/Z,KAAKqqB,oBAAoB,CAChCvQ,cAAeA,EACfC,OAAQA,IAEH/Z,KAAK6pB,4BAA4BhQ,oBAAoB,CAC1DC,cAAeA,EACfC,OAAQA,MAGX,CACDva,IAAK,YACLrC,MAAO,SAAmB2E,GACxB9B,KAAK6pB,4BAA4B5T,UAAUnU,KAE5C,CACDtC,IAAK,uBACLrC,MAAO,SAA8BmF,GACnC,IAAIwX,EAAgBxX,EAAMwX,cACtBC,EAASzX,EAAMyX,OACfsE,EAAY/b,EAAM+b,UACtB,OAAOA,GAAavE,EAAgB,EAAIC,GAAUsE,EAAYvE,KAE/D,CACDta,IAAK,sBACLrC,MAAO,SAA6B0F,GAClC,IAAIiX,EAAgBjX,EAAMiX,cACtBC,EAASlX,EAAMkX,OAEfsE,EAAYre,KAAK6pB,4BAA4B3U,eAE7C+U,EAAgBjqB,KAAKkV,eAEzB,GAAImJ,IAAc4L,EAChB,OAAOlQ,EAEP,IAAImQ,EAAmBlqB,KAAKmqB,qBAAqB,CAC/CrQ,cAAeA,EACfC,OAAQA,EACRsE,UAAWA,IAGb,OAAOla,KAAKimB,MAAMF,GAAoBD,EAAgBnQ,MAGzD,CACDta,IAAK,sBACLrC,MAAO,SAA6B2G,GAClC,IAAIgW,EAAgBhW,EAAMgW,cACtBC,EAASjW,EAAMiW,OAEfsE,EAAYre,KAAK6pB,4BAA4B3U,eAE7C+U,EAAgBjqB,KAAKkV,eAEzB,GAAImJ,IAAc4L,EAChB,OAAOlQ,EAEP,IAAImQ,EAAmBlqB,KAAKmqB,qBAAqB,CAC/CrQ,cAAeA,EACfC,OAAQA,EACRsE,UAAW4L,IAGb,OAAO9lB,KAAKimB,MAAMF,GAAoB7L,EAAYvE,QAKjD2P,EAxLT,GCTe,SAASc,IACtB,IAAIrL,IAAiB9f,UAAUC,OAAS,QAAsB0E,IAAjB3E,UAAU,KAAmBA,UAAU,GAChF+f,EAAgB,GACpB,OAAO,SAAUze,GACf,IAAIoR,EAAWpR,EAAKoR,SAChBC,EAAUrR,EAAKqR,QACftT,EAAOzB,OAAOyB,KAAKsT,GACnBqN,GAAkBF,GAAkBzgB,EAAK4gB,OAAM,SAAU7f,GAC3D,IAAIrC,EAAQ4U,EAAQvS,GACpB,OAAOgN,MAAM8S,QAAQniB,GAASA,EAAMkC,OAAS,EAAIlC,GAAS,KAExDoiB,EAAe9gB,EAAKY,SAAWrC,OAAOyB,KAAK0gB,GAAe9f,QAAUZ,EAAK+gB,MAAK,SAAUhgB,GAC1F,IAAIigB,EAAcN,EAAc3f,GAC5BrC,EAAQ4U,EAAQvS,GACpB,OAAOgN,MAAM8S,QAAQniB,GAASsiB,EAAYC,KAAK,OAASviB,EAAMuiB,KAAK,KAAOD,IAAgBtiB,KAE5FgiB,EAAgBpN,EAEZqN,GAAkBG,GACpBzN,EAASC,IChBA,SAASyY,EAAwB9pB,GAC9C,IAAIwb,EAAWxb,EAAKwb,SAChBhF,EAA6BxW,EAAKwW,2BAClCC,EAAqBzW,EAAKyW,mBAC1BC,EAAmB1W,EAAK0W,iBACxBC,EAA4B3W,EAAK2W,0BACjCC,EAAwB5W,EAAK4W,sBAC7BC,EAAe7W,EAAK6W,aACpBC,EAAe9W,EAAK8W,aACpB1C,EAAoBpU,EAAKoU,kBACzB2C,EAAgB/W,EAAK+W,cACrBjV,EAAO9B,EAAK8B,KACZyU,EAA4BvW,EAAKuW,0BACjCS,EAA4BhX,EAAKgX,0BACjCtE,EAAY8D,EAA2ByI,eACvCC,EAAmBnI,GAAiB,GAAKA,EAAgBrE,EAIzDwM,IAHiBpd,IAAS+U,GAAgBN,IAA8BG,GAAwC,kBAAb8E,GAAyBA,IAAa9E,GAGlGtC,IAAsBuC,GAA6BI,IAAkBH,GAC9GI,EAA0BD,IAEhBmI,GAAoBxM,EAAY,IAAM5Q,EAAO+U,GAAgBnE,EAAY+D,IAK/EK,EAAeN,EAA2BhC,eAAiB1S,GAC7DkV,EAA0BtE,EAAY,G,ICjCxCsN,ECQAzU,EAAQC,E,SDIRyU,GATFD,EADoB,qBAAX1B,OACHA,OACmB,qBAAT4B,KACVA,KAEA,IAKUC,uBAAyBH,EAAII,6BAA+BJ,EAAIK,0BAA4BL,EAAIM,wBAA0BN,EAAIO,yBAA2B,SAAUnP,GACnL,OAAO4O,EAAIQ,WAAWpP,EAAU,IAAO,KAGrCqP,EAAST,EAAIU,sBAAwBV,EAAIW,4BAA8BX,EAAIY,yBAA2BZ,EAAIa,uBAAyBb,EAAIc,wBAA0B,SAAUxJ,GAC7K0I,EAAIe,aAAazJ,IAGRwI,EAAMG,EACNV,EAAMkB,EElBNxJ,EAAyB,SAAgCqI,GAClE,OAAOC,EAAID,EAAMhI,KASRiD,EAA0B,SAAiCnJ,EAAUoO,GAC9E,IAAI9F,EAEJ+F,QAAQC,UAAUC,MAAK,WACrBjG,EAAQkG,KAAKC,SAGf,IAQIP,EAAQ,CACVhI,GAAIwI,GATQ,SAASC,IACjBH,KAAKC,MAAQnG,GAAS8F,EACxBpO,EAAS7R,OAET+f,EAAMhI,GAAKwI,EAAIC,OAOnB,OAAOT,GDrBT,SAAS1hB,EAAQC,EAAQC,GAAkB,IAAIC,EAAOzB,OAAOyB,KAAKF,GAAS,GAAIvB,OAAO0B,sBAAuB,CAAE,IAAIC,EAAU3B,OAAO0B,sBAAsBH,GAAaC,IAAgBG,EAAUA,EAAQC,QAAO,SAAUC,GAAO,OAAO7B,OAAO8B,yBAAyBP,EAAQM,GAAKzB,eAAgBqB,EAAKM,KAAKC,MAAMP,EAAME,GAAY,OAAOF,EAE9U,SAASQ,EAAcC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAAyB,MAAhBF,UAAUD,GAAaC,UAAUD,GAAK,GAAQA,EAAI,EAAKb,EAAQgB,GAAQ,GAAMC,SAAQ,SAAUC,GAAO+pB,IAAgBrqB,EAAQM,EAAKF,EAAOE,OAAsBxC,OAAOyC,0BAA6BzC,OAAO0C,iBAAiBR,EAAQlC,OAAOyC,0BAA0BH,IAAmBhB,EAAQgB,GAAQC,SAAQ,SAAUC,GAAOxC,OAAOC,eAAeiC,EAAQM,EAAKxC,OAAO8B,yBAAyBQ,EAAQE,OAAe,OAAON,EAkBtf,IAMHsS,EACQ,WADRA,EAES,YAWTC,GAAQvF,EAAQD,EAEpB,SAAUrM,GAIR,SAAS6R,EAAK5R,GACZ,IAAIE,EAEJupB,IAAgBtpB,KAAMyR,GAEtB1R,EAAQ0qB,IAA2BzqB,KAAM0qB,IAAgBjZ,GAAMxR,KAAKD,KAAMH,IAE1E0pB,IAAgBoB,IAAuB5qB,GAAQ,0BAA2BwqB,KAE1EhB,IAAgBoB,IAAuB5qB,GAAQ,oBAAqBwqB,GAAuB,IAE3FhB,IAAgBoB,IAAuB5qB,GAAQ,iCAAkC,MAEjFwpB,IAAgBoB,IAAuB5qB,GAAQ,8BAA+B,MAE9EwpB,IAAgBoB,IAAuB5qB,GAAQ,4BAA4B,GAE3EwpB,IAAgBoB,IAAuB5qB,GAAQ,2BAA2B,GAE1EwpB,IAAgBoB,IAAuB5qB,GAAQ,2BAA4B,GAE3EwpB,IAAgBoB,IAAuB5qB,GAAQ,yBAA0B,GAEzEwpB,IAAgBoB,IAAuB5qB,GAAQ,6BAA6B,GAE5EwpB,IAAgBoB,IAAuB5qB,GAAQ,2BAAuB,GAEtEwpB,IAAgBoB,IAAuB5qB,GAAQ,0BAAsB,GAErEwpB,IAAgBoB,IAAuB5qB,GAAQ,yBAAqB,GAEpEwpB,IAAgBoB,IAAuB5qB,GAAQ,wBAAoB,GAEnEwpB,IAAgBoB,IAAuB5qB,GAAQ,sBAAkB,GAEjEwpB,IAAgBoB,IAAuB5qB,GAAQ,qBAAiB,GAEhEwpB,IAAgBoB,IAAuB5qB,GAAQ,4BAA6B,GAE5EwpB,IAAgBoB,IAAuB5qB,GAAQ,2BAA4B,GAE3EwpB,IAAgBoB,IAAuB5qB,GAAQ,yBAA0B,GAEzEwpB,IAAgBoB,IAAuB5qB,GAAQ,wBAAyB,GAExEwpB,IAAgBoB,IAAuB5qB,GAAQ,yBAAqB,GAEpEwpB,IAAgBoB,IAAuB5qB,GAAQ,0BAAsB,GAErEwpB,IAAgBoB,IAAuB5qB,GAAQ,sCAAkC,GAEjFwpB,IAAgBoB,IAAuB5qB,GAAQ,cAAe,IAE9DwpB,IAAgBoB,IAAuB5qB,GAAQ,aAAc,IAE7DwpB,IAAgBoB,IAAuB5qB,GAAQ,gCAAgC,WAC7EA,EAAM2R,+BAAiC,KAEvC3R,EAAMqC,SAAS,CACbuP,aAAa,EACbC,uBAAuB,OAI3B2X,IAAgBoB,IAAuB5qB,GAAQ,+BAA+B,WAC5E,IAAIsF,EAAoBtF,EAAMF,MAAMwF,kBAEpCtF,EAAM8R,wBAAwB,CAC5BC,SAAUzM,EACV0M,QAAS,CACPC,yBAA0BjS,EAAMkS,kBAChCC,wBAAyBnS,EAAMoS,iBAC/BC,iBAAkBrS,EAAMsS,0BACxBC,gBAAiBvS,EAAMwS,yBACvBC,sBAAuBzS,EAAM0S,eAC7BC,qBAAsB3S,EAAM4S,cAC5BC,cAAe7S,EAAM8S,uBACrBC,aAAc/S,EAAMgT,4BAK1BwW,IAAgBoB,IAAuB5qB,GAAQ,6BAA6B,SAAUQ,GACpFR,EAAMiT,oBAAsBzS,KAG9BgpB,IAAgBoB,IAAuB5qB,GAAQ,aAAa,SAAUkT,GAIhEA,EAAM/T,SAAWa,EAAMiT,qBACzBjT,EAAMmT,kBAAkBD,EAAM/T,WAIlC,IAAIiU,EAA+B,IAAIsW,EAAkC,CACvErW,UAAWvT,EAAM8B,YACjB0R,eAAgB,SAAwBtI,GACtC,OAAO0G,EAAK6B,gBAAgBzT,EAAMmC,YAA3ByP,CAAwC1G,IAEjDwI,kBAAmB9B,EAAK+B,wBAAwB3T,KAE9C4T,EAA4B,IAAIgW,EAAkC,CACpErW,UAAWvT,EAAMmB,SACjBqS,eAAgB,SAAwBtI,GACtC,OAAO0G,EAAK6B,gBAAgBzT,EAAMkD,UAA3B0O,CAAsC1G,IAE/CwI,kBAAmB9B,EAAKiC,qBAAqB7T,KAiC/C,OA/BAE,EAAMmC,MAAQ,CACZyR,cAAe,CACbR,6BAA8BA,EAC9BM,0BAA2BA,EAC3BG,gBAAiB/T,EAAMmC,YACvB6R,cAAehU,EAAMkD,UACrB+Q,gBAAiBjU,EAAM8B,YACvBoS,aAAclU,EAAMmB,SACpBgT,iBAAuC,IAAtBnU,EAAM8R,YACvBsC,mBAAoBpU,EAAMyF,eAC1B4O,gBAAiBrU,EAAM0F,YACvBnF,cAAe,EACf+T,uBAAuB,GAEzBxC,aAAa,EACbyC,0BEnLgC,EFoLhCE,wBEpLgC,EFqLhCpU,WAAY,EACZC,UAAW,EACXoU,2BAA4B,KAC5B3C,uBAAuB,GAGrB/R,EAAM0F,YAAc,IACtBxF,EAAMyU,kBAAoBzU,EAAM0U,wBAAwB5U,EAAOE,EAAMmC,QAGnErC,EAAMyF,eAAiB,IACzBvF,EAAM2U,mBAAqB3U,EAAM4U,yBAAyB9U,EAAOE,EAAMmC,QAGlEnC,EA4iCT,OA3rCA6qB,IAAUnZ,EAAM7R,GAsJhB4pB,IAAa/X,EAAM,CAAC,CAClBjS,IAAK,mBACLrC,MAAO,WACL,IAAIuD,EAAOtB,UAAUC,OAAS,QAAsB0E,IAAjB3E,UAAU,GAAmBA,UAAU,GAAK,GAC3EwV,EAAiBlU,EAAKmU,UACtBA,OAA+B,IAAnBD,EAA4B5U,KAAKH,MAAMiV,kBAAoBF,EACvEG,EAAmBrU,EAAKY,YACxBA,OAAmC,IAArByT,EAA8B/U,KAAKH,MAAMyF,eAAiByP,EACxEC,EAAgBtU,EAAKC,SACrBA,OAA6B,IAAlBqU,EAA2BhV,KAAKH,MAAM0F,YAAcyP,EAE/DC,EAAchW,EAAc,GAAIe,KAAKH,MAAO,CAC9CiV,kBAAmBD,EACnBvP,eAAgBhE,EAChBiE,YAAa5E,IAGf,MAAO,CACLT,WAAYF,KAAK2U,yBAAyBM,GAC1C9U,UAAWH,KAAKyU,wBAAwBQ,MAO3C,CACDzV,IAAK,qBACLrC,MAAO,WACL,OAAO6C,KAAKkC,MAAMyR,cAAcF,0BAA0ByB,iBAM3D,CACD1V,IAAK,uBACLrC,MAAO,WACL,OAAO6C,KAAKkC,MAAMyR,cAAcR,6BAA6B+B,iBAO9D,CACD1V,IAAK,oBACLrC,MAAO,SAA2BkE,GAChC,IAAI8T,EAAmB9T,EAAMnB,WACzBkV,OAAuC,IAArBD,EAA8B,EAAIA,EACpDE,EAAkBhU,EAAMlB,UACxBmV,OAAqC,IAApBD,EAA6B,EAAIA,EAItD,KAAIC,EAAiB,GAArB,CAKAtV,KAAKuV,uBAEL,IAAI1U,EAAcb,KAAKH,MACnB2V,EAAa3U,EAAY2U,WACzBC,EAAY5U,EAAY4U,UACxBtU,EAASN,EAAYM,OACrBS,EAAQf,EAAYe,MACpB+R,EAAgB3T,KAAKkC,MAAMyR,cAK3BvT,EAAgBuT,EAAcvT,cAC9BsV,EAAkB/B,EAAcF,0BAA0ByB,eAC1DS,EAAoBhC,EAAcR,6BAA6B+B,eAC/DhV,EAAaiE,KAAKC,IAAID,KAAKS,IAAI,EAAG+Q,EAAoB/T,EAAQxB,GAAgBgV,GAC9EjV,EAAYgE,KAAKC,IAAID,KAAKS,IAAI,EAAG8Q,EAAkBvU,EAASf,GAAgBkV,GAKhF,GAAItV,KAAKkC,MAAMhC,aAAeA,GAAcF,KAAKkC,MAAM/B,YAAcA,EAAW,CAG9E,IAEI+E,EAAW,CACbyM,aAAa,EACbyC,0BAJ8BlU,IAAeF,KAAKkC,MAAMhC,WAAaA,EAAaF,KAAKkC,MAAMhC,WE9RjE,GADC,EF+RoIF,KAAKkC,MAAMkS,0BAK5KE,wBAJ4BnU,IAAcH,KAAKkC,MAAM/B,UAAYA,EAAYH,KAAKkC,MAAM/B,UE/R5D,GADC,EFgS8HH,KAAKkC,MAAMoS,wBAKtKC,2BAA4B/C,GAGzBgE,IACHtQ,EAAS/E,UAAYA,GAGlBsV,IACHvQ,EAAShF,WAAaA,GAGxBgF,EAAS0M,uBAAwB,EACjC5R,KAAKoC,SAAS8C,GAGhBlF,KAAK6V,wBAAwB,CAC3B3V,WAAYA,EACZC,UAAWA,EACXwV,kBAAmBA,EACnBD,gBAAiBA,OAWpB,CACDlW,IAAK,gCACLrC,MAAO,SAAuCsE,GAC5C,IAAIH,EAAcG,EAAMH,YACpBX,EAAWc,EAAMd,SACrBX,KAAKkE,+BAAgF,kBAAxClE,KAAKkE,+BAA8CC,KAAKC,IAAIpE,KAAKkE,+BAAgC5C,GAAeA,EAC7JtB,KAAKqE,4BAA0E,kBAArCrE,KAAKqE,4BAA2CF,KAAKC,IAAIpE,KAAKqE,4BAA6B1D,GAAYA,IAQlJ,CACDnB,IAAK,kBACLrC,MAAO,WACL,IAAIoE,EAAevB,KAAKH,MACpB8B,EAAcJ,EAAaI,YAC3BX,EAAWO,EAAaP,SACxB2S,EAAgB3T,KAAKkC,MAAMyR,cAC/BA,EAAcR,6BAA6B2C,yBAAyBnU,EAAc,GAClFgS,EAAcF,0BAA0BqC,yBAAyB9U,EAAW,KAQ7E,CACDxB,IAAK,oBACLrC,MAAO,WACL,IAAI0E,EAAQzC,UAAUC,OAAS,QAAsB0E,IAAjB3E,UAAU,GAAmBA,UAAU,GAAK,GAC5E2W,EAAoBlU,EAAMP,YAC1BA,OAAoC,IAAtByU,EAA+B,EAAIA,EACjDC,EAAiBnU,EAAMlB,SACvBA,OAA8B,IAAnBqV,EAA4B,EAAIA,EAE3CtU,EAAe1B,KAAKH,MACpByF,EAAiB5D,EAAa4D,eAC9BC,EAAc7D,EAAa6D,YAC3BoO,EAAgB3T,KAAKkC,MAAMyR,cAC/BA,EAAcR,6BAA6B8C,UAAU3U,GACrDqS,EAAcF,0BAA0BwC,UAAUtV,GAIlDX,KAAKkW,yBAA2B5Q,GAAkB,IElXlB,IFkXwBtF,KAAKkC,MAAMkS,0BAAyD9S,GAAegE,EAAiBhE,GAAegE,GAC3KtF,KAAKmW,wBAA0B5Q,GAAe,IEnXd,IFmXoBvF,KAAKkC,MAAMoS,wBAAuD3T,GAAY4E,EAAc5E,GAAY4E,GAG5JvF,KAAKoW,YAAc,GACnBpW,KAAKqW,WAAa,GAClBrW,KAAK6D,gBAMN,CACDrE,IAAK,eACLrC,MAAO,SAAsBmF,GAC3B,IAAIhB,EAAcgB,EAAMhB,YACpBX,EAAW2B,EAAM3B,SACjBgB,EAAc3B,KAAKH,MAAM8B,YACzB9B,EAAQG,KAAKH,MAGb8B,EAAc,QAAqBoC,IAAhBzC,GACrBtB,KAAKsW,mCAAmCrX,EAAc,GAAIY,EAAO,CAC/DyF,eAAgBhE,UAIHyC,IAAbpD,GACFX,KAAKuW,+BAA+BtX,EAAc,GAAIY,EAAO,CAC3D0F,YAAa5E,OAIlB,CACDnB,IAAK,oBACLrC,MAAO,WACL,IAAI4E,EAAe/B,KAAKH,MACpB2W,EAAmBzU,EAAayU,iBAChCrV,EAASY,EAAaZ,OACtBjB,EAAa6B,EAAa7B,WAC1BoF,EAAiBvD,EAAauD,eAC9BnF,EAAY4B,EAAa5B,UACzBoF,EAAcxD,EAAawD,YAC3B3D,EAAQG,EAAaH,MACrB+R,EAAgB3T,KAAKkC,MAAMyR,cAsB/B,GApBA3T,KAAKwU,kBAAoB,EACzBxU,KAAK0U,mBAAqB,EAG1B1U,KAAKmF,6BAIAwO,EAAcQ,uBACjBnU,KAAKoC,UAAS,SAAUgI,GACtB,IAAIqM,EAAcxX,EAAc,GAAImL,EAAW,CAC7CwH,uBAAuB,IAKzB,OAFA6E,EAAY9C,cAAcvT,cAAgBoW,IAC1CC,EAAY9C,cAAcQ,uBAAwB,EAC3CsC,KAIe,kBAAfvW,GAA2BA,GAAc,GAA0B,kBAAdC,GAA0BA,GAAa,EAAG,CACxG,IAAIsW,EAAchF,EAAKiF,gCAAgC,CACrDtM,UAAWpK,KAAKkC,MAChBhC,WAAYA,EACZC,UAAWA,IAGTsW,IACFA,EAAY7E,uBAAwB,EACpC5R,KAAKoC,SAASqU,IAKdzW,KAAKgT,sBAGHhT,KAAKgT,oBAAoB9S,aAAeF,KAAKkC,MAAMhC,aACrDF,KAAKgT,oBAAoB9S,WAAaF,KAAKkC,MAAMhC,YAG/CF,KAAKgT,oBAAoB7S,YAAcH,KAAKkC,MAAM/B,YACpDH,KAAKgT,oBAAoB7S,UAAYH,KAAKkC,MAAM/B,YAMpD,IAAIwW,EAAuBxV,EAAS,GAAKS,EAAQ,EAE7C0D,GAAkB,GAAKqR,GACzB3W,KAAKsW,qCAGH/Q,GAAe,GAAKoR,GACtB3W,KAAKuW,iCAIPvW,KAAK4W,8BAGL5W,KAAK6V,wBAAwB,CAC3B3V,WAAYA,GAAc,EAC1BC,UAAWA,GAAa,EACxBwV,kBAAmBhC,EAAcR,6BAA6B+B,eAC9DQ,gBAAiB/B,EAAcF,0BAA0ByB,iBAG3DlV,KAAK6W,wCAQN,CACDrX,IAAK,qBACLrC,MAAO,SAA4B2Z,EAAW1M,GAC5C,IAAI2M,EAAS/W,KAET8C,EAAe9C,KAAKH,MACpB2V,EAAa1S,EAAa0S,WAC1BC,EAAY3S,EAAa2S,UACzB9T,EAAcmB,EAAanB,YAC3BR,EAAS2B,EAAa3B,OACtBH,EAAW8B,EAAa9B,SACxB8T,EAAoBhS,EAAagS,kBACjCxP,EAAiBxC,EAAawC,eAC9BC,EAAczC,EAAayC,YAC3B3D,EAAQkB,EAAalB,MACrBK,EAAcjC,KAAKkC,MACnBhC,EAAa+B,EAAY/B,WACzBqU,EAA6BtS,EAAYsS,2BACzCpU,EAAY8B,EAAY9B,UACxBwT,EAAgB1R,EAAY0R,cAGhC3T,KAAKmF,6BAKL,IAAI6R,EAAwCrV,EAAc,GAA+B,IAA1BmV,EAAUnV,aAAqBX,EAAW,GAA4B,IAAvB8V,EAAU9V,SAMpHuT,IAA+B/C,KAG5BiE,GAAavV,GAAc,IAAMA,IAAeF,KAAKgT,oBAAoB9S,YAAc8W,KAC1FhX,KAAKgT,oBAAoB9S,WAAaA,IAGnCsV,GAAcrV,GAAa,IAAMA,IAAcH,KAAKgT,oBAAoB7S,WAAa6W,KACxFhX,KAAKgT,oBAAoB7S,UAAYA,IAOzC,IAAI8W,GAAiD,IAApBH,EAAUlV,OAAoC,IAArBkV,EAAU3V,SAAiBA,EAAS,GAAKS,EAAQ,EAqD3G,GAlDI5B,KAAKkW,0BACPlW,KAAKkW,0BAA2B,EAEhClW,KAAKsW,mCAAmCtW,KAAKH,QAE7C2qB,EAAwB,CACtBtT,2BAA4BvD,EAAcR,6BAC1CgE,mBAAoBL,EAAUnV,YAC9ByV,iBAAkBN,EAAU9U,YAC5BqV,0BAA2BP,EAAUhC,kBACrCwC,sBAAuBR,EAAUxR,eACjCiS,aAAcT,EAAUlV,MACxB4V,aAActX,EACd4U,kBAAmBA,EACnB2C,cAAenS,EACf9C,KAAMZ,EACNqV,0BAA2BA,EAC3BS,0BAA2B,WACzB,OAAOX,EAAOT,mCAAmCS,EAAOlX,UAK1DG,KAAKmW,yBACPnW,KAAKmW,yBAA0B,EAE/BnW,KAAKuW,+BAA+BvW,KAAKH,QAEzC2qB,EAAwB,CACtBtT,2BAA4BvD,EAAcF,0BAC1C0D,mBAAoBL,EAAU9V,SAC9BoW,iBAAkBN,EAAU/T,UAC5BsU,0BAA2BP,EAAUhC,kBACrCwC,sBAAuBR,EAAUvR,YACjCgS,aAAcT,EAAU3V,OACxBqW,aAAcrX,EACd2U,kBAAmBA,EACnB2C,cAAelS,EACf/C,KAAMrB,EACN8V,0BAA2BA,EAC3BS,0BAA2B,WACzB,OAAOX,EAAOR,+BAA+BQ,EAAOlX,UAM1DG,KAAK4W,8BAGD1W,IAAekK,EAAUlK,YAAcC,IAAciK,EAAUjK,UAAW,CAC5E,IAAIuV,EAAkB/B,EAAcF,0BAA0ByB,eAC1DS,EAAoBhC,EAAcR,6BAA6B+B,eAEnElV,KAAK6V,wBAAwB,CAC3B3V,WAAYA,EACZC,UAAWA,EACXwV,kBAAmBA,EACnBD,gBAAiBA,IAIrB1V,KAAK6W,wCAEN,CACDrX,IAAK,uBACLrC,MAAO,WACD6C,KAAK0R,gCACPiG,EAAuB3X,KAAK0R,kCAU/B,CACDlS,IAAK,SACLrC,MAAO,WACL,IAAIuH,EAAe1E,KAAKH,MACpB+X,EAAqBlT,EAAakT,mBAClCpC,EAAa9Q,EAAa8Q,WAC1BC,EAAY/Q,EAAa+Q,UACzB9M,EAAYjE,EAAaiE,UACzBkP,EAAiBnT,EAAamT,eAC9BC,EAAgBpT,EAAaoT,cAC7BC,EAAiBrT,EAAaqT,eAC9B5W,EAASuD,EAAavD,OACtB6W,EAAKtT,EAAasT,GAClBC,EAAoBvT,EAAauT,kBACjCC,EAAOxT,EAAawT,KACpBhX,EAAQwD,EAAaxD,MACrB8H,EAAWtE,EAAasE,SACxBpH,EAAQ8C,EAAa9C,MACrBc,EAAe1C,KAAKkC,MACpByR,EAAgBjR,EAAaiR,cAC7B/B,EAAwBlP,EAAakP,sBAErCD,EAAc3R,KAAKmY,eAEnBC,EAAY,CACdC,UAAW,aACXC,UAAW,MACXnX,OAAQqU,EAAa,OAASrU,EAC9BqG,SAAU,WACV5F,MAAO6T,EAAY,OAAS7T,EAC5B2W,wBAAyB,QACzBC,WAAY,aAGV5G,IACF5R,KAAKoW,YAAc,IAKhBpW,KAAKkC,MAAMyP,aACd3R,KAAKyY,mBAIPzY,KAAK0Y,2BAA2B1Y,KAAKH,MAAOG,KAAKkC,OAEjD,IAAIyT,EAAoBhC,EAAcR,6BAA6B+B,eAC/DQ,EAAkB/B,EAAcF,0BAA0ByB,eAI1DyD,EAAwBjD,EAAkBvU,EAASwS,EAAcvT,cAAgB,EACjFwY,EAA0BjD,EAAoB/T,EAAQ+R,EAAcvT,cAAgB,EAEpFwY,IAA4B5Y,KAAK6Y,0BAA4BF,IAA0B3Y,KAAK8Y,yBAC9F9Y,KAAK6Y,yBAA2BD,EAChC5Y,KAAK8Y,uBAAyBH,EAC9B3Y,KAAK+Y,2BAA4B,GAQnCX,EAAUxQ,UAAY+N,EAAoBgD,GAAyB/W,EAAQ,SAAW,OACtFwW,EAAUvQ,UAAY6N,EAAkBkD,GAA2BzX,EAAS,SAAW,OACvF,IAAI6X,EAAoBhZ,KAAKiZ,mBACzBC,EAAqD,IAA7BF,EAAkB3Z,QAAgB8B,EAAS,GAAKS,EAAQ,EACpF,OAAO1D,gBAAoB,MAAO2sB,IAAS,CACzCtqB,IAAKP,KAAKmZ,2BACTtB,EAAgB,CACjB,aAAc7X,KAAKH,MAAM,cACzB,gBAAiBG,KAAKH,MAAM,iBAC5B8I,UAAWmiB,kBAAK,yBAA0BniB,GAC1CqP,GAAIA,EACJ3V,SAAUrC,KAAK4C,UACfsV,KAAMA,EACNhX,MAAOjC,EAAc,GAAImZ,EAAW,GAAIlX,GACxC8H,SAAUA,IACRgQ,EAAkB3Z,OAAS,GAAKnB,gBAAoB,MAAO,CAC7DyK,UAAW,+CACXuP,KAAMJ,EACN5W,MAAOjC,EAAc,CACnB2C,MAAOgW,EAAqB,OAASjC,EACrCxU,OAAQuU,EACR0D,SAAUzD,EACV0D,UAAW3D,EACXnO,SAAU,SACV+R,cAAe3H,EAAc,OAAS,GACtCnK,SAAU,YACTuQ,IACFiB,GAAoBE,GAAyBjB,OAIjD,CACDzY,IAAK,6BACLrC,MAAO,WACL,IAAI0C,EAAQT,UAAUC,OAAS,QAAsB0E,IAAjB3E,UAAU,GAAmBA,UAAU,GAAKY,KAAKH,MACjFqC,EAAQ9C,UAAUC,OAAS,QAAsB0E,IAAjB3E,UAAU,GAAmBA,UAAU,GAAKY,KAAKkC,MACjFpB,EAAejB,EAAMiB,aACrByY,EAAoB1Z,EAAM0Z,kBAC1B5X,EAAc9B,EAAM8B,YACpBwB,EAA2BtD,EAAMsD,yBACjChC,EAAStB,EAAMsB,OACfqY,EAAsB3Z,EAAM2Z,oBAC5BC,EAAwB5Z,EAAM4Z,sBAC9BC,EAAmB7Z,EAAM6Z,iBACzB1Y,EAAWnB,EAAMmB,SACjBY,EAAQ/B,EAAM+B,MACd+X,EAAoB9Z,EAAM8Z,kBAC1BvF,EAA4BlS,EAAMkS,0BAClCE,EAA0BpS,EAAMoS,wBAChCX,EAAgBzR,EAAMyR,cACtBxT,EAAYH,KAAKwU,kBAAoB,EAAIxU,KAAKwU,kBAAoBtS,EAAM/B,UACxED,EAAaF,KAAK0U,mBAAqB,EAAI1U,KAAK0U,mBAAqBxS,EAAMhC,WAE3EyR,EAAc3R,KAAKmY,aAAatY,EAAOqC,GAI3C,GAFAlC,KAAKiZ,mBAAqB,GAEtB9X,EAAS,GAAKS,EAAQ,EAAG,CAC3B,IAAIgY,EAAuBjG,EAAcR,6BAA6B0G,oBAAoB,CACxFC,cAAelY,EACfmY,OAAQ7Z,IAEN8Z,EAAoBrG,EAAcF,0BAA0BoG,oBAAoB,CAClFC,cAAe3Y,EACf4Y,OAAQ5Z,IAEN8Z,EAA6BtG,EAAcR,6BAA6B+G,oBAAoB,CAC9FJ,cAAelY,EACfmY,OAAQ7Z,IAENia,EAA2BxG,EAAcF,0BAA0ByG,oBAAoB,CACzFJ,cAAe3Y,EACf4Y,OAAQ5Z,IAGVH,KAAKqS,0BAA4BuH,EAAqBQ,MACtDpa,KAAKuS,yBAA2BqH,EAAqBS,KACrDra,KAAK6S,uBAAyBmH,EAAkBI,MAChDpa,KAAK+S,sBAAwBiH,EAAkBK,KAC/C,IAAIC,EAAwBb,EAAsB,CAChDnB,UAAW,aACXlF,UAAWzR,EACX4Y,mBAAoBf,EACpBgB,gBAAiBpG,EACjBqG,WAAkD,kBAA/Bb,EAAqBQ,MAAqBR,EAAqBQ,MAAQ,EAC1FM,UAAgD,kBAA9Bd,EAAqBS,KAAoBT,EAAqBS,MAAQ,IAEtFM,EAAqBlB,EAAsB,CAC7CnB,UAAW,WACXlF,UAAWpS,EACXuZ,mBAAoBb,EACpBc,gBAAiBlG,EACjBmG,WAA+C,kBAA5BT,EAAkBI,MAAqBJ,EAAkBI,MAAQ,EACpFM,UAA6C,kBAA3BV,EAAkBK,KAAoBL,EAAkBK,MAAQ,IAGhFjI,EAAmBkI,EAAsBM,mBACzCtI,EAAkBgI,EAAsBO,kBACxCjI,EAAgB+H,EAAmBC,mBACnC9H,EAAe6H,EAAmBE,kBAEtC,GAAI1X,EAA0B,CAK5B,IAAKA,EAAyBoI,iBAC5B,IAAK,IAAI5K,EAAWiS,EAAejS,GAAYmS,EAAcnS,IAC3D,IAAKwC,EAAyBwI,IAAIhL,EAAU,GAAI,CAC9CyR,EAAmB,EACnBE,EAAkB3Q,EAAc,EAChC,MASN,IAAKwB,EAAyBqI,gBAC5B,IAAK,IAAIlK,EAAc8Q,EAAkB9Q,GAAegR,EAAiBhR,IACvE,IAAK6B,EAAyBwI,IAAI,EAAGrK,GAAc,CACjDsR,EAAgB,EAChBE,EAAe9R,EAAW,EAC1B,OAMRhB,KAAKiZ,mBAAqBM,EAAkB,CAC1CuB,UAAW9a,KAAKqW,WAChBvV,aAAcA,EACdqS,6BAA8BQ,EAAcR,6BAC5Cf,iBAAkBA,EAClBE,gBAAiBA,EACjBnP,yBAA0BA,EAC1B8W,2BAA4BA,EAC5BtI,YAAaA,EACbgI,kBAAmBA,EACnBvY,OAAQpB,KACRyT,0BAA2BE,EAAcF,0BACzCb,cAAeA,EACfE,aAAcA,EACd5S,WAAYA,EACZC,UAAWA,EACX4a,WAAY/a,KAAKoW,YACjB+D,yBAA0BA,EAC1BP,qBAAsBA,EACtBI,kBAAmBA,IAGrBha,KAAKiS,kBAAoBG,EACzBpS,KAAKmS,iBAAmBG,EACxBtS,KAAKyS,eAAiBG,EACtB5S,KAAK2S,cAAgBG,KASxB,CACDtT,IAAK,uBACLrC,MAAO,WACL,IAAI6d,EAA6Bhb,KAAKH,MAAMmb,2BAExChb,KAAK0R,gCACPiG,EAAuB3X,KAAK0R,gCAG9B1R,KAAK0R,+BAAiCuJ,EAAwBjb,KAAKkb,6BAA8BF,KAElG,CACDxb,IAAK,6BAMLrC,MAAO,WACL,GAAmD,kBAAxC6C,KAAKkE,gCAA2F,kBAArClE,KAAKqE,4BAA0C,CACnH,IAAI/C,EAActB,KAAKkE,+BACnBvD,EAAWX,KAAKqE,4BACpBrE,KAAKkE,+BAAiC,KACtClE,KAAKqE,4BAA8B,KACnCrE,KAAK8E,kBAAkB,CACrBxD,YAAaA,EACbX,SAAUA,OAIf,CACDnB,IAAK,0BACLrC,MAAO,SAAiC0F,GACtC,IAAIsY,EAASnb,KAETE,EAAa2C,EAAM3C,WACnBC,EAAY0C,EAAM1C,UAClBwV,EAAoB9S,EAAM8S,kBAC1BD,EAAkB7S,EAAM6S,gBAE5B1V,KAAKob,kBAAkB,CACrBtJ,SAAU,SAAkBhO,GAC1B,IAAI5D,EAAa4D,EAAM5D,WACnBC,EAAY2D,EAAM3D,UAClBkb,EAAeF,EAAOtb,MACtBsB,EAASka,EAAala,QAG1BkB,EAFegZ,EAAahZ,UAEnB,CACPiZ,aAAcna,EACdoa,YAHUF,EAAazZ,MAIvB4Z,aAAc9F,EACdxV,WAAYA,EACZC,UAAWA,EACXsb,YAAa9F,KAGjB5D,QAAS,CACP7R,WAAYA,EACZC,UAAWA,OAIhB,CACDX,IAAK,eACLrC,MAAO,WACL,IAAI0C,EAAQT,UAAUC,OAAS,QAAsB0E,IAAjB3E,UAAU,GAAmBA,UAAU,GAAKY,KAAKH,MACjFqC,EAAQ9C,UAAUC,OAAS,QAAsB0E,IAAjB3E,UAAU,GAAmBA,UAAU,GAAKY,KAAKkC,MAGrF,OAAOlF,OAAO0e,eAAezb,KAAKJ,EAAO,eAAiB8b,QAAQ9b,EAAM8R,aAAegK,QAAQzZ,EAAMyP,eAEtG,CACDnS,IAAK,sCACLrC,MAAO,WACL,GAAI6C,KAAK+Y,0BAA2B,CAClC,IAAIpW,EAA4B3C,KAAKH,MAAM8C,0BAC3C3C,KAAK+Y,2BAA4B,EACjCpW,EAA0B,CACxBJ,WAAYvC,KAAK6Y,yBAA2B,EAC5CrW,KAAMxC,KAAKkC,MAAMyR,cAAcvT,cAC/BqC,SAAUzC,KAAK8Y,uBAAyB,OAI7C,CACDtZ,IAAK,mBAMLrC,MAAO,SAA0BoH,GAC/B,IAAIrE,EAAaqE,EAAMrE,WACnBC,EAAYoE,EAAMpE,UAElBsW,EAAchF,EAAKiF,gCAAgC,CACrDtM,UAAWpK,KAAKkC,MAChBhC,WAAYA,EACZC,UAAWA,IAGTsW,IACFA,EAAY7E,uBAAwB,EACpC5R,KAAKoC,SAASqU,MAGjB,CACDjX,IAAK,2BACLrC,MAAO,WACL,IAAI0C,EAAQT,UAAUC,OAAS,QAAsB0E,IAAjB3E,UAAU,GAAmBA,UAAU,GAAKY,KAAKH,MACjFqC,EAAQ9C,UAAUC,OAAS,QAAsB0E,IAAjB3E,UAAU,GAAmBA,UAAU,GAAKY,KAAKkC,MACrF,OAAOuP,EAAKkD,yBAAyB9U,EAAOqC,KAE7C,CACD1C,IAAK,qCACLrC,MAAO,WACL,IAAI0C,EAAQT,UAAUC,OAAS,QAAsB0E,IAAjB3E,UAAU,GAAmBA,UAAU,GAAKY,KAAKH,MACjFqC,EAAQ9C,UAAUC,OAAS,QAAsB0E,IAAjB3E,UAAU,GAAmBA,UAAU,GAAKY,KAAKkC,MAEjFuU,EAAchF,EAAKmK,2CAA2C/b,EAAOqC,GAErEuU,IACFA,EAAY7E,uBAAwB,EACpC5R,KAAKoC,SAASqU,MAGjB,CACDjX,IAAK,0BACLrC,MAAO,WACL,IAAI0C,EAAQT,UAAUC,OAAS,QAAsB0E,IAAjB3E,UAAU,GAAmBA,UAAU,GAAKY,KAAKH,MACjFqC,EAAQ9C,UAAUC,OAAS,QAAsB0E,IAAjB3E,UAAU,GAAmBA,UAAU,GAAKY,KAAKkC,MACrF,OAAOuP,EAAKgD,wBAAwB5U,EAAOqC,KAE5C,CACD1C,IAAK,mBACLrC,MAAO,WACL,IAAI4d,EAAa/a,KAAKoW,YAClB0E,EAAY9a,KAAKqW,WACjBsD,EAAoB3Z,KAAKH,MAAM8Z,kBAOnC3Z,KAAKqW,WAAa,GAClBrW,KAAKoW,YAAc,GAEnB,IAAK,IAAIzV,EAAWX,KAAKyS,eAAgB9R,GAAYX,KAAK2S,cAAehS,IACvE,IAAK,IAAIW,EAActB,KAAKiS,kBAAmB3Q,GAAetB,KAAKmS,iBAAkB7Q,IAAe,CAClG,IAAI9B,EAAM,GAAGkN,OAAO/L,EAAU,KAAK+L,OAAOpL,GAC1CtB,KAAKoW,YAAY5W,GAAOub,EAAWvb,GAE/Bma,IACF3Z,KAAKqW,WAAW7W,GAAOsb,EAAUtb,OAKxC,CACDA,IAAK,iCACLrC,MAAO,WACL,IAAI0C,EAAQT,UAAUC,OAAS,QAAsB0E,IAAjB3E,UAAU,GAAmBA,UAAU,GAAKY,KAAKH,MACjFqC,EAAQ9C,UAAUC,OAAS,QAAsB0E,IAAjB3E,UAAU,GAAmBA,UAAU,GAAKY,KAAKkC,MAEjFuU,EAAchF,EAAKoK,uCAAuChc,EAAOqC,GAEjEuU,IACFA,EAAY7E,uBAAwB,EACpC5R,KAAKoC,SAASqU,OAGhB,CAAC,CACHjX,IAAK,2BACLrC,MAAO,SAAkCgN,EAAWC,GAClD,IAAIlF,EAAW,GAEe,IAA1BiF,EAAUxI,aAA8C,IAAzByI,EAAUlK,YAA2C,IAAvBiK,EAAUnJ,UAA0C,IAAxBoJ,EAAUjK,WACrG+E,EAAShF,WAAa,EACtBgF,EAAS/E,UAAY,IAEZgK,EAAUjK,aAAekK,EAAUlK,YAAciK,EAAU7E,eAAiB,GAAK6E,EAAUhK,YAAciK,EAAUjK,WAAagK,EAAU5E,YAAc,IACjKvI,OAAO8e,OAAO5W,EAAUuM,EAAKiF,gCAAgC,CAC3DtM,UAAWA,EACXlK,WAAYiK,EAAUjK,WACtBC,UAAWgK,EAAUhK,aAIzB,IAgCI4b,EACAC,EAjCArI,EAAgBvJ,EAAUuJ,cAkF9B,OAhFAzO,EAAS0M,uBAAwB,EAE7BzH,EAAUnI,cAAgB2R,EAAcC,iBAAmBzJ,EAAUpH,YAAc4Q,EAAcE,gBAEnG3O,EAAS0M,uBAAwB,GAGnC+B,EAAcR,6BAA6B8I,UAAU,CACnD7I,UAAWjJ,EAAUxI,YACrB4R,kBAAmB9B,EAAK+B,wBAAwBrJ,GAChDkJ,eAAgB5B,EAAK6B,gBAAgBnJ,EAAUnI,eAEjD2R,EAAcF,0BAA0BwI,UAAU,CAChD7I,UAAWjJ,EAAUnJ,SACrBuS,kBAAmB9B,EAAKiC,qBAAqBvJ,GAC7CkJ,eAAgB5B,EAAK6B,gBAAgBnJ,EAAUpH,aAGX,IAAlC4Q,EAAcG,iBAAwD,IAA/BH,EAAcI,eACvDJ,EAAcG,gBAAkB,EAChCH,EAAcI,aAAe,GAI3B5J,EAAUqL,aAAwC,IAA1BrL,EAAUwH,cAA2D,IAAlCgC,EAAcK,iBAC3EhX,OAAO8e,OAAO5W,EAAU,CACtByM,aAAa,IAMjB0X,EAAkD,CAChDjW,UAAWO,EAAcG,gBACzBoI,SAAmD,kBAAlCvI,EAAcC,gBAA+BD,EAAcC,gBAAkB,KAC9FuI,wBAAyB,WACvB,OAAOxI,EAAcR,6BAA6B8C,UAAU,IAE9DmG,6BAA8BjS,EAC9BkS,eAAgBlS,EAAUxI,YAC1B2a,aAA+C,kBAA1BnS,EAAUnI,YAA2BmI,EAAUnI,YAAc,KAClFua,kBAAmBpS,EAAU7E,eAC7BmS,cAAe9D,EAAcM,mBAC7BuI,mCAAoC,WAClCT,EAActK,EAAKmK,2CAA2CzR,EAAWC,MAG7Eif,EAAkD,CAChDjW,UAAWO,EAAcI,aACzBmI,SAAiD,kBAAhCvI,EAAcE,cAA6BF,EAAcE,cAAgB,KAC1FsI,wBAAyB,WACvB,OAAOxI,EAAcF,0BAA0BwC,UAAU,IAE3DmG,6BAA8BjS,EAC9BkS,eAAgBlS,EAAUnJ,SAC1Bsb,aAA6C,kBAAxBnS,EAAUpH,UAAyBoH,EAAUpH,UAAY,KAC9EwZ,kBAAmBpS,EAAU5E,YAC7BkS,cAAe9D,EAAcO,gBAC7BsI,mCAAoC,WAClCR,EAAcvK,EAAKoK,uCAAuC1R,EAAWC,MAGzEuJ,EAAcG,gBAAkB3J,EAAUxI,YAC1CgS,EAAcC,gBAAkBzJ,EAAUnI,YAC1C2R,EAAcK,iBAA4C,IAA1B7J,EAAUwH,YAC1CgC,EAAcI,aAAe5J,EAAUnJ,SACvC2S,EAAcE,cAAgB1J,EAAUpH,UACxC4Q,EAAcM,mBAAqB9J,EAAU7E,eAC7CqO,EAAcO,gBAAkB/J,EAAU5E,YAE1CoO,EAAcvT,cAAgB+J,EAAUqM,wBAEJzS,IAAhC4P,EAAcvT,eAChBuT,EAAcQ,uBAAwB,EACtCR,EAAcvT,cAAgB,GAE9BuT,EAAcQ,uBAAwB,EAGxCjP,EAASyO,cAAgBA,EAClB1U,EAAc,GAAIiG,EAAU,GAAI6W,EAAa,GAAIC,KAEzD,CACDxc,IAAK,0BACLrC,MAAO,SAAiC0C,GACtC,MAAoC,kBAAtBA,EAAMmC,YAA2BnC,EAAMmC,YAAcnC,EAAM4c,sBAE1E,CACDjd,IAAK,uBACLrC,MAAO,SAA8B0C,GACnC,MAAkC,kBAApBA,EAAMkD,UAAyBlD,EAAMkD,UAAYlD,EAAM6c,mBAEtE,CACDld,IAAK,kCAMLrC,MAAO,SAAyCwf,GAC9C,IAAIvS,EAAYuS,EAAMvS,UAClBlK,EAAayc,EAAMzc,WACnBC,EAAYwc,EAAMxc,UAClB+E,EAAW,CACbqP,2BAA4B/C,GAa9B,MAV0B,kBAAftR,GAA2BA,GAAc,IAClDgF,EAASkP,0BAA4BlU,EAAakK,EAAUlK,WEjoC9B,GADC,EFmoC/BgF,EAAShF,WAAaA,GAGC,kBAAdC,GAA0BA,GAAa,IAChD+E,EAASoP,wBAA0BnU,EAAYiK,EAAUjK,UEtoC3B,GADC,EFwoC/B+E,EAAS/E,UAAYA,GAGG,kBAAfD,GAA2BA,GAAc,GAAKA,IAAekK,EAAUlK,YAAmC,kBAAdC,GAA0BA,GAAa,GAAKA,IAAciK,EAAUjK,UAClK+E,EAGF,KAER,CACD1F,IAAK,kBACLrC,MAAO,SAAyBA,GAC9B,MAAwB,oBAAVA,EAAuBA,EAAQ,WAC3C,OAAOA,KAGV,CACDqC,IAAK,2BACLrC,MAAO,SAAkCgN,EAAWC,GAClD,IAAIzI,EAAcwI,EAAUxI,YACxBR,EAASgJ,EAAUhJ,OACnB2T,EAAoB3K,EAAU2K,kBAC9BxP,EAAiB6E,EAAU7E,eAC3B1D,EAAQuI,EAAUvI,MAClB1B,EAAakK,EAAUlK,WACvByT,EAAgBvJ,EAAUuJ,cAE9B,GAAIhS,EAAc,EAAG,CACnB,IAAIib,EAAcjb,EAAc,EAC5Bkb,EAAcvX,EAAiB,EAAIsX,EAAczY,KAAKC,IAAIwY,EAAatX,GACvEoQ,EAAkB/B,EAAcF,0BAA0ByB,eAC1D4H,EAAgBnJ,EAAcQ,uBAAyBuB,EAAkBvU,EAASwS,EAAcvT,cAAgB,EACpH,OAAOuT,EAAcR,6BAA6B4J,yBAAyB,CACzEC,MAAOlI,EACPgF,cAAelY,EAAQkb,EACvBG,cAAe/c,EACf2c,YAAaA,IAIjB,OAAO,IAER,CACDrd,IAAK,6CACLrC,MAAO,SAAoDgN,EAAWC,GACpE,IAAIlK,EAAakK,EAAUlK,WAEvBgd,EAAuBzL,EAAKkD,yBAAyBxK,EAAWC,GAEpE,MAAoC,kBAAzB8S,GAAqCA,GAAwB,GAAKhd,IAAegd,EACnFzL,EAAKiF,gCAAgC,CAC1CtM,UAAWA,EACXlK,WAAYgd,EACZ/c,WAAY,IAIT,KAER,CACDX,IAAK,0BACLrC,MAAO,SAAiCgN,EAAWC,GACjD,IAAIjJ,EAASgJ,EAAUhJ,OACnBH,EAAWmJ,EAAUnJ,SACrB8T,EAAoB3K,EAAU2K,kBAC9BvP,EAAc4E,EAAU5E,YACxB3D,EAAQuI,EAAUvI,MAClBzB,EAAYiK,EAAUjK,UACtBwT,EAAgBvJ,EAAUuJ,cAE9B,GAAI3S,EAAW,EAAG,CAChB,IAAImc,EAAWnc,EAAW,EACtB6b,EAActX,EAAc,EAAI4X,EAAWhZ,KAAKC,IAAI+Y,EAAU5X,GAC9DoQ,EAAoBhC,EAAcR,6BAA6B+B,eAC/D4H,EAAgBnJ,EAAcQ,uBAAyBwB,EAAoB/T,EAAQ+R,EAAcvT,cAAgB,EACrH,OAAOuT,EAAcF,0BAA0BsJ,yBAAyB,CACtEC,MAAOlI,EACPgF,cAAe3Y,EAAS2b,EACxBG,cAAe9c,EACf0c,YAAaA,IAIjB,OAAO,IAER,CACDrd,IAAK,yCACLrC,MAAO,SAAgDgN,EAAWC,GAChE,IAAIjK,EAAYiK,EAAUjK,UAEtBid,EAAsB3L,EAAKgD,wBAAwBtK,EAAWC,GAElE,MAAmC,kBAAxBgT,GAAoCA,GAAuB,GAAKjd,IAAcid,EAChF3L,EAAKiF,gCAAgC,CAC1CtM,UAAWA,EACXlK,YAAa,EACbC,UAAWid,IAIR,OAIJ3L,EA5rCT,CA6rCEvT,iBAAsBqrB,IAAgBtd,EAAQ,YAAqD,MAkLjGC,GAEJqd,IAAgB9X,EAAM,eAAgB,CACpC,aAAc,OACd,iBAAiB,EACjBmG,oBAAoB,EACpBpC,YAAY,EACZC,WAAW,EACX8D,kBGv6Ca,SAAkC7Y,GA2B/C,IA1BA,IAAIoa,EAAYpa,EAAKoa,UACjBha,EAAeJ,EAAKI,aACpBqS,EAA+BzS,EAAKyS,6BACpCf,EAAmB1R,EAAK0R,iBACxBE,EAAkB5R,EAAK4R,gBACvBnP,EAA2BzC,EAAKyC,yBAChC8W,EAA6BvZ,EAAKuZ,2BAClCtI,EAAcjR,EAAKiR,YACnBgI,EAAoBjZ,EAAKiZ,kBACzBvY,EAASV,EAAKU,OACdqS,EAA4B/S,EAAK+S,0BACjCb,EAAgBlS,EAAKkS,cACrBE,EAAepS,EAAKoS,aACpBiI,EAAara,EAAKqa,WAClBZ,EAA2BzZ,EAAKyZ,yBAChCP,EAAuBlZ,EAAKkZ,qBAC5BI,EAAoBtZ,EAAKsZ,kBACzB+Q,EAAgB,GAMhBC,EAAqB7X,EAA6B6X,sBAAwBvX,EAA0BuX,qBACpGC,GAAiBtZ,IAAgBqZ,EAE5BrqB,EAAWiS,EAAejS,GAAYmS,EAAcnS,IAG3D,IAFA,IAAIuqB,EAAWzX,EAA0BqC,yBAAyBnV,GAEzDW,EAAc8Q,EAAkB9Q,GAAegR,EAAiBhR,IAAe,CACtF,IAAI6pB,EAAchY,EAA6B2C,yBAAyBxU,GACpE8pB,EAAY9pB,GAAesY,EAAqBQ,OAAS9Y,GAAesY,EAAqBS,MAAQ1Z,GAAYqZ,EAAkBI,OAASzZ,GAAYqZ,EAAkBK,KAC1K7a,EAAM,GAAGkN,OAAO/L,EAAU,KAAK+L,OAAOpL,GACtCJ,OAAQ,EAER+pB,GAAiBlQ,EAAWvb,GAC9B0B,EAAQ6Z,EAAWvb,GAIf2D,IAA6BA,EAAyBwI,IAAIhL,EAAUW,GAItEJ,EAAQ,CACNC,OAAQ,OACRwG,KAAM,EACNH,SAAU,WACVU,IAAK,EACLtG,MAAO,SAGTV,EAAQ,CACNC,OAAQ+pB,EAAS1oB,KACjBmF,KAAMwjB,EAAYpR,OAASE,EAC3BzS,SAAU,WACVU,IAAKgjB,EAASnR,OAASI,EACvBvY,MAAOupB,EAAY3oB,MAErBuY,EAAWvb,GAAO0B,GAItB,IAAImqB,EAAqB,CACvB/pB,YAAaA,EACbqQ,YAAaA,EACbyZ,UAAWA,EACX5rB,IAAKA,EACL4B,OAAQA,EACRT,SAAUA,EACVO,MAAOA,GAELoqB,OAAe,GAWd3R,IAAqBhI,GAAiBsI,GAA+BE,EAQxEmR,EAAexqB,EAAauqB,IAPvBvQ,EAAUtb,KACbsb,EAAUtb,GAAOsB,EAAauqB,IAGhCC,EAAexQ,EAAUtb,IAMP,MAAhB8rB,IAAyC,IAAjBA,GAQ5BP,EAAchsB,KAAKusB,GAIvB,OAAOP,GH6zCPjT,cAAe,WACfC,eAAgB,GAChB0E,oBAAqB,IACrBC,iBAAkB,GAClBlG,iBAAkBpW,UAClB6X,kBAv4Ce,WACf,OAAO,MAu4CP5V,SAAU,aACVM,0BAA2B,aAC3B0C,kBAAmB,aACnBmU,oBAAqB,EACrBC,sBE76Ca,SAAsC/Y,GACnD,IAAI0S,EAAY1S,EAAK0S,UACjBmH,EAAqB7Z,EAAK6Z,mBAC1BC,EAAkB9Z,EAAK8Z,gBACvBC,EAAa/Z,EAAK+Z,WAClBC,EAAYha,EAAKga,UAErB,OAfoC,IAehCF,EACK,CACLI,mBAAoBzW,KAAKS,IAAI,EAAG6V,GAChCI,kBAAmB1W,KAAKC,IAAIgP,EAAY,EAAGsH,EAAYH,IAGlD,CACLK,mBAAoBzW,KAAKS,IAAI,EAAG6V,EAAaF,GAC7CM,kBAAmB1W,KAAKC,IAAIgP,EAAY,EAAGsH,KF+5C/ChB,iBAAkB,GAClBxB,KAAM,OACN8C,2BA15CiD,IA25CjDlG,kBAAmB,OACnBxP,gBAAiB,EACjBC,aAAc,EACdrE,MAAO,GACP8H,SAAU,EACV2Q,mBAAmB,IAGrBpP,mBAASkH,GACMA,QI17CA,SAAS8Z,EAA6B7qB,GACnD,IAAI0S,EAAY1S,EAAK0S,UACjBmH,EAAqB7Z,EAAK6Z,mBAC1BC,EAAkB9Z,EAAK8Z,gBACvBC,EAAa/Z,EAAK+Z,WAClBC,EAAYha,EAAKga,UAMrB,OAFAH,EAAqBpW,KAAKS,IAAI,EAAG2V,GAjBG,IAmBhCC,EACK,CACLI,mBAAoBzW,KAAKS,IAAI,EAAG6V,EAAa,GAC7CI,kBAAmB1W,KAAKC,IAAIgP,EAAY,EAAGsH,EAAYH,IAGlD,CACLK,mBAAoBzW,KAAKS,IAAI,EAAG6V,EAAaF,GAC7CM,kBAAmB1W,KAAKC,IAAIgP,EAAY,EAAGsH,EAAY,IC5B7D,ICQIzO,EAAQC,EAEZ,SAAS5N,EAAQC,EAAQC,GAAkB,IAAIC,EAAOzB,OAAOyB,KAAKF,GAAS,GAAIvB,OAAO0B,sBAAuB,CAAE,IAAIC,EAAU3B,OAAO0B,sBAAsBH,GAAaC,IAAgBG,EAAUA,EAAQC,QAAO,SAAUC,GAAO,OAAO7B,OAAO8B,yBAAyBP,EAAQM,GAAKzB,eAAgBqB,EAAKM,KAAKC,MAAMP,EAAME,GAAY,OAAOF,EAU9U,IAAI+sB,GAAmBtf,EAAQD,EAE/B,SAAUrM,GAGR,SAAS4rB,IACP,IAAI1tB,EAEAiC,EAEJupB,IAAgBtpB,KAAMwrB,GAEtB,IAAK,IAAIlf,EAAOlN,UAAUC,OAAQkN,EAAO,IAAIC,MAAMF,GAAOG,EAAO,EAAGA,EAAOH,EAAMG,IAC/EF,EAAKE,GAAQrN,UAAUqN,GAkFzB,OA/EA1M,EAAQ0qB,IAA2BzqB,MAAOlC,EAAmB4sB,IAAgBc,IAAkBvrB,KAAKjB,MAAMlB,EAAkB,CAACkC,MAAM0M,OAAOH,KAE1Igd,IAAgBoB,IAAuB5qB,GAAQ,QAAS,CACtDuF,eAAgB,EAChBC,YAAa,EACboO,cAAe,CACbM,mBAAoB,EACpBC,gBAAiB,KAIrBqV,IAAgBoB,IAAuB5qB,GAAQ,oBAAqB,GAEpEwpB,IAAgBoB,IAAuB5qB,GAAQ,mBAAoB,GAEnEwpB,IAAgBoB,IAAuB5qB,GAAQ,iBAAkB,GAEjEwpB,IAAgBoB,IAAuB5qB,GAAQ,gBAAiB,GAEhEwpB,IAAgBoB,IAAuB5qB,GAAQ,cAAc,SAAUkT,GACrE,IAAIpS,EAAcd,EAAMF,MACpB8B,EAAcd,EAAYc,YAC1B8pB,EAAW5qB,EAAY4qB,SACvBC,EAAO7qB,EAAY6qB,KACnB1qB,EAAWH,EAAYG,SAE3B,IAAIyqB,EAAJ,CAIA,IAAIE,EAAwB5rB,EAAM6rB,kBAC9BC,EAAyBF,EAAsBrmB,eAC/CwmB,EAAsBH,EAAsBpmB,YAE5CwmB,EAAyBhsB,EAAM6rB,kBAC/BtmB,EAAiBymB,EAAuBzmB,eACxCC,EAAcwmB,EAAuBxmB,YAIzC,OAAQ0N,EAAMzT,KACZ,IAAK,YACH+F,EAAuB,UAATmmB,EAAmBvnB,KAAKC,IAAImB,EAAc,EAAGvE,EAAW,GAAKmD,KAAKC,IAAIrE,EAAM4S,cAAgB,EAAG3R,EAAW,GACxH,MAEF,IAAK,YACHsE,EAA0B,UAATomB,EAAmBvnB,KAAKS,IAAIU,EAAiB,EAAG,GAAKnB,KAAKS,IAAI7E,EAAMkS,kBAAoB,EAAG,GAC5G,MAEF,IAAK,aACH3M,EAA0B,UAATomB,EAAmBvnB,KAAKC,IAAIkB,EAAiB,EAAG3D,EAAc,GAAKwC,KAAKC,IAAIrE,EAAMoS,iBAAmB,EAAGxQ,EAAc,GACvI,MAEF,IAAK,UACH4D,EAAuB,UAATmmB,EAAmBvnB,KAAKS,IAAIW,EAAc,EAAG,GAAKpB,KAAKS,IAAI7E,EAAM0S,eAAiB,EAAG,GAInGnN,IAAmBumB,GAA0BtmB,IAAgBumB,IAC/D7Y,EAAM+Y,iBAENjsB,EAAMksB,mBAAmB,CACvB3mB,eAAgBA,EAChBC,YAAaA,SAKnBgkB,IAAgBoB,IAAuB5qB,GAAQ,sBAAsB,SAAUW,GAC7E,IAAI0R,EAAmB1R,EAAK0R,iBACxBE,EAAkB5R,EAAK4R,gBACvBM,EAAgBlS,EAAKkS,cACrBE,EAAepS,EAAKoS,aACxB/S,EAAMkS,kBAAoBG,EAC1BrS,EAAMoS,iBAAmBG,EACzBvS,EAAM0S,eAAiBG,EACvB7S,EAAM4S,cAAgBG,KAGjB/S,EAmFT,OA/KA6qB,IAAUY,EAAiB5rB,GA+F3B4pB,IAAagC,EAAiB,CAAC,CAC7BhsB,IAAK,mBACLrC,MAAO,SAA0BkE,GAC/B,IAAIiE,EAAiBjE,EAAMiE,eACvBC,EAAclE,EAAMkE,YACxBvF,KAAKoC,SAAS,CACZmD,YAAaA,EACbD,eAAgBA,MAGnB,CACD9F,IAAK,SACLrC,MAAO,WACL,IAAIoE,EAAevB,KAAKH,MACpB8I,EAAYpH,EAAaoH,UACzB2E,EAAW/L,EAAa+L,SAExB4e,EAAyBlsB,KAAK4rB,kBAC9BtmB,EAAiB4mB,EAAuB5mB,eACxCC,EAAc2mB,EAAuB3mB,YAEzC,OAAOrH,gBAAoB,MAAO,CAChCyK,UAAWA,EACXwjB,UAAWnsB,KAAKosB,YACf9e,EAAS,CACVjI,kBAAmBrF,KAAKqsB,mBACxB/mB,eAAgBA,EAChBC,YAAaA,OAGhB,CACD/F,IAAK,kBACLrC,MAAO,WACL,OAAO6C,KAAKH,MAAMysB,aAAetsB,KAAKH,MAAQG,KAAKkC,QAEpD,CACD1C,IAAK,qBACLrC,MAAO,SAA4BsE,GACjC,IAAI6D,EAAiB7D,EAAM6D,eACvBC,EAAc9D,EAAM8D,YACpB7D,EAAe1B,KAAKH,MACpBysB,EAAe5qB,EAAa4qB,aAC5BC,EAAmB7qB,EAAa6qB,iBAEJ,oBAArBA,GACTA,EAAiB,CACfjnB,eAAgBA,EAChBC,YAAaA,IAIZ+mB,GACHtsB,KAAKoC,SAAS,CACZkD,eAAgBA,EAChBC,YAAaA,OAIjB,CAAC,CACH/F,IAAK,2BACLrC,MAAO,SAAkCgN,EAAWC,GAClD,OAAID,EAAUmiB,aACL,GAGLniB,EAAU7E,iBAAmB8E,EAAUuJ,cAAcM,oBAAsB9J,EAAU5E,cAAgB6E,EAAUuJ,cAAcO,gBA3KvI,SAAuBhV,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAAyB,MAAhBF,UAAUD,GAAaC,UAAUD,GAAK,GAAQA,EAAI,EAAKb,EAAQgB,GAAQ,GAAMC,SAAQ,SAAUC,GAAO+pB,IAAgBrqB,EAAQM,EAAKF,EAAOE,OAAsBxC,OAAOyC,0BAA6BzC,OAAO0C,iBAAiBR,EAAQlC,OAAOyC,0BAA0BH,IAAmBhB,EAAQgB,GAAQC,SAAQ,SAAUC,GAAOxC,OAAOC,eAAeiC,EAAQM,EAAKxC,OAAO8B,yBAAyBQ,EAAQE,OAAe,OAAON,EA4K9eD,CAAc,GAAImL,EAAW,CAClC9E,eAAgB6E,EAAU7E,eAC1BC,YAAa4E,EAAU5E,YACvBoO,cAAe,CACbM,mBAAoB9J,EAAU7E,eAC9B4O,gBAAiB/J,EAAU5E,eAK1B,OAIJimB,EAhLT,CAiLEttB,iBAAsBqrB,IAAgBtd,EAAQ,YAAqD,MAWjGC,GAEJqd,IAAgBiC,EAAiB,eAAgB,CAC/CC,UAAU,EACVa,cAAc,EACdZ,KAAM,QACNpmB,eAAgB,EAChBC,YAAa,IAGfgF,mBAASihB,GACMA,ICrNXvf,EAAQC,E,SAEZ,SAAS5N,GAAQC,EAAQC,GAAkB,IAAIC,EAAOzB,OAAOyB,KAAKF,GAAS,GAAIvB,OAAO0B,sBAAuB,CAAE,IAAIC,EAAU3B,OAAO0B,sBAAsBH,GAAaC,IAAgBG,EAAUA,EAAQC,QAAO,SAAUC,GAAO,OAAO7B,OAAO8B,yBAAyBP,EAAQM,GAAKzB,eAAgBqB,EAAKM,KAAKC,MAAMP,EAAME,GAAY,OAAOF,EAE9U,SAASQ,GAAcC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAAyB,MAAhBF,UAAUD,GAAaC,UAAUD,GAAK,GAAQA,EAAI,EAAKb,GAAQgB,GAAQ,GAAMC,SAAQ,SAAUC,GAAO+pB,IAAgBrqB,EAAQM,EAAKF,EAAOE,OAAsBxC,OAAOyC,0BAA6BzC,OAAO0C,iBAAiBR,EAAQlC,OAAOyC,0BAA0BH,IAAmBhB,GAAQgB,GAAQC,SAAQ,SAAUC,GAAOxC,OAAOC,eAAeiC,EAAQM,EAAKxC,OAAO8B,yBAAyBQ,EAAQE,OAAe,OAAON,EAI7f,IAAI6jB,IAAa7W,EAAQD,EAEzB,SAAU+W,GAGR,SAASD,IACP,IAAIjlB,EAEAiC,EAEJupB,IAAgBtpB,KAAM+iB,GAEtB,IAAK,IAAIzW,EAAOlN,UAAUC,OAAQkN,EAAO,IAAIC,MAAMF,GAAOG,EAAO,EAAGA,EAAOH,EAAMG,IAC/EF,EAAKE,GAAQrN,UAAUqN,GAyDzB,OAtDA1M,EAAQ0qB,IAA2BzqB,MAAOlC,EAAmB4sB,IAAgB3H,IAAY9iB,KAAKjB,MAAMlB,EAAkB,CAACkC,MAAM0M,OAAOH,KAEpIgd,IAAgBoB,IAAuB5qB,GAAQ,QAAS,CACtDoB,OAAQpB,EAAMF,MAAMgM,eAAiB,EACrCjK,MAAO7B,EAAMF,MAAMiM,cAAgB,IAGrCyd,IAAgBoB,IAAuB5qB,GAAQ,mBAAe,GAE9DwpB,IAAgBoB,IAAuB5qB,GAAQ,kBAAc,GAE7DwpB,IAAgBoB,IAAuB5qB,GAAQ,eAAW,GAE1DwpB,IAAgBoB,IAAuB5qB,GAAQ,4BAAwB,GAEvEwpB,IAAgBoB,IAAuB5qB,GAAQ,aAAa,WAC1D,IAAIc,EAAcd,EAAMF,MACpBojB,EAAgBpiB,EAAYoiB,cAC5BC,EAAeriB,EAAYqiB,aAC3BC,EAAWtiB,EAAYsiB,SAE3B,GAAIpjB,EAAMqjB,YAAa,CAIrB,IAAIjiB,EAASpB,EAAMqjB,YAAYjV,cAAgB,EAC3CvM,EAAQ7B,EAAMqjB,YAAYhV,aAAe,EAEzClN,GADMnB,EAAMsjB,SAAWrE,QACXsE,iBAAiBvjB,EAAMqjB,cAAgB,GACnDG,EAAcC,SAAStiB,EAAMqiB,YAAa,KAAO,EACjDE,EAAeD,SAAStiB,EAAMuiB,aAAc,KAAO,EACnDC,EAAaF,SAAStiB,EAAMwiB,WAAY,KAAO,EAC/CC,EAAgBH,SAAStiB,EAAMyiB,cAAe,KAAO,EACrDC,EAAYziB,EAASuiB,EAAaC,EAClCE,EAAWjiB,EAAQ2hB,EAAcE,IAEhCR,GAAiBljB,EAAMmC,MAAMf,SAAWyiB,IAAcV,GAAgBnjB,EAAMmC,MAAMN,QAAUiiB,KAC/F9jB,EAAMqC,SAAS,CACbjB,OAAQA,EAASuiB,EAAaC,EAC9B/hB,MAAOA,EAAQ2hB,EAAcE,IAG/BN,EAAS,CACPhiB,OAAQA,EACRS,MAAOA,SAMf2nB,IAAgBoB,IAAuB5qB,GAAQ,WAAW,SAAU+jB,GAClE/jB,EAAMgkB,WAAaD,KAGd/jB,EAiFT,OApJA6qB,IAAU7H,EAAWC,GAsErBwG,IAAazG,EAAW,CAAC,CACvBvjB,IAAK,oBACLrC,MAAO,WACL,IAAI6mB,EAAQhkB,KAAKH,MAAMmkB,MAEnBhkB,KAAK+jB,YAAc/jB,KAAK+jB,WAAWE,YAAcjkB,KAAK+jB,WAAWE,WAAWpW,eAAiB7N,KAAK+jB,WAAWE,WAAWpW,cAAcC,aAAe9N,KAAK+jB,WAAWE,sBAAsBjkB,KAAK+jB,WAAWE,WAAWpW,cAAcC,YAAYC,cAIlP/N,KAAKojB,YAAcpjB,KAAK+jB,WAAWE,WACnCjkB,KAAKqjB,QAAUrjB,KAAK+jB,WAAWE,WAAWpW,cAAcC,YAGxD9N,KAAK8iB,qBAAuB0J,YAA0BxI,EAAOhkB,KAAKqjB,SAElErjB,KAAK8iB,qBAAqBoB,kBAAkBlkB,KAAKojB,YAAapjB,KAAKmkB,WAEnEnkB,KAAKmkB,eAGR,CACD3kB,IAAK,uBACLrC,MAAO,WACD6C,KAAK8iB,sBAAwB9iB,KAAKojB,aACpCpjB,KAAK8iB,qBAAqBsB,qBAAqBpkB,KAAKojB,YAAapjB,KAAKmkB,aAGzE,CACD3kB,IAAK,SACLrC,MAAO,WACL,IAAIoE,EAAevB,KAAKH,MACpByN,EAAW/L,EAAa+L,SACxB3E,EAAYpH,EAAaoH,UACzBsa,EAAgB1hB,EAAa0hB,cAC7BC,EAAe3hB,EAAa2hB,aAC5BhiB,EAAQK,EAAaL,MACrBe,EAAcjC,KAAKkC,MACnBf,EAASc,EAAYd,OACrBS,EAAQK,EAAYL,MAIpByiB,EAAa,CACf9c,SAAU,WAER+c,EAAc,GAyBlB,OAvBKrB,IACHoB,EAAWljB,OAAS,EACpBmjB,EAAYnjB,OAASA,GAGlB+hB,IACHmB,EAAWziB,MAAQ,EACnB0iB,EAAY1iB,MAAQA,GAgBf1D,gBAAoB,MAAO,CAChCyK,UAAWA,EACXpI,IAAKP,KAAKukB,QACVrjB,MAAOjC,GAAc,GAAIolB,EAAY,GAAInjB,IACxCoM,EAASgX,QAITvB,EArJT,CAsJE7kB,aAAkBqrB,IAAgBtd,EAAQ,YAAqD,MA2B7FC,GAEJqd,IAAgBxG,GAAW,eAAgB,CACzCI,SAAU,aACVF,eAAe,EACfC,cAAc,EACdhiB,MAAO,K,ICjML+K,GAAQC,G,SAURG,IAAgBH,GAAQD,GAE5B,SAAUrM,GAGR,SAASyM,IACP,IAAIvO,EAEAiC,EAEJupB,IAAgBtpB,KAAMqM,GAEtB,IAAK,IAAIC,EAAOlN,UAAUC,OAAQkN,EAAO,IAAIC,MAAMF,GAAOG,EAAO,EAAGA,EAAOH,EAAMG,IAC/EF,EAAKE,GAAQrN,UAAUqN,GA4CzB,OAzCA1M,EAAQ0qB,IAA2BzqB,MAAOlC,EAAmB4sB,IAAgBre,IAAepM,KAAKjB,MAAMlB,EAAkB,CAACkC,MAAM0M,OAAOH,KAEvIgd,IAAgBoB,IAAuB5qB,GAAQ,cAAU,GAEzDwpB,IAAgBoB,IAAuB5qB,GAAQ,YAAY,WACzD,IAAIc,EAAcd,EAAMF,MACpB8M,EAAQ9L,EAAY8L,MACpBC,EAAwB/L,EAAYS,YACpCA,OAAwC,IAA1BsL,EAAmC,EAAIA,EACrDxL,EAASP,EAAYO,OACrByL,EAAuBhM,EAAYF,SACnCA,OAAoC,IAAzBkM,EAAkC9M,EAAMF,MAAMiC,OAAS,EAAI+K,EAEtEC,EAAwB/M,EAAMgN,uBAC9B5L,EAAS2L,EAAsB3L,OAC/BS,EAAQkL,EAAsBlL,MAE9BT,IAAWwL,EAAMlB,UAAU9K,EAAUW,IAAgBM,IAAU+K,EAAMjB,SAAS/K,EAAUW,KAC1FqL,EAAMf,IAAIjL,EAAUW,EAAaM,EAAOT,GAEpCC,GAA8C,oBAA7BA,EAAO0D,mBAC1B1D,EAAO0D,kBAAkB,CACvBxD,YAAaA,EACbX,SAAUA,QAMlB4oB,IAAgBoB,IAAuB5qB,GAAQ,kBAAkB,SAAUiN,IACrEA,GAAaA,aAAmBC,SAClCC,QAAQC,KAAK,mEAGfpN,EAAMqN,OAASJ,EAEXA,GACFjN,EAAMsN,uBAIHtN,EAkGT,OAxJA6qB,IAAUve,EAAczM,GAyDxB4pB,IAAand,EAAc,CAAC,CAC1B7M,IAAK,oBACLrC,MAAO,WACL6C,KAAKqN,sBAEN,CACD7N,IAAK,qBACLrC,MAAO,WACL6C,KAAKqN,sBAEN,CACD7N,IAAK,SACLrC,MAAO,WACL,IAAImQ,EAAWtN,KAAKH,MAAMyN,SAC1B,MAA2B,oBAAbA,EAA0BA,EAAS,CAC/CC,QAASvN,KAAKwN,SACdC,cAAezN,KAAK0N,iBACjBJ,IAEN,CACD9N,IAAK,uBACLrC,MAAO,WACL,IAAIwP,EAAQ3M,KAAKH,MAAM8M,MACnBgB,EAAO3N,KAAKoN,QAAUQ,uBAAY5N,MAEtC,GAAI2N,GAAQA,EAAKE,eAAiBF,EAAKE,cAAcC,aAAeH,aAAgBA,EAAKE,cAAcC,YAAYC,YAAa,CAC9H,IAAIC,EAAaL,EAAKzM,MAAMU,MACxBqM,EAAcN,EAAKzM,MAAMC,OAUxBwL,EAAMnB,kBACTmC,EAAKzM,MAAMU,MAAQ,QAGhB+K,EAAMpB,mBACToC,EAAKzM,MAAMC,OAAS,QAGtB,IAAIA,EAASgD,KAAK+J,KAAKP,EAAKQ,cACxBvM,EAAQuC,KAAK+J,KAAKP,EAAKS,aAU3B,OARIJ,IACFL,EAAKzM,MAAMU,MAAQoM,GAGjBC,IACFN,EAAKzM,MAAMC,OAAS8M,GAGf,CACL9M,OAAQA,EACRS,MAAOA,GAGT,MAAO,CACLT,OAAQ,EACRS,MAAO,KAIZ,CACDpC,IAAK,oBACLrC,MAAO,WACL,IAAIoE,EAAevB,KAAKH,MACpB8M,EAAQpL,EAAaoL,MACrB0B,EAAwB9M,EAAaD,YACrCA,OAAwC,IAA1B+M,EAAmC,EAAIA,EACrDjN,EAASG,EAAaH,OACtBkN,EAAwB/M,EAAaZ,SACrCA,OAAqC,IAA1B2N,EAAmCtO,KAAKH,MAAMiC,OAAS,EAAIwM,EAE1E,IAAK3B,EAAMhB,IAAIhL,EAAUW,GAAc,CACrC,IAAIiN,EAAyBvO,KAAK+M,uBAC9B5L,EAASoN,EAAuBpN,OAChCS,EAAQ2M,EAAuB3M,MAEnC+K,EAAMf,IAAIjL,EAAUW,EAAaM,EAAOT,GAEpCC,GAA0D,oBAAzCA,EAAOoN,+BAC1BpN,EAAOoN,8BAA8B,CACnClN,YAAaA,EACbX,SAAUA,SAOb0L,EAzJT,CA0JEnO,iBAAsBqrB,IAAgBtd,GAAQ,YAAqD,MAYjGC,IAEJqd,IAAgBld,GAAc,8BAA8B,GCzLrD,IAOHsC,GAEJ,WACE,SAASA,IACP,IAAI5O,EAAQC,KAER+K,EAAS3L,UAAUC,OAAS,QAAsB0E,IAAjB3E,UAAU,GAAmBA,UAAU,GAAK,GAEjFkqB,IAAgBtpB,KAAM2O,GAEtB4a,IAAgBvpB,KAAM,mBAAoB,IAE1CupB,IAAgBvpB,KAAM,kBAAmB,IAEzCupB,IAAgBvpB,KAAM,oBAAqB,IAE3CupB,IAAgBvpB,KAAM,kBAAmB,IAEzCupB,IAAgBvpB,KAAM,sBAAkB,GAExCupB,IAAgBvpB,KAAM,qBAAiB,GAEvCupB,IAAgBvpB,KAAM,kBAAc,GAEpCupB,IAAgBvpB,KAAM,iBAAa,GAEnCupB,IAAgBvpB,KAAM,kBAAc,GAEpCupB,IAAgBvpB,KAAM,uBAAmB,GAEzCupB,IAAgBvpB,KAAM,sBAAkB,GAExCupB,IAAgBvpB,KAAM,eAAgB,GAEtCupB,IAAgBvpB,KAAM,YAAa,GAEnCupB,IAAgBvpB,KAAM,eAAe,SAAUU,GAC7C,IAAIoB,EAAQpB,EAAKoB,MAEbtC,EAAMO,EAAM6O,WAAW,EAAG9M,GAE9B,YAAwCiC,IAAjChE,EAAM8O,kBAAkBrP,GAAqBO,EAAM8O,kBAAkBrP,GAAOO,EAAM+O,iBAG3Fya,IAAgBvpB,KAAM,aAAa,SAAUqB,GAC3C,IAAIS,EAAQT,EAAMS,MAEdtC,EAAMO,EAAM6O,WAAW9M,EAAO,GAElC,YAAsCiC,IAA/BhE,EAAMgP,gBAAgBvP,GAAqBO,EAAMgP,gBAAgBvP,GAAOO,EAAMiP,kBAGvF,IAAInD,EAAgBd,EAAOc,cACvBC,EAAef,EAAOe,aACtBmD,EAAclE,EAAOkE,YACrBC,EAAanE,EAAOmE,WACpBC,EAAYpE,EAAOoE,UACnBC,EAAYrE,EAAOqE,UACnBC,EAAWtE,EAAOsE,SACtBrP,KAAKsP,iBAAkC,IAAhBL,EACvBjP,KAAKuP,gBAAgC,IAAfL,EACtBlP,KAAKwP,WAAaJ,GAAa,EAC/BpP,KAAKyP,UAAYJ,GAAY,EAC7BrP,KAAK4O,WAAaO,GAAaO,GAC/B1P,KAAKgP,eAAiB7K,KAAKS,IAAI5E,KAAKwP,WAAqC,kBAAlB3D,EAA6BA,EAvE5D,IAwExB7L,KAAK8O,cAAgB3K,KAAKS,IAAI5E,KAAKyP,UAAmC,kBAAjB3D,EAA4BA,EAvE1D,KAyNzB,OAjIA0d,IAAa7a,EAAmB,CAAC,CAC/BnP,IAAK,QACLrC,MAAO,SAAewD,GACpB,IAAIW,EAAclC,UAAUC,OAAS,QAAsB0E,IAAjB3E,UAAU,GAAmBA,UAAU,GAAK,EAElFI,EAAMQ,KAAK4O,WAAWjO,EAAUW,UAE7BtB,KAAK2P,iBAAiBnQ,UACtBQ,KAAK4P,gBAAgBpQ,GAE5BQ,KAAK6P,+BAA+BlP,EAAUW,KAE/C,CACD9B,IAAK,WACLrC,MAAO,WACL6C,KAAK2P,iBAAmB,GACxB3P,KAAK4P,gBAAkB,GACvB5P,KAAK6O,kBAAoB,GACzB7O,KAAK+O,gBAAkB,GACvB/O,KAAK8P,UAAY,EACjB9P,KAAK+P,aAAe,IAErB,CACDvQ,IAAK,iBACLrC,MAAO,WACL,OAAO6C,KAAKsP,kBAEb,CACD9P,IAAK,gBACLrC,MAAO,WACL,OAAO6C,KAAKuP,iBAEb,CACD/P,IAAK,YACLrC,MAAO,SAAmBwD,GACxB,IAAIW,EAAclC,UAAUC,OAAS,QAAsB0E,IAAjB3E,UAAU,GAAmBA,UAAU,GAAK,EAEtF,GAAIY,KAAKsP,gBACP,OAAOtP,KAAKgP,eAEZ,IAAIvC,EAAOzM,KAAK4O,WAAWjO,EAAUW,GAErC,YAAuCyC,IAAhC/D,KAAK2P,iBAAiBlD,GAAsBtI,KAAKS,IAAI5E,KAAKwP,WAAYxP,KAAK2P,iBAAiBlD,IAASzM,KAAKgP,iBAGpH,CACDxP,IAAK,WACLrC,MAAO,SAAkBwD,GACvB,IAAIW,EAAclC,UAAUC,OAAS,QAAsB0E,IAAjB3E,UAAU,GAAmBA,UAAU,GAAK,EAEtF,GAAIY,KAAKuP,eACP,OAAOvP,KAAK8O,cAEZ,IAAIkB,EAAQhQ,KAAK4O,WAAWjO,EAAUW,GAEtC,YAAuCyC,IAAhC/D,KAAK4P,gBAAgBI,GAAuB7L,KAAKS,IAAI5E,KAAKyP,UAAWzP,KAAK4P,gBAAgBI,IAAUhQ,KAAK8O,gBAGnH,CACDtP,IAAK,MACLrC,MAAO,SAAawD,GAClB,IAAIW,EAAclC,UAAUC,OAAS,QAAsB0E,IAAjB3E,UAAU,GAAmBA,UAAU,GAAK,EAElFI,EAAMQ,KAAK4O,WAAWjO,EAAUW,GAEpC,YAAsCyC,IAA/B/D,KAAK2P,iBAAiBnQ,KAE9B,CACDA,IAAK,MACLrC,MAAO,SAAawD,EAAUW,EAAaM,EAAOT,GAChD,IAAI3B,EAAMQ,KAAK4O,WAAWjO,EAAUW,GAEhCA,GAAetB,KAAK+P,eACtB/P,KAAK+P,aAAezO,EAAc,GAGhCX,GAAYX,KAAK8P,YACnB9P,KAAK8P,UAAYnP,EAAW,GAI9BX,KAAK2P,iBAAiBnQ,GAAO2B,EAC7BnB,KAAK4P,gBAAgBpQ,GAAOoC,EAE5B5B,KAAK6P,+BAA+BlP,EAAUW,KAE/C,CACD9B,IAAK,iCACLrC,MAAO,SAAwCwD,EAAUW,GAKvD,IAAKtB,KAAKuP,eAAgB,CAGxB,IAFA,IAAIvN,EAAc,EAET7C,EAAI,EAAGA,EAAIa,KAAK8P,UAAW3Q,IAClC6C,EAAcmC,KAAKS,IAAI5C,EAAahC,KAAK0L,SAASvM,EAAGmC,IAGvD,IAAI2O,EAAYjQ,KAAK4O,WAAW,EAAGtN,GAEnCtB,KAAK6O,kBAAkBoB,GAAajO,EAGtC,IAAKhC,KAAKsP,gBAAiB,CAGzB,IAFA,IAAIvM,EAAY,EAEPmN,EAAK,EAAGA,EAAKlQ,KAAK+P,aAAcG,IACvCnN,EAAYoB,KAAKS,IAAI7B,EAAW/C,KAAKyL,UAAU9K,EAAUuP,IAG3D,IAAIC,EAASnQ,KAAK4O,WAAWjO,EAAU,GAEvCX,KAAK+O,gBAAgBoB,GAAUpN,KAGlC,CACDvD,IAAK,gBACLnC,IAAK,WACH,OAAO2C,KAAKgP,iBAEb,CACDxP,IAAK,eACLnC,IAAK,WACH,OAAO2C,KAAK8O,kBAITH,EAjNT,GAsNA,SAASe,GAAiB/O,EAAUW,GAClC,MAAO,GAAGoL,OAAO/L,EAAU,KAAK+L,OAAOpL,GC3NzC,SAAShD,GAAQC,EAAQC,GAAkB,IAAIC,EAAOzB,OAAOyB,KAAKF,GAAS,GAAIvB,OAAO0B,sBAAuB,CAAE,IAAIC,EAAU3B,OAAO0B,sBAAsBH,GAAaC,IAAgBG,EAAUA,EAAQC,QAAO,SAAUC,GAAO,OAAO7B,OAAO8B,yBAAyBP,EAAQM,GAAKzB,eAAgBqB,EAAKM,KAAKC,MAAMP,EAAME,GAAY,OAAOF,EAE9U,SAASQ,GAAcC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAAyB,MAAhBF,UAAUD,GAAaC,UAAUD,GAAK,GAAQA,EAAI,EAAKb,GAAQgB,GAAQ,GAAMC,SAAQ,SAAUC,GAAO+pB,IAAgBrqB,EAAQM,EAAKF,EAAOE,OAAsBxC,OAAOyC,0BAA6BzC,OAAO0C,iBAAiBR,EAAQlC,OAAOyC,0BAA0BH,IAAmBhB,GAAQgB,GAAQC,SAAQ,SAAUC,GAAOxC,OAAOC,eAAeiC,EAAQM,EAAKxC,OAAO8B,yBAAyBQ,EAAQE,OAAe,OAAON,EAc7f,IAMIsS,GACQ,WADRA,GAES,YAOTib,GAEJ,SAAU7sB,GAIR,SAAS6sB,IACP,IAAI3uB,EAEAiC,EAEJupB,IAAgBtpB,KAAMysB,GAEtB,IAAK,IAAIngB,EAAOlN,UAAUC,OAAQkN,EAAO,IAAIC,MAAMF,GAAOG,EAAO,EAAGA,EAAOH,EAAMG,IAC/EF,EAAKE,GAAQrN,UAAUqN,GAkIzB,OA/HA1M,EAAQ0qB,IAA2BzqB,MAAOlC,EAAmB4sB,IAAgB+B,IAAiBxsB,KAAKjB,MAAMlB,EAAkB,CAACkC,MAAM0M,OAAOH,KAGzIgd,IAAgBoB,IAAuB5qB,GAAQ,QAAS,CACtD4R,aAAa,EACbzR,WAAY,EACZC,UAAW,IAGbopB,IAAgBoB,IAAuB5qB,GAAQ,6CAA6C,GAE5FwpB,IAAgBoB,IAAuB5qB,GAAQ,6BAA8BwqB,KAE7EhB,IAAgBoB,IAAuB5qB,GAAQ,oBAAqBwqB,GAAuB,IAE3FhB,IAAgBoB,IAAuB5qB,GAAQ,kCAAkC,WAC/E,IAAIc,EAAcd,EAAMF,MACpB6sB,EAAoB7rB,EAAY6rB,kBAChCrnB,EAAoBxE,EAAYwE,kBAEpCtF,EAAM4sB,2BAA2B,CAC/B7a,SAAUzM,EACV0M,QAAS,CACPA,QAAS2a,EAAkBE,+BAKjCrD,IAAgBoB,IAAuB5qB,GAAQ,6BAA6B,SAAUQ,GACpFR,EAAMiT,oBAAsBzS,KAG9BgpB,IAAgBoB,IAAuB5qB,GAAQ,wCAAwC,WACrF,IAAIwB,EAAexB,EAAMF,MACrB6sB,EAAoBnrB,EAAamrB,kBACjCvrB,EAASI,EAAaJ,OACtB2T,EAAoBvT,EAAauT,kBACjC+X,EAAetrB,EAAasrB,aAC5BjrB,EAAQL,EAAaK,MACrBK,EAAclC,EAAMmC,MACpBhC,EAAa+B,EAAY/B,WACzBC,EAAY8B,EAAY9B,UAE5B,GAAI0sB,GAAgB,EAAG,CACrB,IAAIC,EAAiBJ,EAAkBK,yBAAyB,CAC9D/P,MAAOlI,EACPkY,UAAWH,EACX1rB,OAAQA,EACRjB,WAAYA,EACZC,UAAWA,EACXyB,MAAOA,IAGLkrB,EAAe5sB,aAAeA,GAAc4sB,EAAe3sB,YAAcA,GAC3EJ,EAAMktB,mBAAmBH,OAK/BvD,IAAgBoB,IAAuB5qB,GAAQ,aAAa,SAAUkT,GAIpE,GAAIA,EAAM/T,SAAWa,EAAMiT,oBAA3B,CAKAjT,EAAMmtB,iCAMN,IAAIxrB,EAAe3B,EAAMF,MACrB6sB,EAAoBhrB,EAAagrB,kBACjCvrB,EAASO,EAAaP,OACtBgsB,EAAoBzrB,EAAayrB,kBACjCvrB,EAAQF,EAAaE,MACrBxB,EAAgBL,EAAMuR,eAEtB8b,EAAwBV,EAAkBxX,eAC1CmY,EAAcD,EAAsBjsB,OACpCmsB,EAAaF,EAAsBxrB,MAEnC1B,EAAaiE,KAAKS,IAAI,EAAGT,KAAKC,IAAIkpB,EAAa1rB,EAAQxB,EAAe6S,EAAM/T,OAAOgB,aACnFC,EAAYgE,KAAKS,IAAI,EAAGT,KAAKC,IAAIipB,EAAclsB,EAASf,EAAe6S,EAAM/T,OAAOiB,YAKxF,GAAIJ,EAAMmC,MAAMhC,aAAeA,GAAcH,EAAMmC,MAAM/B,YAAcA,EAAW,CAKhF,IAAIoU,EAA6BtB,EAAMsa,WAAa/b,GAA0CA,GAEzFzR,EAAMmC,MAAMyP,aACfwb,GAAkB,GAGpBptB,EAAMqC,SAAS,CACbuP,aAAa,EACbzR,WAAYA,EACZqU,2BAA4BA,EAC5BpU,UAAWA,IAIfJ,EAAM8V,wBAAwB,CAC5B3V,WAAYA,EACZC,UAAWA,EACXmtB,WAAYA,EACZD,YAAaA,QAIjBttB,EAAMuR,eAAiBkF,yBAEMzS,IAAzBhE,EAAMuR,gBACRvR,EAAMytB,wBAAyB,EAC/BztB,EAAMuR,eAAiB,GAEvBvR,EAAMytB,wBAAyB,EAG1BztB,EAsST,OAnbA6qB,IAAU6B,EAAgB7sB,GAsJ1B4pB,IAAaiD,EAAgB,CAAC,CAC5BjtB,IAAK,iCACLrC,MAAO,WACL6C,KAAKytB,2CAA4C,EACjDztB,KAAK6D,gBAYN,CACDrE,IAAK,oBACLrC,MAAO,WACL,IAAI4E,EAAe/B,KAAKH,MACpB6sB,EAAoB3qB,EAAa2qB,kBACjCxsB,EAAa6B,EAAa7B,WAC1B2sB,EAAe9qB,EAAa8qB,aAC5B1sB,EAAY4B,EAAa5B,UAGxBH,KAAKwtB,yBACRxtB,KAAKsR,eAAiBkF,oBACtBxW,KAAKwtB,wBAAyB,EAC9BxtB,KAAKoC,SAAS,KAGZyqB,GAAgB,EAClB7sB,KAAK0tB,wCACIxtB,GAAc,GAAKC,GAAa,IACzCH,KAAKitB,mBAAmB,CACtB/sB,WAAYA,EACZC,UAAWA,IAKfH,KAAK2tB,iCAEL,IAAIC,EAAyBlB,EAAkBxX,eAC3CmY,EAAcO,EAAuBzsB,OACrCmsB,EAAaM,EAAuBhsB,MAGxC5B,KAAK6V,wBAAwB,CAC3B3V,WAAYA,GAAc,EAC1BC,UAAWA,GAAa,EACxBktB,YAAaA,EACbC,WAAYA,MAGf,CACD9tB,IAAK,qBACLrC,MAAO,SAA4B2Z,EAAW1M,GAC5C,IAAItH,EAAe9C,KAAKH,MACpBsB,EAAS2B,EAAa3B,OACtB2T,EAAoBhS,EAAagS,kBACjC+X,EAAe/pB,EAAa+pB,aAC5BjrB,EAAQkB,EAAalB,MACrBc,EAAe1C,KAAKkC,MACpBhC,EAAawC,EAAaxC,WAC1BqU,EAA6B7R,EAAa6R,2BAC1CpU,EAAYuC,EAAavC,UAMzBoU,IAA+B/C,KAC7BtR,GAAc,GAAKA,IAAekK,EAAUlK,YAAcA,IAAeF,KAAKgT,oBAAoB9S,aACpGF,KAAKgT,oBAAoB9S,WAAaA,GAGpCC,GAAa,GAAKA,IAAciK,EAAUjK,WAAaA,IAAcH,KAAKgT,oBAAoB7S,YAChGH,KAAKgT,oBAAoB7S,UAAYA,IAKrCgB,IAAW2V,EAAU3V,QAAU2T,IAAsBgC,EAAUhC,mBAAqB+X,IAAiB/V,EAAU+V,cAAgBjrB,IAAUkV,EAAUlV,OACrJ5B,KAAK0tB,uCAIP1tB,KAAK2tB,mCAEN,CACDnuB,IAAK,uBACLrC,MAAO,WACD6C,KAAK0R,gCACP+P,aAAazhB,KAAK0R,kCAGrB,CACDlS,IAAK,SACLrC,MAAO,WACL,IAAIuH,EAAe1E,KAAKH,MACpB2V,EAAa9Q,EAAa8Q,WAC1BpC,EAAY1O,EAAa0O,UACzBsZ,EAAoBhoB,EAAagoB,kBACjC/jB,EAAYjE,EAAaiE,UACzBxH,EAASuD,EAAavD,OACtB0sB,EAAyBnpB,EAAampB,uBACtC7V,EAAKtT,EAAasT,GAClBC,EAAoBvT,EAAauT,kBACjC/W,EAAQwD,EAAaxD,MACrB4sB,EAAuBppB,EAAaopB,qBACpClsB,EAAQ8C,EAAa9C,MACrBoB,EAAehD,KAAKkC,MACpByP,EAAc3O,EAAa2O,YAC3BzR,EAAa8C,EAAa9C,WAC1BC,EAAY6C,EAAa7C,WAEzBH,KAAK+tB,yBAA2B3a,GAAapT,KAAKguB,iCAAmCtB,GAAqB1sB,KAAKytB,6CACjHztB,KAAK+tB,uBAAyB3a,EAC9BpT,KAAKguB,+BAAiCtB,EACtC1sB,KAAKytB,2CAA4C,EACjDf,EAAkBuB,gCAGpB,IAAIC,EAAyBxB,EAAkBxX,eAC3CmY,EAAca,EAAuB/sB,OACrCmsB,EAAaY,EAAuBtsB,MAGpC+F,EAAOxD,KAAKS,IAAI,EAAG1E,EAAa2tB,GAChC3lB,EAAM/D,KAAKS,IAAI,EAAGzE,EAAY2tB,GAC9BK,EAAQhqB,KAAKC,IAAIkpB,EAAYptB,EAAa0B,EAAQisB,GAClDO,EAASjqB,KAAKC,IAAIipB,EAAaltB,EAAYgB,EAAS2sB,GACpD9U,EAAoB7X,EAAS,GAAKS,EAAQ,EAAI8qB,EAAkB2B,cAAc,CAChFltB,OAAQitB,EAASlmB,EACjByJ,YAAaA,EACb/P,MAAOusB,EAAQxmB,EACf2mB,EAAG3mB,EACH4mB,EAAGrmB,IACA,GACDsmB,EAAkB,CACpBnW,UAAW,aACXC,UAAW,MACXnX,OAAQqU,EAAa,OAASrU,EAC9BqG,SAAU,WACV+Q,wBAAyB,QACzB3W,MAAOA,EACP4W,WAAY,aAKVG,EAAwB0U,EAAclsB,EAASnB,KAAKsR,eAAiB,EACrEsH,EAA0B0U,EAAa1rB,EAAQ5B,KAAKsR,eAAiB,EAQzE,OAFAkd,EAAgB5mB,UAAY0lB,EAAa3U,GAAyB/W,EAAQ,SAAW,OACrF4sB,EAAgB3mB,UAAYwlB,EAAczU,GAA2BzX,EAAS,SAAW,OAClFjD,gBAAoB,MAAO,CAChCqC,IAAKP,KAAKmZ,0BACV,aAAcnZ,KAAKH,MAAM,cACzB8I,UAAWmiB,kBAAK,+BAAgCniB,GAChDqP,GAAIA,EACJ3V,SAAUrC,KAAK4C,UACfsV,KAAM,OACNhX,MAAOjC,GAAc,GAAIuvB,EAAiB,GAAIttB,GAC9C8H,SAAU,GACToK,EAAY,GAAKlV,gBAAoB,MAAO,CAC7CyK,UAAW,qDACXzH,MAAO,CACLC,OAAQksB,EACRhU,UAAWgU,EACXjU,SAAUkU,EACV/lB,SAAU,SACV+R,cAAe3H,EAAc,OAAS,GACtC/P,MAAO0rB,IAERtU,GAAkC,IAAd5F,GAAmB6E,OAU3C,CACDzY,IAAK,iCACLrC,MAAO,WACL,IAAI4Z,EAAS/W,KAETA,KAAK0R,gCACP+P,aAAazhB,KAAK0R,gCAGpB1R,KAAK0R,+BAAiCwP,YAAW,YAE/CiM,EADwBpW,EAAOlX,MAAMstB,oBACnB,GAClBpW,EAAOrF,+BAAiC,KAExCqF,EAAO3U,SAAS,CACduP,aAAa,MAtXI,OA0XtB,CACDnS,IAAK,0BACLrC,MAAO,SAAiCuD,GACtC,IAAIya,EAASnb,KAETE,EAAaQ,EAAKR,WAClBC,EAAYO,EAAKP,UACjBktB,EAAc3sB,EAAK2sB,YACnBC,EAAa5sB,EAAK4sB,WAEtBttB,KAAKob,kBAAkB,CACrBtJ,SAAU,SAAkBzQ,GAC1B,IAAInB,EAAamB,EAAMnB,WACnBC,EAAYkB,EAAMlB,UAClBkb,EAAeF,EAAOtb,MACtBsB,EAASka,EAAala,QAG1BkB,EAFegZ,EAAahZ,UAEnB,CACPiZ,aAAcna,EACdoa,YAHUF,EAAazZ,MAIvB4Z,aAAc6R,EACdntB,WAAYA,EACZC,UAAWA,EACXsb,YAAa6R,KAGjBvb,QAAS,CACP7R,WAAYA,EACZC,UAAWA,OAIhB,CACDX,IAAK,qBACLrC,MAAO,SAA4BsE,GACjC,IAAIvB,EAAauB,EAAMvB,WACnBC,EAAYsB,EAAMtB,UAClB+E,EAAW,CACbqP,2BAA4B/C,IAG1BtR,GAAc,IAChBgF,EAAShF,WAAaA,GAGpBC,GAAa,IACf+E,EAAS/E,UAAYA,IAGnBD,GAAc,GAAKA,IAAeF,KAAKkC,MAAMhC,YAAcC,GAAa,GAAKA,IAAcH,KAAKkC,MAAM/B,YACxGH,KAAKoC,SAAS8C,MAGhB,CAAC,CACH1F,IAAK,2BACLrC,MAAO,SAAkCgN,EAAWC,GAClD,OAA4B,IAAxBD,EAAUiJ,WAA6C,IAAzBhJ,EAAUlK,YAA4C,IAAxBkK,EAAUjK,UAM/DgK,EAAUjK,aAAekK,EAAUlK,YAAciK,EAAUhK,YAAciK,EAAUjK,UACrF,CACLD,WAAoC,MAAxBiK,EAAUjK,WAAqBiK,EAAUjK,WAAakK,EAAUlK,WAC5EC,UAAkC,MAAvBgK,EAAUhK,UAAoBgK,EAAUhK,UAAYiK,EAAUjK,UACzEoU,2BAA4B/C,IAIzB,KAbE,CACLtR,WAAY,EACZC,UAAW,EACXoU,2BAA4B/C,QAc7Bib,EApbT,CAqbEvuB,iBAEFqrB,IAAgBkD,GAAgB,eAAgB,CAC9C,aAAc,OACdoB,uBAAwB,EACxB5V,kBAAmB,WACjB,OAAO,MAET5V,SAAU,WACR,OAAO,MAETgD,kBAAmB,WACjB,OAAO,MAETyP,kBAAmB,OACnB+X,cAAe,EACf3rB,MAAO,GACP4sB,qBAAsB,IAGxBrB,GAAeniB,UAgGX,GACJC,mBAASkiB,IACMA,UC3kBXgC,GAEJ,WACE,SAASA,EAAQ/tB,GACf,IAAIS,EAAST,EAAKS,OACdS,EAAQlB,EAAKkB,MACb0sB,EAAI5tB,EAAK4tB,EACTC,EAAI7tB,EAAK6tB,EAEbjF,IAAgBtpB,KAAMyuB,GAEtBzuB,KAAKmB,OAASA,EACdnB,KAAK4B,MAAQA,EACb5B,KAAKsuB,EAAIA,EACTtuB,KAAKuuB,EAAIA,EACTvuB,KAAK0uB,UAAY,GACjB1uB,KAAK2uB,SAAW,GAgClB,OA3BAnF,IAAaiF,EAAS,CAAC,CACrBjvB,IAAK,eACLrC,MAAO,SAAsBkE,GAC3B,IAAIS,EAAQT,EAAMS,MAEb9B,KAAK0uB,UAAU5sB,KAClB9B,KAAK0uB,UAAU5sB,IAAS,EAExB9B,KAAK2uB,SAAS5vB,KAAK+C,MAKtB,CACDtC,IAAK,iBACLrC,MAAO,WACL,OAAO6C,KAAK2uB,WAIb,CACDnvB,IAAK,WACLrC,MAAO,WACL,MAAO,GAAGuP,OAAO1M,KAAKsuB,EAAG,KAAK5hB,OAAO1M,KAAKuuB,EAAG,KAAK7hB,OAAO1M,KAAK4B,MAAO,KAAK8K,OAAO1M,KAAKmB,YAInFstB,EA9CT,GCKIG,GAEJ,WACE,SAASA,IACP,IAAIC,EAAczvB,UAAUC,OAAS,QAAsB0E,IAAjB3E,UAAU,GAAmBA,UAAU,GAXlE,IAafkqB,IAAgBtpB,KAAM4uB,GAEtB5uB,KAAK8uB,aAAeD,EACpB7uB,KAAK+uB,cAAgB,GACrB/uB,KAAKgvB,UAAY,GA2GnB,OAnGAxF,IAAaoF,EAAgB,CAAC,CAC5BpvB,IAAK,iBACLrC,MAAO,SAAwBuD,GAC7B,IAAIS,EAAST,EAAKS,OACdS,EAAQlB,EAAKkB,MACb0sB,EAAI5tB,EAAK4tB,EACTC,EAAI7tB,EAAK6tB,EACTxc,EAAU,GAYd,OAXA/R,KAAKivB,YAAY,CACf9tB,OAAQA,EACRS,MAAOA,EACP0sB,EAAGA,EACHC,EAAGA,IACFhvB,SAAQ,SAAU2vB,GACnB,OAAOA,EAAQC,iBAAiB5vB,SAAQ,SAAUuC,GAChDiQ,EAAQjQ,GAASA,QAId9E,OAAOyB,KAAKsT,GAASqd,KAAI,SAAUttB,GACxC,OAAOiQ,EAAQjQ,QAKlB,CACDtC,IAAK,kBACLrC,MAAO,SAAyBkE,GAC9B,IAAIS,EAAQT,EAAMS,MAClB,OAAO9B,KAAK+uB,cAAcjtB,KAI3B,CACDtC,IAAK,cACLrC,MAAO,SAAqBsE,GAW1B,IAVA,IAAIN,EAASM,EAAMN,OACfS,EAAQH,EAAMG,MACd0sB,EAAI7sB,EAAM6sB,EACVC,EAAI9sB,EAAM8sB,EACVc,EAAgBlrB,KAAKua,MAAM4P,EAAItuB,KAAK8uB,cACpCQ,EAAenrB,KAAKua,OAAO4P,EAAI1sB,EAAQ,GAAK5B,KAAK8uB,cACjDS,EAAgBprB,KAAKua,MAAM6P,EAAIvuB,KAAK8uB,cACpCU,EAAerrB,KAAKua,OAAO6P,EAAIptB,EAAS,GAAKnB,KAAK8uB,cAClDW,EAAW,GAENC,EAAWL,EAAeK,GAAYJ,EAAcI,IAC3D,IAAK,IAAIC,EAAWJ,EAAeI,GAAYH,EAAcG,IAAY,CACvE,IAAInwB,EAAM,GAAGkN,OAAOgjB,EAAU,KAAKhjB,OAAOijB,GAErC3vB,KAAKgvB,UAAUxvB,KAClBQ,KAAKgvB,UAAUxvB,GAAO,IAAIivB,GAAQ,CAChCttB,OAAQnB,KAAK8uB,aACbltB,MAAO5B,KAAK8uB,aACZR,EAAGoB,EAAW1vB,KAAK8uB,aACnBP,EAAGoB,EAAW3vB,KAAK8uB,gBAIvBW,EAAS1wB,KAAKiB,KAAKgvB,UAAUxvB,IAIjC,OAAOiwB,IAIR,CACDjwB,IAAK,uBACLrC,MAAO,WACL,OAAOH,OAAOyB,KAAKuB,KAAKgvB,WAAW3vB,SAIpC,CACDG,IAAK,WACLrC,MAAO,WACL,IAAI4C,EAAQC,KAEZ,OAAOhD,OAAOyB,KAAKuB,KAAKgvB,WAAWI,KAAI,SAAUttB,GAC/C,OAAO/B,EAAMivB,UAAUltB,GAAO8tB,gBAKjC,CACDpwB,IAAK,eACLrC,MAAO,SAAsB0E,GAC3B,IAAIguB,EAAgBhuB,EAAMguB,cACtB/tB,EAAQD,EAAMC,MAClB9B,KAAK+uB,cAAcjtB,GAAS+tB,EAC5B7vB,KAAKivB,YAAYY,GAAetwB,SAAQ,SAAU2vB,GAChD,OAAOA,EAAQY,aAAa,CAC1BhuB,MAAOA,WAMR8sB,EAnHT,GCNe,SAAS7R,GAAyBrc,GAC/C,IAAIqvB,EAAarvB,EAAKsc,MAClBA,OAAuB,IAAf+S,EAAwB,OAASA,EACzCC,EAAatvB,EAAKsvB,WAClB9T,EAAWxb,EAAKwb,SAChBpC,EAAgBpZ,EAAKoZ,cACrBmD,EAAgBvc,EAAKuc,cACrBkB,EAAY6R,EACZ5R,EAAYD,EAAYrE,EAAgBoC,EAE5C,OAAQc,GACN,IAAK,QACH,OAAOmB,EAET,IAAK,MACH,OAAOC,EAET,IAAK,SACH,OAAOD,GAAarE,EAAgBoC,GAAY,EAElD,QACE,OAAO/X,KAAKS,IAAIwZ,EAAWja,KAAKC,IAAI+Z,EAAWlB,KCfrD,IAAIgT,GAEJ,SAAUrwB,GAGR,SAASqwB,EAAWpwB,EAAOC,GACzB,IAAIC,EAWJ,OATAupB,IAAgBtpB,KAAMiwB,IAEtBlwB,EAAQ0qB,IAA2BzqB,KAAM0qB,IAAgBuF,GAAYhwB,KAAKD,KAAMH,EAAOC,KACjFivB,cAAgB,GACtBhvB,EAAMmwB,yBAA2B,GAEjCnwB,EAAMsW,WAAa,GACnBtW,EAAMowB,mBAAqBpwB,EAAMowB,mBAAmBC,KAAKzF,IAAuB5qB,IAChFA,EAAMswB,sBAAwBtwB,EAAMswB,sBAAsBD,KAAKzF,IAAuB5qB,IAC/EA,EA6JT,OA3KA6qB,IAAUqF,EAAYrwB,GAiBtB4pB,IAAayG,EAAY,CAAC,CACxBzwB,IAAK,cACLrC,MAAO,gBACwB4G,IAAzB/D,KAAKswB,iBACPtwB,KAAKswB,gBAAgBzsB,gBAKxB,CACDrE,IAAK,iCACLrC,MAAO,WACL6C,KAAKqW,WAAa,GAElBrW,KAAKswB,gBAAgBC,mCAItB,CACD/wB,IAAK,SACLrC,MAAO,WACL,IAAI0C,EAAQgrB,IAAS,GAAI7qB,KAAKH,OAE9B,OAAO3B,gBAAoBuuB,GAAgB5B,IAAS,CAClD6B,kBAAmB1sB,KACnBmtB,kBAAmBntB,KAAKmwB,mBACxB5vB,IAAKP,KAAKqwB,uBACTxwB,MAIJ,CACDL,IAAK,+BACLrC,MAAO,WACL,IAAI0D,EAAcb,KAAKH,MAKnB2wB,EC5EK,SAAsC9vB,GASnD,IARA,IAAI0S,EAAY1S,EAAK0S,UACjBqd,EAA4B/vB,EAAK+vB,0BACjC5B,EAAcnuB,EAAKmuB,YACnB6B,EAAe,GACfC,EAAiB,IAAI/B,GAAeC,GACpC1tB,EAAS,EACTS,EAAQ,EAEHE,EAAQ,EAAGA,EAAQsR,EAAWtR,IAAS,CAC9C,IAAI+tB,EAAgBY,EAA0B,CAC5C3uB,MAAOA,IAGT,GAA4B,MAAxB+tB,EAAc1uB,QAAkB0c,MAAMgS,EAAc1uB,SAAkC,MAAvB0uB,EAAcjuB,OAAiBic,MAAMgS,EAAcjuB,QAA6B,MAAnBiuB,EAAcvB,GAAazQ,MAAMgS,EAAcvB,IAAyB,MAAnBuB,EAActB,GAAa1Q,MAAMgS,EAActB,GAClO,MAAM7Q,MAAM,sCAAsChR,OAAO5K,EAAO,iBAAiB4K,OAAOmjB,EAAcvB,EAAG,QAAQ5hB,OAAOmjB,EAActB,EAAG,YAAY7hB,OAAOmjB,EAAcjuB,MAAO,aAAa8K,OAAOmjB,EAAc1uB,SAGrNA,EAASgD,KAAKS,IAAIzD,EAAQ0uB,EAActB,EAAIsB,EAAc1uB,QAC1DS,EAAQuC,KAAKS,IAAIhD,EAAOiuB,EAAcvB,EAAIuB,EAAcjuB,OACxD8uB,EAAa5uB,GAAS+tB,EACtBc,EAAeC,aAAa,CAC1Bf,cAAeA,EACf/tB,MAAOA,IAIX,MAAO,CACL4uB,aAAcA,EACdvvB,OAAQA,EACRwvB,eAAgBA,EAChB/uB,MAAOA,GD6CMivB,CAA8B,CACvCzd,UALcvS,EAAYuS,UAM1Bqd,0BAL8B5vB,EAAY4vB,0BAM1C5B,YALgBhuB,EAAYguB,cAQ9B7uB,KAAK+uB,cAAgByB,EAAKE,aAC1B1wB,KAAK8wB,gBAAkBN,EAAKG,eAC5B3wB,KAAK+wB,QAAUP,EAAKrvB,OACpBnB,KAAKgxB,OAASR,EAAK5uB,QAMpB,CACDpC,IAAK,yBACLrC,MAAO,WACL,OAAO6C,KAAKkwB,2BAMb,CACD1wB,IAAK,2BACLrC,MAAO,SAAkCuD,GACvC,IAAIsc,EAAQtc,EAAKsc,MACbgQ,EAAYtsB,EAAKssB,UACjB7rB,EAAST,EAAKS,OACdjB,EAAaQ,EAAKR,WAClBC,EAAYO,EAAKP,UACjByB,EAAQlB,EAAKkB,MACbwR,EAAYpT,KAAKH,MAAMuT,UAE3B,GAAI4Z,GAAa,GAAKA,EAAY5Z,EAAW,CAC3C,IAAIsd,EAAe1wB,KAAK+uB,cAAc/B,GACtC9sB,EAAa6c,GAAyB,CACpCC,MAAOA,EACPgT,WAAYU,EAAapC,EACzBpS,SAAUwU,EAAa9uB,MACvBkY,cAAelY,EACfqb,cAAe/c,EACf2c,YAAamQ,IAEf7sB,EAAY4c,GAAyB,CACnCC,MAAOA,EACPgT,WAAYU,EAAanC,EACzBrS,SAAUwU,EAAavvB,OACvB2Y,cAAe3Y,EACf8b,cAAe9c,EACf0c,YAAamQ,IAIjB,MAAO,CACL9sB,WAAYA,EACZC,UAAWA,KAGd,CACDX,IAAK,eACLrC,MAAO,WACL,MAAO,CACLgE,OAAQnB,KAAK+wB,QACbnvB,MAAO5B,KAAKgxB,UAGf,CACDxxB,IAAK,gBACLrC,MAAO,SAAuBkE,GAC5B,IAAI0V,EAAS/W,KAETmB,EAASE,EAAMF,OACfwQ,EAActQ,EAAMsQ,YACpB/P,EAAQP,EAAMO,MACd0sB,EAAIjtB,EAAMitB,EACVC,EAAIltB,EAAMktB,EACVhtB,EAAevB,KAAKH,MACpBoxB,EAAoB1vB,EAAa0vB,kBACjCnwB,EAAeS,EAAaT,aAQhC,OANAd,KAAKkwB,yBAA2BlwB,KAAK8wB,gBAAgB3B,eAAe,CAClEhuB,OAAQA,EACRS,MAAOA,EACP0sB,EAAGA,EACHC,EAAGA,IAEE0C,EAAkB,CACvBnW,UAAW9a,KAAKqW,WAChBvV,aAAcA,EACd2vB,0BAA2B,SAAmChvB,GAC5D,IAAIK,EAAQL,EAAMK,MAClB,OAAOiV,EAAO+Z,gBAAgBI,gBAAgB,CAC5CpvB,MAAOA,KAGXiQ,QAAS/R,KAAKkwB,yBACdve,YAAaA,MAGhB,CACDnS,IAAK,qBACLrC,MAAO,SAA4BwU,GAC5BA,IACH3R,KAAKqW,WAAa,MAGrB,CACD7W,IAAK,wBACLrC,MAAO,SAA+BoD,GACpCP,KAAKswB,gBAAkB/vB,MAIpB0vB,EA5KT,CA6KE/xB,iBAEFqrB,IAAgB0G,GAAY,eAAgB,CAC1C,aAAc,OACdgB,kBAwCF,SAAkCpvB,GAChC,IAAIiZ,EAAYjZ,EAAMiZ,UAClBha,EAAee,EAAMf,aACrB2vB,EAA4B5uB,EAAM4uB,0BAClC1e,EAAUlQ,EAAMkQ,QAChBJ,EAAc9P,EAAM8P,YACxB,OAAOI,EAAQqd,KAAI,SAAUttB,GAC3B,IAAI4uB,EAAeD,EAA0B,CAC3C3uB,MAAOA,IAELqvB,EAAoB,CACtBrvB,MAAOA,EACP6P,YAAaA,EACbnS,IAAKsC,EACLZ,MAAO,CACLC,OAAQuvB,EAAavvB,OACrBwG,KAAM+oB,EAAapC,EACnB9mB,SAAU,WACVU,IAAKwoB,EAAanC,EAClB3sB,MAAO8uB,EAAa9uB,QAOxB,OAAI+P,GACI7P,KAASgZ,IACbA,EAAUhZ,GAAShB,EAAaqwB,IAG3BrW,EAAUhZ,IAEVhB,EAAaqwB,MAErBvyB,QAAO,SAAU0sB,GAClB,QAASA,QAxEb2E,GAAW3lB,UAkCP,GE1OW2lB,ICWXmB,GAEJ,SAAUxxB,GAGR,SAASwxB,EAAYvxB,EAAOC,GAC1B,IAAIC,EAMJ,OAJAupB,IAAgBtpB,KAAMoxB,IAEtBrxB,EAAQ0qB,IAA2BzqB,KAAM0qB,IAAgB0G,GAAanxB,KAAKD,KAAMH,EAAOC,KAClF4N,eAAiB3N,EAAM2N,eAAe0iB,KAAKzF,IAAuB5qB,IACjEA,EA0DT,OAnEA6qB,IAAUwG,EAAaxxB,GAYvB4pB,IAAa4H,EAAa,CAAC,CACzB5xB,IAAK,qBACLrC,MAAO,SAA4B2Z,GACjC,IAAIjW,EAAcb,KAAKH,MACnBwxB,EAAiBxwB,EAAYwwB,eAC7BC,EAAiBzwB,EAAYywB,eAC7B3vB,EAAcd,EAAYc,YAC1BC,EAAQf,EAAYe,MAEpByvB,IAAmBva,EAAUua,gBAAkBC,IAAmBxa,EAAUwa,gBAAkB3vB,IAAgBmV,EAAUnV,aAAeC,IAAUkV,EAAUlV,OACzJ5B,KAAKuxB,kBACPvxB,KAAKuxB,iBAAiBzsB,sBAI3B,CACDtF,IAAK,SACLrC,MAAO,WACL,IAAIoE,EAAevB,KAAKH,MACpByN,EAAW/L,EAAa+L,SACxB+jB,EAAiB9vB,EAAa8vB,eAC9BC,EAAiB/vB,EAAa+vB,eAC9B3vB,EAAcJ,EAAaI,YAC3BC,EAAQL,EAAaK,MACrB4vB,EAAqBF,GAAkB,EACvCG,EAAqBJ,EAAiBltB,KAAKC,IAAIitB,EAAgBzvB,GAASA,EACxEI,EAAcJ,EAAQD,EAK1B,OAJAK,EAAcmC,KAAKS,IAAI4sB,EAAoBxvB,GAC3CA,EAAcmC,KAAKC,IAAIqtB,EAAoBzvB,GAC3CA,EAAcmC,KAAKua,MAAM1c,GAElBsL,EAAS,CACdokB,cAFkBvtB,KAAKC,IAAIxC,EAAOI,EAAcL,GAGhDK,YAAaA,EACb2vB,eAAgB,WACd,OAAO3vB,GAETyL,cAAezN,KAAK0N,mBAGvB,CACDlO,IAAK,iBACLrC,MAAO,SAAwBy0B,GAC7B,GAAIA,GAA4C,oBAA5BA,EAAM9sB,kBACxB,MAAM4Y,MAAM,iFAGd1d,KAAKuxB,iBAAmBK,EAEpB5xB,KAAKuxB,kBACPvxB,KAAKuxB,iBAAiBzsB,wBAKrBssB,EApET,CAqEElzB,iBAGFkzB,GAAY9mB,UAuBR,GC5GW8mB,I,sBCgBXS,GAEJ,SAAUjyB,GAGR,SAASiyB,EAAehyB,EAAOC,GAC7B,IAAIC,EAQJ,OANAupB,IAAgBtpB,KAAM6xB,IAEtB9xB,EAAQ0qB,IAA2BzqB,KAAM0qB,IAAgBmH,GAAgB5xB,KAAKD,KAAMH,EAAOC,KACrFgyB,sBAAwBvH,IAC9BxqB,EAAMgyB,gBAAkBhyB,EAAMgyB,gBAAgB3B,KAAKzF,IAAuB5qB,IAC1EA,EAAM2N,eAAiB3N,EAAM2N,eAAe0iB,KAAKzF,IAAuB5qB,IACjEA,EAmGT,OA9GA6qB,IAAUiH,EAAgBjyB,GAc1B4pB,IAAaqI,EAAgB,CAAC,CAC5BryB,IAAK,yBACLrC,MAAO,SAAgC60B,GACrChyB,KAAK8xB,sBAAwBvH,IAEzByH,GACFhyB,KAAKiyB,SAASjyB,KAAKkyB,wBAAyBlyB,KAAKmyB,0BAGpD,CACD3yB,IAAK,SACLrC,MAAO,WAEL,OAAOmQ,EADQtN,KAAKH,MAAMyN,UACV,CACd8kB,eAAgBpyB,KAAK+xB,gBACrBtkB,cAAezN,KAAK0N,mBAGvB,CACDlO,IAAK,sBACLrC,MAAO,SAA6Bk1B,GAClC,IAAItb,EAAS/W,KAETsyB,EAAetyB,KAAKH,MAAMyyB,aAC9BD,EAAe9yB,SAAQ,SAAUgzB,GAC/B,IAAIC,EAAUF,EAAaC,GAEvBC,GACFA,EAAQnS,MAAK,YA8HhB,SAAwBxe,GAC7B,IAAI4wB,EAAyB5wB,EAAM4wB,uBAC/BC,EAAwB7wB,EAAM6wB,sBAC9BjY,EAAa5Y,EAAM4Y,WACnBC,EAAY7Y,EAAM6Y,UACtB,QAASD,EAAaiY,GAAyBhY,EAAY+X,IAhI7CE,CAAe,CACjBF,uBAAwB1b,EAAOmb,wBAC/BQ,sBAAuB3b,EAAOob,uBAC9B1X,WAAY8X,EAAc9X,WAC1BC,UAAW6X,EAAc7X,aAErB3D,EAAOwa,kBAmNlB,SAA8CqB,GACnD,IAAIC,EAAezzB,UAAUC,OAAS,QAAsB0E,IAAjB3E,UAAU,GAAmBA,UAAU,GAAK,EACnF0zB,EAAuD,oBAAhCF,EAAU9tB,kBAAmC8tB,EAAU9tB,kBAAoB8tB,EAAUG,oBAE5GD,EACFA,EAAc7yB,KAAK2yB,EAAWC,GAE9BD,EAAU/uB,cAzNEmvB,CAAqCjc,EAAOwa,iBAAkBxa,EAAOmb,iCAOhF,CACD1yB,IAAK,kBACLrC,MAAO,SAAyBuD,GAC9B,IAAI+Z,EAAa/Z,EAAK+Z,WAClBC,EAAYha,EAAKga,UACrB1a,KAAKkyB,wBAA0BzX,EAC/Bza,KAAKmyB,uBAAyBzX,EAE9B1a,KAAKiyB,SAASxX,EAAYC,KAE3B,CACDlb,IAAK,WACLrC,MAAO,SAAkBsd,EAAYC,GACnC,IAAIrZ,EACA8Z,EAASnb,KAETa,EAAcb,KAAKH,MACnBozB,EAAcpyB,EAAYoyB,YAC1BC,EAAmBryB,EAAYqyB,iBAC/BlyB,EAAWH,EAAYG,SACvBmyB,EAAYtyB,EAAYsyB,UACxBd,EAmGH,SAA+B/vB,GAUpC,IATA,IAAI2wB,EAAc3wB,EAAM2wB,YACpBC,EAAmB5wB,EAAM4wB,iBACzBlyB,EAAWsB,EAAMtB,SACjByZ,EAAanY,EAAMmY,WACnBC,EAAYpY,EAAMoY,UAClB2X,EAAiB,GACjBe,EAAkB,KAClBC,EAAiB,KAEZvxB,EAAQ2Y,EAAY3Y,GAAS4Y,EAAW5Y,IAAS,CAC3CmxB,EAAY,CACvBnxB,MAAOA,IASqB,OAAnBuxB,IACThB,EAAetzB,KAAK,CAClB0b,WAAY2Y,EACZ1Y,UAAW2Y,IAEbD,EAAkBC,EAAiB,OAVnCA,EAAiBvxB,EAEO,OAApBsxB,IACFA,EAAkBtxB,IAaxB,GAAuB,OAAnBuxB,EAAyB,CAG3B,IAFA,IAAIC,EAAqBnvB,KAAKC,IAAID,KAAKS,IAAIyuB,EAAgBD,EAAkBF,EAAmB,GAAIlyB,EAAW,GAEtGuyB,EAASF,EAAiB,EAAGE,GAAUD,IACzCL,EAAY,CACfnxB,MAAOyxB,IAFyDA,IAIhEF,EAAiBE,EAMrBlB,EAAetzB,KAAK,CAClB0b,WAAY2Y,EACZ1Y,UAAW2Y,IAMf,GAAIhB,EAAehzB,OAGjB,IAFA,IAAIm0B,EAAqBnB,EAAe,GAEjCmB,EAAmB9Y,UAAY8Y,EAAmB/Y,WAAa,EAAIyY,GAAoBM,EAAmB/Y,WAAa,GAAG,CAC/H,IAAIgZ,EAAUD,EAAmB/Y,WAAa,EAE9C,GAAKwY,EAAY,CACfnxB,MAAO2xB,IAIP,MAFAD,EAAmB/Y,WAAagZ,EAOtC,OAAOpB,EAxKkBqB,CAAsB,CACzCT,YAAaA,EACbC,iBAAkBA,EAClBlyB,SAAUA,EACVyZ,WAAYtW,KAAKS,IAAI,EAAG6V,EAAa0Y,GACrCzY,UAAWvW,KAAKC,IAAIpD,EAAW,EAAG0Z,EAAYyY,KAG5CQ,GAA0BtyB,EAAQ,IAAIqL,OAAO1N,MAAMqC,EAAOuyB,KAAmBvB,EAAejD,KAAI,SAAU3tB,GAG5G,MAAO,CAFUA,EAAMgZ,WACPhZ,EAAMiZ,gBAIxB1a,KAAK8xB,sBAAsB,CACzBhgB,SAAU,WACRqJ,EAAO0Y,oBAAoBxB,IAE7BtgB,QAAS,CACP4hB,uBAAwBA,OAI7B,CACDn0B,IAAK,iBACLrC,MAAO,SAAwB22B,GAC7B9zB,KAAKuxB,iBAAmBuC,MAIrBjC,EA/GT,CAgHE3zB,iBAMFqrB,IAAgBsI,GAAgB,eAAgB,CAC9CqB,iBAAkB,GAClBlyB,SAAU,EACVmyB,UAAW,KAIbtB,GAAevnB,UA2CX,GC1LWunB,ICQX5lB,GAAQC,GAcR6nB,IAAQ7nB,GAAQD,GAEpB,SAAUrM,GAGR,SAASm0B,IACP,IAAIj2B,EAEAiC,EAEJupB,IAAgBtpB,KAAM+zB,GAEtB,IAAK,IAAIznB,EAAOlN,UAAUC,OAAQkN,EAAO,IAAIC,MAAMF,GAAOG,EAAO,EAAGA,EAAOH,EAAMG,IAC/EF,EAAKE,GAAQrN,UAAUqN,GAoEzB,OAjEA1M,EAAQ0qB,IAA2BzqB,MAAOlC,EAAmB4sB,IAAgBqJ,IAAO9zB,KAAKjB,MAAMlB,EAAkB,CAACkC,MAAM0M,OAAOH,KAE/Hgd,IAAgBoB,IAAuB5qB,GAAQ,YAAQ,GAEvDwpB,IAAgBoB,IAAuB5qB,GAAQ,iBAAiB,SAAUW,GACxE,IAAIU,EAASV,EAAKU,OACdT,EAAWD,EAAKC,SAChBO,EAAQR,EAAKQ,MACbyQ,EAAcjR,EAAKiR,YACnByZ,EAAY1qB,EAAK0qB,UACjB5rB,EAAMkB,EAAKlB,IACXw0B,EAAcj0B,EAAMF,MAAMm0B,YAM1BC,EAAkBj3B,OAAO8B,yBAAyBoC,EAAO,SAQ7D,OANI+yB,GAAmBA,EAAgBC,WAGrChzB,EAAMU,MAAQ,QAGToyB,EAAY,CACjBlyB,MAAOnB,EACPO,MAAOA,EACPyQ,YAAaA,EACbyZ,UAAWA,EACX5rB,IAAKA,EACL4B,OAAQA,OAIZmoB,IAAgBoB,IAAuB5qB,GAAQ,WAAW,SAAUQ,GAClER,EAAM0R,KAAOlR,KAGfgpB,IAAgBoB,IAAuB5qB,GAAQ,aAAa,SAAUsB,GACpE,IAAIia,EAAeja,EAAMia,aACrBE,EAAena,EAAMma,aACrBrb,EAAYkB,EAAMlB,WAEtBkC,EADetC,EAAMF,MAAMwC,UAClB,CACPiZ,aAAcA,EACdE,aAAcA,EACdrb,UAAWA,OAIfopB,IAAgBoB,IAAuB5qB,GAAQ,sBAAsB,SAAU0B,GAC7E,IAAI+Q,EAAwB/Q,EAAM+Q,sBAC9BE,EAAuBjR,EAAMiR,qBAC7BE,EAAgBnR,EAAMmR,cACtBE,EAAerR,EAAMqR,cAEzBsf,EADqBryB,EAAMF,MAAMuyB,gBAClB,CACbxX,mBAAoBpI,EACpBqI,kBAAmBnI,EACnB+H,WAAY7H,EACZ8H,UAAW5H,OAIR/S,EA0IT,OAxNA6qB,IAAUmJ,EAAMn0B,GAiFhB4pB,IAAauK,EAAM,CAAC,CAClBv0B,IAAK,kBACLrC,MAAO,WACD6C,KAAKyR,MACPzR,KAAKyR,KAAK5N,gBAKb,CACDrE,IAAK,kBACLrC,MAAO,SAAyB0E,GAC9B,IAAIgT,EAAYhT,EAAMgT,UAClB/S,EAAQD,EAAMC,MAElB,OAAI9B,KAAKyR,KACqBzR,KAAKyR,KAAK0iB,iBAAiB,CACrDtf,UAAWA,EACXlU,SAAUmB,EACVR,YAAa,IAEuBnB,UAKjC,IAIR,CACDX,IAAK,gCACLrC,MAAO,SAAuCmF,GAC5C,IAAIhB,EAAcgB,EAAMhB,YACpBX,EAAW2B,EAAM3B,SAEjBX,KAAKyR,MACPzR,KAAKyR,KAAKjD,8BAA8B,CACtC7N,SAAUA,EACVW,YAAaA,MAMlB,CACD9B,IAAK,iBACLrC,MAAO,WACD6C,KAAKyR,MACPzR,KAAKyR,KAAKnN,oBAKb,CACD9E,IAAK,oBACLrC,MAAO,WACL,IAAI0F,EAAQzD,UAAUC,OAAS,QAAsB0E,IAAjB3E,UAAU,GAAmBA,UAAU,GAAK,GAC5Eg1B,EAAoBvxB,EAAMvB,YAC1BA,OAAoC,IAAtB8yB,EAA+B,EAAIA,EACjDC,EAAiBxxB,EAAMlC,SACvBA,OAA8B,IAAnB0zB,EAA4B,EAAIA,EAE3Cr0B,KAAKyR,MACPzR,KAAKyR,KAAK3M,kBAAkB,CAC1BnE,SAAUA,EACVW,YAAaA,MAMlB,CACD9B,IAAK,sBACLrC,MAAO,WACL,IAAI2E,EAAQ1C,UAAUC,OAAS,QAAsB0E,IAAjB3E,UAAU,GAAmBA,UAAU,GAAK,EAE5EY,KAAKyR,MACPzR,KAAKyR,KAAK3M,kBAAkB,CAC1BnE,SAAUmB,EACVR,YAAa,MAMlB,CACD9B,IAAK,mBACLrC,MAAO,WACL,IAAIgD,EAAYf,UAAUC,OAAS,QAAsB0E,IAAjB3E,UAAU,GAAmBA,UAAU,GAAK,EAEhFY,KAAKyR,MACPzR,KAAKyR,KAAK6iB,iBAAiB,CACzBn0B,UAAWA,MAMhB,CACDX,IAAK,cACLrC,MAAO,WACL,IAAI2E,EAAQ1C,UAAUC,OAAS,QAAsB0E,IAAjB3E,UAAU,GAAmBA,UAAU,GAAK,EAE5EY,KAAKyR,MACPzR,KAAKyR,KAAKob,aAAa,CACrBvrB,YAAa,EACbX,SAAUmB,MAIf,CACDtC,IAAK,SACLrC,MAAO,WACL,IAAI0D,EAAcb,KAAKH,MACnB8I,EAAY9H,EAAY8H,UACxB4rB,EAAiB1zB,EAAY0zB,eAC7B9c,EAAgB5W,EAAY4W,cAC5B7V,EAAQf,EAAYe,MACpB4yB,EAAa1J,kBAAK,yBAA0BniB,GAChD,OAAOzK,gBAAoBuT,EAAMoZ,IAAS,GAAI7qB,KAAKH,MAAO,CACxD+X,oBAAoB,EACpB9W,aAAcd,KAAKy0B,cACnB9rB,UAAW6rB,EACXxyB,YAAaJ,EACbD,YAAa,EACbsW,kBAAmBsc,EACnBlyB,SAAUrC,KAAK4C,UACfyC,kBAAmBrF,KAAKqsB,mBACxB9rB,IAAKP,KAAKukB,QACVhf,YAAakS,SAKZsc,EAzNT,CA0NE71B,iBAAsBqrB,IAAgBtd,GAAQ,YAAqD,MA8EjGC,IAEJqd,IAAgBwK,GAAM,eAAgB,CACpCve,YAAY,EACZkH,iBAAkB,GAClBra,SAAU,aACVkyB,eAAgB,WACd,OAAO,MAETnC,eAAgB,aAChB3Y,sBAAuBib,EACvBhb,iBAAkB,GAClB5E,kBAAmB,OACnB2C,eAAgB,EAChBvW,MAAO,K,0BCxGM,QACbyzB,GA5LF,SAA2BC,EAAGrG,EAAG/L,EAAGqS,EAAGC,GACrC,MAAiB,oBAANtS,EAnBb,SAAcoS,EAAGC,EAAGC,EAAGvG,EAAG/L,GAGxB,IAFA,IAAIrjB,EAAI21B,EAAI,EAELD,GAAKC,GAAG,CACb,IAAIC,EAAIF,EAAIC,IAAM,EAGdtS,EAFIoS,EAAEG,GAEDxG,IAAM,GACbpvB,EAAI41B,EACJD,EAAIC,EAAI,GAERF,EAAIE,EAAI,EAIZ,OAAO51B,EAKE61B,CAAKJ,OAAS,IAANC,EAAe,EAAQ,EAAJA,OAAa,IAANC,EAAeF,EAAEv1B,OAAS,EAAQ,EAAJy1B,EAAOvG,EAAG/L,GAtCrF,SAAcoS,EAAGC,EAAGC,EAAGvG,GAGrB,IAFA,IAAIpvB,EAAI21B,EAAI,EAELD,GAAKC,GAAG,CACb,IAAIC,EAAIF,EAAIC,IAAM,EACVF,EAAEG,IAEDxG,GACPpvB,EAAI41B,EACJD,EAAIC,EAAI,GAERF,EAAIE,EAAI,EAIZ,OAAO51B,EAyBE81B,CAAKL,OAAS,IAANpS,EAAe,EAAQ,EAAJA,OAAa,IAANqS,EAAeD,EAAEv1B,OAAS,EAAQ,EAAJw1B,EAAOtG,IAyLhF2G,GAjJF,SAA2BN,EAAGrG,EAAG/L,EAAGqS,EAAGC,GACrC,MAAiB,oBAANtS,EAnBb,SAAcoS,EAAGC,EAAGC,EAAGvG,EAAG/L,GAGxB,IAFA,IAAIrjB,EAAI21B,EAAI,EAELD,GAAKC,GAAG,CACb,IAAIC,EAAIF,EAAIC,IAAM,EAGdtS,EAFIoS,EAAEG,GAEDxG,GAAK,GACZpvB,EAAI41B,EACJD,EAAIC,EAAI,GAERF,EAAIE,EAAI,EAIZ,OAAO51B,EAKEg2B,CAAKP,OAAS,IAANC,EAAe,EAAQ,EAAJA,OAAa,IAANC,EAAeF,EAAEv1B,OAAS,EAAQ,EAAJy1B,EAAOvG,EAAG/L,GAtCrF,SAAcoS,EAAGC,EAAGC,EAAGvG,GAGrB,IAFA,IAAIpvB,EAAI21B,EAAI,EAELD,GAAKC,GAAG,CACb,IAAIC,EAAIF,EAAIC,IAAM,EACVF,EAAEG,GAEFxG,GACNpvB,EAAI41B,EACJD,EAAIC,EAAI,GAERF,EAAIE,EAAI,EAIZ,OAAO51B,EAyBEi2B,CAAKR,OAAS,IAANpS,EAAe,EAAQ,EAAJA,OAAa,IAANqS,EAAeD,EAAEv1B,OAAS,EAAQ,EAAJw1B,EAAOtG,IA8IhF8G,GAtGF,SAA2BT,EAAGrG,EAAG/L,EAAGqS,EAAGC,GACrC,MAAiB,oBAANtS,EAnBb,SAAcoS,EAAGC,EAAGC,EAAGvG,EAAG/L,GAGxB,IAFA,IAAIrjB,EAAI01B,EAAI,EAELA,GAAKC,GAAG,CACb,IAAIC,EAAIF,EAAIC,IAAM,EAGdtS,EAFIoS,EAAEG,GAEDxG,GAAK,GACZpvB,EAAI41B,EACJF,EAAIE,EAAI,GAERD,EAAIC,EAAI,EAIZ,OAAO51B,EAKEm2B,CAAKV,OAAS,IAANC,EAAe,EAAQ,EAAJA,OAAa,IAANC,EAAeF,EAAEv1B,OAAS,EAAQ,EAAJy1B,EAAOvG,EAAG/L,GAtCrF,SAAcoS,EAAGC,EAAGC,EAAGvG,GAGrB,IAFA,IAAIpvB,EAAI01B,EAAI,EAELA,GAAKC,GAAG,CACb,IAAIC,EAAIF,EAAIC,IAAM,EACVF,EAAEG,GAEFxG,GACNpvB,EAAI41B,EACJF,EAAIE,EAAI,GAERD,EAAIC,EAAI,EAIZ,OAAO51B,EAyBEo2B,CAAKX,OAAS,IAANpS,EAAe,EAAQ,EAAJA,OAAa,IAANqS,EAAeD,EAAEv1B,OAAS,EAAQ,EAAJw1B,EAAOtG,IAmGhFiH,GA3DF,SAA2BZ,EAAGrG,EAAG/L,EAAGqS,EAAGC,GACrC,MAAiB,oBAANtS,EAnBb,SAAcoS,EAAGC,EAAGC,EAAGvG,EAAG/L,GAGxB,IAFA,IAAIrjB,EAAI01B,EAAI,EAELA,GAAKC,GAAG,CACb,IAAIC,EAAIF,EAAIC,IAAM,EAGdtS,EAFIoS,EAAEG,GAEDxG,IAAM,GACbpvB,EAAI41B,EACJF,EAAIE,EAAI,GAERD,EAAIC,EAAI,EAIZ,OAAO51B,EAKEs2B,CAAKb,OAAS,IAANC,EAAe,EAAQ,EAAJA,OAAa,IAANC,EAAeF,EAAEv1B,OAAS,EAAQ,EAAJy1B,EAAOvG,EAAG/L,GAtCrF,SAAcoS,EAAGC,EAAGC,EAAGvG,GAGrB,IAFA,IAAIpvB,EAAI01B,EAAI,EAELA,GAAKC,GAAG,CACb,IAAIC,EAAIF,EAAIC,IAAM,EACVF,EAAEG,IAEDxG,GACPpvB,EAAI41B,EACJF,EAAIE,EAAI,GAERD,EAAIC,EAAI,EAIZ,OAAO51B,EAyBEu2B,CAAKd,OAAS,IAANpS,EAAe,EAAQ,EAAJA,OAAa,IAANqS,EAAeD,EAAEv1B,OAAS,EAAQ,EAAJw1B,EAAOtG,IAwDhFoH,GAbF,SAA2Bf,EAAGrG,EAAG/L,EAAGqS,EAAGC,GACrC,MAAiB,oBAANtS,EArBb,SAAcoS,EAAGC,EAAGC,EAAGvG,EAAG/L,GAGxB,KAAOqS,GAAKC,GAAG,CACb,IAAIC,EAAIF,EAAIC,IAAM,EAEdpqB,EAAI8X,EADAoS,EAAEG,GACGxG,GAEb,GAAU,IAAN7jB,EACF,OAAOqqB,EACErqB,GAAK,EACdmqB,EAAIE,EAAI,EAERD,EAAIC,EAAI,EAIZ,OAAQ,EAKCa,CAAKhB,OAAS,IAANC,EAAe,EAAQ,EAAJA,OAAa,IAANC,EAAeF,EAAEv1B,OAAS,EAAQ,EAAJy1B,EAAOvG,EAAG/L,GAzCrF,SAAcoS,EAAGC,EAAGC,EAAGvG,GAGrB,KAAOsG,GAAKC,GAAG,CACb,IAAIC,EAAIF,EAAIC,IAAM,EACdxG,EAAIsG,EAAEG,GAEV,GAAIzG,IAAMC,EACR,OAAOwG,EACEzG,GAAKC,EACdsG,EAAIE,EAAI,EAERD,EAAIC,EAAI,EAIZ,OAAQ,EA2BCc,CAAKjB,OAAS,IAANpS,EAAe,EAAQ,EAAJA,OAAa,IAANqS,EAAeD,EAAEv1B,OAAS,EAAQ,EAAJw1B,EAAOtG,KCtNlF,SAASuH,GAAiBC,EAAKpuB,EAAMwmB,EAAO6H,EAAYC,GACtDj2B,KAAK+1B,IAAMA,EACX/1B,KAAK2H,KAAOA,EACZ3H,KAAKmuB,MAAQA,EACbnuB,KAAKg2B,WAAaA,EAClBh2B,KAAKi2B,YAAcA,EACnBj2B,KAAKk2B,OAASvuB,EAAOA,EAAKuuB,MAAQ,IAAM/H,EAAQA,EAAM+H,MAAQ,GAAKF,EAAW32B,OAGhF,IAAI82B,GAAQL,GAAiBM,UAE7B,SAASC,GAAKzB,EAAG0B,GACf1B,EAAEmB,IAAMO,EAAEP,IACVnB,EAAEjtB,KAAO2uB,EAAE3uB,KACXitB,EAAEzG,MAAQmI,EAAEnI,MACZyG,EAAEoB,WAAaM,EAAEN,WACjBpB,EAAEqB,YAAcK,EAAEL,YAClBrB,EAAEsB,MAAQI,EAAEJ,MAGd,SAASK,GAAQ5oB,EAAM6oB,GACrB,IAAIC,EAAQC,GAAmBF,GAC/B7oB,EAAKooB,IAAMU,EAAMV,IACjBpoB,EAAKhG,KAAO8uB,EAAM9uB,KAClBgG,EAAKwgB,MAAQsI,EAAMtI,MACnBxgB,EAAKqoB,WAAaS,EAAMT,WACxBroB,EAAKsoB,YAAcQ,EAAMR,YACzBtoB,EAAKuoB,MAAQO,EAAMP,MAGrB,SAASS,GAAoBhpB,EAAMgR,GACjC,IAAI6X,EAAY7oB,EAAK6oB,UAAU,IAC/BA,EAAUz3B,KAAK4f,GACf4X,GAAQ5oB,EAAM6oB,GAGhB,SAASI,GAAuBjpB,EAAMgR,GACpC,IAAI6X,EAAY7oB,EAAK6oB,UAAU,IAC3BK,EAAML,EAAU9Q,QAAQ/G,GAE5B,OAAIkY,EAAM,EA5CI,GAgDdL,EAAU5O,OAAOiP,EAAK,GACtBN,GAAQ5oB,EAAM6oB,GAhDF,GAkNd,SAASM,GAAgB3O,EAAK4O,EAAIC,GAChC,IAAK,IAAI73B,EAAI,EAAGA,EAAIgpB,EAAI9oB,QAAU8oB,EAAIhpB,GAAG,IAAM43B,IAAM53B,EAAG,CACtD,IAAI83B,EAAID,EAAG7O,EAAIhpB,IAEf,GAAI83B,EACF,OAAOA,GAKb,SAASC,GAAiB/O,EAAKgP,EAAIH,GACjC,IAAK,IAAI73B,EAAIgpB,EAAI9oB,OAAS,EAAGF,GAAK,GAAKgpB,EAAIhpB,GAAG,IAAMg4B,IAAMh4B,EAAG,CAC3D,IAAI83B,EAAID,EAAG7O,EAAIhpB,IAEf,GAAI83B,EACF,OAAOA,GAKb,SAASG,GAAYjP,EAAK6O,GACxB,IAAK,IAAI73B,EAAI,EAAGA,EAAIgpB,EAAI9oB,SAAUF,EAAG,CACnC,IAAI83B,EAAID,EAAG7O,EAAIhpB,IAEf,GAAI83B,EACF,OAAOA,GAyDb,SAASI,GAAezC,EAAG0B,GACzB,OAAO1B,EAAI0B,EAGb,SAASgB,GAAa1C,EAAG0B,GACvB,IAAIiB,EAAI3C,EAAE,GAAK0B,EAAE,GAEjB,OAAIiB,GAIG3C,EAAE,GAAK0B,EAAE,GAGlB,SAASkB,GAAW5C,EAAG0B,GACrB,IAAIiB,EAAI3C,EAAE,GAAK0B,EAAE,GAEjB,OAAIiB,GAIG3C,EAAE,GAAK0B,EAAE,GAGlB,SAASI,GAAmBF,GAC1B,GAAyB,IAArBA,EAAUn3B,OACZ,OAAO,KAKT,IAFA,IAAIo4B,EAAM,GAEDt4B,EAAI,EAAGA,EAAIq3B,EAAUn3B,SAAUF,EACtCs4B,EAAI14B,KAAKy3B,EAAUr3B,GAAG,GAAIq3B,EAAUr3B,GAAG,IAGzCs4B,EAAIC,KAAKL,IACT,IAAItB,EAAM0B,EAAIA,EAAIp4B,QAAU,GACxBs4B,EAAgB,GAChBC,EAAiB,GACjBC,EAAkB,GAEtB,IAAS14B,EAAI,EAAGA,EAAIq3B,EAAUn3B,SAAUF,EAAG,CACzC,IAAI24B,EAAItB,EAAUr3B,GAEd24B,EAAE,GAAK/B,EACT4B,EAAc54B,KAAK+4B,GACV/B,EAAM+B,EAAE,GACjBF,EAAe74B,KAAK+4B,GAEpBD,EAAgB94B,KAAK+4B,GAKzB,IAAI9B,EAAa6B,EACb5B,EAAc4B,EAAgBE,QAGlC,OAFA/B,EAAW0B,KAAKJ,IAChBrB,EAAYyB,KAAKF,IACV,IAAI1B,GAAiBC,EAAKW,GAAmBiB,GAAgBjB,GAAmBkB,GAAiB5B,EAAYC,GAItH,SAAS+B,GAAaC,GACpBj4B,KAAKi4B,KAAOA,EA/Sd9B,GAAMK,UAAY,SAAUjU,GAW1B,OAVAA,EAAOxjB,KAAKC,MAAMujB,EAAQviB,KAAKg2B,YAE3Bh2B,KAAK2H,MACP3H,KAAK2H,KAAK6uB,UAAUjU,GAGlBviB,KAAKmuB,OACPnuB,KAAKmuB,MAAMqI,UAAUjU,GAGhBA,GAGT4T,GAAM+B,OAAS,SAAUvZ,GACvB,IAAIwZ,EAASn4B,KAAKk2B,MAAQl2B,KAAKg2B,WAAW32B,OAG1C,GAFAW,KAAKk2B,OAAS,EAEVvX,EAAS,GAAK3e,KAAK+1B,IACjB/1B,KAAK2H,KACH,GAAK3H,KAAK2H,KAAKuuB,MAAQ,GAAK,GAAKiC,EAAS,GAC5CxB,GAAoB32B,KAAM2e,GAE1B3e,KAAK2H,KAAKuwB,OAAOvZ,GAGnB3e,KAAK2H,KAAO+uB,GAAmB,CAAC/X,SAE7B,GAAIA,EAAS,GAAK3e,KAAK+1B,IACxB/1B,KAAKmuB,MACH,GAAKnuB,KAAKmuB,MAAM+H,MAAQ,GAAK,GAAKiC,EAAS,GAC7CxB,GAAoB32B,KAAM2e,GAE1B3e,KAAKmuB,MAAM+J,OAAOvZ,GAGpB3e,KAAKmuB,MAAQuI,GAAmB,CAAC/X,QAE9B,CACL,IAAIkW,EAAIuD,GAAOzD,GAAG30B,KAAKg2B,WAAYrX,EAAU2Y,IACzCL,EAAImB,GAAOzD,GAAG30B,KAAKi2B,YAAatX,EAAU6Y,IAC9Cx3B,KAAKg2B,WAAWpO,OAAOiN,EAAG,EAAGlW,GAC7B3e,KAAKi2B,YAAYrO,OAAOqP,EAAG,EAAGtY,KAIlCwX,GAAMkC,OAAS,SAAU1Z,GACvB,IAAIwZ,EAASn4B,KAAKk2B,MAAQl2B,KAAKg2B,WAE/B,GAAIrX,EAAS,GAAK3e,KAAK+1B,IACrB,OAAK/1B,KAAK2H,KAMN,GAFK3H,KAAKmuB,MAAQnuB,KAAKmuB,MAAM+H,MAAQ,GAE5B,GAAKiC,EAAS,GAClBvB,GAAuB52B,KAAM2e,GA5G9B,KA+GJsY,EAAIj3B,KAAK2H,KAAK0wB,OAAO1Z,KAGvB3e,KAAK2H,KAAO,KACZ3H,KAAKk2B,OAAS,EApHN,QAsHCe,IACTj3B,KAAKk2B,OAAS,GAGTe,GA3HK,EA4HP,GAAItY,EAAS,GAAK3e,KAAK+1B,IAC5B,OAAK/1B,KAAKmuB,MAMN,GAFKnuB,KAAK2H,KAAO3H,KAAK2H,KAAKuuB,MAAQ,GAE1B,GAAKiC,EAAS,GAClBvB,GAAuB52B,KAAM2e,GAlI9B,KAqIJsY,EAAIj3B,KAAKmuB,MAAMkK,OAAO1Z,KAGxB3e,KAAKmuB,MAAQ,KACbnuB,KAAKk2B,OAAS,EA1IN,QA4ICe,IACTj3B,KAAKk2B,OAAS,GAGTe,GAjJK,EAmJZ,GAAmB,IAAfj3B,KAAKk2B,MACP,OAAIl2B,KAAKg2B,WAAW,KAAOrX,EAlJrB,EAFI,EA2JZ,GAA+B,IAA3B3e,KAAKg2B,WAAW32B,QAAgBW,KAAKg2B,WAAW,KAAOrX,EAAU,CACnE,GAAI3e,KAAK2H,MAAQ3H,KAAKmuB,MAAO,CAI3B,IAHA,IAAIzjB,EAAI1K,KACJs4B,EAAIt4B,KAAK2H,KAEN2wB,EAAEnK,OACPzjB,EAAI4tB,EACJA,EAAIA,EAAEnK,MAGR,GAAIzjB,IAAM1K,KACRs4B,EAAEnK,MAAQnuB,KAAKmuB,UACV,CACL,IAAI0G,EAAI70B,KAAK2H,KACTsvB,EAAIj3B,KAAKmuB,MACbzjB,EAAEwrB,OAASoC,EAAEpC,MACbxrB,EAAEyjB,MAAQmK,EAAE3wB,KACZ2wB,EAAE3wB,KAAOktB,EACTyD,EAAEnK,MAAQ8I,EAGZZ,GAAKr2B,KAAMs4B,GACXt4B,KAAKk2B,OAASl2B,KAAK2H,KAAO3H,KAAK2H,KAAKuuB,MAAQ,IAAMl2B,KAAKmuB,MAAQnuB,KAAKmuB,MAAM+H,MAAQ,GAAKl2B,KAAKg2B,WAAW32B,YAC9FW,KAAK2H,KACd0uB,GAAKr2B,KAAMA,KAAK2H,MAEhB0uB,GAAKr2B,KAAMA,KAAKmuB,OAGlB,OAvLQ,EA0LV,IAAS0G,EAAIuD,GAAOzD,GAAG30B,KAAKg2B,WAAYrX,EAAU2Y,IAAezC,EAAI70B,KAAKg2B,WAAW32B,QAC/EW,KAAKg2B,WAAWnB,GAAG,KAAOlW,EAAS,KADsDkW,EAK7F,GAAI70B,KAAKg2B,WAAWnB,KAAOlW,EAAU,CACnC3e,KAAKk2B,OAAS,EACdl2B,KAAKg2B,WAAWpO,OAAOiN,EAAG,GAE1B,IAASoC,EAAImB,GAAOzD,GAAG30B,KAAKi2B,YAAatX,EAAU6Y,IAAaP,EAAIj3B,KAAKi2B,YAAY52B,QAC/EW,KAAKi2B,YAAYgB,GAAG,KAAOtY,EAAS,KADqDsY,EAGtF,GAAIj3B,KAAKi2B,YAAYgB,KAAOtY,EAEjC,OADA3e,KAAKi2B,YAAYrO,OAAOqP,EAAG,GAvMzB,EA8MV,OA/MY,GAiPhBd,GAAMoC,WAAa,SAAUjK,EAAG0I,GAC9B,GAAI1I,EAAItuB,KAAK+1B,IAAK,CAChB,GAAI/1B,KAAK2H,KAGP,GAFIsvB,EAAIj3B,KAAK2H,KAAK4wB,WAAWjK,EAAG0I,GAG9B,OAAOC,EAIX,OAAOH,GAAgB92B,KAAKg2B,WAAY1H,EAAG0I,GACtC,GAAI1I,EAAItuB,KAAK+1B,IAAK,CAErB,IAAIkB,EADN,GAAIj3B,KAAKmuB,MAGP,GAFI8I,EAAIj3B,KAAKmuB,MAAMoK,WAAWjK,EAAG0I,GAG/B,OAAOC,EAIX,OAAOC,GAAiBl3B,KAAKi2B,YAAa3H,EAAG0I,GAE7C,OAAOI,GAAYp3B,KAAKg2B,WAAYgB,IAIxCb,GAAMqC,cAAgB,SAAUrB,EAAIJ,EAAIC,GAEpC,IAQIC,EATN,GAAIE,EAAKn3B,KAAK+1B,KAAO/1B,KAAK2H,OACpBsvB,EAAIj3B,KAAK2H,KAAK6wB,cAAcrB,EAAIJ,EAAIC,IAGtC,OAAOC,EAIX,GAAIF,EAAK/2B,KAAK+1B,KAAO/1B,KAAKmuB,QACpB8I,EAAIj3B,KAAKmuB,MAAMqK,cAAcrB,EAAIJ,EAAIC,IAGvC,OAAOC,EAIX,OAAIF,EAAK/2B,KAAK+1B,IACLe,GAAgB92B,KAAKg2B,WAAYe,EAAIC,GACnCG,EAAKn3B,KAAK+1B,IACZmB,GAAiBl3B,KAAKi2B,YAAakB,EAAIH,GAEvCI,GAAYp3B,KAAKg2B,WAAYgB,IAsExC,IAAIyB,GAAST,GAAa5B,UAE1BqC,GAAOP,OAAS,SAAUvZ,GACpB3e,KAAKi4B,KACPj4B,KAAKi4B,KAAKC,OAAOvZ,GAEjB3e,KAAKi4B,KAAO,IAAInC,GAAiBnX,EAAS,GAAI,KAAM,KAAM,CAACA,GAAW,CAACA,KAI3E8Z,GAAOJ,OAAS,SAAU1Z,GACxB,GAAI3e,KAAKi4B,KAAM,CACb,IAAIhB,EAAIj3B,KAAKi4B,KAAKI,OAAO1Z,GAMzB,OAvXQ,IAmXJsY,IACFj3B,KAAKi4B,KAAO,MAtXF,IAyXLhB,EAGT,OAAO,GAGTwB,GAAOF,WAAa,SAAU7tB,EAAGssB,GAC/B,GAAIh3B,KAAKi4B,KACP,OAAOj4B,KAAKi4B,KAAKM,WAAW7tB,EAAGssB,IAInCyB,GAAOD,cAAgB,SAAUrB,EAAIJ,EAAIC,GACvC,GAAIG,GAAMJ,GAAM/2B,KAAKi4B,KACnB,OAAOj4B,KAAKi4B,KAAKO,cAAcrB,EAAIJ,EAAIC,IAI3Ch6B,OAAOC,eAAew7B,GAAQ,QAAS,CACrCp7B,IAAK,WACH,OAAI2C,KAAKi4B,KACAj4B,KAAKi4B,KAAK/B,MAGZ,KAGXl5B,OAAOC,eAAew7B,GAAQ,YAAa,CACzCp7B,IAAK,WACH,OAAI2C,KAAKi4B,KACAj4B,KAAKi4B,KAAKzB,UAAU,IAGtB,MC1ZX,ICDIvqB,GAAQC,GDCRwsB,GAEJ,WACE,SAASA,ID0ZI,IAAuBlC,ECzZlClN,IAAgBtpB,KAAM04B,GAEtBnP,IAAgBvpB,KAAM,iBAAkB,IAExCupB,IAAgBvpB,KAAM,gBDsZnBw2B,GAAkC,IAArBA,EAAUn3B,OAIrB,IAAI24B,GAAatB,GAAmBF,IAHlC,IAAIwB,GAAa,OCrZxBzO,IAAgBvpB,KAAM,WAAY,IAwEpC,OArEAwpB,IAAakP,EAAe,CAAC,CAC3Bl5B,IAAK,sBACLrC,MAAO,SAA6BiW,EAAWzR,EAAag3B,GAC1D,IAAIC,EAAsBxlB,EAAYpT,KAAKk2B,MAC3C,OAAOl2B,KAAK64B,kBAAoB10B,KAAK+J,KAAK0qB,EAAsBj3B,GAAeg3B,IAGhF,CACDn5B,IAAK,QACLrC,MAAO,SAAegD,EAAWmb,EAAcwd,GAC7C,IAAI/4B,EAAQC,KAEZA,KAAK+4B,cAAcP,cAAcr4B,EAAWA,EAAYmb,GAAc,SAAU5a,GAC9E,IAAIW,EAAQ23B,KAAet4B,EAAM,GAC7BwH,EAAM7G,EAAM,GAEZS,GADIT,EAAM,GACFA,EAAM,IAElB,OAAOy3B,EAAeh3B,EAAO/B,EAAMk5B,SAASn3B,GAAQoG,QAGvD,CACD1I,IAAK,cACLrC,MAAO,SAAqB2E,EAAO6F,EAAMO,EAAK/G,GAC5CnB,KAAK+4B,cAAcb,OAAO,CAAChwB,EAAKA,EAAM/G,EAAQW,IAE9C9B,KAAKi5B,SAASn3B,GAAS6F,EACvB,IAAIuxB,EAAgBl5B,KAAKm5B,eACrBC,EAAeF,EAAcvxB,GAG/BuxB,EAAcvxB,QADK5D,IAAjBq1B,EACoBlxB,EAAM/G,EAENgD,KAAKS,IAAIw0B,EAAclxB,EAAM/G,KAGtD,CACD3B,IAAK,QACLnC,IAAK,WACH,OAAO2C,KAAK+4B,cAAc7C,QAE3B,CACD12B,IAAK,qBACLnC,IAAK,WACH,IAAI67B,EAAgBl5B,KAAKm5B,eACrB32B,EAAO,EAEX,IAAK,IAAIrD,KAAK+5B,EAAe,CAC3B,IAAI/3B,EAAS+3B,EAAc/5B,GAC3BqD,EAAgB,IAATA,EAAarB,EAASgD,KAAKC,IAAI5B,EAAMrB,GAG9C,OAAOqB,IAER,CACDhD,IAAK,oBACLnC,IAAK,WACH,IAAI67B,EAAgBl5B,KAAKm5B,eACrB32B,EAAO,EAEX,IAAK,IAAIrD,KAAK+5B,EAAe,CAC3B,IAAI/3B,EAAS+3B,EAAc/5B,GAC3BqD,EAAO2B,KAAKS,IAAIpC,EAAMrB,GAGxB,OAAOqB,MAIJk2B,EAhFT,GCDA,SAASp6B,GAAQC,EAAQC,GAAkB,IAAIC,EAAOzB,OAAOyB,KAAKF,GAAS,GAAIvB,OAAO0B,sBAAuB,CAAE,IAAIC,EAAU3B,OAAO0B,sBAAsBH,GAAaC,IAAgBG,EAAUA,EAAQC,QAAO,SAAUC,GAAO,OAAO7B,OAAO8B,yBAAyBP,EAAQM,GAAKzB,eAAgBqB,EAAKM,KAAKC,MAAMP,EAAME,GAAY,OAAOF,EAE9U,SAASQ,GAAcC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAAyB,MAAhBF,UAAUD,GAAaC,UAAUD,GAAK,GAAQA,EAAI,EAAKb,GAAQgB,GAAQ,GAAMC,SAAQ,SAAUC,GAAO+pB,IAAgBrqB,EAAQM,EAAKF,EAAOE,OAAsBxC,OAAOyC,0BAA6BzC,OAAO0C,iBAAiBR,EAAQlC,OAAOyC,0BAA0BH,IAAmBhB,GAAQgB,GAAQC,SAAQ,SAAUC,GAAOxC,OAAOC,eAAeiC,EAAQM,EAAKxC,OAAO8B,yBAAyBQ,EAAQE,OAAe,OAAON,EAO7f,IAoCIm6B,IAAWntB,GAAQD,GAEvB,SAAUrM,GAGR,SAASy5B,IACP,IAAIv7B,EAEAiC,EAEJupB,IAAgBtpB,KAAMq5B,GAEtB,IAAK,IAAI/sB,EAAOlN,UAAUC,OAAQkN,EAAO,IAAIC,MAAMF,GAAOG,EAAO,EAAGA,EAAOH,EAAMG,IAC/EF,EAAKE,GAAQrN,UAAUqN,GAiEzB,OA9DA1M,EAAQ0qB,IAA2BzqB,MAAOlC,EAAmB4sB,IAAgB2O,IAAUp5B,KAAKjB,MAAMlB,EAAkB,CAACkC,MAAM0M,OAAOH,KAElIgd,IAAgBoB,IAAuB5qB,GAAQ,QAAS,CACtD4R,aAAa,EACbxR,UAAW,IAGbopB,IAAgBoB,IAAuB5qB,GAAQ,mCAA+B,GAE9EwpB,IAAgBoB,IAAuB5qB,GAAQ,gCAAiC,MAEhFwpB,IAAgBoB,IAAuB5qB,GAAQ,+BAAgC,MAE/EwpB,IAAgBoB,IAAuB5qB,GAAQ,iBAAkB,IAAI24B,IAErEnP,IAAgBoB,IAAuB5qB,GAAQ,cAAe,MAE9DwpB,IAAgBoB,IAAuB5qB,GAAQ,sBAAuB,MAEtEwpB,IAAgBoB,IAAuB5qB,GAAQ,aAAc,MAE7DwpB,IAAgBoB,IAAuB5qB,GAAQ,qBAAsB,MAErEwpB,IAAgBoB,IAAuB5qB,GAAQ,qCAAqC,WAClFA,EAAMqC,SAAS,CACbuP,aAAa,OAIjB4X,IAAgBoB,IAAuB5qB,GAAQ,6BAA6B,SAAUQ,GACpFR,EAAMiT,oBAAsBzS,KAG9BgpB,IAAgBoB,IAAuB5qB,GAAQ,aAAa,SAAUkT,GACpE,IAAI9R,EAASpB,EAAMF,MAAMsB,OACrBm4B,EAAiBrmB,EAAMsmB,cAAcp5B,UAKrCA,EAAYgE,KAAKC,IAAID,KAAKS,IAAI,EAAG7E,EAAMy5B,2BAA6Br4B,GAASm4B,GAG7EA,IAAmBn5B,IAKvBJ,EAAM05B,4BAMF15B,EAAMmC,MAAM/B,YAAcA,GAC5BJ,EAAMqC,SAAS,CACbuP,aAAa,EACbxR,UAAWA,QAKVJ,EAsQT,OAjVA6qB,IAAUyO,EAASz5B,GA8EnB4pB,IAAa6P,EAAS,CAAC,CACrB75B,IAAK,qBACLrC,MAAO,WACL6C,KAAK05B,eAAiB,IAAIhB,GAC1B14B,KAAK6D,gBAGN,CACDrE,IAAK,gCACLrC,MAAO,SAAuCuD,GAC5C,IAAIoB,EAAQpB,EAAKC,SAE0B,OAAvCX,KAAK25B,+BACP35B,KAAK25B,8BAAgC73B,EACrC9B,KAAK45B,6BAA+B93B,IAEpC9B,KAAK25B,8BAAgCx1B,KAAKC,IAAIpE,KAAK25B,8BAA+B73B,GAClF9B,KAAK45B,6BAA+Bz1B,KAAKS,IAAI5E,KAAK45B,6BAA8B93B,MAGnF,CACDtC,IAAK,yBACLrC,MAAO,WACL,IAAIud,EAAY1a,KAAK05B,eAAexD,MAAQ,EAC5Cl2B,KAAK05B,eAAiB,IAAIhB,GAE1B14B,KAAK65B,uBAAuB,EAAGnf,GAE/B1a,KAAK6D,gBAEN,CACDrE,IAAK,oBACLrC,MAAO,WACL6C,KAAK85B,2BAEL95B,KAAK+5B,0BAEL/5B,KAAKg6B,mCAEN,CACDx6B,IAAK,qBACLrC,MAAO,SAA4B2Z,EAAW1M,GAC5CpK,KAAK85B,2BAEL95B,KAAK+5B,0BAEL/5B,KAAKg6B,iCAEDh6B,KAAKH,MAAMM,YAAc2W,EAAU3W,WACrCH,KAAKy5B,8BAGR,CACDj6B,IAAK,uBACLrC,MAAO,WACD6C,KAAKi6B,6BACPtiB,EAAuB3X,KAAKi6B,+BAG/B,CACDz6B,IAAK,SACLrC,MAAO,WACL,IA2BIud,EA3BA3D,EAAS/W,KAETa,EAAcb,KAAKH,MACnB2V,EAAa3U,EAAY2U,WACzBpC,EAAYvS,EAAYuS,UACxB5P,EAAoB3C,EAAY2C,kBAChC1C,EAAeD,EAAYC,aAC3B6H,EAAY9H,EAAY8H,UACxBxH,EAASN,EAAYM,OACrB6W,EAAKnX,EAAYmX,GACjB7I,EAAYtO,EAAYsO,UACxB+qB,EAAmBr5B,EAAYq5B,iBAC/BhiB,EAAOrX,EAAYqX,KACnBhX,EAAQL,EAAYK,MACpB8H,EAAWnI,EAAYmI,SACvBpH,EAAQf,EAAYe,MACpBu4B,EAAet5B,EAAYs5B,aAC3Bl4B,EAAcjC,KAAKkC,MACnByP,EAAc1P,EAAY0P,YAC1BxR,EAAY8B,EAAY9B,UACxBmN,EAAW,GAEX8sB,EAAsBp6B,KAAKw5B,2BAE3Ba,EAAqBr6B,KAAK05B,eAAeW,mBACzCC,EAAoBt6B,KAAK05B,eAAexD,MACxCzb,EAAa,EA0BjB,GAvBAza,KAAK05B,eAAea,MAAMp2B,KAAKS,IAAI,EAAGzE,EAAY+5B,GAAmB/4B,EAA4B,EAAnB+4B,GAAsB,SAAUp4B,EAAO6F,EAAMO,GACzH,IAAIsyB,EAEqB,qBAAd9f,GACTD,EAAa3Y,EACb4Y,EAAY5Y,IAEZ2Y,EAAatW,KAAKC,IAAIqW,EAAY3Y,GAClC4Y,EAAYvW,KAAKS,IAAI8V,EAAW5Y,IAGlCwL,EAASvO,KAAK+B,EAAa,CACzBgB,MAAOA,EACP6P,YAAaA,EACbnS,IAAK2P,EAAUrN,GACfV,OAAQ2V,EACR7V,OAAQs5B,EAAS,CACfr5B,OAAQqC,EAAkBiI,UAAU3J,IACnCynB,IAAgBiR,EAAyB,QAAjBL,EAAyB,OAAS,QAASxyB,GAAO4hB,IAAgBiR,EAAQ,WAAY,YAAajR,IAAgBiR,EAAQ,MAAOtyB,GAAMqhB,IAAgBiR,EAAQ,QAASh3B,EAAkBkI,SAAS5J,IAAS04B,SAKxOH,EAAqBl6B,EAAYgB,EAAS+4B,GAAoBI,EAAoBlnB,EAGpF,IAFA,IAAIqnB,EAAYt2B,KAAKC,IAAIgP,EAAYknB,EAAmBn2B,KAAK+J,MAAM/N,EAAYgB,EAAS+4B,EAAmBG,GAAsB72B,EAAkBqI,cAAgBjK,EAAQ4B,EAAkBsI,eAEpLynB,EAAS+G,EAAmB/G,EAAS+G,EAAoBG,EAAWlH,IAC3E7Y,EAAY6Y,EACZjmB,EAASvO,KAAK+B,EAAa,CACzBgB,MAAOyxB,EACP5hB,YAAaA,EACbnS,IAAK2P,EAAUokB,GACfnyB,OAAQpB,KACRkB,MAAO,CACLU,MAAO4B,EAAkBkI,SAAS6nB,OAQ1C,OAFAvzB,KAAK06B,YAAcjgB,EACnBza,KAAK26B,WAAajgB,EACXxc,gBAAoB,MAAO,CAChCqC,IAAKP,KAAKmZ,0BACV,aAAcnZ,KAAKH,MAAM,cACzB8I,UAAWmiB,kBAAK,4BAA6BniB,GAC7CqP,GAAIA,EACJ3V,SAAUrC,KAAK4C,UACfsV,KAAMA,EACNhX,MAAOjC,GAAc,CACnBoZ,UAAW,aACXC,UAAW,MACXnX,OAAQqU,EAAa,OAASrU,EAC9ByG,UAAW,SACXC,UAAWuyB,EAAsBj5B,EAAS,SAAW,OACrDqG,SAAU,WACV5F,MAAOA,EACP2W,wBAAyB,QACzBC,WAAY,aACXtX,GACH8H,SAAUA,GACT9K,gBAAoB,MAAO,CAC5ByK,UAAW,kDACXzH,MAAO,CACLU,MAAO,OACPT,OAAQi5B,EACRhhB,SAAU,OACVC,UAAW+gB,EACX7yB,SAAU,SACV+R,cAAe3H,EAAc,OAAS,GACtCnK,SAAU,aAEX8F,MAEJ,CACD9N,IAAK,2BACLrC,MAAO,WACL,GAAkD,kBAAvC6C,KAAK25B,8BAA4C,CAC1D,IAAIlf,EAAaza,KAAK25B,8BAClBjf,EAAY1a,KAAK45B,6BACrB55B,KAAK25B,8BAAgC,KACrC35B,KAAK45B,6BAA+B,KAEpC55B,KAAK65B,uBAAuBpf,EAAYC,GAExC1a,KAAK6D,iBAGR,CACDrE,IAAK,4BACLrC,MAAO,WACL,IAAI6d,EAA6Bhb,KAAKH,MAAMmb,2BAExChb,KAAKi6B,6BACPtiB,EAAuB3X,KAAKi6B,6BAG9Bj6B,KAAKi6B,4BAA8Bhf,EAAwBjb,KAAK46B,kCAAmC5f,KAEpG,CACDxb,IAAK,2BACLrC,MAAO,WACL,IAAIoE,EAAevB,KAAKH,MACpBuT,EAAY7R,EAAa6R,UACzB5P,EAAoBjC,EAAaiC,kBACjC5B,EAAQL,EAAaK,MACrBi5B,EAAuB12B,KAAKS,IAAI,EAAGT,KAAKua,MAAM9c,EAAQ4B,EAAkBsI,eAC5E,OAAO9L,KAAK05B,eAAeU,oBAAoBhnB,EAAWynB,EAAsBr3B,EAAkBqI,iBAEnG,CACDrM,IAAK,0BACLrC,MAAO,WACL,IAAIuE,EAAe1B,KAAKH,MACpBsB,EAASO,EAAaP,OACtBkB,EAAWX,EAAaW,SACxBlC,EAAYH,KAAKkC,MAAM/B,UAEvBH,KAAK86B,oBAAsB36B,IAC7BkC,EAAS,CACPiZ,aAAcna,EACdqa,aAAcxb,KAAKw5B,2BACnBr5B,UAAWA,IAEbH,KAAK86B,kBAAoB36B,KAG5B,CACDX,IAAK,iCACLrC,MAAO,WACD6C,KAAK+6B,sBAAwB/6B,KAAK06B,aAAe16B,KAAKg7B,qBAAuBh7B,KAAK26B,cAEpFM,EADsBj7B,KAAKH,MAAMo7B,iBACjB,CACdxgB,WAAYza,KAAK06B,YACjBhgB,UAAW1a,KAAK26B,aAElB36B,KAAK+6B,oBAAsB/6B,KAAK06B,YAChC16B,KAAKg7B,mBAAqBh7B,KAAK26B,cAGlC,CACDn7B,IAAK,yBACLrC,MAAO,SAAgCsd,EAAYC,GAKjD,IAJA,IAAI3Y,EAAe/B,KAAKH,MACpB2D,EAAoBzB,EAAayB,kBACjC03B,EAAiBn5B,EAAam5B,eAEzBzH,EAAUhZ,EAAYgZ,GAAW/Y,EAAW+Y,IAAW,CAC9D,IAAI0H,EAAkBD,EAAezH,GACjC9rB,EAAOwzB,EAAgBxzB,KACvBO,EAAMizB,EAAgBjzB,IAE1BlI,KAAK05B,eAAe0B,YAAY3H,EAAS9rB,EAAMO,EAAK1E,EAAkBiI,UAAUgoB,QAGlF,CAAC,CACHj0B,IAAK,2BACLrC,MAAO,SAAkCgN,EAAWC,GAClD,YAA4BrG,IAAxBoG,EAAUhK,WAA2BiK,EAAUjK,YAAcgK,EAAUhK,UAClE,CACLwR,aAAa,EACbxR,UAAWgK,EAAUhK,WAIlB,SAIJk5B,EAlVT,CAmVEn7B,iBAAsBqrB,IAAgBtd,GAAQ,YAAqD,MAoCjGC,IAmBJ,SAASmvB,MAjBT9R,IAAgB8P,GAAS,eAAgB,CACvC7jB,YAAY,EACZrG,UAWF,SAAkBhS,GAChB,OAAOA,GAXP89B,gBAAiBI,GACjBh5B,SAAUg5B,GACVnB,iBAAkB,GAClBhiB,KAAM,OACN8C,2BAhaiD,IAiajD9Z,MAvagB,GAwahB8H,SAAU,EACVmxB,aAAc,QAehB5vB,mBAAS8uB,ICzcMA,ICMXvuB,GAEJ,WACE,SAASA,IACP,IAAI/K,EAAQC,KAER+K,EAAS3L,UAAUC,OAAS,QAAsB0E,IAAjB3E,UAAU,GAAmBA,UAAU,GAAK,GAEjFkqB,IAAgBtpB,KAAM8K,GAEtBye,IAAgBvpB,KAAM,0BAAsB,GAE5CupB,IAAgBvpB,KAAM,0BAAsB,GAE5CupB,IAAgBvpB,KAAM,uBAAmB,GAEzCupB,IAAgBvpB,KAAM,eAAe,SAAUU,GAC7C,IAAIoB,EAAQpB,EAAKoB,MAEjB/B,EAAMiL,mBAAmBhJ,YAAY,CACnCF,MAAOA,EAAQ/B,EAAMkL,wBAIzBse,IAAgBvpB,KAAM,aAAa,SAAUqB,GAC3C,IAAIS,EAAQT,EAAMS,MAElB/B,EAAMiL,mBAAmBjI,UAAU,CACjCjB,MAAOA,EAAQ/B,EAAMmL,qBAIzB,IAAI1H,EAAoBuH,EAAOvH,kBAC3B2H,EAAwBJ,EAAOtH,kBAC/BA,OAA8C,IAA1B0H,EAAmC,EAAIA,EAC3DC,EAAwBL,EAAOrH,eAC/BA,OAA2C,IAA1B0H,EAAmC,EAAIA,EAC5DpL,KAAKgL,mBAAqBxH,EAC1BxD,KAAKiL,mBAAqBxH,EAC1BzD,KAAKkL,gBAAkBxH,EA0DzB,OAvDA8lB,IAAa1e,EAA4B,CAAC,CACxCtL,IAAK,QACLrC,MAAO,SAAewD,EAAUW,GAC9BtB,KAAKgL,mBAAmBK,MAAM1K,EAAWX,KAAKkL,gBAAiB5J,EAActB,KAAKiL,sBAEnF,CACDzL,IAAK,WACLrC,MAAO,WACL6C,KAAKgL,mBAAmBM,aAEzB,CACD9L,IAAK,iBACLrC,MAAO,WACL,OAAO6C,KAAKgL,mBAAmBO,mBAEhC,CACD/L,IAAK,gBACLrC,MAAO,WACL,OAAO6C,KAAKgL,mBAAmBQ,kBAEhC,CACDhM,IAAK,YACLrC,MAAO,SAAmBwD,GACxB,IAAIW,EAAclC,UAAUC,OAAS,QAAsB0E,IAAjB3E,UAAU,GAAmBA,UAAU,GAAK,EACtF,OAAOY,KAAKgL,mBAAmBS,UAAU9K,EAAWX,KAAKkL,gBAAiB5J,EAActB,KAAKiL,sBAE9F,CACDzL,IAAK,WACLrC,MAAO,SAAkBwD,GACvB,IAAIW,EAAclC,UAAUC,OAAS,QAAsB0E,IAAjB3E,UAAU,GAAmBA,UAAU,GAAK,EACtF,OAAOY,KAAKgL,mBAAmBU,SAAS/K,EAAWX,KAAKkL,gBAAiB5J,EAActB,KAAKiL,sBAE7F,CACDzL,IAAK,MACLrC,MAAO,SAAawD,GAClB,IAAIW,EAAclC,UAAUC,OAAS,QAAsB0E,IAAjB3E,UAAU,GAAmBA,UAAU,GAAK,EACtF,OAAOY,KAAKgL,mBAAmBW,IAAIhL,EAAWX,KAAKkL,gBAAiB5J,EAActB,KAAKiL,sBAExF,CACDzL,IAAK,MACLrC,MAAO,SAAawD,EAAUW,EAAaM,EAAOT,GAChDnB,KAAKgL,mBAAmBY,IAAIjL,EAAWX,KAAKkL,gBAAiB5J,EAActB,KAAKiL,mBAAoBrJ,EAAOT,KAE5G,CACD3B,IAAK,gBACLnC,IAAK,WACH,OAAO2C,KAAKgL,mBAAmBa,gBAEhC,CACDrM,IAAK,eACLnC,IAAK,WACH,OAAO2C,KAAKgL,mBAAmBc,iBAI5BhB,EA/FT,GCAA,SAASxM,GAAQC,EAAQC,GAAkB,IAAIC,EAAOzB,OAAOyB,KAAKF,GAAS,GAAIvB,OAAO0B,sBAAuB,CAAE,IAAIC,EAAU3B,OAAO0B,sBAAsBH,GAAaC,IAAgBG,EAAUA,EAAQC,QAAO,SAAUC,GAAO,OAAO7B,OAAO8B,yBAAyBP,EAAQM,GAAKzB,eAAgBqB,EAAKM,KAAKC,MAAMP,EAAME,GAAY,OAAOF,EAE9U,SAASQ,GAAcC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAAyB,MAAhBF,UAAUD,GAAaC,UAAUD,GAAK,GAAQA,EAAI,EAAKb,GAAQgB,GAAQ,GAAMC,SAAQ,SAAUC,GAAO+pB,IAAgBrqB,EAAQM,EAAKF,EAAOE,OAAsBxC,OAAOyC,0BAA6BzC,OAAO0C,iBAAiBR,EAAQlC,OAAOyC,0BAA0BH,IAAmBhB,GAAQgB,GAAQC,SAAQ,SAAUC,GAAOxC,OAAOC,eAAeiC,EAAQM,EAAKxC,OAAO8B,yBAAyBQ,EAAQE,OAAe,OAAON,EAO7f,IASIS,GAEJ,SAAUC,GAGR,SAASD,EAAUE,EAAOC,GACxB,IAAIC,EAEJupB,IAAgBtpB,KAAML,GAEtBI,EAAQ0qB,IAA2BzqB,KAAM0qB,IAAgB/qB,GAAWM,KAAKD,KAAMH,EAAOC,IAEtFypB,IAAgBoB,IAAuB5qB,GAAQ,QAAS,CACtDG,WAAY,EACZC,UAAW,EACXC,cAAe,EACfC,yBAAyB,EACzBC,uBAAuB,IAGzBipB,IAAgBoB,IAAuB5qB,GAAQ,iCAAkC,MAEjFwpB,IAAgBoB,IAAuB5qB,GAAQ,8BAA+B,MAE9EwpB,IAAgBoB,IAAuB5qB,GAAQ,sBAAsB,SAAUQ,GAC7ER,EAAMS,gBAAkBD,KAG1BgpB,IAAgBoB,IAAuB5qB,GAAQ,uBAAuB,SAAUQ,GAC9ER,EAAMU,iBAAmBF,KAG3BgpB,IAAgBoB,IAAuB5qB,GAAQ,+BAA+B,SAAUW,GACtF,IAAIC,EAAWD,EAAKC,SAChBC,EAAOgpB,IAAyBlpB,EAAM,CAAC,aAEvCG,EAAcd,EAAMF,MACpBiB,EAAeD,EAAYC,aAC3BC,EAAgBF,EAAYE,cAGhC,OAAIJ,IAFWE,EAAYG,SAECD,EACnB7C,gBAAoB,MAAO,CAChCsB,IAAKoB,EAAKpB,IACV0B,MAAOjC,GAAc,GAAI2B,EAAKM,MAAO,CACnCC,OAtDgB,OA0DbL,EAAa7B,GAAc,GAAI2B,EAAM,CAC1CQ,OAAQupB,IAAuB5qB,GAC/BY,SAAUA,EAAWI,QAK3BwoB,IAAgBoB,IAAuB5qB,GAAQ,gCAAgC,SAAUsB,GACvF,IAAIC,EAAcD,EAAMC,YACpBX,EAAWU,EAAMV,SACjBC,EAAOgpB,IAAyBvoB,EAAO,CAAC,cAAe,aAEvDE,EAAexB,EAAMF,MACrBiB,EAAeS,EAAaT,aAC5BU,EAAmBD,EAAaC,iBAChCT,EAAgBQ,EAAaR,cACjC,OAAOD,EAAa7B,GAAc,GAAI2B,EAAM,CAC1CU,YAAaA,EAAcE,EAC3BJ,OAAQupB,IAAuB5qB,GAC/BY,SAAUA,EAAWI,QAIzBwoB,IAAgBoB,IAAuB5qB,GAAQ,6BAA6B,SAAU0B,GACpF,IAAIH,EAAcG,EAAMH,YACpBV,EAAOgpB,IAAyBnoB,EAAO,CAAC,gBAExCC,EAAe3B,EAAMF,MACrBiB,EAAeY,EAAaZ,aAC5Ba,EAAcD,EAAaC,YAC3BH,EAAmBE,EAAaF,iBAEpC,OAAIF,IAAgBK,EAAcH,EACzBtD,gBAAoB,MAAO,CAChCsB,IAAKoB,EAAKpB,IACV0B,MAAOjC,GAAc,GAAI2B,EAAKM,MAAO,CACnCU,MA9FgB,OAkGbd,EAAa7B,GAAc,GAAI2B,EAAM,CAC1CU,YAAaA,EAAcE,EAC3BJ,OAAQupB,IAAuB5qB,SAKrCwpB,IAAgBoB,IAAuB5qB,GAAQ,yBAAyB,SAAU8B,GAChF,IAAIC,EAAQD,EAAMC,MACdC,EAAehC,EAAMF,MACrB8B,EAAcI,EAAaJ,YAC3BH,EAAmBO,EAAaP,iBAChCQ,EAAcD,EAAaC,YAC3BC,EAAclC,EAAMmC,MACpB9B,EAAgB6B,EAAY7B,cAMhC,OAL8B6B,EAAY5B,yBAKXyB,IAAUH,EAAcH,EAC9CpB,EAGqB,oBAAhB4B,EAA6BA,EAAY,CACrDF,MAAOA,EAAQN,IACZQ,KAGPunB,IAAgBoB,IAAuB5qB,GAAQ,aAAa,SAAUoC,GACpE,IAAIjC,EAAaiC,EAAWjC,WACxBC,EAAYgC,EAAWhC,UAE3BJ,EAAMqC,SAAS,CACblC,WAAYA,EACZC,UAAWA,IAGb,IAAIkC,EAAWtC,EAAMF,MAAMwC,SAEvBA,GACFA,EAASF,MAIbonB,IAAgBoB,IAAuB5qB,GAAQ,8BAA8B,SAAUuC,GACrF,IAAIC,EAAaD,EAAMC,WACnBC,EAAOF,EAAME,KACbC,EAAWH,EAAMG,SACjBC,EAAe3C,EAAMmC,MACrB7B,EAA0BqC,EAAarC,wBACvCC,EAAwBoC,EAAapC,sBAEzC,GAAIiC,IAAelC,GAA2BoC,IAAanC,EAAuB,CAChFP,EAAMqC,SAAS,CACbhC,cAAeoC,EACfnC,wBAAyBkC,EACzBjC,sBAAuBmC,IAGzB,IAAIE,EAA4B5C,EAAMF,MAAM8C,0BAEH,oBAA9BA,GACTA,EAA0B,CACxBJ,WAAYA,EACZC,KAAMA,EACNC,SAAUA,QAMlB8mB,IAAgBoB,IAAuB5qB,GAAQ,iBAAiB,SAAUoC,GACxE,IAAIjC,EAAaiC,EAAWjC,WAE5BH,EAAM6C,UAAU,CACd1C,WAAYA,EACZC,UAAWJ,EAAMmC,MAAM/B,eAI3BopB,IAAgBoB,IAAuB5qB,GAAQ,gBAAgB,SAAUoC,GACvE,IAAIhC,EAAYgC,EAAWhC,UAE3BJ,EAAM6C,UAAU,CACdzC,UAAWA,EACXD,WAAYH,EAAMmC,MAAMhC,gBAI5BqpB,IAAgBoB,IAAuB5qB,GAAQ,wBAAwB,SAAU8C,GAC/E,IAAIf,EAAQe,EAAMf,MACdgB,EAAe/C,EAAMF,MACrBkB,EAAgB+B,EAAa/B,cAC7BC,EAAW8B,EAAa9B,SACxB+B,EAAYD,EAAaC,UACzBC,EAAejD,EAAMmC,MACrB9B,EAAgB4C,EAAa5C,cAMjC,OAL4B4C,EAAa1C,uBAKZwB,IAAUd,EAAWD,EACzCX,EAGmB,oBAAd2C,EAA2BA,EAAU,CACjDjB,MAAOA,EAAQf,IACZgC,KAGPwmB,IAAgBoB,IAAuB5qB,GAAQ,mBAAmB,SAAUQ,GAC1ER,EAAMkD,aAAe1C,KAGvBgpB,IAAgBoB,IAAuB5qB,GAAQ,oBAAoB,SAAUQ,GAC3ER,EAAMmD,cAAgB3C,KAGxB,IAAI4C,EAA2BtD,EAAMsD,yBACjCC,EAAoBvD,EAAM2B,iBAC1B6B,EAAiBxD,EAAMkB,cAsB3B,OApBAhB,EAAMuD,6BAA4B,GAE9BH,IACFpD,EAAMwD,wCAA0CF,EAAiB,EAAI,IAAIyH,GAA2B,CAClGtH,kBAAmBL,EACnBM,kBAAmB,EACnBC,eAAgBL,IACbF,EACLpD,EAAM4D,yCAA2CP,EAAoB,GAAKC,EAAiB,EAAI,IAAIyH,GAA2B,CAC5HtH,kBAAmBL,EACnBM,kBAAmBL,EACnBM,eAAgBL,IACbF,EACLpD,EAAM6D,sCAAwCR,EAAoB,EAAI,IAAI0H,GAA2B,CACnGtH,kBAAmBL,EACnBM,kBAAmBL,EACnBM,eAAgB,IACbP,GAGApD,EAmgBT,OAzuBA6qB,IAAUjrB,EAAWC,GAyOrB4pB,IAAa7pB,EAAW,CAAC,CACvBH,IAAK,mBACLrC,MAAO,WACL6C,KAAKQ,iBAAmBR,KAAKQ,gBAAgBqD,cAC7C7D,KAAKS,kBAAoBT,KAAKS,iBAAiBoD,cAC/C7D,KAAKiD,cAAgBjD,KAAKiD,aAAaY,cACvC7D,KAAKkD,eAAiBlD,KAAKkD,cAAcW,gBAI1C,CACDrE,IAAK,gCACLrC,MAAO,WACL,IAAI2G,EAAQ1E,UAAUC,OAAS,QAAsB0E,IAAjB3E,UAAU,GAAmBA,UAAU,GAAK,GAC5E4E,EAAoBF,EAAMxC,YAC1BA,OAAoC,IAAtB0C,EAA+B,EAAIA,EACjDC,EAAiBH,EAAMnD,SACvBA,OAA8B,IAAnBsD,EAA4B,EAAIA,EAE/CjE,KAAKkE,+BAAgF,kBAAxClE,KAAKkE,+BAA8CC,KAAKC,IAAIpE,KAAKkE,+BAAgC5C,GAAeA,EAC7JtB,KAAKqE,4BAA0E,kBAArCrE,KAAKqE,4BAA2CF,KAAKC,IAAIpE,KAAKqE,4BAA6B1D,GAAYA,IAIlJ,CACDnB,IAAK,kBACLrC,MAAO,WACL6C,KAAKQ,iBAAmBR,KAAKQ,gBAAgB8D,kBAC7CtE,KAAKS,kBAAoBT,KAAKS,iBAAiB6D,kBAC/CtE,KAAKiD,cAAgBjD,KAAKiD,aAAaqB,kBACvCtE,KAAKkD,eAAiBlD,KAAKkD,cAAcoB,oBAI1C,CACD9E,IAAK,oBACLrC,MAAO,WACL,IAAIoH,EAAQnF,UAAUC,OAAS,QAAsB0E,IAAjB3E,UAAU,GAAmBA,UAAU,GAAK,GAC5EoF,EAAoBD,EAAMjD,YAC1BA,OAAoC,IAAtBkD,EAA+B,EAAIA,EACjDC,EAAiBF,EAAM5D,SACvBA,OAA8B,IAAnB8D,EAA4B,EAAIA,EAE3CC,EAAe1E,KAAKH,MACpB2B,EAAmBkD,EAAalD,iBAChCT,EAAgB2D,EAAa3D,cAC7B4D,EAAsBR,KAAKS,IAAI,EAAGtD,EAAcE,GAChDqD,EAAmBV,KAAKS,IAAI,EAAGjE,EAAWI,GAC9Cf,KAAKQ,iBAAmBR,KAAKQ,gBAAgBsE,kBAAkB,CAC7DxD,YAAaA,EACbX,SAAUkE,IAEZ7E,KAAKS,kBAAoBT,KAAKS,iBAAiBqE,kBAAkB,CAC/DxD,YAAaqD,EACbhE,SAAUkE,IAEZ7E,KAAKiD,cAAgBjD,KAAKiD,aAAa6B,kBAAkB,CACvDxD,YAAaA,EACbX,SAAUA,IAEZX,KAAKkD,eAAiBlD,KAAKkD,cAAc4B,kBAAkB,CACzDxD,YAAaqD,EACbhE,SAAUA,IAEZX,KAAK+E,eAAiB,KACtB/E,KAAKgF,eAAiB,KAEtBhF,KAAKsD,6BAA4B,KAElC,CACD9D,IAAK,oBACLrC,MAAO,WACL,IAAI8H,EAAejF,KAAKH,MACpBK,EAAa+E,EAAa/E,WAC1BC,EAAY8E,EAAa9E,UAE7B,GAAID,EAAa,GAAKC,EAAY,EAAG,CACnC,IAAI+E,EAAW,GAEXhF,EAAa,IACfgF,EAAShF,WAAaA,GAGpBC,EAAY,IACd+E,EAAS/E,UAAYA,GAGvBH,KAAKoC,SAAS8C,GAGhBlF,KAAKmF,+BAEN,CACD3F,IAAK,qBACLrC,MAAO,WACL6C,KAAKmF,+BAEN,CACD3F,IAAK,SACLrC,MAAO,WACL,IAAIiI,EAAepF,KAAKH,MACpBwC,EAAW+C,EAAa/C,SACxBgD,EAAoBD,EAAaC,kBAGjCC,GAF4BF,EAAazC,0BACxByC,EAAalF,WACbkF,EAAaE,gBAE9BC,GADgBH,EAAajF,UACfiF,EAAaG,aAC3B3E,EAAOgpB,IAAyBxkB,EAAc,CAAC,WAAY,oBAAqB,4BAA6B,aAAc,iBAAkB,YAAa,gBAO9J,GALApF,KAAKwF,oBAKoB,IAArBxF,KAAKH,MAAM+B,OAAqC,IAAtB5B,KAAKH,MAAMsB,OACvC,OAAO,KAIT,IAAIsE,EAAezF,KAAKkC,MACpBhC,EAAauF,EAAavF,WAC1BC,EAAYsF,EAAatF,UAC7B,OAAOjC,gBAAoB,MAAO,CAChCgD,MAAOlB,KAAK0F,sBACXxH,gBAAoB,MAAO,CAC5BgD,MAAOlB,KAAK2F,oBACX3F,KAAK4F,mBAAmBhF,GAAOZ,KAAK6F,oBAAoB5G,GAAc,GAAI2B,EAAM,CACjFyB,SAAUA,EACVnC,WAAYA,MACRhC,gBAAoB,MAAO,CAC/BgD,MAAOlB,KAAK8F,uBACX9F,KAAK+F,sBAAsB9G,GAAc,GAAI2B,EAAM,CACpDyB,SAAUA,EACVlC,UAAWA,KACRH,KAAKgG,uBAAuB/G,GAAc,GAAI2B,EAAM,CACvDyB,SAAUA,EACVgD,kBAAmBA,EACnBnF,WAAYA,EACZoF,eAAgBA,EAChBC,YAAaA,EACbpF,UAAWA,SAGd,CACDX,IAAK,uBACLrC,MAAO,SAA8B0C,GAKnC,OAJaA,EAAMsB,OAECnB,KAAKiG,kBAAkBpG,KAI5C,CACDL,IAAK,oBACLrC,MAAO,SAA2B0C,GAChC,IAAI2B,EAAmB3B,EAAM2B,iBACzBQ,EAAcnC,EAAMmC,YAExB,GAA2B,MAAvBhC,KAAK+E,eACP,GAA2B,oBAAhB/C,EAA4B,CAGrC,IAFA,IAAIkE,EAAgB,EAEXpE,EAAQ,EAAGA,EAAQN,EAAkBM,IAC5CoE,GAAiBlE,EAAY,CAC3BF,MAAOA,IAIX9B,KAAK+E,eAAiBmB,OAEtBlG,KAAK+E,eAAiB/C,EAAcR,EAIxC,OAAOxB,KAAK+E,iBAEb,CACDvF,IAAK,qBACLrC,MAAO,SAA4B0C,GAKjC,OAJYA,EAAM+B,MAEE5B,KAAKmG,kBAAkBtG,KAI5C,CACDL,IAAK,oBACLrC,MAAO,SAA2B0C,GAChC,IAAIkB,EAAgBlB,EAAMkB,cACtBgC,EAAYlD,EAAMkD,UAEtB,GAA2B,MAAvB/C,KAAKgF,eACP,GAAyB,oBAAdjC,EAA0B,CAGnC,IAFA,IAAIqD,EAAgB,EAEXtE,EAAQ,EAAGA,EAAQf,EAAee,IACzCsE,GAAiBrD,EAAU,CACzBjB,MAAOA,IAIX9B,KAAKgF,eAAiBoB,OAEtBpG,KAAKgF,eAAiBjC,EAAYhC,EAItC,OAAOf,KAAKgF,iBAEb,CACDxF,IAAK,6BACLrC,MAAO,WACL,GAAmD,kBAAxC6C,KAAKkE,+BAA6C,CAC3D,IAAI5C,EAActB,KAAKkE,+BACnBvD,EAAWX,KAAKqE,4BACpBrE,KAAKkE,+BAAiC,KACtClE,KAAKqE,4BAA8B,KACnCrE,KAAK8E,kBAAkB,CACrBxD,YAAaA,EACbX,SAAUA,IAEZX,KAAK6D,iBAQR,CACDrE,IAAK,8BACLrC,MAAO,SAAqCkJ,GAC1C,IAAIC,EAAetG,KAAKH,MACpBmC,EAAcsE,EAAatE,YAC3BuE,EAA0BD,EAAaC,wBACvCC,EAAuBF,EAAaE,qBACpCrF,EAASmF,EAAanF,OACtBK,EAAmB8E,EAAa9E,iBAChCT,EAAgBuF,EAAavF,cAC7BgC,EAAYuD,EAAavD,UACzB7B,EAAQoF,EAAapF,MACrBuF,EAAsBH,EAAaG,oBACnCC,EAAuBJ,EAAaI,qBACpCC,EAAmBL,EAAaK,iBAChCC,EAAoBN,EAAaM,kBACjChF,EAAQ0E,EAAa1E,MACrBiF,EAAaR,GAAYlF,IAAWnB,KAAK8G,qBAAuBlF,IAAU5B,KAAK+G,mBAC/EC,EAAiBX,GAAYrE,IAAgBhC,KAAKiH,0BAA4BzF,IAAqBxB,KAAKkH,8BACxGC,EAAgBd,GAAYtF,IAAkBf,KAAKoH,4BAA8BrE,IAAc/C,KAAKqH,wBAEpGhB,GAAYQ,GAAc3F,IAAUlB,KAAKsH,sBAC3CtH,KAAK0F,qBAAuBzG,GAAc,CACxCkC,OAAQA,EACRoG,SAAU,UAEV3F,MAAOA,GACNV,KAGDmF,GAAYQ,GAAcM,KAC5BnH,KAAK2F,mBAAqB,CACxBxE,OAAQnB,KAAKiG,kBAAkBjG,KAAKH,OACpC2H,SAAU,WACV5F,MAAOA,GAET5B,KAAK8F,sBAAwB,CAC3B3E,OAAQA,EAASnB,KAAKiG,kBAAkBjG,KAAKH,OAC7C0H,SAAU,UAEVC,SAAU,WACV5F,MAAOA,KAIPyE,GAAYI,IAAwBzG,KAAKyH,oCAC3CzH,KAAK0H,qBAAuBzI,GAAc,CACxC0I,KAAM,EACNC,UAAW,SACXC,UAAWtB,EAA0B,OAAS,SAC9CiB,SAAU,YACTf,KAGDJ,GAAYW,GAAkBN,IAAyB1G,KAAK8H,qCAC9D9H,KAAK+H,sBAAwB9I,GAAc,CACzC0I,KAAM3H,KAAKmG,kBAAkBnG,KAAKH,OAClC2H,SAAU,YACTd,KAGDL,GAAYM,IAAqB3G,KAAKgI,iCACxChI,KAAKiI,kBAAoBhJ,GAAc,CACrC0I,KAAM,EACNC,UAAW,SACXC,UAAW,SACXL,SAAU,WACVU,IAAK,GACJvB,KAGDN,GAAYW,GAAkBJ,IAAsB5G,KAAKmI,kCAC3DnI,KAAKoI,mBAAqBnJ,GAAc,CACtC0I,KAAM3H,KAAKmG,kBAAkBnG,KAAKH,OAClC+H,UAAWpB,EAAuB,OAAS,SAC3CqB,UAAW,SACXL,SAAU,WACVU,IAAK,GACJtB,IAGL5G,KAAKiH,yBAA2BjF,EAChChC,KAAKkH,8BAAgC1F,EACrCxB,KAAKoH,2BAA6BrG,EAClCf,KAAK8G,oBAAsB3F,EAC3BnB,KAAKqH,uBAAyBtE,EAC9B/C,KAAKsH,mBAAqBpG,EAC1BlB,KAAKyH,iCAAmChB,EACxCzG,KAAK8H,kCAAoCpB,EACzC1G,KAAKgI,8BAAgCrB,EACrC3G,KAAKmI,+BAAiCvB,EACtC5G,KAAK+G,mBAAqBnF,IAE3B,CACDpC,IAAK,oBACLrC,MAAO,WACD6C,KAAKiH,2BAA6BjH,KAAKH,MAAMmC,aAAehC,KAAKkH,gCAAkClH,KAAKH,MAAM2B,mBAChHxB,KAAK+E,eAAiB,MAGpB/E,KAAKoH,6BAA+BpH,KAAKH,MAAMkB,eAAiBf,KAAKqH,yBAA2BrH,KAAKH,MAAMkD,YAC7G/C,KAAKgF,eAAiB,MAGxBhF,KAAKsD,8BAELtD,KAAKiH,yBAA2BjH,KAAKH,MAAMmC,YAC3ChC,KAAKkH,8BAAgClH,KAAKH,MAAM2B,iBAChDxB,KAAKoH,2BAA6BpH,KAAKH,MAAMkB,cAC7Cf,KAAKqH,uBAAyBrH,KAAKH,MAAMkD,YAE1C,CACDvD,IAAK,wBACLrC,MAAO,SAA+B0C,GACpC,IAAI0G,EAA0B1G,EAAM0G,wBAChC/E,EAAmB3B,EAAM2B,iBACzBT,EAAgBlB,EAAMkB,cACtBC,EAAWnB,EAAMmB,SACjBqH,EAA8BxI,EAAMwI,4BACpC/H,EAAwBN,KAAKkC,MAAM5B,sBAEvC,IAAKkB,EACH,OAAO,KAGT,IAAI8G,EAAqBhI,EAAwB,EAAI,EACjDa,EAASnB,KAAKuI,qBAAqB1I,GACnC+B,EAAQ5B,KAAKmG,kBAAkBtG,GAC/BO,EAAgBJ,KAAKkC,MAAM5B,sBAAwBN,KAAKkC,MAAM9B,cAAgB,EAC9EoI,EAAYH,EAA8BzG,EAAQxB,EAAgBwB,EAElE6G,EAAiBvK,gBAAoBuT,EAAMoZ,IAAS,GAAIhrB,EAAO,CACjEiB,aAAcd,KAAK0I,4BACnBC,UAAW3I,KAAKH,MAAM+I,wBACtBjH,YAAaH,EACb2B,yBAA0BnD,KAAKuD,wCAC/BpC,OAAQA,EACRkB,SAAUkE,EAA0BvG,KAAK6I,kBAAe9E,EACxDxD,IAAKP,KAAK8I,mBACV9H,SAAUmD,KAAKS,IAAI,EAAG5D,EAAWD,GAAiBuH,EAClDvF,UAAW/C,KAAK+I,qBAChB7H,MAAOlB,KAAK0H,qBACZsB,SAAU,KACVpH,MAAO4G,KAGT,OAAIH,EACKnK,gBAAoB,MAAO,CAChCyK,UAAW,+BACXzH,MAAOjC,GAAc,GAAIe,KAAK0H,qBAAsB,CAClDvG,OAAQA,EACRS,MAAOA,EACPiG,UAAW,YAEZY,GAGEA,IAER,CACDjJ,IAAK,yBACLrC,MAAO,SAAgC0C,GACrC,IAAI8B,EAAc9B,EAAM8B,YACpBH,EAAmB3B,EAAM2B,iBACzBT,EAAgBlB,EAAMkB,cACtBC,EAAWnB,EAAMmB,SACjBsE,EAAiBzF,EAAMyF,eACvBC,EAAc1F,EAAM0F,YACxB,OAAOrH,gBAAoBuT,EAAMoZ,IAAS,GAAIhrB,EAAO,CACnDiB,aAAcd,KAAKiJ,6BACnBN,UAAW3I,KAAKH,MAAMqJ,yBACtBvH,YAAawC,KAAKS,IAAI,EAAGjD,EAAcH,GACvCQ,YAAahC,KAAKmJ,sBAClBhG,yBAA0BnD,KAAK2D,yCAC/BxC,OAAQnB,KAAKuI,qBAAqB1I,GAClCwC,SAAUrC,KAAK4C,UACfD,0BAA2B3C,KAAKoJ,2BAChC7I,IAAKP,KAAKqJ,oBACVrI,SAAUmD,KAAKS,IAAI,EAAG5D,EAAWD,GACjCgC,UAAW/C,KAAK+I,qBAChBzD,eAAgBA,EAAiB9D,EACjC+D,YAAaA,EAAcxE,EAC3BG,MAAOlB,KAAK+H,sBACZnG,MAAO5B,KAAKsJ,mBAAmBzJ,QAGlC,CACDL,IAAK,qBACLrC,MAAO,SAA4B0C,GACjC,IAAI2B,EAAmB3B,EAAM2B,iBACzBT,EAAgBlB,EAAMkB,cAE1B,OAAKS,GAAqBT,EAInB7C,gBAAoBuT,EAAMoZ,IAAS,GAAIhrB,EAAO,CACnD8I,UAAW3I,KAAKH,MAAM0J,qBACtB5H,YAAaH,EACbL,OAAQnB,KAAKiG,kBAAkBpG,GAC/BU,IAAKP,KAAKwJ,gBACVxI,SAAUD,EACVG,MAAOlB,KAAKiI,kBACZe,SAAU,KACVpH,MAAO5B,KAAKmG,kBAAkBtG,MAXvB,OAcV,CACDL,IAAK,sBACLrC,MAAO,SAA6B0C,GAClC,IAAI8B,EAAc9B,EAAM8B,YACpB6E,EAAuB3G,EAAM2G,qBAC7BhF,EAAmB3B,EAAM2B,iBACzBT,EAAgBlB,EAAMkB,cACtBb,EAAaL,EAAMK,WACnBuJ,EAA4B5J,EAAM4J,0BAClCC,EAAe1J,KAAKkC,MACpB7B,EAA0BqJ,EAAarJ,wBACvCD,EAAgBsJ,EAAatJ,cAEjC,IAAKW,EACH,OAAO,KAGT,IAAI4I,EAAwBtJ,EAA0B,EAAI,EACtDc,EAASnB,KAAKiG,kBAAkBpG,GAChC+B,EAAQ5B,KAAKsJ,mBAAmBzJ,GAChC+J,EAAmBvJ,EAA0BD,EAAgB,EAE7DyJ,EAAa1I,EACbD,EAAQlB,KAAKoI,mBAEbqB,IACFI,EAAa1I,EAASyI,EACtB1I,EAAQjC,GAAc,GAAIe,KAAKoI,mBAAoB,CACjDT,KAAM,KAIV,IAAImC,EAAe5L,gBAAoBuT,EAAMoZ,IAAS,GAAIhrB,EAAO,CAC/DiB,aAAcd,KAAK+J,0BACnBpB,UAAW3I,KAAKH,MAAMmK,sBACtBrI,YAAawC,KAAKS,IAAI,EAAGjD,EAAcH,GAAoBmI,EAC3D3H,YAAahC,KAAKmJ,sBAClBhG,yBAA0BnD,KAAK4D,sCAC/BzC,OAAQ0I,EACRxH,SAAUmE,EAAuBxG,KAAKiK,mBAAgBlG,EACtDxD,IAAKP,KAAKkK,iBACVlJ,SAAUD,EACVb,WAAYA,EACZgB,MAAOA,EACP8H,SAAU,KACVpH,MAAOA,KAGT,OAAI6H,EACKvL,gBAAoB,MAAO,CAChCyK,UAAW,6BACXzH,MAAOjC,GAAc,GAAIe,KAAKoI,mBAAoB,CAChDjH,OAAQA,EACRS,MAAOA,EACPgG,UAAW,YAEZkC,GAGEA,KAEP,CAAC,CACHtK,IAAK,2BACLrC,MAAO,SAAkCgN,EAAWC,GAClD,OAAID,EAAUjK,aAAekK,EAAUlK,YAAciK,EAAUhK,YAAciK,EAAUjK,UAC9E,CACLD,WAAoC,MAAxBiK,EAAUjK,YAAsBiK,EAAUjK,YAAc,EAAIiK,EAAUjK,WAAakK,EAAUlK,WACzGC,UAAkC,MAAvBgK,EAAUhK,WAAqBgK,EAAUhK,WAAa,EAAIgK,EAAUhK,UAAYiK,EAAUjK,WAIlG,SAIJR,EA1uBT,CA2uBEzB,iBAEFqrB,IAAgB5pB,GAAW,eAAgB,CACzCiJ,wBAAyB,GACzBM,yBAA0B,GAC1BK,qBAAsB,GACtBS,sBAAuB,GACvBzD,yBAAyB,EACzBC,sBAAsB,EACtBhF,iBAAkB,EAClBT,cAAe,EACfuE,gBAAiB,EACjBC,aAAc,EACdrE,MAAO,GACPuF,oBAAqB,GACrBC,qBAAsB,GACtBC,iBAAkB,GAClBC,kBAAmB,GACnB6C,2BAA2B,EAC3BpB,6BAA6B,IAG/B1I,GAAU2K,UAiBN,GACJC,mBAAS5K,IACMA,ICtyBX27B,GAEJ,SAAU17B,GAGR,SAAS07B,EAAWz7B,EAAOC,GACzB,IAAIC,EAcJ,OAZAupB,IAAgBtpB,KAAMs7B,IAEtBv7B,EAAQ0qB,IAA2BzqB,KAAM0qB,IAAgB4Q,GAAYr7B,KAAKD,KAAMH,EAAOC,KACjFoC,MAAQ,CACZoZ,aAAc,EACdC,YAAa,EACbC,aAAc,EACdtb,WAAY,EACZC,UAAW,EACXsb,YAAa,GAEf1b,EAAM6C,UAAY7C,EAAM6C,UAAUwtB,KAAKzF,IAAuB5qB,IACvDA,EA4CT,OA7DA6qB,IAAU0Q,EAAY17B,GAoBtB4pB,IAAa8R,EAAY,CAAC,CACxB97B,IAAK,SACLrC,MAAO,WACL,IAAImQ,EAAWtN,KAAKH,MAAMyN,SACtBrL,EAAcjC,KAAKkC,MACnBoZ,EAAerZ,EAAYqZ,aAC3BC,EAActZ,EAAYsZ,YAC1BC,EAAevZ,EAAYuZ,aAC3Btb,EAAa+B,EAAY/B,WACzBC,EAAY8B,EAAY9B,UACxBsb,EAAcxZ,EAAYwZ,YAC9B,OAAOnO,EAAS,CACdgO,aAAcA,EACdC,YAAaA,EACblZ,SAAUrC,KAAK4C,UACf4Y,aAAcA,EACdtb,WAAYA,EACZC,UAAWA,EACXsb,YAAaA,MAGhB,CACDjc,IAAK,YACLrC,MAAO,SAAmBuD,GACxB,IAAI4a,EAAe5a,EAAK4a,aACpBC,EAAc7a,EAAK6a,YACnBC,EAAe9a,EAAK8a,aACpBtb,EAAaQ,EAAKR,WAClBC,EAAYO,EAAKP,UACjBsb,EAAc/a,EAAK+a,YACvBzb,KAAKoC,SAAS,CACZkZ,aAAcA,EACdC,YAAaA,EACbC,aAAcA,EACdtb,WAAYA,EACZC,UAAWA,EACXsb,YAAaA,QAKZ6f,EA9DT,CA+DEp9B,iBAGFo9B,GAAWhxB,UAOP,GCtFW,SAASixB,GAAyB76B,GAC/C,IAAIiI,EAAYjI,EAAKiI,UACjByZ,EAAU1hB,EAAK0hB,QACflhB,EAAQR,EAAKQ,MACjB,OAAOhD,gBAAoB,MAAO,CAChCyK,UAAWA,EACXuP,KAAM,MACNhX,MAAOA,GACNkhB,GAELmZ,GAAyBjxB,UAAoD,KCX7E,IAaekxB,GAbK,CAKlBC,IAAK,MAMLC,KAAM,QCHO,SAASC,GAAcj7B,GACpC,IAAIk7B,EAAgBl7B,EAAKk7B,cACrBpH,EAAa1J,kBAAK,8CAA+C,CACnE,mDAAoD8Q,IAAkBJ,GAAcC,IACpF,oDAAqDG,IAAkBJ,GAAcE,OAEvF,OAAOx9B,gBAAoB,MAAO,CAChCyK,UAAW6rB,EACX5yB,MAAO,GACPT,OAAQ,GACR06B,QAAS,aACRD,IAAkBJ,GAAcC,IAAMv9B,gBAAoB,OAAQ,CACnEq5B,EAAG,mBACAr5B,gBAAoB,OAAQ,CAC/Bq5B,EAAG,mBACDr5B,gBAAoB,OAAQ,CAC9Bq5B,EAAG,gBACHuE,KAAM,UCnBK,SAASC,GAAsBr7B,GAC5C,IAAIs7B,EAAUt7B,EAAKs7B,QACfC,EAAQv7B,EAAKu7B,MACbC,EAASx7B,EAAKw7B,OACdN,EAAgBl7B,EAAKk7B,cACrBO,EAAoBD,IAAWF,EAC/B1uB,EAAW,CAACpP,gBAAoB,OAAQ,CAC1CyK,UAAW,+CACXnJ,IAAK,QACL48B,MAAwB,kBAAVH,EAAqBA,EAAQ,MAC1CA,IASH,OAPIE,GACF7uB,EAASvO,KAAKb,gBAAoBy9B,GAAe,CAC/Cn8B,IAAK,gBACLo8B,cAAeA,KAIZtuB,ECnBM,SAAS+uB,GAAmB37B,GACzC,IAAIiI,EAAYjI,EAAKiI,UACjByZ,EAAU1hB,EAAK0hB,QACftgB,EAAQpB,EAAKoB,MACbtC,EAAMkB,EAAKlB,IACX88B,EAAa57B,EAAK47B,WAClBC,EAAmB77B,EAAK67B,iBACxBC,EAAgB97B,EAAK87B,cACrBC,EAAiB/7B,EAAK+7B,eACtBC,EAAkBh8B,EAAKg8B,gBACvBC,EAAUj8B,EAAKi8B,QACfz7B,EAAQR,EAAKQ,MACb07B,EAAY,CACd,gBAAiB96B,EAAQ,GA0D3B,OAvDIw6B,GAAcC,GAAoBC,GAAiBC,GAAkBC,KACvEE,EAAU,cAAgB,MAC1BA,EAAU5zB,SAAW,EAEjBszB,IACFM,EAAUC,QAAU,SAAU5pB,GAC5B,OAAOqpB,EAAW,CAChBrpB,MAAOA,EACPnR,MAAOA,EACP66B,QAASA,MAKXJ,IACFK,EAAUE,cAAgB,SAAU7pB,GAClC,OAAOspB,EAAiB,CACtBtpB,MAAOA,EACPnR,MAAOA,EACP66B,QAASA,MAKXH,IACFI,EAAUG,WAAa,SAAU9pB,GAC/B,OAAOupB,EAAc,CACnBvpB,MAAOA,EACPnR,MAAOA,EACP66B,QAASA,MAKXF,IACFG,EAAUI,YAAc,SAAU/pB,GAChC,OAAOwpB,EAAe,CACpBxpB,MAAOA,EACPnR,MAAOA,EACP66B,QAASA,MAKXD,IACFE,EAAUK,cAAgB,SAAUhqB,GAClC,OAAOypB,EAAgB,CACrBzpB,MAAOA,EACPnR,MAAOA,EACP66B,QAASA,OAMVz+B,gBAAoB,MAAO2sB,IAAS,GAAI+R,EAAW,CACxDj0B,UAAWA,EACXnJ,IAAKA,EACL0Y,KAAM,MACNhX,MAAOA,IACLkhB,GFtDNuZ,GAAcrxB,UAEV,GCHJyxB,GAAsBzxB,UAAoD,KCyD1E+xB,GAAmB/xB,UAAoD,KCrEvE,IAAI4yB,GAEJ,SAAUla,GAGR,SAASka,IAGP,OAFA5T,IAAgBtpB,KAAMk9B,GAEfzS,IAA2BzqB,KAAM0qB,IAAgBwS,GAAQl+B,MAAMgB,KAAMZ,YAG9E,OARAwrB,IAAUsS,EAAQla,GAQXka,EATT,CAUEh/B,aClBF,SAASI,GAAQC,EAAQC,GAAkB,IAAIC,EAAOzB,OAAOyB,KAAKF,GAAS,GAAIvB,OAAO0B,sBAAuB,CAAE,IAAIC,EAAU3B,OAAO0B,sBAAsBH,GAAaC,IAAgBG,EAAUA,EAAQC,QAAO,SAAUC,GAAO,OAAO7B,OAAO8B,yBAAyBP,EAAQM,GAAKzB,eAAgBqB,EAAKM,KAAKC,MAAMP,EAAME,GAAY,OAAOF,EAE9U,SAASQ,GAAcC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAAyB,MAAhBF,UAAUD,GAAaC,UAAUD,GAAK,GAAQA,EAAI,EAAKb,GAAQgB,GAAQ,GAAMC,SAAQ,SAAUC,GAAO+pB,IAAgBrqB,EAAQM,EAAKF,EAAOE,OAAsBxC,OAAOyC,0BAA6BzC,OAAO0C,iBAAiBR,EAAQlC,OAAOyC,0BAA0BH,IAAmBhB,GAAQgB,GAAQC,SAAQ,SAAUC,GAAOxC,OAAOC,eAAeiC,EAAQM,EAAKxC,OAAO8B,yBAAyBQ,EAAQE,OAAe,OAAON,EDkB7fqqB,IAAgB2T,GAAQ,eAAgB,CACtCC,eEzBa,SAA+Bz8B,GAC5C,IAAIs7B,EAAUt7B,EAAKs7B,QACfW,EAAUj8B,EAAKi8B,QAEnB,MAA2B,oBAAhBA,EAAQt/B,IACVs/B,EAAQt/B,IAAI2+B,GAEZW,EAAQX,IFmBjBl7B,aG3Ba,SAA6BJ,GAC1C,IAAI08B,EAAW18B,EAAK08B,SAEpB,OAAgB,MAAZA,EACK,GAEAC,OAAOD,IHsBhBE,qBAAsB9B,GAAcC,IACpC8B,SAAU,EACVC,WAAY,EACZC,eAAgB1B,GAChB76B,MAAO,KAITg8B,GAAO5yB,UAkEH,GC/EJ,IAAIozB,GAEJ,SAAU99B,GAGR,SAAS89B,EAAM79B,GACb,IAAIE,EAaJ,OAXAupB,IAAgBtpB,KAAM09B,IAEtB39B,EAAQ0qB,IAA2BzqB,KAAM0qB,IAAgBgT,GAAOz9B,KAAKD,KAAMH,KACrEqC,MAAQ,CACZy7B,eAAgB,GAElB59B,EAAM69B,cAAgB79B,EAAM69B,cAAcxN,KAAKzF,IAAuB5qB,IACtEA,EAAM89B,WAAa99B,EAAM89B,WAAWzN,KAAKzF,IAAuB5qB,IAChEA,EAAM6C,UAAY7C,EAAM6C,UAAUwtB,KAAKzF,IAAuB5qB,IAC9DA,EAAMssB,mBAAqBtsB,EAAMssB,mBAAmB+D,KAAKzF,IAAuB5qB,IAChFA,EAAMwkB,QAAUxkB,EAAMwkB,QAAQ6L,KAAKzF,IAAuB5qB,IACnDA,EAygBT,OAzhBA6qB,IAAU8S,EAAO99B,GAmBjB4pB,IAAakU,EAAO,CAAC,CACnBl+B,IAAK,kBACLrC,MAAO,WACD6C,KAAKyR,MACPzR,KAAKyR,KAAK5N,gBAKb,CACDrE,IAAK,kBACLrC,MAAO,SAAyBuD,GAC9B,IAAImU,EAAYnU,EAAKmU,UACjB/S,EAAQpB,EAAKoB,MAEjB,OAAI9B,KAAKyR,KACqBzR,KAAKyR,KAAK0iB,iBAAiB,CACrDtf,UAAWA,EACXlU,SAAUmB,IAE0B3B,UAKjC,IAIR,CACDX,IAAK,gCACLrC,MAAO,SAAuCkE,GAC5C,IAAIC,EAAcD,EAAMC,YACpBX,EAAWU,EAAMV,SAEjBX,KAAKyR,MACPzR,KAAKyR,KAAKjD,8BAA8B,CACtC7N,SAAUA,EACVW,YAAaA,MAMlB,CACD9B,IAAK,iBACLrC,MAAO,WACD6C,KAAKyR,MACPzR,KAAKyR,KAAKnN,oBAKb,CACD9E,IAAK,oBACLrC,MAAO,WACL,IAAIsE,EAAQrC,UAAUC,OAAS,QAAsB0E,IAAjB3E,UAAU,GAAmBA,UAAU,GAAK,GAC5E0+B,EAAoBr8B,EAAMH,YAC1BA,OAAoC,IAAtBw8B,EAA+B,EAAIA,EACjDC,EAAiBt8B,EAAMd,SACvBA,OAA8B,IAAnBo9B,EAA4B,EAAIA,EAE3C/9B,KAAKyR,MACPzR,KAAKyR,KAAK3M,kBAAkB,CAC1BnE,SAAUA,EACVW,YAAaA,MAMlB,CACD9B,IAAK,sBACLrC,MAAO,WACL,IAAI2E,EAAQ1C,UAAUC,OAAS,QAAsB0E,IAAjB3E,UAAU,GAAmBA,UAAU,GAAK,EAE5EY,KAAKyR,MACPzR,KAAKyR,KAAK3M,kBAAkB,CAC1BnE,SAAUmB,MAMf,CACDtC,IAAK,mBACLrC,MAAO,WACL,IAAIgD,EAAYf,UAAUC,OAAS,QAAsB0E,IAAjB3E,UAAU,GAAmBA,UAAU,GAAK,EAEhFY,KAAKyR,MACPzR,KAAKyR,KAAK6iB,iBAAiB,CACzBn0B,UAAWA,MAMhB,CACDX,IAAK,cACLrC,MAAO,WACL,IAAI2E,EAAQ1C,UAAUC,OAAS,QAAsB0E,IAAjB3E,UAAU,GAAmBA,UAAU,GAAK,EAE5EY,KAAKyR,MACPzR,KAAKyR,KAAKob,aAAa,CACrBvrB,YAAa,EACbX,SAAUmB,MAIf,CACDtC,IAAK,oBACLrC,MAAO,WACL,GAAI6C,KAAKyR,KAAM,CACb,IAAIpT,EAAQuP,uBAAY5N,KAAKyR,MAEzB8J,EAAcld,EAAMkd,aAAe,EAEvC,OADkBld,EAAM+P,aAAe,GAClBmN,EAGvB,OAAO,IAER,CACD/b,IAAK,oBACLrC,MAAO,WACL6C,KAAKg+B,uBAEN,CACDx+B,IAAK,qBACLrC,MAAO,WACL6C,KAAKg+B,uBAEN,CACDx+B,IAAK,SACLrC,MAAO,WACL,IAAI4Z,EAAS/W,KAETa,EAAcb,KAAKH,MACnByN,EAAWzM,EAAYyM,SACvB3E,EAAY9H,EAAY8H,UACxBs1B,EAAgBp9B,EAAYo9B,cAC5BC,EAAgBr9B,EAAYq9B,cAC5B9lB,EAAYvX,EAAYuX,UACxB+lB,EAAet9B,EAAYs9B,aAC3BC,EAAoBv9B,EAAYu9B,kBAChCj9B,EAASN,EAAYM,OACrB6W,EAAKnX,EAAYmX,GACjBuc,EAAiB1zB,EAAY0zB,eAC7B8J,EAAex9B,EAAYw9B,aAC3BC,EAAWz9B,EAAYy9B,SACvB7mB,EAAgB5W,EAAY4W,cAC5BvW,EAAQL,EAAYK,MACpBU,EAAQf,EAAYe,MACpB+7B,EAAiB39B,KAAKkC,MAAMy7B,eAC5BY,EAAsBN,EAAgB98B,EAASA,EAASg9B,EACxDK,EAAmC,oBAAjBH,EAA8BA,EAAa,CAC/Dv8B,OAAQ,IACLu8B,EACDI,EAAqC,oBAAbH,EAA0BA,EAAS,CAC7Dx8B,OAAQ,IACLw8B,EAaL,OAXAt+B,KAAK0+B,oBAAsB,GAC3BxgC,WAAeygC,QAAQrxB,GAAU/N,SAAQ,SAAUsiB,EAAQ/f,GACzD,IAAI88B,EAAa7nB,EAAO8nB,uBAAuBhd,EAAQA,EAAOhiB,MAAMqB,OAEpE6V,EAAO2nB,oBAAoB58B,GAAS7C,GAAc,CAChDsI,SAAU,UACTq3B,MAKE1gC,gBAAoB,MAAO,CAChC,aAAc8B,KAAKH,MAAM,cACzB,kBAAmBG,KAAKH,MAAM,mBAC9B,gBAAiB3B,WAAeygC,QAAQrxB,GAAUjO,OAClD,gBAAiBW,KAAKH,MAAMmB,SAC5B2H,UAAWmiB,kBAAK,0BAA2BniB,GAC3CqP,GAAIA,EACJE,KAAM,OACNhX,MAAOA,IACL+8B,GAAiBG,EAAkB,CACrCz1B,UAAWmiB,kBAAK,qCAAsC0T,GACtDpc,QAASpiB,KAAK8+B,oBACd59B,MAAOjC,GAAc,CACnBkC,OAAQg9B,EACR52B,SAAU,SACVkc,aAAcka,EACd/7B,MAAOA,GACN68B,KACDvgC,gBAAoBuT,EAAMoZ,IAAS,GAAI7qB,KAAKH,MAAO,CACrD,gBAAiB,KACjB+X,oBAAoB,EACpBjP,UAAWmiB,kBAAK,gCAAiCoT,GACjDp9B,aAAcd,KAAK69B,WACnB77B,YAAaJ,EACbD,YAAa,EACbR,OAAQo9B,EACRvmB,QAAIjU,EACJkU,kBAAmBsc,EACnBlyB,SAAUrC,KAAK4C,UACfyC,kBAAmBrF,KAAKqsB,mBACxB9rB,IAAKP,KAAKukB,QACVrM,KAAM,WACNylB,eAAgBA,EAChBp4B,YAAakS,EACbvW,MAAOjC,GAAc,GAAImZ,EAAW,CAClCxQ,UAAW,iBAIhB,CACDpI,IAAK,gBACLrC,MAAO,SAAuB0E,GAC5B,IAAIggB,EAAShgB,EAAMggB,OACfvgB,EAAcO,EAAMP,YACpBqQ,EAAc9P,EAAM8P,YACpBvQ,EAASS,EAAMT,OACfu7B,EAAU96B,EAAM86B,QAChBh8B,EAAWkB,EAAMlB,SACjBo+B,EAAgB/+B,KAAKH,MAAMk/B,cAC3BC,EAAgBnd,EAAOhiB,MACvBs9B,EAAiB6B,EAAc7B,eAC/Br8B,EAAek+B,EAAcl+B,aAC7B6H,EAAYq2B,EAAcr2B,UAC1Bs2B,EAAaD,EAAcC,WAC3BjD,EAAUgD,EAAchD,QACxBhkB,EAAKgnB,EAAchnB,GAMnBsT,EAAexqB,EAAa,CAC9Bs8B,SANaD,EAAe,CAC5B8B,WAAYA,EACZjD,QAASA,EACTW,QAASA,IAITsC,WAAYA,EACZ39B,YAAaA,EACb06B,QAASA,EACTrqB,YAAaA,EACbvQ,OAAQA,EACRu7B,QAASA,EACTh8B,SAAUA,IAWRO,EAAQlB,KAAK0+B,oBAAoBp9B,GACjC86B,EAAgC,kBAAjB9Q,EAA4BA,EAAe,KAI9D,OAAOptB,gBAAoB,MAAO,CAChC,gBAAiBoD,EAAc,EAC/B,mBAAoB0W,EACpBrP,UAAWmiB,kBAAK,qCAAsCniB,GACtDnJ,IAAK,MAAQmB,EAAR,OAAiCW,EACtCu7B,QAlBY,SAAiB5pB,GAC7B8rB,GAAiBA,EAAc,CAC7BE,WAAYA,EACZjD,QAASA,EACT/oB,MAAOA,KAeTiF,KAAM,WACNhX,MAAOA,EACPk7B,MAAOA,GACN9Q,KAEJ,CACD9rB,IAAK,gBACLrC,MAAO,SAAuBmF,GAC5B,IAgCI48B,EAAeC,EAAiBC,EAAgBC,EAAgBC,EAhChEzd,EAASvf,EAAMuf,OACf/f,EAAQQ,EAAMR,MACdP,EAAevB,KAAKH,MACpB0/B,EAAkBh+B,EAAag+B,gBAC/BC,EAAcj+B,EAAai+B,YAC3BC,EAAgBl+B,EAAak+B,cAC7B/H,EAAOn2B,EAAam2B,KACpBwE,EAAS36B,EAAa26B,OACtBN,EAAgBr6B,EAAaq6B,cAC7B8D,EAAiB7d,EAAOhiB,MACxBo/B,EAAaS,EAAeT,WAC5BjD,EAAU0D,EAAe1D,QACzBsB,EAAuBoC,EAAepC,qBACtCqC,EAAcD,EAAeC,YAC7BlC,EAAiBiC,EAAejC,eAChCzlB,EAAK0nB,EAAe1nB,GACpBikB,EAAQyD,EAAezD,MACvB2D,GAAeD,GAAejI,EAC9BlD,EAAa1J,kBAAK,wCAAyCyU,EAAiB1d,EAAOhiB,MAAM0/B,gBAAiB,CAC5GM,8CAA+CD,IAG7C1+B,EAAQlB,KAAK6+B,uBAAuBhd,EAAQ5iB,GAAc,GAAIugC,EAAa,GAAI3d,EAAOhiB,MAAM2/B,cAE5FM,EAAiBrC,EAAe,CAClCwB,WAAYA,EACZjD,QAASA,EACT2D,YAAaA,EACb1D,MAAOA,EACPC,OAAQA,EACRN,cAAeA,IAIjB,GAAIgE,GAAeH,EAAe,CAEhC,IAGIM,EAHkB7D,IAAWF,EAGQsB,EAAuB1B,IAAkBJ,GAAcE,KAAOF,GAAcC,IAAMD,GAAcE,KAErImB,EAAU,SAAiB5pB,GAC7B2sB,GAAelI,EAAK,CAClB4F,qBAAsBA,EACtBrqB,MAAOA,EACPipB,OAAQF,EACRJ,cAAemE,IAEjBN,GAAiBA,EAAc,CAC7BR,WAAYA,EACZjD,QAASA,EACT/oB,MAAOA,KAUXqsB,EAAkBzd,EAAOhiB,MAAM,eAAiBo8B,GAASD,EACzDqD,EAAiB,OACjBD,EAAiB,EACjBF,EAAgBrC,EAChBsC,EAVgB,SAAmBlsB,GACf,UAAdA,EAAMzT,KAAiC,MAAdyT,EAAMzT,KACjCq9B,EAAQ5pB,IAkBd,OAPIipB,IAAWF,IACbqD,EAAiBzD,IAAkBJ,GAAcC,IAAM,YAAc,cAMhEv9B,gBAAoB,MAAO,CAChC,aAAcohC,EACd,YAAaD,EACb12B,UAAW6rB,EACXxc,GAAIA,EACJxY,IAAK,aAAesC,EACpB+6B,QAASqC,EACT/S,UAAWgT,EACXjnB,KAAM,eACNhX,MAAOA,EACP8H,SAAUo2B,GACTU,KAEJ,CACDtgC,IAAK,aACLrC,MAAO,SAAoB0F,GACzB,IAAIsY,EAASnb,KAET8B,EAAQe,EAAMlC,SACdgR,EAAc9O,EAAM8O,YACpBnS,EAAMqD,EAAMrD,IACZ4B,EAASyB,EAAMzB,OACfF,EAAQ2B,EAAM3B,MACdQ,EAAe1B,KAAKH,MACpByN,EAAW5L,EAAa4L,SACxBgvB,EAAa56B,EAAa46B,WAC1BC,EAAmB76B,EAAa66B,iBAChCG,EAAkBh7B,EAAag7B,gBAC/BD,EAAiB/6B,EAAa+6B,eAC9BD,EAAgB96B,EAAa86B,cAC7B6B,EAAe38B,EAAa28B,aAC5B2B,EAAYt+B,EAAas+B,UACzBhM,EAActyB,EAAasyB,YAC3BsK,EAAW58B,EAAa48B,SACxBX,EAAiB39B,KAAKkC,MAAMy7B,eAC5Ba,EAAmC,oBAAjBH,EAA8BA,EAAa,CAC/Dv8B,MAAOA,IACJu8B,EACDI,EAAqC,oBAAbH,EAA0BA,EAAS,CAC7Dx8B,MAAOA,IACJw8B,EACD3B,EAAUqD,EAAU,CACtBl+B,MAAOA,IAELsgB,EAAUlkB,WAAeygC,QAAQrxB,GAAU8hB,KAAI,SAAUvN,EAAQvgB,GACnE,OAAO6Z,EAAOyiB,cAAc,CAC1B/b,OAAQA,EACRvgB,YAAaA,EACbqQ,YAAaA,EACbvQ,OAAQA,EACRu7B,QAASA,EACTh8B,SAAUmB,EACV67B,eAAgBA,OAGhBh1B,EAAYmiB,kBAAK,+BAAgC0T,GAEjDyB,EAAiBhhC,GAAc,GAAIiC,EAAO,CAC5CC,OAAQnB,KAAKkgC,cAAcp+B,GAC3ByF,SAAU,SACVkc,aAAcka,GACbc,GAEH,OAAOzK,EAAY,CACjBrrB,UAAWA,EACXyZ,QAASA,EACTtgB,MAAOA,EACP6P,YAAaA,EACbnS,IAAKA,EACL88B,WAAYA,EACZC,iBAAkBA,EAClBG,gBAAiBA,EACjBD,eAAgBA,EAChBD,cAAeA,EACfG,QAASA,EACTz7B,MAAO++B,MAOV,CACDzgC,IAAK,yBACLrC,MAAO,SAAgC0kB,GACrC,IAAIse,EAAc/gC,UAAUC,OAAS,QAAsB0E,IAAjB3E,UAAU,GAAmBA,UAAU,GAAK,GAClFghC,EAAY,GAAG1zB,OAAOmV,EAAOhiB,MAAM09B,SAAU,KAAK7wB,OAAOmV,EAAOhiB,MAAM29B,WAAY,KAAK9wB,OAAOmV,EAAOhiB,MAAM+B,MAAO,MAElHV,EAAQjC,GAAc,GAAIkhC,EAAa,CACzCE,KAAMD,EACNE,OAAQF,EACRG,WAAYH,IAWd,OARIve,EAAOhiB,MAAMuZ,WACflY,EAAMkY,SAAWyI,EAAOhiB,MAAMuZ,UAG5ByI,EAAOhiB,MAAMwP,WACfnO,EAAMmO,SAAWwS,EAAOhiB,MAAMwP,UAGzBnO,IAER,CACD1B,IAAK,oBACLrC,MAAO,WACL,IAAIqjC,EAASxgC,KAET+B,EAAe/B,KAAKH,MACpByN,EAAWvL,EAAauL,SAG5B,OAFoBvL,EAAak8B,cACL,GAAK//B,WAAeygC,QAAQrxB,IAC3C8hB,KAAI,SAAUvN,EAAQ/f,GACjC,OAAO0+B,EAAOC,cAAc,CAC1B5e,OAAQA,EACR/f,MAAOA,SAIZ,CACDtC,IAAK,gBACLrC,MAAO,SAAuBwD,GAC5B,IAAIoC,EAAY/C,KAAKH,MAAMkD,UAC3B,MAA4B,oBAAdA,EAA2BA,EAAU,CACjDjB,MAAOnB,IACJoC,IAEN,CACDvD,IAAK,YACLrC,MAAO,SAAmB2G,GACxB,IAAIwX,EAAexX,EAAMwX,aACrBE,EAAe1X,EAAM0X,aACrBrb,EAAY2D,EAAM3D,WAEtBkC,EADerC,KAAKH,MAAMwC,UACjB,CACPiZ,aAAcA,EACdE,aAAcA,EACdrb,UAAWA,MAGd,CACDX,IAAK,qBACLrC,MAAO,SAA4BoH,GACjC,IAAIiO,EAAwBjO,EAAMiO,sBAC9BE,EAAuBnO,EAAMmO,qBAC7BE,EAAgBrO,EAAMqO,cACtBE,EAAevO,EAAMuO,cAEzBsf,EADqBpyB,KAAKH,MAAMuyB,gBACjB,CACbxX,mBAAoBpI,EACpBqI,kBAAmBnI,EACnB+H,WAAY7H,EACZ8H,UAAW5H,MAGd,CACDtT,IAAK,UACLrC,MAAO,SAAiBoD,GACtBP,KAAKyR,KAAOlR,IAEb,CACDf,IAAK,qBACLrC,MAAO,WACL,IAAIwgC,EAAiB39B,KAAK0gC,oBAC1B1gC,KAAKoC,SAAS,CACZu7B,eAAgBA,QAKfD,EA1hBT,CA2hBEx/B,iBAEFqrB,IAAgBmU,GAAO,eAAgB,CACrCO,eAAe,EACfvhB,iBAAkB,GAClByhB,aAAc,EACdqB,YAAa,GACbjL,eAAgB,WACd,OAAO,MAETnC,eAAgB,WACd,OAAO,MAET/vB,SAAU,WACR,OAAO,MAEToX,sBAAuBib,EACvBhb,iBAAkB,GAClBsa,YAAaqI,GACb+B,kBAAmB7C,GACnB+C,SAAU,GACVxpB,kBAAmB,OACnB2C,eAAgB,EAChBvW,MAAO,KAITw8B,GAAMpzB,UAoNF,GG7xBWozB,ICTXiD,GAAmB,GACnBC,GAA4B,KAC5BC,GAAgC,KAEpC,SAASC,KACHD,KACFA,GAAgC,KAE5Bjc,SAASmc,MAAqC,MAA7BH,KACnBhc,SAASmc,KAAK7/B,MAAMoY,cAAgBsnB,IAGtCA,GAA4B,MAIhC,SAASI,KACPF,KACAH,GAAiBphC,SAAQ,SAAU0hC,GACjC,OAAOA,EAASC,wBAgBpB,SAASC,GAAeluB,GAClBA,EAAMsmB,gBAAkBva,QAAuC,MAA7B4hB,IAAqChc,SAASmc,OAClFH,GAA4Bhc,SAASmc,KAAK7/B,MAAMoY,cAChDsL,SAASmc,KAAK7/B,MAAMoY,cAAgB,QAfxC,WACMunB,IACFlpB,EAAuBkpB,IAGzB,IAAIO,EAAiB,EACrBT,GAAiBphC,SAAQ,SAAU0hC,GACjCG,EAAiBj9B,KAAKS,IAAIw8B,EAAgBH,EAASphC,MAAMmb,+BAE3D6lB,GAAgC5lB,EAAwB+lB,GAAuCI,GAS/FC,GACAV,GAAiBphC,SAAQ,SAAU0hC,GAC7BA,EAASphC,MAAMyhC,gBAAkBruB,EAAMsmB,eACzC0H,EAASM,+BAKR,SAASC,GAAuB5O,EAAW5lB,GAC3C2zB,GAAiBnhB,MAAK,SAAUyhB,GACnC,OAAOA,EAASphC,MAAMyhC,gBAAkBt0B,MAExCA,EAAQya,iBAAiB,SAAU0Z,IAGrCR,GAAiB5hC,KAAK6zB,GAEjB,SAAS6O,GAAyB7O,EAAW5lB,IAClD2zB,GAAmBA,GAAiB/hC,QAAO,SAAUqiC,GACnD,OAAOA,IAAarO,MAGAvzB,SACpB2N,EAAQ6a,oBAAoB,SAAUsZ,IAElCN,KACFlpB,EAAuBkpB,IACvBC,OChEN,ICGI70B,GAAQC,GDHRw1B,GAAW,SAAkB10B,GAC/B,OAAOA,IAAYgS,QAGjB2iB,GAAiB,SAAwB30B,GAC3C,OAAOA,EAAQ40B,yBAGV,SAASC,GAAcP,EAAezhC,GAC3C,GAAKyhC,EAKE,IAAII,GAASJ,GAAgB,CAClC,IAAIje,EAAUrE,OACV8iB,EAAcze,EAAQye,YACtBC,EAAa1e,EAAQ0e,WACzB,MAAO,CACL5gC,OAA+B,kBAAhB2gC,EAA2BA,EAAc,EACxDlgC,MAA6B,kBAAfmgC,EAA0BA,EAAa,GAGvD,OAAOJ,GAAeL,GAbtB,MAAO,CACLngC,OAAQtB,EAAMmiC,aACdpgC,MAAO/B,EAAMoiC,aAqBZ,SAASC,GAAkBl1B,EAASm1B,GACzC,GAAIT,GAASS,IAAcvd,SAASwd,gBAAiB,CACnD,IAAIC,EAAmBzd,SAASwd,gBAC5BE,EAAcX,GAAe30B,GAC7Bu1B,EAAgBZ,GAAeU,GACnC,MAAO,CACLn6B,IAAKo6B,EAAYp6B,IAAMq6B,EAAcr6B,IACrCP,KAAM26B,EAAY36B,KAAO46B,EAAc56B,MAGzC,IAAI6P,EAAegrB,GAAgBL,GAE/BM,EAAed,GAAe30B,GAE9B01B,EAAiBf,GAAeQ,GAEpC,MAAO,CACLj6B,IAAKu6B,EAAav6B,IAAMsP,EAAatP,IAAMw6B,EAAex6B,IAC1DP,KAAM86B,EAAa96B,KAAO6P,EAAa7P,KAAO+6B,EAAe/6B,MAS5D,SAAS66B,GAAgBx1B,GAC9B,OAAI00B,GAAS10B,IAAY4X,SAASwd,gBACzB,CACLl6B,IAAK,YAAa8W,OAASA,OAAO2jB,QAAU/d,SAASwd,gBAAgBjiC,UACrEwH,KAAM,YAAaqX,OAASA,OAAO4jB,QAAUhe,SAASwd,gBAAgBliC,YAGjE,CACLgI,IAAK8E,EAAQ7M,UACbwH,KAAMqF,EAAQ9M,YChEpB,SAAS5B,GAAQC,EAAQC,GAAkB,IAAIC,EAAOzB,OAAOyB,KAAKF,GAAS,GAAIvB,OAAO0B,sBAAuB,CAAE,IAAIC,EAAU3B,OAAO0B,sBAAsBH,GAAaC,IAAgBG,EAAUA,EAAQC,QAAO,SAAUC,GAAO,OAAO7B,OAAO8B,yBAAyBP,EAAQM,GAAKzB,eAAgBqB,EAAKM,KAAKC,MAAMP,EAAME,GAAY,OAAOF,EAE9U,SAASQ,GAAcC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAAyB,MAAhBF,UAAUD,GAAaC,UAAUD,GAAK,GAAQA,EAAI,EAAKb,GAAQgB,GAAQ,GAAMC,SAAQ,SAAUC,GAAO+pB,IAAgBrqB,EAAQM,EAAKF,EAAOE,OAAsBxC,OAAOyC,0BAA6BzC,OAAO0C,iBAAiBR,EAAQlC,OAAOyC,0BAA0BH,IAAmBhB,GAAQgB,GAAQC,SAAQ,SAAUC,GAAOxC,OAAOC,eAAeiC,EAAQM,EAAKxC,OAAO8B,yBAAyBQ,EAAQE,OAAe,OAAON,EAYtf,IAEH2jC,GAAY,WACd,MAAyB,qBAAX7jB,OAAyBA,YAASjb,GAG9C++B,IAAkB52B,GAAQD,GAE9B,SAAUrM,GAGR,SAASkjC,IACP,IAAIhlC,EAEAiC,EAEJupB,IAAgBtpB,KAAM8iC,GAEtB,IAAK,IAAIx2B,EAAOlN,UAAUC,OAAQkN,EAAO,IAAIC,MAAMF,GAAOG,EAAO,EAAGA,EAAOH,EAAMG,IAC/EF,EAAKE,GAAQrN,UAAUqN,GAuGzB,OApGA1M,EAAQ0qB,IAA2BzqB,MAAOlC,EAAmB4sB,IAAgBoY,IAAiB7iC,KAAKjB,MAAMlB,EAAkB,CAACkC,MAAM0M,OAAOH,KAEzIgd,IAAgBoB,IAAuB5qB,GAAQ,UAAW8iC,MAE1DtZ,IAAgBoB,IAAuB5qB,GAAQ,cAAc,GAE7DwpB,IAAgBoB,IAAuB5qB,GAAQ,mBAAoB,GAEnEwpB,IAAgBoB,IAAuB5qB,GAAQ,oBAAqB,GAEpEwpB,IAAgBoB,IAAuB5qB,GAAQ,4BAAwB,GAEvEwpB,IAAgBoB,IAAuB5qB,GAAQ,cAAU,GAEzDwpB,IAAgBoB,IAAuB5qB,GAAQ,QAASd,GAAc,GAAI4iC,GAAc9hC,EAAMF,MAAMyhC,cAAevhC,EAAMF,OAAQ,CAC/H8R,aAAa,EACbzR,WAAY,EACZC,UAAW,KAGbopB,IAAgBoB,IAAuB5qB,GAAQ,kBAAkB,SAAUiN,IACrEA,GAAaA,aAAmBC,SAClCC,QAAQC,KAAK,qEAGfpN,EAAMqN,OAASJ,EAEfjN,EAAMgjC,oBAGRxZ,IAAgBoB,IAAuB5qB,GAAQ,kBAAkB,SAAUW,GACzE,IAAIP,EAAYO,EAAKP,UAErB,GAAIJ,EAAMmC,MAAM/B,YAAcA,EAA9B,CAIA,IAAImhC,EAAgBvhC,EAAMF,MAAMyhC,cAE5BA,IACoC,oBAA3BA,EAAc0B,SACvB1B,EAAc0B,SAAS,EAAG7iC,EAAYJ,EAAMkjC,kBAE5C3B,EAAcnhC,UAAYA,EAAYJ,EAAMkjC,sBAKlD1Z,IAAgBoB,IAAuB5qB,GAAQ,2BAA2B,SAAUiN,GAC9EA,IAAYgS,OACdA,OAAOyI,iBAAiB,SAAU1nB,EAAMokB,WAAW,GAEnDpkB,EAAM+iB,qBAAqBoB,kBAAkBlX,EAASjN,EAAMokB,cAIhEoF,IAAgBoB,IAAuB5qB,GAAQ,6BAA6B,SAAUiN,GAChFA,IAAYgS,OACdA,OAAO6I,oBAAoB,SAAU9nB,EAAMokB,WAAW,GAC7CnX,GACTjN,EAAM+iB,qBAAqBsB,qBAAqBpX,EAASjN,EAAMokB,cAInEoF,IAAgBoB,IAAuB5qB,GAAQ,aAAa,WAC1DA,EAAMgjC,oBAGRxZ,IAAgBoB,IAAuB5qB,GAAQ,6BAA6B,WAC1E,GAAKA,EAAMmjC,WAAX,CAIA,IAAI7gC,EAAWtC,EAAMF,MAAMwC,SACvBi/B,EAAgBvhC,EAAMF,MAAMyhC,cAEhC,GAAIA,EAAe,CACjB,IAAI9pB,EAAegrB,GAAgBlB,GAC/BphC,EAAaiE,KAAKS,IAAI,EAAG4S,EAAa7P,KAAO5H,EAAMojC,mBACnDhjC,EAAYgE,KAAKS,IAAI,EAAG4S,EAAatP,IAAMnI,EAAMkjC,kBAErDljC,EAAMqC,SAAS,CACbuP,aAAa,EACbzR,WAAYA,EACZC,UAAWA,IAGbkC,EAAS,CACPnC,WAAYA,EACZC,UAAWA,SAKjBopB,IAAgBoB,IAAuB5qB,GAAQ,sBAAsB,WACnEA,EAAMqC,SAAS,CACbuP,aAAa,OAIV5R,EAkGT,OAnNA6qB,IAAUkY,EAAgBljC,GAoH1B4pB,IAAasZ,EAAgB,CAAC,CAC5BtjC,IAAK,iBACLrC,MAAO,WACL,IAAImkC,EAAgBliC,UAAUC,OAAS,QAAsB0E,IAAjB3E,UAAU,GAAmBA,UAAU,GAAKY,KAAKH,MAAMyhC,cAC/Fne,EAAWnjB,KAAKH,MAAMsjB,SACtBlhB,EAAcjC,KAAKkC,MACnBf,EAASc,EAAYd,OACrBS,EAAQK,EAAYL,MACpBwhC,EAAWpjC,KAAKoN,QAAUi2B,eAAqBrjC,MAEnD,GAAIojC,aAAoBn2B,SAAWq0B,EAAe,CAChD,IAAIvnB,EAASmoB,GAAkBkB,EAAU9B,GACzCthC,KAAKijC,iBAAmBlpB,EAAO7R,IAC/BlI,KAAKmjC,kBAAoBppB,EAAOpS,KAGlC,IAAI27B,EAAazB,GAAcP,EAAethC,KAAKH,OAE/CsB,IAAWmiC,EAAWniC,QAAUS,IAAU0hC,EAAW1hC,QACvD5B,KAAKoC,SAAS,CACZjB,OAAQmiC,EAAWniC,OACnBS,MAAO0hC,EAAW1hC,QAEpBuhB,EAAS,CACPhiB,OAAQmiC,EAAWniC,OACnBS,MAAO0hC,EAAW1hC,WAIvB,CACDpC,IAAK,oBACLrC,MAAO,WACL,IAAImkC,EAAgBthC,KAAKH,MAAMyhC,cAC/BthC,KAAK8iB,qBAAuB0J,cAC5BxsB,KAAK+iC,eAAezB,GAEhBA,IACFE,GAAuBxhC,KAAMshC,GAE7BthC,KAAKujC,wBAAwBjC,IAG/BthC,KAAKkjC,YAAa,IAEnB,CACD1jC,IAAK,qBACLrC,MAAO,SAA4B2Z,EAAW1M,GAC5C,IAAIk3B,EAAgBthC,KAAKH,MAAMyhC,cAC3BkC,EAAoB1sB,EAAUwqB,cAE9BkC,IAAsBlC,GAAsC,MAArBkC,GAA8C,MAAjBlC,IACtEthC,KAAK+iC,eAAezB,GACpBG,GAAyBzhC,KAAMwjC,GAC/BhC,GAAuBxhC,KAAMshC,GAE7BthC,KAAKyjC,0BAA0BD,GAE/BxjC,KAAKujC,wBAAwBjC,MAGhC,CACD9hC,IAAK,uBACLrC,MAAO,WACL,IAAImkC,EAAgBthC,KAAKH,MAAMyhC,cAE3BA,IACFG,GAAyBzhC,KAAMshC,GAE/BthC,KAAKyjC,0BAA0BnC,IAGjCthC,KAAKkjC,YAAa,IAEnB,CACD1jC,IAAK,SACLrC,MAAO,WACL,IAAImQ,EAAWtN,KAAKH,MAAMyN,SACtB5K,EAAe1C,KAAKkC,MACpByP,EAAcjP,EAAaiP,YAC3BxR,EAAYuC,EAAavC,UACzBD,EAAawC,EAAaxC,WAC1BiB,EAASuB,EAAavB,OACtBS,EAAQc,EAAad,MACzB,OAAO0L,EAAS,CACdo2B,cAAe1jC,KAAK2jC,eACpBl2B,cAAezN,KAAK0N,eACpBvM,OAAQA,EACRwQ,YAAaA,EACbzR,WAAYA,EACZC,UAAWA,EACXyB,MAAOA,QAKNkhC,EApNT,CAqNE5kC,iBAAsBqrB,IAAgBtd,GAAQ,YAAqD,MA6BjGC,IAEJqd,IAAgBuZ,GAAgB,eAAgB,CAC9C3f,SAAU,aACV9gB,SAAU,aACV2Y,2BA/PgC,IAgQhCsmB,cAAeuB,KACfb,aAAc,EACdC,YAAa,K,wNC9QXvhC,EAAoBxC,gBAAoB0lC,IAAoB,MAE5DviC,EAAqBnD,gBAAoB2lC,IAAmB,MAE5DpiC,EAAqBvD,gBAAoB2lC,IAAmB,MAE5DhiC,EAAqB3D,gBAAoB0lC,IAAoB,MAmElDE,EAjE2B5lC,cAAiB,SAAgC2B,EAAOU,GAChG,IAAIwjC,EAAsBlkC,EAAMkkC,oBAC5B7N,EAAQr2B,EAAMq2B,MACd8N,EAAsBnkC,EAAMmkC,oBAC5BC,EAAepkC,EAAMokC,aACrBC,EAAOrkC,EAAMqkC,KACbC,EAActkC,EAAMskC,YACpBC,EAAQxa,YAAyB/pB,EAAO,CAAC,sBAAuB,QAAS,sBAAuB,eAAgB,OAAQ,gBAExHwkC,EAAQC,cAUZ,OAAoBpmC,gBAAoB,MAAO2sB,YAAS,CACtDtqB,IAAKA,GACJ6jC,GAAqBlmC,gBAAoBqmC,IAAY1Z,YAAS,CAC/DgS,QAX0B,SAA+B5pB,GACzDgxB,EAAahxB,EAAOixB,EAAO,IAW3BzY,SAAmB,IAATyY,EACVM,MAAO,WACNT,GAA0C,QAApBM,EAAM/rB,UAAsB5X,EAAOW,GAAqBnD,gBAAoBqmC,IAAY1Z,YAAS,CACxHgS,QAX0B,SAA+B5pB,GACzDgxB,EAAahxB,EAAOixB,EAAO,IAW3BzY,UAAqB,IAAXyK,GAAegO,GAAQ//B,KAAK+J,KAAKgoB,EAAQiO,GAAe,EAClEK,MAAO,WACNR,GAA0C,QAApBK,EAAM/rB,UAAsB7W,EAAQI,O,SCiC3D4iC,EAA4B,SAAmC/jC,GACjE,IAAI8nB,EAAO9nB,EAAK8nB,KACZkc,EAAKhkC,EAAKgkC,GACVxO,EAAQx1B,EAAKw1B,MACjB,MAAO,GAAGxpB,OAAO8b,EAAM,KAAK9b,OAAOg4B,EAAI,QAAQh4B,QAAkB,IAAXwpB,EAAeA,EAAQ,aAAaxpB,OAAOg4B,KAG/FC,EAA4B,CAAC,GAAI,GAAI,GAAI,KAKzCC,EAA+B1mC,cAAiB,SAAyB2B,EAAOU,GAClF,IA4BIskC,EA5BAC,EAAwBjlC,EAAMklC,iBAC9BA,OAA6C,IAA1BD,EAAmChB,EAAyBgB,EAC/Ef,EAAsBlkC,EAAMkkC,oBAC5BiB,EAAwBnlC,EAAMolC,mBAC9BA,OAA+C,IAA1BD,EAAmC,gBAAkBA,EAC1EE,EAAUrlC,EAAMqlC,QAChBv8B,EAAY9I,EAAM8I,UAClBw8B,EAActlC,EAAMglC,QACpBO,EAAmBvlC,EAAM+yB,UACzBpO,OAAiC,IAArB4gB,EAA8BC,IAAYD,EACtDlP,EAAQr2B,EAAMq2B,MACdoP,EAAwBzlC,EAAM0lC,mBAC9BA,OAA+C,IAA1BD,EAAmCb,EAA4Ba,EACpFE,EAAwB3lC,EAAM4lC,iBAC9BA,OAA6C,IAA1BD,EAAmC,iBAAmBA,EACzExB,EAAsBnkC,EAAMmkC,oBAC5B0B,EAAwB7lC,EAAM8lC,mBAC9BA,OAA+C,IAA1BD,EAAmC,YAAcA,EACtEzB,EAAepkC,EAAMokC,aACrB2B,EAAsB/lC,EAAM+lC,oBAC5B1B,EAAOrkC,EAAMqkC,KACbC,EAActkC,EAAMskC,YACpB0B,EAAwBhmC,EAAMimC,mBAC9BA,OAA+C,IAA1BD,EAAmClB,EAA4BkB,EACpFE,EAAqBlmC,EAAMmmC,YAC3BA,OAAqC,IAAvBD,EAAgC,GAAKA,EACnD3B,EAAQxa,YAAyB/pB,EAAO,CAAC,mBAAoB,sBAAuB,qBAAsB,UAAW,YAAa,UAAW,YAAa,QAAS,qBAAsB,mBAAoB,sBAAuB,qBAAsB,eAAgB,sBAAuB,OAAQ,cAAe,qBAAsB,gBAI9U2kB,IAAc6gB,KAA2B,OAAd7gB,IAC7BqgB,EAAUM,GAAe,KAG3B,IAAIc,EAAWC,cACXC,EAAUD,cACVE,EAAoBJ,EAAYK,OAAS,SAAWC,IACxD,OAAoBpoC,gBAAoBsmB,EAAWqG,YAAS,CAC1DliB,UAAWmiB,kBAAKoa,EAAQjN,KAAMtvB,GAC9Bk8B,QAASA,EACTtkC,IAAKA,GACJ6jC,GAAqBlmC,gBAAoBqoC,IAAS,CACnD59B,UAAWu8B,EAAQsB,SACLtoC,gBAAoB,MAAO,CACzCyK,UAAWu8B,EAAQuB,SACjBX,EAAmBzmC,OAAS,GAAkBnB,gBAAoBwoC,IAAY,CAChFlC,MAAO,UACPmC,QAAS,QACTh+B,UAAWu8B,EAAQ0B,QACnB5uB,GAAImuB,GACHV,GAAmBK,EAAmBzmC,OAAS,GAAkBnB,gBAAoB2oC,IAAQhc,YAAS,CACvGqa,QAAS,CACP4B,OAAQ5B,EAAQ4B,OAChBC,KAAM7B,EAAQ8B,YAEhBC,MAAoB/oC,gBAAoBgpC,IAAW,CACjDv+B,UAAWmiB,kBAAKoa,EAAQ+B,MAAO/B,EAAQiC,cAEzChqC,MAAOgnC,EACPiD,SAAUxB,EACV5tB,GAAIiuB,EACJE,QAASA,GACRH,GAAcF,EAAmB1W,KAAI,SAAUiY,GAChD,OAAoBnpC,gBAAoBkoC,EAAmB,CACzDz9B,UAAWu8B,EAAQoC,SACnB9nC,IAAK6nC,EAAkBlqC,MAAQkqC,EAAkBlqC,MAAQkqC,EACzDlqC,MAAOkqC,EAAkBlqC,MAAQkqC,EAAkBlqC,MAAQkqC,GAC1DA,EAAkBpL,MAAQoL,EAAkBpL,MAAQoL,OACvCnpC,gBAAoBwoC,IAAY,CAChDlC,MAAO,UACPmC,QAAS,QACTh+B,UAAWu8B,EAAQ0B,SAClBrB,EAAmB,CACpB/c,KAAgB,IAAV0N,EAAc,EAAIgO,EAAOC,EAAc,EAC7CO,IAAe,IAAXxO,EAAe/xB,KAAKC,IAAI8xB,GAAQgO,EAAO,GAAKC,IAAgBD,EAAO,GAAKC,EAC5EjO,OAAkB,IAAXA,GAAgB,EAAIA,EAC3BgO,KAAMA,KACUhmC,gBAAoB6mC,EAAkB,CACtDp8B,UAAWu8B,EAAQqC,QACnBxD,oBAAqBlZ,YAAS,CAC5BuR,MAAO6I,EACP,aAAcA,GACblB,GACH7N,MAAOA,EACP8N,oBAAqBnZ,YAAS,CAC5BuR,MAAOuJ,EACP,aAAcA,GACb3B,GACHC,aAAcA,EACdC,KAAMA,EACNC,YAAaA,SAoIFqD,eA9SK,SAAgBnD,GAClC,MAAO,CAELpM,KAAM,CACJuM,MAAOH,EAAMoD,QAAQC,KAAKC,QAC1BC,SAAUvD,EAAMwD,WAAWC,QAAQ,IACnCvgC,SAAU,OAEV,eAAgB,CACdwgC,QAAS,IAKbvB,QAAS,CACPp3B,UAAW,GACXqU,aAAc,GAIhBgjB,OAAQ,CACNpG,KAAM,YAIRuG,QAAS,CACPpJ,WAAY,GAKd2J,WAAY,CACVa,YAAa,GACbC,WAAY,GAIdnB,OAAQ,CACNvjB,YAAa,EACbE,aAAc,GACdykB,UAAW,QACXC,cAAe,SAMjBnB,WAAY,GAGZC,MAAO,CACLzC,MAAO,UACPoD,SAAU,UACVpK,WAAY,GAId8J,SAAU,GAGVC,QAAS,CACP/J,WAAY,EACZyK,WAAY,OAgPgB,CAChCG,KAAM,sBADOZ,CAEZ5C,I,iICzTYyD,cAA4BnqC,gBAAoB,OAAQ,CACrEq5B,EAAG,mEACD,iB,wBC2DA+Q,EAA8BpqC,cAAiB,SAAwB2B,EAAOU,GAChF,IAAIgoC,EAAgB1oC,EAAM2oC,OACtBA,OAA2B,IAAlBD,GAAmCA,EAC5Cj7B,EAAWzN,EAAMyN,SACjB43B,EAAUrlC,EAAMqlC,QAChBv8B,EAAY9I,EAAM8I,UAClB8/B,EAAmB5oC,EAAMyY,UACzBA,OAAiC,IAArBmwB,EAA8B,MAAQA,EAClDC,EAAsB7oC,EAAM8oC,aAC5BA,OAAuC,IAAxBD,GAAyCA,EACxDE,EAAuB/oC,EAAMgpC,cAC7BA,OAAyC,IAAzBD,EAAkCE,EAAoBF,EACtExE,EAAQxa,YAAyB/pB,EAAO,CAAC,SAAU,WAAY,UAAW,YAAa,YAAa,eAAgB,kBAExH,OAAoB3B,gBAAoB6qC,IAAYle,YAAS,CAC3DliB,UAAWmiB,kBAAKoa,EAAQjN,KAAMtvB,EAAW6/B,GAAUtD,EAAQsD,QAC3D5V,UAAW,OACXoW,eAAe,EACfzoC,IAAKA,GACJ6jC,GAAQ92B,EAAUq7B,IAAiBH,EAAS,KAAoBtqC,gBAAoB2qC,EAAe,CACpGlgC,UAAWmiB,kBAAKoa,EAAQ6B,KAAM7B,EAAQ,gBAAgBx4B,OAAOu8B,YAAW3wB,YAwC7DkvB,eAtHK,SAAgBnD,GAClC,MAAO,CAELpM,KAAM,CACJiR,OAAQ,UACRC,QAAS,cACTC,eAAgB,aAChBC,cAAe,UACfC,WAAY,SACZ,UAAW,CACT9E,MAAOH,EAAMoD,QAAQC,KAAK6B,WAE5B,UAAW,CACT/E,MAAOH,EAAMoD,QAAQC,KAAK6B,UAC1B,UAAW,CACTC,QAAS,KAGb,WAAY,CACVhF,MAAOH,EAAMoD,QAAQC,KAAKC,QAE1B,WAAY,CACV6B,QAAS,EACThF,MAAOH,EAAMoD,QAAQC,KAAK6B,aAMhCf,OAAQ,GAGRzB,KAAM,CACJa,SAAU,GACVI,YAAa,EACbC,WAAY,EACZuB,QAAS,EACTC,WAAYpF,EAAMqF,YAAYC,OAAO,CAAC,UAAW,aAAc,CAC7DC,SAAUvF,EAAMqF,YAAYE,SAASC,UAEvCC,WAAY,QAIdC,kBAAmB,CACjBC,UAAW,gBAIbC,iBAAkB,CAChBD,UAAW,qBAoEiB,CAChC5B,KAAM,qBADOZ,CAEZc,I,yICnGC5K,EAAqBx/B,cAAiB,SAAe2B,EAAOU,GAC9D,IAAI2kC,EAAUrlC,EAAMqlC,QAChBv8B,EAAY9I,EAAM8I,UAClBy8B,EAAmBvlC,EAAM+yB,UACzBpO,OAAiC,IAArB4gB,EALK,QAK4CA,EAC7D8E,EAAiBrqC,EAAMkoC,QACvBA,OAA6B,IAAnBmC,EAA4B,UAAYA,EAClDC,EAActqC,EAAM2C,KACpBA,OAAuB,IAAhB2nC,EAAyB,SAAWA,EAC3CC,EAAsBvqC,EAAMwqC,aAC5BA,OAAuC,IAAxBD,GAAyCA,EACxDhG,EAAQxa,YAAyB/pB,EAAO,CAAC,UAAW,YAAa,YAAa,UAAW,OAAQ,iBAEjGyqC,EAAQpsC,WAAc,WACxB,MAAO,CACL6pC,QAASA,EACTvlC,KAAMA,EACN6nC,aAAcA,KAEf,CAACtC,EAASvlC,EAAM6nC,IACnB,OAAoBnsC,gBAAoBqsC,IAAaC,SAAU,CAC7DrtC,MAAOmtC,GACOpsC,gBAAoBsmB,EAAWqG,YAAS,CACtD3S,KAxBmB,UAwBbsM,EAAiC,KAAO,QAC9CjkB,IAAKA,EACLoI,UAAWmiB,kBAAKoa,EAAQjN,KAAMtvB,EAAW0hC,GAAgBnF,EAAQmF,eAChEjG,QA4CUoD,eA7FK,SAAgBnD,GAClC,MAAO,CAELpM,KAAM,CACJkR,QAAS,QACTvnC,MAAO,OACP6oC,eAAgB,WAChBC,cAAe,EACf,YAAa7f,YAAS,GAAIwZ,EAAMwD,WAAW8C,MAAO,CAChD5C,QAAS1D,EAAMuG,QAAQ,GACvBpG,MAAOH,EAAMoD,QAAQC,KAAK6B,UAC1BrB,UAAW,OACX2C,YAAa,YAKjBR,aAAc,CACZI,eAAgB,eA2EY,CAChCrC,KAAM,YADOZ,CAEZ9J,I,yICzFCoN,EAAY,CACdnE,QAAS,UAGPoE,EAA2B7sC,cAAiB,SAAqB2B,EAAOU,GAC1E,IAAI2kC,EAAUrlC,EAAMqlC,QAChBv8B,EAAY9I,EAAM8I,UAClBy8B,EAAmBvlC,EAAM+yB,UACzBpO,OAAiC,IAArB4gB,EALK,QAK4CA,EAC7DhB,EAAQxa,YAAyB/pB,EAAO,CAAC,UAAW,YAAa,cAErE,OAAoB3B,gBAAoB8sC,IAAiBR,SAAU,CACjErtC,MAAO2tC,GACO5sC,gBAAoBsmB,EAAWqG,YAAS,CACtDliB,UAAWmiB,kBAAKoa,EAAQjN,KAAMtvB,GAC9BpI,IAAKA,EACL2X,KAbmB,UAabsM,EAAiC,KAAO,YAC7C4f,QA2BUoD,cAlDK,CAElBvP,KAAM,CACJkR,QAAS,uBA+CqB,CAChCf,KAAM,kBADOZ,CAEZuD,I,kCC3DH,4BAEe1C,gBAAcnqC,IAAM+C,cAAc,OAAQ,CACvDs2B,EAAG,wIACD,a,kCCJJ,4BAEe8Q,gBAAcnqC,IAAM+C,cAAc,OAAQ,CACvDs2B,EAAG,kGACD,0B,kBCEJ5sB,EAAOzN,QANP,SAAyB+jC,EAAUgK,GACjC,KAAMhK,aAAoBgK,GACxB,MAAM,IAAIxiB,UAAU,uC,kBCFxB,SAASyiB,EAAkBhsC,EAAQW,GACjC,IAAK,IAAIV,EAAI,EAAGA,EAAIU,EAAMR,OAAQF,IAAK,CACrC,IAAIgsC,EAAatrC,EAAMV,GACvBgsC,EAAW/tC,WAAa+tC,EAAW/tC,aAAc,EACjD+tC,EAAWC,cAAe,EACtB,UAAWD,IAAYA,EAAWjX,UAAW,GACjDl3B,OAAOC,eAAeiC,EAAQisC,EAAW3rC,IAAK2rC,IAUlDxgC,EAAOzN,QANP,SAAsB+tC,EAAaI,EAAYC,GAG7C,OAFID,GAAYH,EAAkBD,EAAY7U,UAAWiV,GACrDC,GAAaJ,EAAkBD,EAAaK,GACzCL,I,oBCbT,IAAIM,EAAU,EAAQ,KAElBC,EAAwB,EAAQ,KAUpC7gC,EAAOzN,QARP,SAAoC0jB,EAAM3gB,GACxC,OAAIA,GAA2B,WAAlBsrC,EAAQtrC,IAAsC,oBAATA,EAI3CurC,EAAsB5qB,GAHpB3gB,I,g2CCJI,SAASwrC,EAAyBC,GAC/C,IAAK,IAAIp/B,EAAOlN,UAAUC,OAAQkN,EAAO,IAAIC,MAAMF,EAAO,EAAIA,EAAO,EAAI,GAAIG,EAAO,EAAGA,EAAOH,EAAMG,IAClGF,EAAKE,EAAO,GAAKrN,UAAUqN,GAG7B,OAAOk/B,IAAe3sC,WAAM,EAAQ,CAAC4sC,YAAU,CAC7CC,qBAAqB,GACpBH,IAAUh/B,OAAOH,I,8CCRf,SAASu/B,EAAW3uC,GACzB,OAAOkgC,OAAOpb,WAAW9kB,IAAQkC,SAAWg+B,OAAOlgC,GAAOkC,OASrD,SAAS0sC,EAAW1sC,GACzB,OAAO4iB,WAAW5iB,GAIb,SAAS2sC,EAAcC,GAC5B,OAAO,SAAU5sC,EAAQ6sC,GACvB,IAAIC,EAVC9O,OAUkBh+B,GAVJ+sC,MAAM,oBAAoB,IAAM,GAYnD,GAAID,IAAaD,EACf,OAAO7sC,EAIT,IAAIgtC,EAAWN,EAAW1sC,GAE1B,GAAiB,OAAb8sC,EACF,GAAiB,OAAbA,EACFE,EAAWN,EAAW1sC,GAAU0sC,EAAWE,QACtC,GAAiB,QAAbE,EAET,OADAE,EAAWN,EAAW1sC,GAAU0sC,EAAWE,GACpC5sC,EAKX,IAAIitC,EAAeD,EAEnB,GAAe,OAAXH,EACF,GAAe,OAAXA,EACFI,EAAeD,EAAWN,EAAWE,OAChC,IAAe,QAAXC,EAGT,OAAO7sC,EAFPitC,EAAeD,EAAWN,EAAWE,GAMzC,OAAOhqB,WAAWqqB,EAAaC,QAAQ,IAAML,GAG1C,SAASM,EAAc9rC,GAC5B,IAAI8B,EAAO9B,EAAK8B,KACZiqC,EAAO/rC,EAAK+rC,KACZC,EAAYlqC,EAAOA,EAAOiqC,EAC1BE,EAAYD,EAAYD,EAC5B,OAAOjqC,EAAOkqC,EAAYC,EAAYnqC,EAAOkqC,EAAYC,EAKpD,SAASC,EAASvrC,GACvB,IAAIwrC,EAAaxrC,EAAMwrC,WAGvB,OAFaxrC,EAAMyrC,QAEFD,EADExrC,EAAM0rC,cAoCpB,SAASC,EAAmBvrC,GACjC,IAAIwrC,EAAcxrC,EAAMwrC,YACpB7oC,EAAM3C,EAAM2C,IACZQ,EAAMnD,EAAMmD,IACZsoC,EAAazrC,EAAM0rC,KACnBA,OAAsB,IAAfD,EAAwB,MAAQA,EACvCE,EAAoB3rC,EAAM4rC,YAC1BA,OAAoC,IAAtBD,EAA+B,CAAC,IAAK,IAAK,MAAQA,EAChEE,EAAkB7rC,EAAMuoC,UACxBA,OAAgC,IAApBsD,EAA6B,KAAOA,EAEhDC,EAAShkB,YAAgB,GAAI0jB,EAAa,GAAGvgC,OAAOtI,GAAKsI,OAAOygC,IAEhEK,GAAU5oC,EAAMR,GAAOipC,EAAYA,EAAYhuC,OAAS,GAU5D,OATAguC,EAAY9tC,SAAQ,SAAUkuC,GAC5B,IAAItwC,EAAQiH,EAAMopC,EAASC,EAET,OAAdzD,IACF7sC,EAAQ6sC,EAAU7sC,IAGpBowC,EAAO,qBAAqB7gC,OAAO+gC,EAAY,QAAUlkB,YAAgB,GAAI0jB,EAAa,GAAGvgC,OAAOvI,KAAKimB,MAAc,IAARjtB,GAAiB,KAAOuP,OAAOygC,OAEzII,ECzHM,SAASG,EAAoBC,GAC1C,IAAIjC,EAAUtsC,UAAUC,OAAS,QAAsB0E,IAAjB3E,UAAU,GAAmBA,UAAU,GAAK,GAC9EwuC,EAAuBlC,EAAQ2B,YAC/BA,OAAuC,IAAzBO,EAAkC,CAAC,KAAM,KAAM,MAAQA,EACrEC,EAAwBnC,EAAQoC,aAChCA,OAAyC,IAA1BD,GAA2CA,EAC1DE,EAAkBrC,EAAQ8B,OAC1BA,OAA6B,IAApBO,EAA6B,EAAIA,EAC1CC,EAAoBtC,EAAQuC,SAC5BA,OAAiC,IAAtBD,EAA+B,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,YAAa,YAAa,QAAS,QAAS,UAAW,SAAU,YAAcA,EAE9J3J,EAAQxZ,YAAS,GAAI8iB,GAEzBtJ,EAAMwD,WAAahd,YAAS,GAAIwZ,EAAMwD,YACtC,IAAIA,EAAaxD,EAAMwD,WAGnBqG,EAAUlC,EAAcnE,EAAWkF,cACnCoB,EAAmBd,EAAYje,KAAI,SAAUd,GAC/C,OAAO+V,EAAMgJ,YAAYe,OAAO9f,MA+ClC,OA7CA2f,EAAS1uC,SAAQ,SAAUonC,GACzB,IAAIzlC,EAAQ2mC,EAAWlB,GACnB0H,EAAcpsB,WAAWisB,EAAQhtC,EAAM0mC,SAAU,QAErD,KAAIyG,GAAe,GAAnB,CAIA,IAAIC,EAAcD,EACdE,EAAc,GAAKD,EAAc,GAAKd,EACtCX,EAAa3rC,EAAM2rC,WAEvB,IAAKf,EAAWe,KAAgBiB,EAC9B,MAAM,IAAIpwB,MAA6J8wB,YAAuB,IAG3L1C,EAAWe,KAEdA,EAAa5qB,WAAWisB,EAAQrB,EAAY,QAAU5qB,WAAWosB,IAGnE,IAAIrE,EAAY,KAEX8D,IACH9D,EAAY,SAAmB7sC,GAC7B,OAAOqvC,EAAc,CACnBhqC,KAAMrF,EACNsvC,KAAMG,EAAS,CACbE,OAAQ,EACRD,WAAYA,EACZE,aAAclF,EAAWkF,mBAMjClF,EAAWlB,GAAW9b,YAAS,GAAI3pB,EAAO8rC,EAAmB,CAC3DC,YAAa,WACb7oC,IAAKmqC,EACL3pC,IAAK0pC,EACLnB,KAAM,MACNE,YAAac,EACbnE,UAAWA,SAGR3F,E,qDChEMoK,EAHCC,YAAiB,CAC/BC,aAAcA,M,gECKhBhkC,EAAOzN,QARP,SAAgC0jB,GAC9B,QAAa,IAATA,EACF,MAAM,IAAIguB,eAAe,6DAG3B,OAAOhuB,I,kBCLT,SAAS8J,EAAgBjgB,GAIvB,OAHAE,EAAOzN,QAAUwtB,EAAkB1tB,OAAO4N,eAAiB5N,OAAO6xC,eAAiB,SAAyBpkC,GAC1G,OAAOA,EAAEI,WAAa7N,OAAO6xC,eAAepkC,IAEvCigB,EAAgBjgB,GAGzBE,EAAOzN,QAAUwtB,G,oBCPjB,IAAI9f,EAAiB,EAAQ,MAiB7BD,EAAOzN,QAfP,SAAmB4xC,EAAUC,GAC3B,GAA0B,oBAAfA,GAA4C,OAAfA,EACtC,MAAM,IAAItmB,UAAU,sDAGtBqmB,EAAS1Y,UAAYp5B,OAAO2sC,OAAOoF,GAAcA,EAAW3Y,UAAW,CACrE4Y,YAAa,CACX7xC,MAAO2xC,EACP5a,UAAU,EACVkX,cAAc,KAGd2D,GAAYnkC,EAAekkC,EAAUC,K,iCCZ3C,IAAIjyC,EAAyBC,EAAQ,IAEjCS,EAA0BT,EAAQ,KAEtCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQ+xC,iCAAmC/xC,EAAQuT,0BAA4BvT,EAAQ0T,sCAAwC1T,EAAQgyC,gCAAkChyC,EAAQiyC,4CAA8CjyC,EAAQ2T,gCAAkC3T,EAAQkyC,wCAA0ClyC,EAAQ6T,uBAAyB7T,EAAQsT,kCAAoCtT,EAAQyT,yBAA2BzT,EAAQmyC,+BAAiCnyC,EAAQoyC,kCAAoCpyC,EAAQqyC,wCAA0CryC,EAAQsyC,2BAA6BtyC,EAAQuyC,0BAA4BvyC,EAAQwyC,6BAA+BxyC,EAAQ4T,mCAAqC5T,EAAQwT,kCAA+B,EAE1uBlT,EAAwBT,EAAQ,IAEHD,EAAuBC,EAAQ,MAEvDD,EAAuBC,EAAQ,KAMhDG,EAAQwT,6BAJmE,KAc3ExT,EAAQ4T,mCATyE,KAWjF5T,EAAQwyC,6BADmE,KAG3ExyC,EAAQuyC,0BADgE,KAGxEvyC,EAAQsyC,2BADiE,KA2BzEtyC,EAAQqyC,wCAzB8E,KA2BtFryC,EAAQoyC,kCADwE,KAGhFpyC,EAAQmyC,+BADqE,KAG7EnyC,EAAQyT,yBAD+D,KAGvEzT,EAAQsT,kCADwE,KAUhFtT,EAAQ6T,uBAR6D,KAcrE7T,EAAQkyC,wCAL8E,KAgBtFlyC,EAAQ2T,gCAVsE,KAyB9E3T,EAAQiyC,4CAdkF,KAmB1FjyC,EAAQgyC,gCAJsE,KAM9EhyC,EAAQ0T,sCAD4E,KAGpF1T,EAAQuT,0BADgE,KAMxEvT,EAAQ+xC,iCAJuE,M,iCCnH/E,SAASU,IAEP,IAAIztC,EAAQlC,KAAKgvC,YAAYY,yBAAyB5vC,KAAKH,MAAOG,KAAKkC,OACzD,OAAVA,QAA4B6B,IAAV7B,GACpBlC,KAAKoC,SAASF,GAIlB,SAAS2tC,EAA0B1lC,GAQjCnK,KAAKoC,SALL,SAAiBgI,GACf,IAAIlI,EAAQlC,KAAKgvC,YAAYY,yBAAyBzlC,EAAWC,GACjE,OAAiB,OAAVlI,QAA4B6B,IAAV7B,EAAsBA,EAAQ,MAGnCkuB,KAAKpwB,OAG7B,SAAS8vC,EAAoB3lC,EAAW4lC,GACtC,IACE,IAAIj5B,EAAY9W,KAAKH,MACjBuK,EAAYpK,KAAKkC,MACrBlC,KAAKH,MAAQsK,EACbnK,KAAKkC,MAAQ6tC,EACb/vC,KAAKgwC,6BAA8B,EACnChwC,KAAKiwC,wBAA0BjwC,KAAKkwC,wBAClCp5B,EACA1M,GARJ,QAWEpK,KAAKH,MAAQiX,EACb9W,KAAKkC,MAAQkI,GAUjB,SAASG,EAASia,GAChB,IAAI4R,EAAY5R,EAAU4R,UAE1B,IAAKA,IAAcA,EAAU+Z,iBAC3B,MAAM,IAAIzyB,MAAM,sCAGlB,GACgD,oBAAvC8G,EAAUorB,0BAC4B,oBAAtCxZ,EAAU8Z,wBAEjB,OAAO1rB,EAMT,IAAI4rB,EAAqB,KACrBC,EAA4B,KAC5BC,EAAsB,KAgB1B,GAf4C,oBAAjCla,EAAUuZ,mBACnBS,EAAqB,qBACmC,oBAAxCha,EAAUma,4BAC1BH,EAAqB,6BAE4B,oBAAxCha,EAAUyZ,0BACnBQ,EAA4B,4BACmC,oBAA/Cja,EAAUoa,mCAC1BH,EAA4B,oCAEe,oBAAlCja,EAAU0Z,oBACnBQ,EAAsB,sBACmC,oBAAzCla,EAAUqa,6BAC1BH,EAAsB,8BAGC,OAAvBF,GAC8B,OAA9BC,GACwB,OAAxBC,EACA,CACA,IAAII,EAAgBlsB,EAAUmsB,aAAensB,EAAU4jB,KACnDwI,EAC4C,oBAAvCpsB,EAAUorB,yBACb,6BACA,4BAEN,MAAMlyB,MACJ,2FACEgzB,EACA,SACAE,EACA,uDACwB,OAAvBR,EAA8B,OAASA,EAAqB,KAC9B,OAA9BC,EACG,OAASA,EACT,KACqB,OAAxBC,EAA+B,OAASA,EAAsB,IATjE,wIA0BJ,GARkD,oBAAvC9rB,EAAUorB,2BACnBxZ,EAAUuZ,mBAAqBA,EAC/BvZ,EAAUyZ,0BAA4BA,GAMS,oBAAtCzZ,EAAU8Z,wBAAwC,CAC3D,GAA4C,oBAAjC9Z,EAAUya,mBACnB,MAAM,IAAInzB,MACR,qHAIJ0Y,EAAU0Z,oBAAsBA,EAEhC,IAAIe,EAAqBza,EAAUya,mBAEnCza,EAAUya,mBAAqB,SAC7B/5B,EACA1M,EACA0mC,GAUA,IAAIC,EAAW/wC,KAAKgwC,4BAChBhwC,KAAKiwC,wBACLa,EAEJD,EAAmB5wC,KAAKD,KAAM8W,EAAW1M,EAAW2mC,IAIxD,OAAOvsB,EA1JT,gDA6CAmrB,EAAmBqB,8BAA+B,EAClDnB,EAA0BmB,8BAA+B,EACzDlB,EAAoBkB,8BAA+B,G,iCC7CnD,IAAIl0C,EAAyBC,EAAQ,IAErCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAO,aAAc,EAErB,IAAIQ,EAA4BZ,EAAuBC,EAAQ,MAE3DY,EAAmBb,EAAuBC,EAAQ,MAElDa,EAAgBd,EAAuBC,EAAQ,MAE/CkB,EAAmBnB,EAAuBC,EAAQ,MAElDk0C,EAA8Bn0C,EAAuBC,EAAQ,OAE7Dm0C,EAAkBn0C,EAAQ,MAO1B0sB,GALS1sB,EAAQ,KAOrB,WACE,SAAS0sB,EAAkC/oB,GACzC,IAAIgpB,EAAqBhpB,EAAKipB,cAC1BA,OAAuC,IAAvBD,GAAgC,EAAIwnB,EAAgBnyB,qBAAuB2K,EAC3F3e,GAAS,EAAIrN,EAAyB,SAAagD,EAAM,CAAC,mBAC9D,EAAI/C,EAAgB,SAAaqC,KAAMypB,IACvC,EAAIxrB,EAAgB,SAAa+B,KAAM,mCAA+B,IACtE,EAAI/B,EAAgB,SAAa+B,KAAM,sBAAkB,GAEzDA,KAAK6pB,4BAA8B,IAAIonB,EAA2B,QAAYlmC,GAC9E/K,KAAK8pB,eAAiBH,EAyKxB,OAtKA,EAAI/rB,EAAa,SAAa6rB,EAAmC,CAAC,CAChEjqB,IAAK,qBACLrC,MAAO,WACL,OAAO6C,KAAK6pB,4BAA4B3U,eAAiBlV,KAAK8pB,iBAE/D,CACDtqB,IAAK,YACLrC,MAAO,SAAmB4N,GACxB/K,KAAK6pB,4BAA4B5N,UAAUlR,KAE5C,CACDvL,IAAK,eACLrC,MAAO,WACL,OAAO6C,KAAK6pB,4BAA4BlK,iBAEzC,CACDngB,IAAK,uBACLrC,MAAO,WACL,OAAO6C,KAAK6pB,4BAA4BE,yBAEzC,CACDvqB,IAAK,uBACLrC,MAAO,WACL,OAAO6C,KAAK6pB,4BAA4BG,yBAOzC,CACDxqB,IAAK,sBACLrC,MAAO,SAA6BkE,GAClC,IAAIyY,EAAgBzY,EAAMyY,cACtBC,EAAS1Y,EAAM0Y,OAEfsE,EAAYre,KAAK6pB,4BAA4B3U,eAE7C+U,EAAgBjqB,KAAKkV,eAErBgV,EAAmBlqB,KAAKmqB,qBAAqB,CAC/CrQ,cAAeA,EACfC,OAAQA,EACRsE,UAAW4L,IAGb,OAAO9lB,KAAKimB,MAAMF,GAAoBD,EAAgB5L,MAEvD,CACD7e,IAAK,2BACLrC,MAAO,SAAkC2E,GACvC,OAAO9B,KAAK6pB,4BAA4B/T,yBAAyBhU,KAElE,CACDtC,IAAK,uCACLrC,MAAO,WACL,OAAO6C,KAAK6pB,4BAA4BjM,yCAIzC,CACDpe,IAAK,eACLrC,MAAO,WACL,OAAOgH,KAAKC,IAAIpE,KAAK8pB,eAAgB9pB,KAAK6pB,4BAA4B3U,kBAIvE,CACD1V,IAAK,2BACLrC,MAAO,SAAkCsE,GACvC,IAAIuc,EAAcvc,EAAMub,MACpBA,OAAwB,IAAhBgB,EAAyB,OAASA,EAC1ClE,EAAgBrY,EAAMqY,cACtBmD,EAAgBxb,EAAMwb,cACtBJ,EAAcpb,EAAMob,YACxBI,EAAgBjd,KAAKqqB,oBAAoB,CACvCvQ,cAAeA,EACfC,OAAQkD,IAGV,IAAIlD,EAAS/Z,KAAK6pB,4BAA4B9M,yBAAyB,CACrEC,MAAOA,EACPlD,cAAeA,EACfmD,cAAeA,EACfJ,YAAaA,IAGf,OAAO7c,KAAKsqB,oBAAoB,CAC9BxQ,cAAeA,EACfC,OAAQA,MAKX,CACDva,IAAK,sBACLrC,MAAO,SAA6B0E,GAClC,IAAIiY,EAAgBjY,EAAMiY,cACtBC,EAASlY,EAAMkY,OAKnB,OAJAA,EAAS/Z,KAAKqqB,oBAAoB,CAChCvQ,cAAeA,EACfC,OAAQA,IAEH/Z,KAAK6pB,4BAA4BhQ,oBAAoB,CAC1DC,cAAeA,EACfC,OAAQA,MAGX,CACDva,IAAK,YACLrC,MAAO,SAAmB2E,GACxB9B,KAAK6pB,4BAA4B5T,UAAUnU,KAE5C,CACDtC,IAAK,uBACLrC,MAAO,SAA8BmF,GACnC,IAAIwX,EAAgBxX,EAAMwX,cACtBC,EAASzX,EAAMyX,OACfsE,EAAY/b,EAAM+b,UACtB,OAAOA,GAAavE,EAAgB,EAAIC,GAAUsE,EAAYvE,KAE/D,CACDta,IAAK,sBACLrC,MAAO,SAA6B0F,GAClC,IAAIiX,EAAgBjX,EAAMiX,cACtBC,EAASlX,EAAMkX,OAEfsE,EAAYre,KAAK6pB,4BAA4B3U,eAE7C+U,EAAgBjqB,KAAKkV,eAEzB,GAAImJ,IAAc4L,EAChB,OAAOlQ,EAEP,IAAImQ,EAAmBlqB,KAAKmqB,qBAAqB,CAC/CrQ,cAAeA,EACfC,OAAQA,EACRsE,UAAWA,IAGb,OAAOla,KAAKimB,MAAMF,GAAoBD,EAAgBnQ,MAGzD,CACDta,IAAK,sBACLrC,MAAO,SAA6B2G,GAClC,IAAIgW,EAAgBhW,EAAMgW,cACtBC,EAASjW,EAAMiW,OAEfsE,EAAYre,KAAK6pB,4BAA4B3U,eAE7C+U,EAAgBjqB,KAAKkV,eAEzB,GAAImJ,IAAc4L,EAChB,OAAOlQ,EAEP,IAAImQ,EAAmBlqB,KAAKmqB,qBAAqB,CAC/CrQ,cAAeA,EACfC,OAAQA,EACRsE,UAAW4L,IAGb,OAAO9lB,KAAKimB,MAAMF,GAAoB7L,EAAYvE,QAIjD2P,EAnLT,IAsLAvsB,EAAO,QAAcusB,G,gFClNN,ICCXjnB,EDDW,IAAqB,qBAAXwc,SAA0BA,OAAO4F,WAAY5F,OAAO4F,SAAS3jB,eCEvE,SAASb,EAAc+wC,GACpC,KAAK3uC,GAAiB,IAATA,GAAc2uC,IACrBC,EAAW,CACb,IAAIC,EAAYzsB,SAAS3jB,cAAc,OACvCowC,EAAUnwC,MAAMsG,SAAW,WAC3B6pC,EAAUnwC,MAAMgH,IAAM,UACtBmpC,EAAUnwC,MAAMU,MAAQ,OACxByvC,EAAUnwC,MAAMC,OAAS,OACzBkwC,EAAUnwC,MAAMqG,SAAW,SAC3Bqd,SAASmc,KAAK1Z,YAAYgqB,GAC1B7uC,EAAO6uC,EAAUjjC,YAAcijC,EAAU91B,YACzCqJ,SAASmc,KAAKjZ,YAAYupB,GAI9B,OAAO7uC,I,iCCfT,IAAI1F,EAAyBC,EAAQ,IAErCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQo0C,sCAAmC,EAE1Bx0C,EAAuBC,EAAQ,KAUhDG,EAAQo0C,iCARuE,M,iCCT/Et0C,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAO,QAmBP,SAAsCwD,GACpC,IAAI0S,EAAY1S,EAAK0S,UACjBmH,EAAqB7Z,EAAK6Z,mBAC1BC,EAAkB9Z,EAAK8Z,gBACvBC,EAAa/Z,EAAK+Z,WAClBC,EAAYha,EAAKga,UAErB,OAnB6B,IAmBzBF,EACK,CACLI,mBAAoBzW,KAAKS,IAAI,EAAG6V,GAChCI,kBAAmB1W,KAAKC,IAAIgP,EAAY,EAAGsH,EAAYH,IAGlD,CACLK,mBAAoBzW,KAAKS,IAAI,EAAG6V,EAAaF,GAC7CM,kBAAmB1W,KAAKC,IAAIgP,EAAY,EAAGsH,KAjCjDxd,EAAQwkB,0BAA4BxkB,EAAQykB,4BAA8BzkB,EAAQmX,yBAA2BnX,EAAQ0Y,+BAA4B,EAEpI7Y,EAAQ,KAGrBG,EAAQ0Y,2BADyB,EAGjC1Y,EAAQmX,yBADuB,EAG/BnX,EAAQykB,4BAD0B,aAQlCzkB,EAAQwkB,0BANwB,Y,iCCdhC1kB,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAO,QAQP,SAAkCwD,GA2BhC,IA1BA,IAAIoa,EAAYpa,EAAKoa,UACjBha,EAAeJ,EAAKI,aACpBqS,EAA+BzS,EAAKyS,6BACpCf,EAAmB1R,EAAK0R,iBACxBE,EAAkB5R,EAAK4R,gBACvBnP,EAA2BzC,EAAKyC,yBAChC8W,EAA6BvZ,EAAKuZ,2BAClCtI,EAAcjR,EAAKiR,YACnBgI,EAAoBjZ,EAAKiZ,kBACzBvY,EAASV,EAAKU,OACdqS,EAA4B/S,EAAK+S,0BACjCb,EAAgBlS,EAAKkS,cACrBE,EAAepS,EAAKoS,aACpBiI,EAAara,EAAKqa,WAClBZ,EAA2BzZ,EAAKyZ,yBAChCP,EAAuBlZ,EAAKkZ,qBAC5BI,EAAoBtZ,EAAKsZ,kBACzB+Q,EAAgB,GAMhBC,EAAqB7X,EAA6B6X,sBAAwBvX,EAA0BuX,qBACpGC,GAAiBtZ,IAAgBqZ,EAE5BrqB,EAAWiS,EAAejS,GAAYmS,EAAcnS,IAG3D,IAFA,IAAIuqB,EAAWzX,EAA0BqC,yBAAyBnV,GAEzDW,EAAc8Q,EAAkB9Q,GAAegR,EAAiBhR,IAAe,CACtF,IAAI6pB,EAAchY,EAA6B2C,yBAAyBxU,GACpE8pB,EAAY9pB,GAAesY,EAAqBQ,OAAS9Y,GAAesY,EAAqBS,MAAQ1Z,GAAYqZ,EAAkBI,OAASzZ,GAAYqZ,EAAkBK,KAC1K7a,EAAM,GAAGkN,OAAO/L,EAAU,KAAK+L,OAAOpL,GACtCJ,OAAQ,EAER+pB,GAAiBlQ,EAAWvb,GAC9B0B,EAAQ6Z,EAAWvb,GAIf2D,IAA6BA,EAAyBwI,IAAIhL,EAAUW,GAItEJ,EAAQ,CACNC,OAAQ,OACRwG,KAAM,EACNH,SAAU,WACVU,IAAK,EACLtG,MAAO,SAGTV,EAAQ,CACNC,OAAQ+pB,EAAS1oB,KACjBmF,KAAMwjB,EAAYpR,OAASE,EAC3BzS,SAAU,WACVU,IAAKgjB,EAASnR,OAASI,EACvBvY,MAAOupB,EAAY3oB,MAErBuY,EAAWvb,GAAO0B,GAItB,IAAImqB,EAAqB,CACvB/pB,YAAaA,EACbqQ,YAAaA,EACbyZ,UAAWA,EACX5rB,IAAKA,EACL4B,OAAQA,EACRT,SAAUA,EACVO,MAAOA,GAELoqB,OAAe,GAWd3R,IAAqBhI,GAAiBsI,GAA+BE,EAQxEmR,EAAexqB,EAAauqB,IAPvBvQ,EAAUtb,KACbsb,EAAUtb,GAAOsB,EAAauqB,IAGhCC,EAAexQ,EAAUtb,IAMP,MAAhB8rB,IAAyC,IAAjBA,GAQ5BP,EAAchsB,KAAKusB,GAIvB,OAAOP,GAjHIhuB,EAAQ,M,iCCPrB,WAKIwtC,EAA4BrsC,kBAMjBqsC,O,iCCXf,+D,iCCAA,iFAqHIlF,EAAyBnnC,cAAiB,SAAmB2B,EAAOU,GACtE,IAeI2X,EACAsM,EAhBA+sB,EAAe1xC,EAAMmd,MACrBA,OAAyB,IAAjBu0B,EAA0B,UAAYA,EAC9CrM,EAAUrlC,EAAMqlC,QAChBv8B,EAAY9I,EAAM8I,UAClBiqB,EAAY/yB,EAAM+yB,UAClB4e,EAAc3xC,EAAMkoC,QACpB0J,EAAY5xC,EAAM6xC,MAClBC,EAAW9xC,EAAM2C,KACjBo5B,EAAgB/7B,EAAM+7B,cACtBgW,EAAc/xC,EAAM8mC,QACpBvC,EAAQxa,YAAyB/pB,EAAO,CAAC,QAAS,UAAW,YAAa,YAAa,UAAW,QAAS,OAAQ,gBAAiB,YAEpIyqC,EAAQpsC,aAAiBqsC,KACzBO,EAAY5sC,aAAiB8sC,KAC7B6G,EAAa/G,GAAmC,SAAtBA,EAAUnE,QAIpC/T,GACFpO,EAAYoO,EACZ1a,EAAO25B,EAAa,eAAiB,QAErCrtB,EAAYqtB,EAAa,KAAO,KAGlC,IAAIH,EAAQD,GAEPC,GAASG,IACZH,EAAQ,OAGV,IAAI3J,EAAUyJ,IAAgBlH,GAASA,EAAMvC,QAAUuC,EAAMvC,QAAU,WACnEvlC,EAAOmvC,IAAarH,GAASA,EAAM9nC,KAAO8nC,EAAM9nC,KAAO,UACvDmkC,EAAUiL,GAAe9G,GAAaA,EAAUnE,QAChDmL,EAAW,KAMf,OAJIlW,IACFkW,EAA6B,QAAlBlW,EAA0B,YAAc,cAGjC19B,gBAAoBsmB,EAAWqG,YAAS,CAC1DtqB,IAAKA,EACLoI,UAAWmiB,kBAAKoa,EAAQjN,KAAMiN,EAAQyB,GAAUh+B,EAAqB,YAAVqU,GAAuBkoB,EAAQ,QAAQx4B,OAAOu8B,YAAWjsB,KAAsB,YAAZ+qB,GAAyB7C,EAAQ,UAAUx4B,OAAOu8B,YAAWlB,KAAqB,WAATvlC,GAAqB0iC,EAAQ,OAAOx4B,OAAOu8B,YAAWzmC,KAAqB,SAAZmkC,GAAsB2D,GAASA,EAAMD,cAAgBnF,EAAQmF,cACnU,YAAayH,EACb55B,KAAMA,EACNw5B,MAAOA,GACNtN,OAoEUoD,iBA9NK,SAAgBnD,GAClC,MAAO,CAELpM,KAAMpN,YAAS,GAAIwZ,EAAMwD,WAAW8C,MAAO,CACzCxB,QAAS,aACT4I,cAAe,UAGfC,aAAc,kBAAkBtlC,OAA8B,UAAvB23B,EAAMoD,QAAQxgB,KAAmBgrB,YAAQC,YAAK7N,EAAMoD,QAAQ0K,QAAS,GAAI,KAAQC,YAAOF,YAAK7N,EAAMoD,QAAQ0K,QAAS,GAAI,MAC/JjK,UAAW,OACXH,QAAS,KAIXhhB,KAAM,CACJyd,MAAOH,EAAMoD,QAAQC,KAAKC,QAC1BkF,WAAYxI,EAAMwD,WAAWC,QAAQ,IACrCuK,WAAYhO,EAAMwD,WAAWyK,kBAI/BvR,KAAM,CACJyD,MAAOH,EAAMoD,QAAQC,KAAKC,SAI5B4K,OAAQ,CACN/N,MAAOH,EAAMoD,QAAQC,KAAK6B,UAC1BsD,WAAYxI,EAAMwD,WAAWC,QAAQ,IACrCF,SAAUvD,EAAMwD,WAAWC,QAAQ,KAIrC0K,UAAW,CACTzK,QAAS,oBACT,eAAgB,CACdtkB,aAAc,IAEhB,oBAAqB,CACnB7hB,MAAO,GAEPmmC,QAAS,gBACT,eAAgB,CACdxkB,YAAa,GACbE,aAAc,IAEhB,QAAS,CACPskB,QAAS,KAMf0K,gBAAiB,CACf7wC,MAAO,GAEPmmC,QAAS,YACT,eAAgB,CACdxkB,YAAa,EACbE,aAAc,IAKlBivB,YAAa,CACX3K,QAAS,EACT,eAAgB,CACdA,QAAS,IAKb4K,UAAW,CACTzK,UAAW,QAIb0K,YAAa,CACX1K,UAAW,UAIb2K,WAAY,CACV3K,UAAW,QACXmB,cAAe,eAIjByJ,aAAc,CACZ5K,UAAW,WAIbmC,aAAc,CACZ7iC,SAAU,SACVU,IAAK,EACLP,KAAM,EACNorC,OAAQ,EACRC,gBAAiB3O,EAAMoD,QAAQwL,WAAWC,YA4Hd,CAChC9K,KAAM,gBADOZ,CAEZnC,I,iCC1OH,WAKI2F,EAAgC9sC,kBAMrB8sC,O,iCCTf,IAAIluC,EAAyBC,EAAQ,IAErCC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETH,OAAOC,eAAeC,EAAS,UAAW,CACxCE,YAAY,EACZC,IAAK,WACH,OAAO81C,EAAU,WAGrBn2C,OAAOC,eAAeC,EAAS,YAAa,CAC1CE,YAAY,EACZC,IAAK,WACH,OAAO81C,EAAU,WAIrB,IAAIA,EAAar2C,EAAuBC,EAAQ,Q,iCCpBhD,oBAASusB,EAAgB2X,EAAUgK,GAAe,KAAMhK,aAAoBgK,GAAgB,MAAM,IAAIxiB,UAAU,qCAEhH,SAASgC,EAA2B7J,EAAM3gB,GAAQ,IAAK2gB,EAAQ,MAAM,IAAIguB,eAAe,6DAAgE,OAAO3uC,GAAyB,kBAATA,GAAqC,oBAATA,EAA8B2gB,EAAP3gB,EAMlO,IAAIukB,EAAY,SAAUxB,GAGxB,SAASwB,IACP,IAAItY,EAAOnM,EAEXupB,EAAgBtpB,KAAMwkB,GAEtB,IAAK,IAAIlY,EAAOlN,UAAUC,OAAQkN,EAAOC,MAAMF,GAAOG,EAAO,EAAGA,EAAOH,EAAMG,IAC3EF,EAAKE,GAAQrN,UAAUqN,GAGzB,OAAeP,EAASnM,EAAQ0qB,EAA2BzqB,KAAMgjB,EAAiB/iB,KAAKjB,MAAMgkB,EAAkB,CAAChjB,MAAM0M,OAAOH,KAAiB6mC,EAAiBnzC,KAAKF,GAAgB0qB,EAA2B1qB,EAAnCmM,GAoD9K,OApEF,SAAmB4iC,EAAUC,GAAc,GAA0B,oBAAfA,GAA4C,OAAfA,EAAuB,MAAM,IAAItmB,UAAU,kEAAoEsmB,GAAeD,EAAS1Y,UAAYp5B,OAAO2sC,OAAOoF,GAAcA,EAAW3Y,UAAW,CAAE4Y,YAAa,CAAE7xC,MAAO2xC,EAAU1xC,YAAY,EAAO82B,UAAU,EAAMkX,cAAc,KAAe2D,IAAY/xC,OAAO4N,eAAiB5N,OAAO4N,eAAekkC,EAAUC,GAAcD,EAASjkC,UAAYkkC,GAK/dnkB,CAAUpG,EAAWxB,GAcrBwB,EAAU4R,UAAUid,QAAU,WAM5B,MAAO,CACLnxC,MANUlC,KAAKkC,MAOfrC,MANUG,KAAKH,MAOfuC,SANapC,KAAKszC,UAOlBzvC,YANgB7D,KAAKuzC,eAUzB/uB,EAAU4R,UAAUod,kBAAoB,WAClCxzC,KAAKH,MAAM4zC,UAAUzzC,KAAKH,MAAM4zC,SAASzzC,KAAKqzC,YAGpD7uB,EAAU4R,UAAUsd,sBAAwB,SAA+BvpC,EAAW4lC,GACpF,OAAI/vC,KAAKH,MAAM8zC,cAAqB3zC,KAAKH,MAAM8zC,aAAa,CAC1D9zC,MAAOG,KAAKH,MACZqC,MAAOlC,KAAKkC,MACZiI,UAAWA,EACX4lC,UAAWA,KAIfvrB,EAAU4R,UAAUwd,qBAAuB,WACrC5zC,KAAKH,MAAMg0C,aAAa7zC,KAAKH,MAAMg0C,YAAY,CACjD3xC,MAAOlC,KAAKkC,MACZrC,MAAOG,KAAKH,SAIhB2kB,EAAU4R,UAAUya,mBAAqB,SAA4B/5B,EAAW1M,GAC1EpK,KAAKH,MAAMi0C,WAAW9zC,KAAKH,MAAMi0C,UAAU92C,OAAO8e,OAAO9b,KAAKqzC,UAAW,CAC3Ev8B,UAAWA,EACX1M,UAAWA,MAIfoa,EAAU4R,UAAU2d,OAAS,WAC3B,IAAIC,EAASh0C,KAAKH,MACdyN,EAAW0mC,EAAO1mC,SAClBymC,EAASC,EAAOD,OAEpB,OAAOzmC,EAA+B,oBAAbA,EAA0BA,EAAStN,KAAKqzC,WAAa/lC,EAAWymC,EAASA,EAAO/zC,KAAKqzC,WAAa,MAGtH7uB,EAhEO,CARhB,OAyEEtmB,EAAMsmB,WAEJ4uB,EAAmB,WACrB,IAAIr8B,EAAS/W,KAEbA,KAAKkC,MAAQlC,KAAKH,MAAMo0C,aAExBj0C,KAAKszC,UAAY,WACf,OAAOv8B,EAAO3U,SAASpD,MAAM+X,EAAQ3X,YAGvCY,KAAKuzC,aAAe,WAClB,OAAOx8B,EAAOlT,YAAY7E,MAAM+X,EAAQ3X,aAI7BolB,O,kCCzFf,YAYe,SAASgI,EAA0BxI,EAAOS,GAEvD,IAAIpB,EAYAsB,EAA0C,qBAT5CtB,EADwB,qBAAfoB,EACCA,EACiB,qBAAXzF,OACNA,OACe,qBAAT4B,KACNA,KAEA8D,GAGqBE,UAA4BvB,EAAQuB,SAASD,YAE9E,IAAKA,EAAa,CAChB,IAAIE,EAAe,WACjB,IAAIrE,EAAM6C,EAAQxC,uBAAyBwC,EAAQtC,0BAA4BsC,EAAQvC,6BAA+B,SAAUgE,GAC9H,OAAOzB,EAAQnC,WAAW4D,EAAI,KAGhC,OAAO,SAAUA,GACf,OAAOtE,EAAIsE,IANI,GAUfC,EAAc,WAChB,IAAI5D,EAASkC,EAAQjC,sBAAwBiC,EAAQ/B,yBAA2B+B,EAAQhC,4BAA8BgC,EAAQ5B,aAC9H,OAAO,SAAUzJ,GACf,OAAOmJ,EAAOnJ,IAHA,GAOdgN,EAAgB,SAAuBhY,GACzC,IAAIiY,EAAWjY,EAAQkY,mBACnBC,EAASF,EAASG,kBAClBC,EAAWJ,EAASK,iBACpBC,EAAcJ,EAAOC,kBACzBC,EAASnlB,WAAamlB,EAAS5J,YAC/B4J,EAASllB,UAAYklB,EAAS7J,aAC9B+J,EAAYrkB,MAAMU,MAAQujB,EAAO/W,YAAc,EAAI,KACnDmX,EAAYrkB,MAAMC,OAASgkB,EAAOhX,aAAe,EAAI,KACrDgX,EAAOjlB,WAAailB,EAAO1J,YAC3B0J,EAAOhlB,UAAYglB,EAAO3J,cAOxBgK,EAAiB,SAAwBC,GAE3C,KAAIA,EAAEvmB,OAAOyJ,WAAmD,oBAA/B8c,EAAEvmB,OAAOyJ,UAAU+c,SAA0BD,EAAEvmB,OAAOyJ,UAAU+c,QAAQ,oBAAsB,GAAKD,EAAEvmB,OAAOyJ,UAAU+c,QAAQ,kBAAoB,GAAnL,CAIA,IAAI1Y,EAAUhN,KACdglB,EAAchlB,MAEVA,KAAK2lB,eACPZ,EAAY/kB,KAAK2lB,eAGnB3lB,KAAK2lB,cAAgBd,GAAa,YAjBhB,SAAuB7X,GACzC,OAAOA,EAAQoB,aAAepB,EAAQ4Y,eAAehkB,OAASoL,EAAQmB,cAAgBnB,EAAQ4Y,eAAezkB,QAiBvG0kB,CAAc7Y,KAChBA,EAAQ4Y,eAAehkB,MAAQoL,EAAQoB,YACvCpB,EAAQ4Y,eAAezkB,OAAS6L,EAAQmB,aAExCnB,EAAQ8Y,oBAAoBvmB,SAAQ,SAAUulB,GAC5CA,EAAG7kB,KAAK+M,EAASyY,YAQrBM,GAAY,EACZC,EAAiB,GACjBC,EAAsB,iBACtBC,EAAc,kBAAkBC,MAAM,KACtCC,EAAc,uEAAuED,MAAM,KAGzFG,EAAMjD,EAAQuB,SAAS3jB,cAAc,eAMzC,QAJgC8C,IAA5BuiB,EAAIplB,MAAMqlB,gBACZR,GAAY,IAGI,IAAdA,EACF,IAAK,IAAI5mB,EAAI,EAAGA,EAAI+mB,EAAY7mB,OAAQF,IACtC,QAAoD4E,IAAhDuiB,EAAIplB,MAAMglB,EAAY/mB,GAAK,iBAAgC,CAE7D6mB,EAAiB,IADXE,EAAY/mB,GACSqnB,cAAgB,IAC3CP,EAAsBG,EAAYjnB,GAClC4mB,GAAY,EACZ,MAKR,IAAIQ,EAAgB,aAChBE,EAAqB,IAAMT,EAAiB,aAAeO,EAAgB,gDAC3EG,EAAiBV,EAAiB,kBAAoBO,EAAgB,KAuF5E,MAAO,CACLrC,kBA9DsB,SAA2BlX,EAAS8X,GAC1D,GAAIH,EACF3X,EAAQ2X,YAAY,WAAYG,OAC3B,CACL,IAAK9X,EAAQkY,mBAAoB,CAC/B,IAAIyB,EAAM3Z,EAAQa,cAEd+Y,EAAevD,EAAQC,iBAAiBtW,GAExC4Z,GAAyC,UAAzBA,EAAapf,WAC/BwF,EAAQ9L,MAAMsG,SAAW,YAjCd,SAAsBmf,GACvC,IAAKA,EAAIE,eAAe,uBAAwB,CAE9C,IAAIC,GAAOL,GAA0C,IAAM,uBAAyBC,GAAkC,IAA5G,6VACNK,EAAOJ,EAAII,MAAQJ,EAAIK,qBAAqB,QAAQ,GACpD9lB,EAAQylB,EAAI1lB,cAAc,SAC9BC,EAAM8W,GAAK,sBACX9W,EAAM+lB,KAAO,WAEA,MAATjD,GACF9iB,EAAMgmB,aAAa,QAASlD,GAG1B9iB,EAAMimB,WACRjmB,EAAMimB,WAAWC,QAAUN,EAE3B5lB,EAAMmmB,YAAYV,EAAIW,eAAeR,IAGvCC,EAAKM,YAAYnmB,IAiBfqmB,CAAaZ,GACb3Z,EAAQ4Y,eAAiB,GACzB5Y,EAAQ8Y,oBAAsB,IAC7B9Y,EAAQkY,mBAAqByB,EAAI1lB,cAAc,QAAQ0H,UAAY,kBACpEqE,EAAQkY,mBAAmBsC,UAAY,oFACvCxa,EAAQqa,YAAYra,EAAQkY,oBAC5BF,EAAchY,GACdA,EAAQya,iBAAiB,SAAUjC,GAAgB,GAG/CS,IACFjZ,EAAQkY,mBAAmBwC,sBAAwB,SAA2BjC,GACxEA,EAAEc,eAAiBA,GACrBvB,EAAchY,IAIlBA,EAAQkY,mBAAmBuC,iBAAiBxB,EAAqBjZ,EAAQkY,mBAAmBwC,wBAIhG1a,EAAQ8Y,oBAAoB/mB,KAAK+lB,KA6BnCV,qBAzByB,SAA8BpX,EAAS8X,GAChE,GAAIH,EACF3X,EAAQ2a,YAAY,WAAY7C,QAIhC,GAFA9X,EAAQ8Y,oBAAoB8B,OAAO5a,EAAQ8Y,oBAAoBJ,QAAQZ,GAAK,IAEvE9X,EAAQ8Y,oBAAoBzmB,OAAQ,CACvC2N,EAAQ6a,oBAAoB,SAAUrC,GAAgB,GAElDxY,EAAQkY,mBAAmBwC,wBAC7B1a,EAAQkY,mBAAmB2C,oBAAoB5B,EAAqBjZ,EAAQkY,mBAAmBwC,uBAE/F1a,EAAQkY,mBAAmBwC,sBAAwB,MAGrD,IACE1a,EAAQkY,oBAAsBlY,EAAQ8a,YAAY9a,EAAQkY,oBAC1D,MAAOO,QAtMjB,oC,oCCUA9a,EAAOzN,QAVP,SAA2BirB,EAAK+rB,IACnB,MAAPA,GAAeA,EAAM/rB,EAAI9oB,UAAQ60C,EAAM/rB,EAAI9oB,QAE/C,IAAK,IAAIF,EAAI,EAAGg1C,EAAO,IAAI3nC,MAAM0nC,GAAM/0C,EAAI+0C,EAAK/0C,IAC9Cg1C,EAAKh1C,GAAKgpB,EAAIhpB,GAGhB,OAAOg1C,I,oBCPT,IAAI/rB,EAAmB,EAAQ,KAW/Bzd,EAAOzN,QATP,SAAqCuN,EAAG2pC,GACtC,GAAK3pC,EAAL,CACA,GAAiB,kBAANA,EAAgB,OAAO2d,EAAiB3d,EAAG2pC,GACtD,IAAI9b,EAAIt7B,OAAOo5B,UAAUxG,SAAS3vB,KAAKwK,GAAGstB,MAAM,GAAI,GAEpD,MADU,WAANO,GAAkB7tB,EAAEukC,cAAa1W,EAAI7tB,EAAEukC,YAAY5G,MAC7C,QAAN9P,GAAqB,QAANA,EAAoB9rB,MAAMgc,KAAK/d,GACxC,cAAN6tB,GAAqB,2CAA2C+b,KAAK/b,GAAWlQ,EAAiB3d,EAAG2pC,QAAxG,K,iCCNFp3C,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAGT,IAAI0tB,EAAW7tB,OAAO8e,QAAU,SAAU5c,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAIK,KAAOF,EAActC,OAAOo5B,UAAU1a,eAAezb,KAAKX,EAAQE,KAAQN,EAAOM,GAAOF,EAAOE,IAAY,OAAON,GAEnP85B,EAAgb,SAAU7Q,EAAKhpB,GAAK,GAAIqN,MAAM8S,QAAQ6I,GAAQ,OAAOA,EAAY,GAAIG,OAAOC,YAAYvrB,OAAOmrB,GAAQ,OAAxf,SAAuBA,EAAKhpB,GAAK,IAAI0pB,EAAO,GAAQC,GAAK,EAAUC,GAAK,EAAWC,OAAKjlB,EAAW,IAAM,IAAK,IAAiCklB,EAA7B/Y,EAAKiY,EAAIG,OAAOC,cAAmBO,GAAMG,EAAK/Y,EAAGgZ,QAAQC,QAAoBN,EAAK9pB,KAAKkqB,EAAG9rB,QAAYgC,GAAK0pB,EAAKxpB,SAAWF,GAA3D2pB,GAAK,IAAoE,MAAOM,GAAOL,GAAK,EAAMC,EAAKI,EAAtL,QAAuM,KAAWN,GAAM5Y,EAAE,QAAYA,EAAE,SAAjC,QAA2D,GAAI6Y,EAAI,MAAMC,GAAQ,OAAOH,EAA6HyrB,CAAcnsB,EAAKhpB,GAAa,MAAM,IAAIspB,UAAU,yDAEtlBvrB,EAAQg2C,QAAUqB,EAElB,IAEIC,EAAU13C,EAFDC,EAAQ,IAMjB03C,EAAc33C,EAFDC,EAAQ,KAMrB23C,EAAc53C,EAFDC,EAAQ,MAMrB43C,EAAe73C,EAFDC,EAAQ,MAMtB63C,EAAU93C,EAFDC,EAAQ,OAMjB83C,EAAc/3C,EAFDC,EAAQ,MAMrB+3C,EAAgBh4C,EAFDC,EAAQ,OAMvBg4C,EAAoBj4C,EAFDC,EAAQ,OAM3Bi4C,EAAmBl4C,EAFDC,EAAQ,OAI1Bk4C,EAAUl4C,EAAQ,IAIlBm4C,EAAmBp4C,EAFDC,EAAQ,MAI1Bo4C,EAASp4C,EAAQ,MAErB,SAASD,EAAuBs4C,GAAO,OAAOA,GAAOA,EAAIC,WAAaD,EAAM,CAAElC,QAASkC,GAEvF,SAASxrB,EAAyBwrB,EAAK32C,GAAQ,IAAIS,EAAS,GAAI,IAAK,IAAIC,KAAKi2C,EAAW32C,EAAKinB,QAAQvmB,IAAM,GAAkBnC,OAAOo5B,UAAU1a,eAAezb,KAAKm1C,EAAKj2C,KAAcD,EAAOC,GAAKi2C,EAAIj2C,IAAM,OAAOD,EAEnN,SAASqqB,EAAgB6rB,EAAK51C,EAAKrC,GAAiK,OAApJqC,KAAO41C,EAAOp4C,OAAOC,eAAem4C,EAAK51C,EAAK,CAAErC,MAAOA,EAAOC,YAAY,EAAMguC,cAAc,EAAMlX,UAAU,IAAkBkhB,EAAI51C,GAAOrC,EAAgBi4C,EAE3M,IAEIE,GAAY,EAAIL,EAAQM,aAAY,SAAUlR,GAChD,MAAO,CACLiG,MAAO,CACLjyB,UAAW,aAEX,iBAAkB,CAChB26B,gBAAiB3O,EAAMoD,QAAQ+N,KAA4B,SAAvBnR,EAAMoD,QAAQxgB,KAAkB,IAAM,KAC1E+qB,aAAc,aAAe3N,EAAMoD,QAAQ0K,QAC3CsD,YAAa,aAAepR,EAAMoD,QAAQ0K,QAC1C3N,MAAOH,EAAMoD,QAAQC,KAAK6B,UAC1B3B,SAAUvD,EAAMwD,WAAWC,QAAQ,IAGnC,uBAAwB,CACtBqB,QAAS,QAEX,qBAAsB,QAGxB,kBAAmB,CACjB6J,gBAAiB3O,EAAMoD,QAAQ+N,KAA4B,SAAvBnR,EAAMoD,QAAQxgB,KAAkB,IAAM,KAC1E+qB,aAAc,aAAe3N,EAAMoD,QAAQ0K,QAC3C3N,MAAOH,EAAMoD,QAAQC,KAAK6B,UAC1B3B,SAAUvD,EAAMwD,WAAWC,QAAQ,IAGnC,uBAAwB,CACtBqB,QAAS,QAEX,qBAAsB,QAGxB,oBAAqB,CACnB6J,gBAAiB3O,EAAMoD,QAAQ+N,KAA4B,SAAvBnR,EAAMoD,QAAQxgB,KAAkB,IAAM,KAC1EwuB,YAAa,aAAepR,EAAMoD,QAAQ0K,QAC1C3N,MAAOH,EAAMoD,QAAQC,KAAK6B,UAC1B3B,SAAUvD,EAAMwD,WAAWC,QAAQ,IAGnC,uBAAwB,CACtBqB,QAAS,QAEX,qBAAsB,QAGxB,qBAAsB,CACpB3E,MAAOH,EAAMoD,QAAQC,KAAKC,QAC1BC,SAAUvD,EAAMwD,WAAWC,QAAQ,IACnC4N,QAAS,SAGbC,KAAM,CACJt9B,UAAW,aACX8wB,QAAS,OACTG,WAAY,UAEdsM,cAAe,CACb1M,OAAQ,WAEV2M,aAAc,CACZ7C,gBAAiB3O,EAAMoD,QAAQ+N,KAA4B,SAAvBnR,EAAMoD,QAAQxgB,KAAkB,IAAM,MAE5E6uB,YAAa,CACX9C,gBAAiB3O,EAAMoD,QAAQ+N,KAA4B,SAAvBnR,EAAMoD,QAAQxgB,KAAkB,IAAM,MAE5E8uB,aAAc,CACZvM,QAAS,IAEXwM,aAAc,CACZp0C,MAAO,OACPq0C,WAAY,SACZ1uC,SAAU,SACV2uC,aAAc,YAEhBC,WAAY,CACVvO,SAAUvD,EAAMwD,WAAWC,QAAQ,IACnCuK,WAAYhO,EAAMwD,WAAWyK,iBAC7B9N,MAAOH,EAAMoD,QAAQC,KAAK6B,WAE5B6M,iBAAkB,CAChB3yB,aAAc4gB,EAAMuG,QAAQ,IAE9ByL,cAAe,CACbrE,aAAc,QAEhBO,OAAQ,CACN+D,UAAWC,aAAqClS,EAAMoD,QAAQ0K,SAEhEqE,WAAY,CACVnW,KAAM,WACN0S,OAAQ,EACR7J,OAAQ,aACR1E,MAAO,WAETiS,iBAAkB,CAChBjS,MAAO,UACPuO,OAAQ,GAEV2D,eAAgB,CACdrW,KAAM,WACN8I,QAAS,OACTE,cAAe,SACfD,eAAgB,SAChBE,WAAY,cAwOlB,SAASiL,EAASzwC,GAChB,IAAI0sB,EAAO1sB,EAAM0sB,KACbpO,EAAUte,EAAMse,QAChBxgB,EAAQkC,EAAMlC,MACdT,EAAS2C,EAAM3C,OACfw1C,EAAkB7yC,EAAMuV,UACxBA,OAAgCtV,IAApB4yC,EAAgC,KAAOA,EACnDC,EAAa9yC,EAAM8yC,WACnBC,EAAkB/yC,EAAM+yC,gBACxBC,EAAsBhzC,EAAM/C,cAC5BA,OAAwCgD,IAAxB+yC,EAAoC,EAAIA,EACxDC,EAAwBjzC,EAAMtC,iBAC9BA,OAA6CuC,IAA1BgzC,EAAsC,EAAIA,EAC7DC,EAAkBlzC,EAAMf,UACxBA,OAAgCgB,IAApBizC,EAAgC,GAAKA,EACjD91C,EAAQ4C,EAAM5C,MACdc,EAAc8B,EAAM9B,YACpBi1C,EAAuBnzC,EAAMozC,eAC7BA,OAA0CnzC,IAAzBkzC,GAA6CA,EAC9DE,EAAgBrzC,EAAMqzC,cACtBC,EAAiBtzC,EAAMszC,eACvBC,EAAiBvzC,EAAMuzC,eACvBC,EAAUxzC,EAAMohC,QAChBqS,EAAUzzC,EAAMyzC,QAChBC,EAAiB1zC,EAAM0zC,eACvB/X,EAAgB37B,EAAM27B,cACtBgY,EAAc3zC,EAAM2zC,YACpBC,EAAoB5zC,EAAM4zC,kBAC1BC,EAAoB7zC,EAAM6zC,kBAC1BC,EAAY9zC,EAAM8zC,UAClBC,EAAY/zC,EAAM+zC,UAClBzT,EAAQxa,EAAyB9lB,EAAO,CAAC,OAAQ,UAAW,QAAS,SAAU,YAAa,aAAc,kBAAmB,gBAAiB,mBAAoB,YAAa,QAAS,cAAe,iBAAkB,gBAAiB,iBAAkB,iBAAkB,UAAW,UAAW,iBAAkB,gBAAiB,cAAe,oBAAqB,oBAAqB,YAAa,cAE7YohC,EAAUoQ,EAAU,CAAEpQ,QAASoS,IAC/BjT,GAAQ,EAAI4Q,EAAQ3Q,YAEpBwT,EAAYtD,EAAQtB,QAAQ6E,OAAO,MAEnCjzC,EAAoB0vC,EAAQtB,QAAQ8E,aAAY,WAClD,OAAOF,EAAUG,SAAWH,EAAUG,QAAQnzC,sBAC7C,CAACgzC,IAEJtD,EAAQtB,QAAQgF,WAAU,WACxBpzC,MACC,CAACsd,EAASoO,EAAMrvB,EAAQS,EAAOkD,IAElC,IAAIqzC,EAAmB,EACvB,GAAIh3C,EACFg3C,EAAmBh3C,OACd,GAAIy1C,GAAcA,EAAWzS,cAAgB0S,EAAiB,CAEnEsB,GADevB,EAAWzS,aAAepjC,IAAgCm2C,EAAiB,EAAI,KAChEn0C,OACzB,GAAIyJ,MAAM8S,QAAQkR,GAAO,CAE9B2nB,GADgB3nB,EAAKnxB,QAAU0B,IAAgCm2C,EAAiB,EAAI,KACrDn0C,EAGjC,IAAIq1C,EAAmB/T,EAAMgU,OAAO7R,QAAQp3B,UA1YnB,EA4YrBkpC,GAA6BH,GAAoBvB,EAAawB,EAAmB,GACjFG,GAA+B,MAAbl/B,EAAoBlV,KAAKC,IAAIk0C,GAA4Bj/B,GAAai/B,GACxFE,GAAkBD,IAAmB3B,EAAawB,EAAmB,GAEzE,OAAO5D,EAAQtB,QAAQjyC,cACrB2zC,EAAQ1B,QACRroB,EAAS,CACP+H,UAAW,MACX1xB,MAAO2pB,EAAS,CAAEjpB,MAAOA,EAAOT,OAAQo3C,IAAmBr3C,GAC3DyH,UAAWu8B,EAAQoF,OAClBlG,GACHoQ,EAAQtB,QAAQjyC,cAAcyzC,EAAYxB,QAASroB,EAAS,GAlR1C,SAAyBxpB,GAC7C,IAAIyD,EAAoBzD,EAAMyD,kBAC1Bsd,EAAU/gB,EAAM+gB,QAChBxgB,EAAQP,EAAMO,MACds1C,EAAiB71C,EAAM61C,eACvB1mB,EAAOnvB,EAAMmvB,KACbxuB,EAAcX,EAAMW,YACpBm1C,EAAgB91C,EAAM81C,cACtBC,EAAiB/1C,EAAM+1C,eACvBC,EAAiBh2C,EAAMg2C,eACvBnS,EAAU7jC,EAAM6jC,QAChBqS,EAAUl2C,EAAMk2C,QAChBC,EAAiBn2C,EAAMm2C,eACvB/X,EAAgBp+B,EAAMo+B,cACtBgY,EAAcp2C,EAAMo2C,YACpBC,EAAoBr2C,EAAMq2C,kBAC1BC,EAAoBt2C,EAAMs2C,kBAC1BC,EAAYv2C,EAAMu2C,UAClBa,EAAmBp3C,EAAMw2C,UAEzBa,EAAkBlE,EAAQtB,QAAQyF,SAAS,CAC7CC,cAAe,KACfC,eAAgB,OAEdC,EAAmB9f,EAAe0f,EAAiB,GACnDK,EAAoBD,EAAiB,GACrCF,EAAgBG,EAAkBH,cAClCC,EAAiBE,EAAkBF,eACnCG,EAAaF,EAAiB,GAE9BG,EAAmBzE,EAAQtB,QAAQyF,SArDnB,SAAyBj4C,GAC7C,IAAIk3C,EAAYl3C,EAAKk3C,UACjBsB,EAAUx4C,EAAK0hB,QAEf+2B,EAAS,GACb,GAAIvB,EAAW,CACb,IAAIwB,EAAe,EACfh3B,EAAU,GACd82B,EAAQ35C,SAAQ,SAAUijB,GACpBA,EAAE5gB,OACJu3C,EAAO32B,EAAE4lB,MAAQ,GACjBgR,GAA8B,IAE9Bh3B,EAAQrjB,KAAKyjB,MAGjBJ,EAAQ7iB,SAAQ,SAAUijB,GACxB22B,EAAO32B,EAAE4lB,MAAQgR,EAAeh3B,EAAQ/iB,UAG5C,OAAO85C,EAiCyCE,CAAgB,CAAEzB,UAAWA,EAAWx1B,QAASA,KAC7Fk3B,EAAmBtgB,EAAeigB,EAAkB,GACpDE,EAASG,EAAiB,GAC1BC,EAAYD,EAAiB,GAEjC9E,EAAQtB,QAAQgF,WAAU,WACxBpzC,MACC,CAACA,EAAmB8zC,EAAeC,EAAgBM,IAEtD,IAAIK,EAAwBhF,EAAQtB,QAAQ8E,aAAY,SAAUl2C,EAAOsgB,EAASN,GAChF,OAAOq3B,EAAO/2B,EAAQtgB,GAAOsmC,MAAQtmB,IACpC,CAACq3B,IAEAxnB,EAAiB6iB,EAAQtB,QAAQ8E,aAAY,SAAUv2C,GACzD,IAAIK,EAAQL,EAAMK,MAClB,MAA8B,oBAAhBE,EAA6BA,EAAY,CAAEF,MAAOA,EAAOsgB,QAASA,EAASxgB,MAAOA,IAAWg2C,EAAY4B,EAAsB13C,EAAOsgB,EAASxgB,IAAS,EAAIuzC,EAAOhzB,iBAAiBrgB,EAAOsgB,EAASxgB,KACjN,CAACI,EAAa41C,EAAWx1B,EAASxgB,EAAO43C,IAExCC,EAAYjF,EAAQtB,QAAQ8E,aAAY,SAAUn2C,GACpD,IAAIm6B,EAAUn6B,EAAMm6B,QAChB0d,EAAS73C,EAAM63C,OACnB,OAAOH,GAAU,SAAUI,GACzB,IAAIl8C,EAEAm8C,EAAQF,EAAS93C,EACjBE,EAAQsgB,EAAQy3B,WAAU,SAAUr3B,GACtC,OAAOA,EAAE4lB,OAASpM,KAEhB8d,EAAc13B,EAAQtgB,EAAQ,GAAGsmC,KACrC,OAAOvd,EAAS,GAAI8uB,GAAuBpwB,EAAhB9rB,EAAY,GAA+Bu+B,EAAS2d,EAAK3d,GAAW4d,GAAQrwB,EAAgB9rB,EAAWq8C,EAAaH,EAAKG,GAAeF,GAAQn8C,SAE5K,CAAC87C,EAAWn3B,EAASxgB,IAEpBm4C,EAAavF,EAAQtB,QAAQ8E,aAAY,SAAUhc,GACrD,OAAO,SAAU/oB,EAAO3Q,GACtB,IAAIo3C,EAASp3C,EAAMo3C,OACnB,OAAOD,EAAU,CACfzd,QAASA,EACT0d,OAAQA,OAGX,CAACD,IAEAO,EAAcxF,EAAQtB,QAAQ8E,aAAY,SAAUY,EAAeC,GACrE,OAAO,SAAUpzB,GACf,OAAOuzB,EAAW,CAChBJ,cAAeA,EACfC,eAAgBA,OAGnB,CAACG,IAyHJ,MAAO,CAAEl4C,aAvHU,SAAsB+B,GACvC,IAAIo3C,EAEA34C,EAAcuB,EAAMvB,YACpBX,EAAWkC,EAAMlC,SACjBnB,EAAMqD,EAAMrD,IACZ0B,EAAQ2B,EAAM3B,MAEd2gB,EAASO,EAAQ9gB,GACjB44C,EAAWhD,GAA+B,IAAbv2C,EAE7Bg8B,EAAUnM,GAAQA,EAAK7vB,GADRu2C,EAAiB,EAAI,KACe,GAEnDiD,EAAa/C,GAAkBA,EAAev1B,EAAQ8a,GACtDyd,EAAa/C,GAAkBA,EAAex1B,EAAQ8a,GAEtD0d,EAAYzB,GAAiBC,GAAkB1B,GAAiBA,EAAct1B,EAAQ8a,EAASic,EAAeC,GAE9GyB,EAAmB,SAA0BzC,GAC/C,MAA4B,oBAAdA,EAA2BA,EAAUh2B,EAAQ8a,EAASic,EAAeC,GAAkBhB,GAInG0C,EAAwB1vB,EAAS,GAAIyvB,EAAiB7B,GAAmB6B,EAAiBz4B,EAAOg2B,YACjG2C,EAAYD,EAAsBr5C,MAClC22C,EAAYjuB,EAAyB2wB,EAAuB,CAAC,UAE7DE,EAAWjG,EAAQtB,QAAQjyC,cAC7B,MACA,CAAE0H,UAAWu8B,EAAQ8Q,cACrBxB,EAAQtB,QAAQjyC,cACd,OACA,CAAEC,MAAO,CAAEm/B,KAAM,SACjB6Z,EAA4B,MAAjBr4B,EAAO64B,OAAiB74B,EAAO64B,OAAS74B,EAAOumB,KAAOvmB,EAAO8zB,KAAO9zB,EAAO8zB,KAAKhZ,GAAWA,EAAQ9a,EAAOumB,OAEvHoM,EAAQtB,QAAQjyC,cACd,OACA,CAAEC,MAAO,CAAEy5C,MAAO,UAClBT,GAAYtC,GAAat2C,EAAc8gB,EAAQ/iB,OAAS,GAAKm1C,EAAQtB,QAAQjyC,cAC3Ei0C,EAAiBhC,QACjB,CACE0H,KAAM,IACNC,iBAAkB3V,EAAQsR,WAC1BsE,yBAA0B5V,EAAQuR,iBAClCsE,OAAQhB,EAAWl4B,EAAOumB,MAC1B5gC,SAAU,CAAE8mB,EAAG,IAEjBkmB,EAAQtB,QAAQjyC,cACd,OACA,CAAE0H,UAAWu8B,EAAQwR,gBACrB,aAMJsE,GAAgBd,GAAYzC,EAC5BwD,GAAsBf,GAAYxC,EAClCwD,GAAsBhB,GAAYvC,EAClCwD,EAAcH,GAAgBC,GAAsBC,GAAsBr5B,EAAOgb,QAEjFl0B,GAAY,EAAIgsC,EAAazB,SAAShO,EAAQyQ,MAAyBpsB,EAAlB0wB,EAAc,GAAiC/U,EAAQ0Q,cAAeuF,GAAc5xB,EAAgB0wB,EAAa/U,EAAQ4Q,YAAauE,GAAY9wB,EAAgB0wB,EAAa/U,EAAQ2Q,aAAcsE,GAAa5wB,EAAgB0wB,EAAa/U,EAAQ6Q,aAAcqE,GAAa7wB,EAAgB0wB,EAAa/U,EAAQiR,WAAY+D,GAAW3wB,EAAgB0wB,EAAa/U,EAAQkR,iBAAkB90C,IAAgB8gB,EAAQ/iB,OAAS,GAAIkqB,EAAgB0wB,EAAa/U,EAAQmR,eAAgB6D,GAAYv5C,KAAc6vB,EAAOA,EAAKnxB,OAAS,IAAK46C,IAE5kB,OAAOzF,EAAQtB,QAAQjyC,cACrB4zC,EAAY3B,QACZroB,EAAS,CACP+H,UAAW,MACXjqB,UAAWA,EACXnJ,IAAKA,EACL47C,aAAcpB,EAAYn4B,EAAQ8a,GAClC0e,aAAcrB,EAAY,KAAM,MAChC94C,MAAO2pB,EAAS,GAAI3pB,EAAOs5C,IAC1BQ,GAAgB,CACjBne,QAAS,SAAiB5pB,GACxB,OAAOwkC,EAAYxkC,EAAO,CAAE4O,OAAQA,EAAQ8a,QAASA,EAASnM,KAAMA,MAErEyqB,GAAsB,CACvBne,cAAe,SAAuB7pB,GACpC,OAAOykC,EAAkBzkC,EAAO,CAAE4O,OAAQA,EAAQ8a,QAASA,EAASnM,KAAMA,MAE3E0qB,GAAsB,CACvBje,cAAe,SAAuBhqB,GACpC,OAAO0kC,EAAkB1kC,EAAO,CAAE4O,OAAQA,EAAQ8a,QAASA,EAASnM,KAAMA,MAE3EqnB,GACHqC,IAAqC,IAAzBr4B,EAAO4d,gBAA4B5d,EAAO4d,eAAiBA,GAAiB+U,EAAQtB,QAAQjyC,cACtG+zC,EAAiB9B,QACjB,CACE1K,OAAQ+O,IAAYA,IAAY11B,EAAOumB,MAAQmP,IAAY11B,EAAO01B,UAAyB,IAAb52C,EAC9EO,MAAO,CAAEU,MAAO,WACd0W,UAAWk/B,EACb3a,QAAS,SAAiB5pB,GACxB,OAAO4O,EAAO4d,cAAgB5d,EAAO4d,cAAcxsB,EAAO,CAAE4O,OAAQA,IAAY4d,EAAcxsB,EAAO,CAAE4O,OAAQA,MAGnH44B,GACEP,GAAYr4B,EAAO+1B,UAAYpD,EAAQtB,QAAQjyC,cACjDuzC,EAAQtB,QAAQoI,SAChB,KACAb,EACAjG,EAAQtB,QAAQjyC,cACdi0C,EAAiBhC,QACjB,CACE0H,KAAM,IACNC,iBAAkB,aAClBC,yBAA0B,mBAC1BC,OAAQhB,EAAWl4B,EAAOumB,MAC1B5gC,SAAU,CAAE8mB,EAAG,IAEjBkmB,EAAQtB,QAAQjyC,cACd,OACA,CAAE0H,UAAW,kBACb,YAGF8xC,IAI6Bz4C,YAAa2vB,GAyEgB4pB,CAAgB,CAC9Ez2C,kBAAmBA,EACnB0rB,KAAMA,EACNpO,QAASA,EACTxgB,MAAOA,EACPsjC,QAASA,EACTgS,eAAgBA,EAChBl1C,YAAaA,EACbm1C,cAAeA,EACfC,eAAgBA,EAChBC,eAAgBA,EAChBE,QAASA,EACTC,eAAgBA,EAChB/X,cAAeA,EACfgY,YAAaA,EACbC,kBAAmBA,EACnBC,kBAAmBA,EACnBC,UAAWA,EACXC,UAAWA,IACT,CACFt3C,IAAKu3C,EACLl2C,MAAOA,EACPD,YAAa6K,MAAM8S,QAAQ8C,GAAWA,EAAQ/iB,OAAS,EACvDmC,iBAAkBA,EAClB+E,wBAAyB/E,EAAmB,EAC5CL,OAAQq3C,GACRz1C,UAAWA,EACX/B,SAAUwL,MAAM8S,QAAQkR,GAAQA,EAAKnxB,QAAU63C,EAAiB,EAAI,GAAK,EACzEn2C,cAAeA,EACfyF,qBAAsBzF,EAAgB,EAEpCwI,qBAAsB,cACxBS,sBAAuB,eACvBpB,wBAAyB,iBACzBM,yBAA0B,qBAE5B0tC,GAAcpC,EAAQtB,QAAQjyC,cAC5B6zC,EAAc5B,QACd,CAAEtgB,UAAW,MAAOjqB,UAAWu8B,EAAQqN,QACvCiC,EAAQtB,QAAQjyC,cAAc8zC,EAAkB7B,QAASroB,EAAS,CAAE+H,UAAW,OAASgkB,MAK9FrC,EAASjqC,UAAY,CACnBkmB,KAAMikB,EAAYvB,QAAQsI,MAC1Bp5B,QAASqyB,EAAYvB,QAAQsI,MAC7B55C,MAAO6yC,EAAYvB,QAAQuI,OAC3Bt6C,OAAQszC,EAAYvB,QAAQuI,OAC5BpiC,UAAWo7B,EAAYvB,QAAQuI,OAC/B7E,WAAYnC,EAAYvB,QAAQ30C,OAChCs4C,gBAAiBpC,EAAYvB,QAAQwI,KACrC36C,cAAe0zC,EAAYvB,QAAQuI,OACnCj6C,iBAAkBizC,EAAYvB,QAAQuI,OACtC14C,UAAW0xC,EAAYvB,QAAQuI,OAC/Bz5C,YAAayyC,EAAYvB,QAAQyI,UAAU,CAAClH,EAAYvB,QAAQuI,OAAQhH,EAAYvB,QAAQ0I,OAC5F1E,eAAgBzC,EAAYvB,QAAQwI,KACpCnE,QAAS9C,EAAYvB,QAAQ2I,OAC7BrE,eAAgB/C,EAAYvB,QAAQ2I,OACpCpc,cAAegV,EAAYvB,QAAQ0I,KACnCnE,YAAahD,EAAYvB,QAAQ0I,KACjClE,kBAAmBjD,EAAYvB,QAAQ0I,KACvCjE,kBAAmBlD,EAAYvB,QAAQ0I,KACvCE,UAAWrH,EAAYvB,QAAQwI,KAC/BvE,cAAe1C,EAAYvB,QAAQ0I,KACnCxE,eAAgB3C,EAAYvB,QAAQ0I,KACpCvE,eAAgB5C,EAAYvB,QAAQ0I,KACpC1W,QAASuP,EAAYvB,QAAQ30C,OAC7Bs5C,UAAWpD,EAAYvB,QAAQyI,UAAU,CAAClH,EAAYvB,QAAQ30C,OAAQk2C,EAAYvB,QAAQ0I,OAC1F16C,MAAOuzC,EAAYvB,QAAQ30C","file":"static/js/3.8e5275cc.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"MultiGrid\", {\n  enumerable: true,\n  get: function get() {\n    return _MultiGrid[\"default\"];\n  }\n});\nexports[\"default\"] = void 0;\n\nvar _MultiGrid = _interopRequireDefault(require(\"./MultiGrid\"));\n\nvar _default = _MultiGrid[\"default\"];\nexports[\"default\"] = _default;","\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactLifecyclesCompat = require(\"react-lifecycles-compat\");\n\nvar _CellMeasurerCacheDecorator = _interopRequireDefault(require(\"./CellMeasurerCacheDecorator\"));\n\nvar _Grid = _interopRequireDefault(require(\"../Grid\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar SCROLLBAR_SIZE_BUFFER = 20;\n/**\n * Renders 1, 2, or 4 Grids depending on configuration.\n * A main (body) Grid will always be rendered.\n * Optionally, 1-2 Grids for sticky header rows will also be rendered.\n * If no sticky columns, only 1 sticky header Grid will be rendered.\n * If sticky columns, 2 sticky header Grids will be rendered.\n */\n\nvar MultiGrid =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  (0, _inherits2[\"default\"])(MultiGrid, _React$PureComponent);\n\n  function MultiGrid(props, context) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, MultiGrid);\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(MultiGrid).call(this, props, context));\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"state\", {\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollbarSize: 0,\n      showHorizontalScrollbar: false,\n      showVerticalScrollbar: false\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_deferredInvalidateColumnIndex\", null);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_deferredInvalidateRowIndex\", null);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_bottomLeftGridRef\", function (ref) {\n      _this._bottomLeftGrid = ref;\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_bottomRightGridRef\", function (ref) {\n      _this._bottomRightGrid = ref;\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_cellRendererBottomLeftGrid\", function (_ref) {\n      var rowIndex = _ref.rowIndex,\n          rest = (0, _objectWithoutProperties2[\"default\"])(_ref, [\"rowIndex\"]);\n      var _this$props = _this.props,\n          cellRenderer = _this$props.cellRenderer,\n          fixedRowCount = _this$props.fixedRowCount,\n          rowCount = _this$props.rowCount;\n\n      if (rowIndex === rowCount - fixedRowCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            height: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          parent: (0, _assertThisInitialized2[\"default\"])(_this),\n          rowIndex: rowIndex + fixedRowCount\n        }));\n      }\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_cellRendererBottomRightGrid\", function (_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex,\n          rest = (0, _objectWithoutProperties2[\"default\"])(_ref2, [\"columnIndex\", \"rowIndex\"]);\n      var _this$props2 = _this.props,\n          cellRenderer = _this$props2.cellRenderer,\n          fixedColumnCount = _this$props2.fixedColumnCount,\n          fixedRowCount = _this$props2.fixedRowCount;\n      return cellRenderer(_objectSpread({}, rest, {\n        columnIndex: columnIndex + fixedColumnCount,\n        parent: (0, _assertThisInitialized2[\"default\"])(_this),\n        rowIndex: rowIndex + fixedRowCount\n      }));\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_cellRendererTopRightGrid\", function (_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rest = (0, _objectWithoutProperties2[\"default\"])(_ref3, [\"columnIndex\"]);\n      var _this$props3 = _this.props,\n          cellRenderer = _this$props3.cellRenderer,\n          columnCount = _this$props3.columnCount,\n          fixedColumnCount = _this$props3.fixedColumnCount;\n\n      if (columnIndex === columnCount - fixedColumnCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            width: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          columnIndex: columnIndex + fixedColumnCount,\n          parent: (0, _assertThisInitialized2[\"default\"])(_this)\n        }));\n      }\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_columnWidthRightGrid\", function (_ref4) {\n      var index = _ref4.index;\n      var _this$props4 = _this.props,\n          columnCount = _this$props4.columnCount,\n          fixedColumnCount = _this$props4.fixedColumnCount,\n          columnWidth = _this$props4.columnWidth;\n      var _this$state = _this.state,\n          scrollbarSize = _this$state.scrollbarSize,\n          showHorizontalScrollbar = _this$state.showHorizontalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showHorizontalScrollbar && index === columnCount - fixedColumnCount) {\n        return scrollbarSize;\n      }\n\n      return typeof columnWidth === 'function' ? columnWidth({\n        index: index + fixedColumnCount\n      }) : columnWidth;\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onScroll\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft,\n          scrollTop = scrollInfo.scrollTop;\n\n      _this.setState({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      var onScroll = _this.props.onScroll;\n\n      if (onScroll) {\n        onScroll(scrollInfo);\n      }\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onScrollbarPresenceChange\", function (_ref5) {\n      var horizontal = _ref5.horizontal,\n          size = _ref5.size,\n          vertical = _ref5.vertical;\n      var _this$state2 = _this.state,\n          showHorizontalScrollbar = _this$state2.showHorizontalScrollbar,\n          showVerticalScrollbar = _this$state2.showVerticalScrollbar;\n\n      if (horizontal !== showHorizontalScrollbar || vertical !== showVerticalScrollbar) {\n        _this.setState({\n          scrollbarSize: size,\n          showHorizontalScrollbar: horizontal,\n          showVerticalScrollbar: vertical\n        });\n\n        var onScrollbarPresenceChange = _this.props.onScrollbarPresenceChange;\n\n        if (typeof onScrollbarPresenceChange === 'function') {\n          onScrollbarPresenceChange({\n            horizontal: horizontal,\n            size: size,\n            vertical: vertical\n          });\n        }\n      }\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onScrollLeft\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft;\n\n      _this._onScroll({\n        scrollLeft: scrollLeft,\n        scrollTop: _this.state.scrollTop\n      });\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onScrollTop\", function (scrollInfo) {\n      var scrollTop = scrollInfo.scrollTop;\n\n      _this._onScroll({\n        scrollTop: scrollTop,\n        scrollLeft: _this.state.scrollLeft\n      });\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_rowHeightBottomGrid\", function (_ref6) {\n      var index = _ref6.index;\n      var _this$props5 = _this.props,\n          fixedRowCount = _this$props5.fixedRowCount,\n          rowCount = _this$props5.rowCount,\n          rowHeight = _this$props5.rowHeight;\n      var _this$state3 = _this.state,\n          scrollbarSize = _this$state3.scrollbarSize,\n          showVerticalScrollbar = _this$state3.showVerticalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showVerticalScrollbar && index === rowCount - fixedRowCount) {\n        return scrollbarSize;\n      }\n\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: index + fixedRowCount\n      }) : rowHeight;\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_topLeftGridRef\", function (ref) {\n      _this._topLeftGrid = ref;\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_topRightGridRef\", function (ref) {\n      _this._topRightGrid = ref;\n    });\n    var deferredMeasurementCache = props.deferredMeasurementCache,\n        _fixedColumnCount = props.fixedColumnCount,\n        _fixedRowCount = props.fixedRowCount;\n\n    _this._maybeCalculateCachedStyles(true);\n\n    if (deferredMeasurementCache) {\n      _this._deferredMeasurementCacheBottomLeftGrid = _fixedRowCount > 0 ? new _CellMeasurerCacheDecorator[\"default\"]({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: 0,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheBottomRightGrid = _fixedColumnCount > 0 || _fixedRowCount > 0 ? new _CellMeasurerCacheDecorator[\"default\"]({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheTopRightGrid = _fixedColumnCount > 0 ? new _CellMeasurerCacheDecorator[\"default\"]({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: 0\n      }) : deferredMeasurementCache;\n    }\n\n    return _this;\n  }\n\n  (0, _createClass2[\"default\"])(MultiGrid, [{\n    key: \"forceUpdateGrids\",\n    value: function forceUpdateGrids() {\n      this._bottomLeftGrid && this._bottomLeftGrid.forceUpdate();\n      this._bottomRightGrid && this._bottomRightGrid.forceUpdate();\n      this._topLeftGrid && this._topLeftGrid.forceUpdate();\n      this._topRightGrid && this._topRightGrid.forceUpdate();\n    }\n    /** See Grid#invalidateCellSizeAfterRender */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender() {\n      var _ref7 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref7$columnIndex = _ref7.columnIndex,\n          columnIndex = _ref7$columnIndex === void 0 ? 0 : _ref7$columnIndex,\n          _ref7$rowIndex = _ref7.rowIndex,\n          rowIndex = _ref7$rowIndex === void 0 ? 0 : _ref7$rowIndex;\n\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      this._bottomLeftGrid && this._bottomLeftGrid.measureAllCells();\n      this._bottomRightGrid && this._bottomRightGrid.measureAllCells();\n      this._topLeftGrid && this._topLeftGrid.measureAllCells();\n      this._topRightGrid && this._topRightGrid.measureAllCells();\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref8 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref8$columnIndex = _ref8.columnIndex,\n          columnIndex = _ref8$columnIndex === void 0 ? 0 : _ref8$columnIndex,\n          _ref8$rowIndex = _ref8.rowIndex,\n          rowIndex = _ref8$rowIndex === void 0 ? 0 : _ref8$rowIndex;\n\n      var _this$props6 = this.props,\n          fixedColumnCount = _this$props6.fixedColumnCount,\n          fixedRowCount = _this$props6.fixedRowCount;\n      var adjustedColumnIndex = Math.max(0, columnIndex - fixedColumnCount);\n      var adjustedRowIndex = Math.max(0, rowIndex - fixedRowCount);\n      this._bottomLeftGrid && this._bottomLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._bottomRightGrid && this._bottomRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._topLeftGrid && this._topLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: rowIndex\n      });\n      this._topRightGrid && this._topRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: rowIndex\n      });\n      this._leftGridWidth = null;\n      this._topGridHeight = null;\n\n      this._maybeCalculateCachedStyles(true);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props7 = this.props,\n          scrollLeft = _this$props7.scrollLeft,\n          scrollTop = _this$props7.scrollTop;\n\n      if (scrollLeft > 0 || scrollTop > 0) {\n        var newState = {};\n\n        if (scrollLeft > 0) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop > 0) {\n          newState.scrollTop = scrollTop;\n        }\n\n        this.setState(newState);\n      }\n\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props8 = this.props,\n          onScroll = _this$props8.onScroll,\n          onSectionRendered = _this$props8.onSectionRendered,\n          onScrollbarPresenceChange = _this$props8.onScrollbarPresenceChange,\n          scrollLeftProp = _this$props8.scrollLeft,\n          scrollToColumn = _this$props8.scrollToColumn,\n          scrollTopProp = _this$props8.scrollTop,\n          scrollToRow = _this$props8.scrollToRow,\n          rest = (0, _objectWithoutProperties2[\"default\"])(_this$props8, [\"onScroll\", \"onSectionRendered\", \"onScrollbarPresenceChange\", \"scrollLeft\", \"scrollToColumn\", \"scrollTop\", \"scrollToRow\"]);\n\n      this._prepareForRender(); // Don't render any of our Grids if there are no cells.\n      // This mirrors what Grid does,\n      // And prevents us from recording inaccurage measurements when used with CellMeasurer.\n\n\n      if (this.props.width === 0 || this.props.height === 0) {\n        return null;\n      } // scrollTop and scrollLeft props are explicitly filtered out and ignored\n\n\n      var _this$state4 = this.state,\n          scrollLeft = _this$state4.scrollLeft,\n          scrollTop = _this$state4.scrollTop;\n      return React.createElement(\"div\", {\n        style: this._containerOuterStyle\n      }, React.createElement(\"div\", {\n        style: this._containerTopStyle\n      }, this._renderTopLeftGrid(rest), this._renderTopRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollLeft: scrollLeft\n      }))), React.createElement(\"div\", {\n        style: this._containerBottomStyle\n      }, this._renderBottomLeftGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollTop: scrollTop\n      })), this._renderBottomRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        onSectionRendered: onSectionRendered,\n        scrollLeft: scrollLeft,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow,\n        scrollTop: scrollTop\n      }))));\n    }\n  }, {\n    key: \"_getBottomGridHeight\",\n    value: function _getBottomGridHeight(props) {\n      var height = props.height;\n\n      var topGridHeight = this._getTopGridHeight(props);\n\n      return height - topGridHeight;\n    }\n  }, {\n    key: \"_getLeftGridWidth\",\n    value: function _getLeftGridWidth(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          columnWidth = props.columnWidth;\n\n      if (this._leftGridWidth == null) {\n        if (typeof columnWidth === 'function') {\n          var leftGridWidth = 0;\n\n          for (var index = 0; index < fixedColumnCount; index++) {\n            leftGridWidth += columnWidth({\n              index: index\n            });\n          }\n\n          this._leftGridWidth = leftGridWidth;\n        } else {\n          this._leftGridWidth = columnWidth * fixedColumnCount;\n        }\n      }\n\n      return this._leftGridWidth;\n    }\n  }, {\n    key: \"_getRightGridWidth\",\n    value: function _getRightGridWidth(props) {\n      var width = props.width;\n\n      var leftGridWidth = this._getLeftGridWidth(props);\n\n      return width - leftGridWidth;\n    }\n  }, {\n    key: \"_getTopGridHeight\",\n    value: function _getTopGridHeight(props) {\n      var fixedRowCount = props.fixedRowCount,\n          rowHeight = props.rowHeight;\n\n      if (this._topGridHeight == null) {\n        if (typeof rowHeight === 'function') {\n          var topGridHeight = 0;\n\n          for (var index = 0; index < fixedRowCount; index++) {\n            topGridHeight += rowHeight({\n              index: index\n            });\n          }\n\n          this._topGridHeight = topGridHeight;\n        } else {\n          this._topGridHeight = rowHeight * fixedRowCount;\n        }\n      }\n\n      return this._topGridHeight;\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n        this.forceUpdate();\n      }\n    }\n    /**\n     * Avoid recreating inline styles each render; this bypasses Grid's shallowCompare.\n     * This method recalculates styles only when specific props change.\n     */\n\n  }, {\n    key: \"_maybeCalculateCachedStyles\",\n    value: function _maybeCalculateCachedStyles(resetAll) {\n      var _this$props9 = this.props,\n          columnWidth = _this$props9.columnWidth,\n          enableFixedColumnScroll = _this$props9.enableFixedColumnScroll,\n          enableFixedRowScroll = _this$props9.enableFixedRowScroll,\n          height = _this$props9.height,\n          fixedColumnCount = _this$props9.fixedColumnCount,\n          fixedRowCount = _this$props9.fixedRowCount,\n          rowHeight = _this$props9.rowHeight,\n          style = _this$props9.style,\n          styleBottomLeftGrid = _this$props9.styleBottomLeftGrid,\n          styleBottomRightGrid = _this$props9.styleBottomRightGrid,\n          styleTopLeftGrid = _this$props9.styleTopLeftGrid,\n          styleTopRightGrid = _this$props9.styleTopRightGrid,\n          width = _this$props9.width;\n      var sizeChange = resetAll || height !== this._lastRenderedHeight || width !== this._lastRenderedWidth;\n      var leftSizeChange = resetAll || columnWidth !== this._lastRenderedColumnWidth || fixedColumnCount !== this._lastRenderedFixedColumnCount;\n      var topSizeChange = resetAll || fixedRowCount !== this._lastRenderedFixedRowCount || rowHeight !== this._lastRenderedRowHeight;\n\n      if (resetAll || sizeChange || style !== this._lastRenderedStyle) {\n        this._containerOuterStyle = _objectSpread({\n          height: height,\n          overflow: 'visible',\n          // Let :focus outline show through\n          width: width\n        }, style);\n      }\n\n      if (resetAll || sizeChange || topSizeChange) {\n        this._containerTopStyle = {\n          height: this._getTopGridHeight(this.props),\n          position: 'relative',\n          width: width\n        };\n        this._containerBottomStyle = {\n          height: height - this._getTopGridHeight(this.props),\n          overflow: 'visible',\n          // Let :focus outline show through\n          position: 'relative',\n          width: width\n        };\n      }\n\n      if (resetAll || styleBottomLeftGrid !== this._lastRenderedStyleBottomLeftGrid) {\n        this._bottomLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: enableFixedColumnScroll ? 'auto' : 'hidden',\n          position: 'absolute'\n        }, styleBottomLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleBottomRightGrid !== this._lastRenderedStyleBottomRightGrid) {\n        this._bottomRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          position: 'absolute'\n        }, styleBottomRightGrid);\n      }\n\n      if (resetAll || styleTopLeftGrid !== this._lastRenderedStyleTopLeftGrid) {\n        this._topLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleTopRightGrid !== this._lastRenderedStyleTopRightGrid) {\n        this._topRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          overflowX: enableFixedRowScroll ? 'auto' : 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopRightGrid);\n      }\n\n      this._lastRenderedColumnWidth = columnWidth;\n      this._lastRenderedFixedColumnCount = fixedColumnCount;\n      this._lastRenderedFixedRowCount = fixedRowCount;\n      this._lastRenderedHeight = height;\n      this._lastRenderedRowHeight = rowHeight;\n      this._lastRenderedStyle = style;\n      this._lastRenderedStyleBottomLeftGrid = styleBottomLeftGrid;\n      this._lastRenderedStyleBottomRightGrid = styleBottomRightGrid;\n      this._lastRenderedStyleTopLeftGrid = styleTopLeftGrid;\n      this._lastRenderedStyleTopRightGrid = styleTopRightGrid;\n      this._lastRenderedWidth = width;\n    }\n  }, {\n    key: \"_prepareForRender\",\n    value: function _prepareForRender() {\n      if (this._lastRenderedColumnWidth !== this.props.columnWidth || this._lastRenderedFixedColumnCount !== this.props.fixedColumnCount) {\n        this._leftGridWidth = null;\n      }\n\n      if (this._lastRenderedFixedRowCount !== this.props.fixedRowCount || this._lastRenderedRowHeight !== this.props.rowHeight) {\n        this._topGridHeight = null;\n      }\n\n      this._maybeCalculateCachedStyles();\n\n      this._lastRenderedColumnWidth = this.props.columnWidth;\n      this._lastRenderedFixedColumnCount = this.props.fixedColumnCount;\n      this._lastRenderedFixedRowCount = this.props.fixedRowCount;\n      this._lastRenderedRowHeight = this.props.rowHeight;\n    }\n  }, {\n    key: \"_renderBottomLeftGrid\",\n    value: function _renderBottomLeftGrid(props) {\n      var enableFixedColumnScroll = props.enableFixedColumnScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          hideBottomLeftGridScrollbar = props.hideBottomLeftGridScrollbar;\n      var showVerticalScrollbar = this.state.showVerticalScrollbar;\n\n      if (!fixedColumnCount) {\n        return null;\n      }\n\n      var additionalRowCount = showVerticalScrollbar ? 1 : 0,\n          height = this._getBottomGridHeight(props),\n          width = this._getLeftGridWidth(props),\n          scrollbarSize = this.state.showVerticalScrollbar ? this.state.scrollbarSize : 0,\n          gridWidth = hideBottomLeftGridScrollbar ? width + scrollbarSize : width;\n\n      var bottomLeftGrid = React.createElement(_Grid[\"default\"], (0, _extends2[\"default\"])({}, props, {\n        cellRenderer: this._cellRendererBottomLeftGrid,\n        className: this.props.classNameBottomLeftGrid,\n        columnCount: fixedColumnCount,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomLeftGrid,\n        height: height,\n        onScroll: enableFixedColumnScroll ? this._onScrollTop : undefined,\n        ref: this._bottomLeftGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount) + additionalRowCount,\n        rowHeight: this._rowHeightBottomGrid,\n        style: this._bottomLeftGridStyle,\n        tabIndex: null,\n        width: gridWidth\n      }));\n\n      if (hideBottomLeftGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"BottomLeftGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._bottomLeftGridStyle, {\n            height: height,\n            width: width,\n            overflowY: 'hidden'\n          })\n        }, bottomLeftGrid);\n      }\n\n      return bottomLeftGrid;\n    }\n  }, {\n    key: \"_renderBottomRightGrid\",\n    value: function _renderBottomRightGrid(props) {\n      var columnCount = props.columnCount,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          scrollToColumn = props.scrollToColumn,\n          scrollToRow = props.scrollToRow;\n      return React.createElement(_Grid[\"default\"], (0, _extends2[\"default\"])({}, props, {\n        cellRenderer: this._cellRendererBottomRightGrid,\n        className: this.props.classNameBottomRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount),\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomRightGrid,\n        height: this._getBottomGridHeight(props),\n        onScroll: this._onScroll,\n        onScrollbarPresenceChange: this._onScrollbarPresenceChange,\n        ref: this._bottomRightGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount),\n        rowHeight: this._rowHeightBottomGrid,\n        scrollToColumn: scrollToColumn - fixedColumnCount,\n        scrollToRow: scrollToRow - fixedRowCount,\n        style: this._bottomRightGridStyle,\n        width: this._getRightGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopLeftGrid\",\n    value: function _renderTopLeftGrid(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount;\n\n      if (!fixedColumnCount || !fixedRowCount) {\n        return null;\n      }\n\n      return React.createElement(_Grid[\"default\"], (0, _extends2[\"default\"])({}, props, {\n        className: this.props.classNameTopLeftGrid,\n        columnCount: fixedColumnCount,\n        height: this._getTopGridHeight(props),\n        ref: this._topLeftGridRef,\n        rowCount: fixedRowCount,\n        style: this._topLeftGridStyle,\n        tabIndex: null,\n        width: this._getLeftGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopRightGrid\",\n    value: function _renderTopRightGrid(props) {\n      var columnCount = props.columnCount,\n          enableFixedRowScroll = props.enableFixedRowScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          scrollLeft = props.scrollLeft,\n          hideTopRightGridScrollbar = props.hideTopRightGridScrollbar;\n      var _this$state5 = this.state,\n          showHorizontalScrollbar = _this$state5.showHorizontalScrollbar,\n          scrollbarSize = _this$state5.scrollbarSize;\n\n      if (!fixedRowCount) {\n        return null;\n      }\n\n      var additionalColumnCount = showHorizontalScrollbar ? 1 : 0,\n          height = this._getTopGridHeight(props),\n          width = this._getRightGridWidth(props),\n          additionalHeight = showHorizontalScrollbar ? scrollbarSize : 0;\n\n      var gridHeight = height,\n          style = this._topRightGridStyle;\n\n      if (hideTopRightGridScrollbar) {\n        gridHeight = height + additionalHeight;\n        style = _objectSpread({}, this._topRightGridStyle, {\n          left: 0\n        });\n      }\n\n      var topRightGrid = React.createElement(_Grid[\"default\"], (0, _extends2[\"default\"])({}, props, {\n        cellRenderer: this._cellRendererTopRightGrid,\n        className: this.props.classNameTopRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount) + additionalColumnCount,\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheTopRightGrid,\n        height: gridHeight,\n        onScroll: enableFixedRowScroll ? this._onScrollLeft : undefined,\n        ref: this._topRightGridRef,\n        rowCount: fixedRowCount,\n        scrollLeft: scrollLeft,\n        style: style,\n        tabIndex: null,\n        width: width\n      }));\n\n      if (hideTopRightGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"TopRightGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._topRightGridStyle, {\n            height: height,\n            width: width,\n            overflowX: 'hidden'\n          })\n        }, topRightGrid);\n      }\n\n      return topRightGrid;\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null && nextProps.scrollLeft >= 0 ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null && nextProps.scrollTop >= 0 ? nextProps.scrollTop : prevState.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n  return MultiGrid;\n}(React.PureComponent);\n\n(0, _defineProperty2[\"default\"])(MultiGrid, \"defaultProps\", {\n  classNameBottomLeftGrid: '',\n  classNameBottomRightGrid: '',\n  classNameTopLeftGrid: '',\n  classNameTopRightGrid: '',\n  enableFixedColumnScroll: false,\n  enableFixedRowScroll: false,\n  fixedColumnCount: 0,\n  fixedRowCount: 0,\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  styleBottomLeftGrid: {},\n  styleBottomRightGrid: {},\n  styleTopLeftGrid: {},\n  styleTopRightGrid: {},\n  hideTopRightGridScrollbar: false,\n  hideBottomLeftGridScrollbar: false\n});\nMultiGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  classNameBottomLeftGrid: _propTypes[\"default\"].string.isRequired,\n  classNameBottomRightGrid: _propTypes[\"default\"].string.isRequired,\n  classNameTopLeftGrid: _propTypes[\"default\"].string.isRequired,\n  classNameTopRightGrid: _propTypes[\"default\"].string.isRequired,\n  enableFixedColumnScroll: _propTypes[\"default\"].bool.isRequired,\n  enableFixedRowScroll: _propTypes[\"default\"].bool.isRequired,\n  fixedColumnCount: _propTypes[\"default\"].number.isRequired,\n  fixedRowCount: _propTypes[\"default\"].number.isRequired,\n  onScrollbarPresenceChange: _propTypes[\"default\"].func,\n  style: _propTypes[\"default\"].object.isRequired,\n  styleBottomLeftGrid: _propTypes[\"default\"].object.isRequired,\n  styleBottomRightGrid: _propTypes[\"default\"].object.isRequired,\n  styleTopLeftGrid: _propTypes[\"default\"].object.isRequired,\n  styleTopRightGrid: _propTypes[\"default\"].object.isRequired,\n  hideTopRightGridScrollbar: _propTypes[\"default\"].bool,\n  hideBottomLeftGridScrollbar: _propTypes[\"default\"].bool\n} : {};\n(0, _reactLifecyclesCompat.polyfill)(MultiGrid);\nvar _default = MultiGrid;\nexports[\"default\"] = _default;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _CellMeasurer = require(\"../CellMeasurer\");\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCacheDecorator =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCacheDecorator() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    (0, _classCallCheck2[\"default\"])(this, CellMeasurerCacheDecorator);\n    (0, _defineProperty2[\"default\"])(this, \"_cellMeasurerCache\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_columnIndexOffset\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_rowIndexOffset\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      _this._cellMeasurerCache.columnWidth({\n        index: index + _this._columnIndexOffset\n      });\n    });\n    (0, _defineProperty2[\"default\"])(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      _this._cellMeasurerCache.rowHeight({\n        index: index + _this._rowIndexOffset\n      });\n    });\n    var cellMeasurerCache = params.cellMeasurerCache,\n        _params$columnIndexOf = params.columnIndexOffset,\n        columnIndexOffset = _params$columnIndexOf === void 0 ? 0 : _params$columnIndexOf,\n        _params$rowIndexOffse = params.rowIndexOffset,\n        rowIndexOffset = _params$rowIndexOffse === void 0 ? 0 : _params$rowIndexOffse;\n    this._cellMeasurerCache = cellMeasurerCache;\n    this._columnIndexOffset = columnIndexOffset;\n    this._rowIndexOffset = rowIndexOffset;\n  }\n\n  (0, _createClass2[\"default\"])(CellMeasurerCacheDecorator, [{\n    key: \"clear\",\n    value: function clear(rowIndex, columnIndex) {\n      this._cellMeasurerCache.clear(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellMeasurerCache.clearAll();\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._cellMeasurerCache.hasFixedHeight();\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._cellMeasurerCache.hasFixedWidth();\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getHeight(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getWidth(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.has(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      this._cellMeasurerCache.set(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset, width, height);\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultWidth;\n    }\n  }]);\n  return CellMeasurerCacheDecorator;\n}();\n\nexports[\"default\"] = CellMeasurerCacheDecorator;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"CellMeasurer\", {\n  enumerable: true,\n  get: function get() {\n    return _CellMeasurer[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"CellMeasurerCache\", {\n  enumerable: true,\n  get: function get() {\n    return _CellMeasurerCache[\"default\"];\n  }\n});\nexports[\"default\"] = void 0;\n\nvar _CellMeasurer = _interopRequireDefault(require(\"./CellMeasurer\"));\n\nvar _CellMeasurerCache = _interopRequireDefault(require(\"./CellMeasurerCache\"));\n\nvar _default = _CellMeasurer[\"default\"];\nexports[\"default\"] = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf3 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactDom = require(\"react-dom\");\n\nvar _types = require(\"./types\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _class, _temp;\n\n/**\n * Wraps a cell and measures its rendered content.\n * Measurements are stored in a per-cell cache.\n * Cached-content is not be re-measured.\n */\nvar CellMeasurer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  (0, _inherits2[\"default\"])(CellMeasurer, _React$PureComponent);\n\n  function CellMeasurer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, CellMeasurer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3[\"default\"])(CellMeasurer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_child\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_measure\", function () {\n      var _this$props = _this.props,\n          cache = _this$props.cache,\n          _this$props$columnInd = _this$props.columnIndex,\n          columnIndex = _this$props$columnInd === void 0 ? 0 : _this$props$columnInd,\n          parent = _this$props.parent,\n          _this$props$rowIndex = _this$props.rowIndex,\n          rowIndex = _this$props$rowIndex === void 0 ? _this.props.index || 0 : _this$props$rowIndex;\n\n      var _this$_getCellMeasure = _this._getCellMeasurements(),\n          height = _this$_getCellMeasure.height,\n          width = _this$_getCellMeasure.width;\n\n      if (height !== cache.getHeight(rowIndex, columnIndex) || width !== cache.getWidth(rowIndex, columnIndex)) {\n        cache.set(rowIndex, columnIndex, width, height);\n\n        if (parent && typeof parent.recomputeGridSize === 'function') {\n          parent.recomputeGridSize({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('CellMeasurer registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      if (element) {\n        _this._maybeMeasureCell();\n      }\n    });\n    return _this;\n  }\n\n  (0, _createClass2[\"default\"])(CellMeasurer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return typeof children === 'function' ? children({\n        measure: this._measure,\n        registerChild: this._registerChild\n      }) : children;\n    }\n  }, {\n    key: \"_getCellMeasurements\",\n    value: function _getCellMeasurements() {\n      var cache = this.props.cache;\n      var node = this._child || (0, _reactDom.findDOMNode)(this); // TODO Check for a bad combination of fixedWidth and missing numeric width or vice versa with height\n\n      if (node && node.ownerDocument && node.ownerDocument.defaultView && node instanceof node.ownerDocument.defaultView.HTMLElement) {\n        var styleWidth = node.style.width;\n        var styleHeight = node.style.height; // If we are re-measuring a cell that has already been measured,\n        // It will have a hard-coded width/height from the previous measurement.\n        // The fact that we are measuring indicates this measurement is probably stale,\n        // So explicitly clear it out (eg set to \"auto\") so we can recalculate.\n        // See issue #593 for more info.\n        // Even if we are measuring initially- if we're inside of a MultiGrid component,\n        // Explicitly clear width/height before measuring to avoid being tainted by another Grid.\n        // eg top/left Grid renders before bottom/right Grid\n        // Since the CellMeasurerCache is shared between them this taints derived cell size values.\n\n        if (!cache.hasFixedWidth()) {\n          node.style.width = 'auto';\n        }\n\n        if (!cache.hasFixedHeight()) {\n          node.style.height = 'auto';\n        }\n\n        var height = Math.ceil(node.offsetHeight);\n        var width = Math.ceil(node.offsetWidth); // Reset after measuring to avoid breaking styles; see #660\n\n        if (styleWidth) {\n          node.style.width = styleWidth;\n        }\n\n        if (styleHeight) {\n          node.style.height = styleHeight;\n        }\n\n        return {\n          height: height,\n          width: width\n        };\n      } else {\n        return {\n          height: 0,\n          width: 0\n        };\n      }\n    }\n  }, {\n    key: \"_maybeMeasureCell\",\n    value: function _maybeMeasureCell() {\n      var _this$props2 = this.props,\n          cache = _this$props2.cache,\n          _this$props2$columnIn = _this$props2.columnIndex,\n          columnIndex = _this$props2$columnIn === void 0 ? 0 : _this$props2$columnIn,\n          parent = _this$props2.parent,\n          _this$props2$rowIndex = _this$props2.rowIndex,\n          rowIndex = _this$props2$rowIndex === void 0 ? this.props.index || 0 : _this$props2$rowIndex;\n\n      if (!cache.has(rowIndex, columnIndex)) {\n        var _this$_getCellMeasure2 = this._getCellMeasurements(),\n            height = _this$_getCellMeasure2.height,\n            width = _this$_getCellMeasure2.width;\n\n        cache.set(rowIndex, columnIndex, width, height); // If size has changed, let Grid know to re-render.\n\n        if (parent && typeof parent.invalidateCellSizeAfterRender === 'function') {\n          parent.invalidateCellSizeAfterRender({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    }\n  }]);\n  return CellMeasurer;\n}(React.PureComponent), (0, _defineProperty2[\"default\"])(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"cache\": function cache() {\n    return (typeof _types.bpfrpt_proptype_CellMeasureCache === \"function\" ? _types.bpfrpt_proptype_CellMeasureCache.isRequired ? _types.bpfrpt_proptype_CellMeasureCache.isRequired : _types.bpfrpt_proptype_CellMeasureCache : _propTypes[\"default\"].shape(_types.bpfrpt_proptype_CellMeasureCache).isRequired).apply(this, arguments);\n  },\n  \"children\": _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].func, _propTypes[\"default\"].node]).isRequired,\n  \"columnIndex\": _propTypes[\"default\"].number,\n  \"index\": _propTypes[\"default\"].number,\n  \"parent\": _propTypes[\"default\"].shape({\n    invalidateCellSizeAfterRender: _propTypes[\"default\"].func,\n    recomputeGridSize: _propTypes[\"default\"].func\n  }).isRequired,\n  \"rowIndex\": _propTypes[\"default\"].number\n}), _temp); // Used for DEV mode warning check\n\nexports[\"default\"] = CellMeasurer;\n(0, _defineProperty2[\"default\"])(CellMeasurer, \"__internalCellMeasurerFlag\", false);\n\nif (process.env.NODE_ENV !== 'production') {\n  CellMeasurer.__internalCellMeasurerFlag = true;\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.DEFAULT_WIDTH = exports.DEFAULT_HEIGHT = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _types = require(\"./types\");\n\nvar DEFAULT_HEIGHT = 30;\nexports.DEFAULT_HEIGHT = DEFAULT_HEIGHT;\nvar DEFAULT_WIDTH = 100; // Enables more intelligent mapping of a given column and row index to an item ID.\n// This prevents a cell cache from being invalidated when its parent collection is modified.\n\nexports.DEFAULT_WIDTH = DEFAULT_WIDTH;\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCache =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCache() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    (0, _classCallCheck2[\"default\"])(this, CellMeasurerCache);\n    (0, _defineProperty2[\"default\"])(this, \"_cellHeightCache\", {});\n    (0, _defineProperty2[\"default\"])(this, \"_cellWidthCache\", {});\n    (0, _defineProperty2[\"default\"])(this, \"_columnWidthCache\", {});\n    (0, _defineProperty2[\"default\"])(this, \"_rowHeightCache\", {});\n    (0, _defineProperty2[\"default\"])(this, \"_defaultHeight\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_defaultWidth\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_minHeight\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_minWidth\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_keyMapper\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_hasFixedHeight\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_hasFixedWidth\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_columnCount\", 0);\n    (0, _defineProperty2[\"default\"])(this, \"_rowCount\", 0);\n    (0, _defineProperty2[\"default\"])(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      var key = _this._keyMapper(0, index);\n\n      return _this._columnWidthCache[key] !== undefined ? _this._columnWidthCache[key] : _this._defaultWidth;\n    });\n    (0, _defineProperty2[\"default\"])(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      var key = _this._keyMapper(index, 0);\n\n      return _this._rowHeightCache[key] !== undefined ? _this._rowHeightCache[key] : _this._defaultHeight;\n    });\n    var defaultHeight = params.defaultHeight,\n        defaultWidth = params.defaultWidth,\n        fixedHeight = params.fixedHeight,\n        fixedWidth = params.fixedWidth,\n        keyMapper = params.keyMapper,\n        minHeight = params.minHeight,\n        minWidth = params.minWidth;\n    this._hasFixedHeight = fixedHeight === true;\n    this._hasFixedWidth = fixedWidth === true;\n    this._minHeight = minHeight || 0;\n    this._minWidth = minWidth || 0;\n    this._keyMapper = keyMapper || defaultKeyMapper;\n    this._defaultHeight = Math.max(this._minHeight, typeof defaultHeight === 'number' ? defaultHeight : DEFAULT_HEIGHT);\n    this._defaultWidth = Math.max(this._minWidth, typeof defaultWidth === 'number' ? defaultWidth : DEFAULT_WIDTH);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (this._hasFixedHeight === false && this._hasFixedWidth === false) {\n        console.warn(\"CellMeasurerCache should only measure a cell's width or height. \" + 'You have configured CellMeasurerCache to measure both. ' + 'This will result in poor performance.');\n      }\n\n      if (this._hasFixedHeight === false && this._defaultHeight === 0) {\n        console.warn('Fixed height CellMeasurerCache should specify a :defaultHeight greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n\n      if (this._hasFixedWidth === false && this._defaultWidth === 0) {\n        console.warn('Fixed width CellMeasurerCache should specify a :defaultWidth greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n    }\n  }\n\n  (0, _createClass2[\"default\"])(CellMeasurerCache, [{\n    key: \"clear\",\n    value: function clear(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      delete this._cellHeightCache[key];\n      delete this._cellWidthCache[key];\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellHeightCache = {};\n      this._cellWidthCache = {};\n      this._columnWidthCache = {};\n      this._rowHeightCache = {};\n      this._rowCount = 0;\n      this._columnCount = 0;\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._hasFixedHeight;\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._hasFixedWidth;\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedHeight) {\n        return this._defaultHeight;\n      } else {\n        var _key = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellHeightCache[_key] !== undefined ? Math.max(this._minHeight, this._cellHeightCache[_key]) : this._defaultHeight;\n      }\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedWidth) {\n        return this._defaultWidth;\n      } else {\n        var _key2 = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellWidthCache[_key2] !== undefined ? Math.max(this._minWidth, this._cellWidthCache[_key2]) : this._defaultWidth;\n      }\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      return this._cellHeightCache[key] !== undefined;\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      if (columnIndex >= this._columnCount) {\n        this._columnCount = columnIndex + 1;\n      }\n\n      if (rowIndex >= this._rowCount) {\n        this._rowCount = rowIndex + 1;\n      } // Size is cached per cell so we don't have to re-measure if cells are re-ordered.\n\n\n      this._cellHeightCache[key] = height;\n      this._cellWidthCache[key] = width;\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"_updateCachedColumnAndRowSizes\",\n    value: function _updateCachedColumnAndRowSizes(rowIndex, columnIndex) {\n      // :columnWidth and :rowHeight are derived based on all cells in a column/row.\n      // Pre-cache these derived values for faster lookup later.\n      // Reads are expected to occur more frequently than writes in this case.\n      // Only update non-fixed dimensions though to avoid doing unnecessary work.\n      if (!this._hasFixedWidth) {\n        var columnWidth = 0;\n\n        for (var i = 0; i < this._rowCount; i++) {\n          columnWidth = Math.max(columnWidth, this.getWidth(i, columnIndex));\n        }\n\n        var columnKey = this._keyMapper(0, columnIndex);\n\n        this._columnWidthCache[columnKey] = columnWidth;\n      }\n\n      if (!this._hasFixedHeight) {\n        var rowHeight = 0;\n\n        for (var _i = 0; _i < this._columnCount; _i++) {\n          rowHeight = Math.max(rowHeight, this.getHeight(rowIndex, _i));\n        }\n\n        var rowKey = this._keyMapper(rowIndex, 0);\n\n        this._rowHeightCache[rowKey] = rowHeight;\n      }\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._defaultWidth;\n    }\n  }]);\n  return CellMeasurerCache;\n}();\n\nexports[\"default\"] = CellMeasurerCache;\n\nfunction defaultKeyMapper(rowIndex, columnIndex) {\n  return \"\".concat(rowIndex, \"-\").concat(columnIndex);\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function get() {\n    return _Grid[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"Grid\", {\n  enumerable: true,\n  get: function get() {\n    return _Grid[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"accessibilityOverscanIndicesGetter\", {\n  enumerable: true,\n  get: function get() {\n    return _accessibilityOverscanIndicesGetter[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"defaultCellRangeRenderer\", {\n  enumerable: true,\n  get: function get() {\n    return _defaultCellRangeRenderer[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"defaultOverscanIndicesGetter\", {\n  enumerable: true,\n  get: function get() {\n    return _defaultOverscanIndicesGetter[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"bpfrpt_proptype_NoContentRenderer\", {\n  enumerable: true,\n  get: function get() {\n    return _types.bpfrpt_proptype_NoContentRenderer;\n  }\n});\nObject.defineProperty(exports, \"bpfrpt_proptype_Alignment\", {\n  enumerable: true,\n  get: function get() {\n    return _types.bpfrpt_proptype_Alignment;\n  }\n});\nObject.defineProperty(exports, \"bpfrpt_proptype_CellPosition\", {\n  enumerable: true,\n  get: function get() {\n    return _types.bpfrpt_proptype_CellPosition;\n  }\n});\nObject.defineProperty(exports, \"bpfrpt_proptype_CellSize\", {\n  enumerable: true,\n  get: function get() {\n    return _types.bpfrpt_proptype_CellSize;\n  }\n});\nObject.defineProperty(exports, \"bpfrpt_proptype_OverscanIndicesGetter\", {\n  enumerable: true,\n  get: function get() {\n    return _types.bpfrpt_proptype_OverscanIndicesGetter;\n  }\n});\nObject.defineProperty(exports, \"bpfrpt_proptype_RenderedSection\", {\n  enumerable: true,\n  get: function get() {\n    return _types.bpfrpt_proptype_RenderedSection;\n  }\n});\nObject.defineProperty(exports, \"bpfrpt_proptype_CellRendererParams\", {\n  enumerable: true,\n  get: function get() {\n    return _types.bpfrpt_proptype_CellRendererParams;\n  }\n});\nObject.defineProperty(exports, \"bpfrpt_proptype_Scroll\", {\n  enumerable: true,\n  get: function get() {\n    return _types.bpfrpt_proptype_Scroll;\n  }\n});\n\nvar _Grid = _interopRequireDefault(require(\"./Grid\"));\n\nvar _accessibilityOverscanIndicesGetter = _interopRequireDefault(require(\"./accessibilityOverscanIndicesGetter\"));\n\nvar _defaultCellRangeRenderer = _interopRequireDefault(require(\"./defaultCellRangeRenderer\"));\n\nvar _defaultOverscanIndicesGetter = _interopRequireDefault(require(\"./defaultOverscanIndicesGetter\"));\n\nvar _types = require(\"./types\");","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.DEFAULT_SCROLLING_RESET_TIME_INTERVAL = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\n\nvar _calculateSizeAndPositionDataAndUpdateScrollOffset = _interopRequireDefault(require(\"./utils/calculateSizeAndPositionDataAndUpdateScrollOffset\"));\n\nvar _ScalingCellSizeAndPositionManager = _interopRequireDefault(require(\"./utils/ScalingCellSizeAndPositionManager\"));\n\nvar _createCallbackMemoizer = _interopRequireDefault(require(\"../utils/createCallbackMemoizer\"));\n\nvar _defaultOverscanIndicesGetter = _interopRequireWildcard(require(\"./defaultOverscanIndicesGetter\"));\n\nvar _updateScrollIndexHelper = _interopRequireDefault(require(\"./utils/updateScrollIndexHelper\"));\n\nvar _defaultCellRangeRenderer = _interopRequireDefault(require(\"./defaultCellRangeRenderer\"));\n\nvar _scrollbarSize = _interopRequireDefault(require(\"dom-helpers/scrollbarSize\"));\n\nvar _reactLifecyclesCompat = require(\"react-lifecycles-compat\");\n\nvar _requestAnimationTimeout = require(\"../utils/requestAnimationTimeout\");\n\nvar _types = require(\"./types\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\nvar DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nexports.DEFAULT_SCROLLING_RESET_TIME_INTERVAL = DEFAULT_SCROLLING_RESET_TIME_INTERVAL;\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n\nvar renderNull = function renderNull() {\n  return null;\n};\n\n/**\n * Renders tabular data with virtualization along the vertical and horizontal axes.\n * Row heights and column widths must be known ahead of time and specified as properties.\n */\nvar Grid = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  (0, _inherits2[\"default\"])(Grid, _React$PureComponent);\n\n  // Invokes onSectionRendered callback only when start/stop row or column indices change\n  function Grid(props) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, Grid);\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(Grid).call(this, props));\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onGridRenderedMemoizer\", (0, _createCallbackMemoizer[\"default\"])());\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onScrollMemoizer\", (0, _createCallbackMemoizer[\"default\"])(false));\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_deferredInvalidateColumnIndex\", null);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_deferredInvalidateRowIndex\", null);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_recomputeScrollLeftFlag\", false);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_recomputeScrollTopFlag\", false);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_horizontalScrollBarSize\", 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_verticalScrollBarSize\", 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_scrollbarPresenceChanged\", false);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_scrollingContainer\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_childrenToDisplay\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_columnStartIndex\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_columnStopIndex\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_rowStartIndex\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_rowStopIndex\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_renderedColumnStartIndex\", 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_renderedColumnStopIndex\", 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_renderedRowStartIndex\", 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_renderedRowStopIndex\", 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_initialScrollTop\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_initialScrollLeft\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_disablePointerEventsTimeoutId\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_styleCache\", {});\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_cellCache\", {});\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_debounceScrollEndedCallback\", function () {\n      _this._disablePointerEventsTimeoutId = null; // isScrolling is used to determine if we reset styleCache\n\n      _this.setState({\n        isScrolling: false,\n        needToResetStyleCache: false\n      });\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_invokeOnGridRenderedHelper\", function () {\n      var onSectionRendered = _this.props.onSectionRendered;\n\n      _this._onGridRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          columnOverscanStartIndex: _this._columnStartIndex,\n          columnOverscanStopIndex: _this._columnStopIndex,\n          columnStartIndex: _this._renderedColumnStartIndex,\n          columnStopIndex: _this._renderedColumnStopIndex,\n          rowOverscanStartIndex: _this._rowStartIndex,\n          rowOverscanStopIndex: _this._rowStopIndex,\n          rowStartIndex: _this._renderedRowStartIndex,\n          rowStopIndex: _this._renderedRowStopIndex\n        }\n      });\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target === _this._scrollingContainer) {\n        _this.handleScrollEvent(event.target);\n      }\n    });\n    var columnSizeAndPositionManager = new _ScalingCellSizeAndPositionManager[\"default\"]({\n      cellCount: props.columnCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.columnWidth)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedColumnSize(props)\n    });\n    var rowSizeAndPositionManager = new _ScalingCellSizeAndPositionManager[\"default\"]({\n      cellCount: props.rowCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.rowHeight)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedRowSize(props)\n    });\n    _this.state = {\n      instanceProps: {\n        columnSizeAndPositionManager: columnSizeAndPositionManager,\n        rowSizeAndPositionManager: rowSizeAndPositionManager,\n        prevColumnWidth: props.columnWidth,\n        prevRowHeight: props.rowHeight,\n        prevColumnCount: props.columnCount,\n        prevRowCount: props.rowCount,\n        prevIsScrolling: props.isScrolling === true,\n        prevScrollToColumn: props.scrollToColumn,\n        prevScrollToRow: props.scrollToRow,\n        scrollbarSize: 0,\n        scrollbarSizeMeasured: false\n      },\n      isScrolling: false,\n      scrollDirectionHorizontal: _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD,\n      scrollDirectionVertical: _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollPositionChangeReason: null,\n      needToResetStyleCache: false\n    };\n\n    if (props.scrollToRow > 0) {\n      _this._initialScrollTop = _this._getCalculatedScrollTop(props, _this.state);\n    }\n\n    if (props.scrollToColumn > 0) {\n      _this._initialScrollLeft = _this._getCalculatedScrollLeft(props, _this.state);\n    }\n\n    return _this;\n  }\n  /**\n   * Gets offsets for a given cell and alignment.\n   */\n\n\n  (0, _createClass2[\"default\"])(Grid, [{\n    key: \"getOffsetForCell\",\n    value: function getOffsetForCell() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$alignment = _ref.alignment,\n          alignment = _ref$alignment === void 0 ? this.props.scrollToAlignment : _ref$alignment,\n          _ref$columnIndex = _ref.columnIndex,\n          columnIndex = _ref$columnIndex === void 0 ? this.props.scrollToColumn : _ref$columnIndex,\n          _ref$rowIndex = _ref.rowIndex,\n          rowIndex = _ref$rowIndex === void 0 ? this.props.scrollToRow : _ref$rowIndex;\n\n      var offsetProps = _objectSpread({}, this.props, {\n        scrollToAlignment: alignment,\n        scrollToColumn: columnIndex,\n        scrollToRow: rowIndex\n      });\n\n      return {\n        scrollLeft: this._getCalculatedScrollLeft(offsetProps),\n        scrollTop: this._getCalculatedScrollTop(offsetProps)\n      };\n    }\n    /**\n     * Gets estimated total rows' height.\n     */\n\n  }, {\n    key: \"getTotalRowsHeight\",\n    value: function getTotalRowsHeight() {\n      return this.state.instanceProps.rowSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * Gets estimated total columns' width.\n     */\n\n  }, {\n    key: \"getTotalColumnsWidth\",\n    value: function getTotalColumnsWidth() {\n      return this.state.instanceProps.columnSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * This method handles a scroll event originating from an external scroll control.\n     * It's an advanced method and should probably not be used unless you're implementing a custom scroll-bar solution.\n     */\n\n  }, {\n    key: \"handleScrollEvent\",\n    value: function handleScrollEvent(_ref2) {\n      var _ref2$scrollLeft = _ref2.scrollLeft,\n          scrollLeftParam = _ref2$scrollLeft === void 0 ? 0 : _ref2$scrollLeft,\n          _ref2$scrollTop = _ref2.scrollTop,\n          scrollTopParam = _ref2$scrollTop === void 0 ? 0 : _ref2$scrollTop;\n\n      // On iOS, we can arrive at negative offsets by swiping past the start.\n      // To prevent flicker here, we make playing in the negative offset zone cause nothing to happen.\n      if (scrollTopParam < 0) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      this._debounceScrollEnded();\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          autoWidth = _this$props.autoWidth,\n          height = _this$props.height,\n          width = _this$props.width;\n      var instanceProps = this.state.instanceProps; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollbarSize = instanceProps.scrollbarSize;\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var scrollLeft = Math.min(Math.max(0, totalColumnsWidth - width + scrollbarSize), scrollLeftParam);\n      var scrollTop = Math.min(Math.max(0, totalRowsHeight - height + scrollbarSize), scrollTopParam); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (this.state.scrollLeft !== scrollLeft || this.state.scrollTop !== scrollTop) {\n        // Track scrolling direction so we can more efficiently overscan rows to reduce empty space around the edges while scrolling.\n        // Don't change direction for an axis unless scroll offset has changed.\n        var scrollDirectionHorizontal = scrollLeft !== this.state.scrollLeft ? scrollLeft > this.state.scrollLeft ? _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD : _defaultOverscanIndicesGetter.SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionHorizontal;\n        var scrollDirectionVertical = scrollTop !== this.state.scrollTop ? scrollTop > this.state.scrollTop ? _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD : _defaultOverscanIndicesGetter.SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionVertical;\n        var newState = {\n          isScrolling: true,\n          scrollDirectionHorizontal: scrollDirectionHorizontal,\n          scrollDirectionVertical: scrollDirectionVertical,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.OBSERVED\n        };\n\n        if (!autoHeight) {\n          newState.scrollTop = scrollTop;\n        }\n\n        if (!autoWidth) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        newState.needToResetStyleCache = false;\n        this.setState(newState);\n      }\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalColumnsWidth: totalColumnsWidth,\n        totalRowsHeight: totalRowsHeight\n      });\n    }\n    /**\n     * Invalidate Grid size and recompute visible cells.\n     * This is a deferred wrapper for recomputeGridSize().\n     * It sets a flag to be evaluated on cDM/cDU to avoid unnecessary renders.\n     * This method is intended for advanced use-cases like CellMeasurer.\n     */\n    // @TODO (bvaughn) Add automated test coverage for this.\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rowIndex = _ref3.rowIndex;\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /**\n     * Pre-measure all columns and rows in a Grid.\n     * Typically cells are only measured as needed and estimated sizes are used for cells that have not yet been measured.\n     * This method ensures that the next call to getTotalSize() returns an exact size (as opposed to just an estimated one).\n     */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      var _this$props2 = this.props,\n          columnCount = _this$props2.columnCount,\n          rowCount = _this$props2.rowCount;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.getSizeAndPositionOfCell(columnCount - 1);\n      instanceProps.rowSizeAndPositionManager.getSizeAndPositionOfCell(rowCount - 1);\n    }\n    /**\n     * Forced recompute of row heights and column widths.\n     * This function should be called if dynamic column or row sizes have changed but nothing else has.\n     * Since Grid only receives :columnCount and :rowCount it has no way of detecting when the underlying data changes.\n     */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref4$columnIndex = _ref4.columnIndex,\n          columnIndex = _ref4$columnIndex === void 0 ? 0 : _ref4$columnIndex,\n          _ref4$rowIndex = _ref4.rowIndex,\n          rowIndex = _ref4$rowIndex === void 0 ? 0 : _ref4$rowIndex;\n\n      var _this$props3 = this.props,\n          scrollToColumn = _this$props3.scrollToColumn,\n          scrollToRow = _this$props3.scrollToRow;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.resetCell(columnIndex);\n      instanceProps.rowSizeAndPositionManager.resetCell(rowIndex); // Cell sizes may be determined by a function property.\n      // In this case the cDU handler can't know if they changed.\n      // Store this flag to let the next cDU pass know it needs to recompute the scroll offset.\n\n      this._recomputeScrollLeftFlag = scrollToColumn >= 0 && (this.state.scrollDirectionHorizontal === _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD ? columnIndex <= scrollToColumn : columnIndex >= scrollToColumn);\n      this._recomputeScrollTopFlag = scrollToRow >= 0 && (this.state.scrollDirectionVertical === _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD ? rowIndex <= scrollToRow : rowIndex >= scrollToRow); // Clear cell cache in case we are scrolling;\n      // Invalid row heights likely mean invalid cached content as well.\n\n      this._styleCache = {};\n      this._cellCache = {};\n      this.forceUpdate();\n    }\n    /**\n     * Ensure column and row are visible.\n     */\n\n  }, {\n    key: \"scrollToCell\",\n    value: function scrollToCell(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n      var columnCount = this.props.columnCount;\n      var props = this.props; // Don't adjust scroll offset for single-column grids (eg List, Table).\n      // This can cause a funky scroll offset because of the vertical scrollbar width.\n\n      if (columnCount > 1 && columnIndex !== undefined) {\n        this._updateScrollLeftForScrollToColumn(_objectSpread({}, props, {\n          scrollToColumn: columnIndex\n        }));\n      }\n\n      if (rowIndex !== undefined) {\n        this._updateScrollTopForScrollToRow(_objectSpread({}, props, {\n          scrollToRow: rowIndex\n        }));\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          getScrollbarSize = _this$props4.getScrollbarSize,\n          height = _this$props4.height,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToColumn = _this$props4.scrollToColumn,\n          scrollTop = _this$props4.scrollTop,\n          scrollToRow = _this$props4.scrollToRow,\n          width = _this$props4.width;\n      var instanceProps = this.state.instanceProps; // Reset initial offsets to be ignored in browser\n\n      this._initialScrollTop = 0;\n      this._initialScrollLeft = 0; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n\n      if (!instanceProps.scrollbarSizeMeasured) {\n        this.setState(function (prevState) {\n          var stateUpdate = _objectSpread({}, prevState, {\n            needToResetStyleCache: false\n          });\n\n          stateUpdate.instanceProps.scrollbarSize = getScrollbarSize();\n          stateUpdate.instanceProps.scrollbarSizeMeasured = true;\n          return stateUpdate;\n        });\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 || typeof scrollTop === 'number' && scrollTop >= 0) {\n        var stateUpdate = Grid._getScrollToPositionStateUpdate({\n          prevState: this.state,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        if (stateUpdate) {\n          stateUpdate.needToResetStyleCache = false;\n          this.setState(stateUpdate);\n        }\n      } // refs don't work in `react-test-renderer`\n\n\n      if (this._scrollingContainer) {\n        // setting the ref's scrollLeft and scrollTop.\n        // Somehow in MultiGrid the main grid doesn't trigger a update on mount.\n        if (this._scrollingContainer.scrollLeft !== this.state.scrollLeft) {\n          this._scrollingContainer.scrollLeft = this.state.scrollLeft;\n        }\n\n        if (this._scrollingContainer.scrollTop !== this.state.scrollTop) {\n          this._scrollingContainer.scrollTop = this.state.scrollTop;\n        }\n      } // Don't update scroll offset if the size is 0; we don't render any cells in this case.\n      // Setting a state may cause us to later thing we've updated the offce when we haven't.\n\n\n      var sizeIsBiggerThanZero = height > 0 && width > 0;\n\n      if (scrollToColumn >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollLeftForScrollToColumn();\n      }\n\n      if (scrollToRow >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollTopForScrollToRow();\n      } // Update onRowsRendered callback\n\n\n      this._invokeOnGridRenderedHelper(); // Initialize onScroll callback\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalColumnsWidth: instanceProps.columnSizeAndPositionManager.getTotalSize(),\n        totalRowsHeight: instanceProps.rowSizeAndPositionManager.getTotalSize()\n      });\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) New scroll-to-cell props have been set\n     */\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      var _this$props5 = this.props,\n          autoHeight = _this$props5.autoHeight,\n          autoWidth = _this$props5.autoWidth,\n          columnCount = _this$props5.columnCount,\n          height = _this$props5.height,\n          rowCount = _this$props5.rowCount,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToColumn = _this$props5.scrollToColumn,\n          scrollToRow = _this$props5.scrollToRow,\n          width = _this$props5.width;\n      var _this$state = this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollPositionChangeReason = _this$state.scrollPositionChangeReason,\n          scrollTop = _this$state.scrollTop,\n          instanceProps = _this$state.instanceProps; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // Handle edge case where column or row count has only just increased over 0.\n      // In this case we may have to restore a previously-specified scroll offset.\n      // For more info see bvaughn/react-virtualized/issues/218\n\n\n      var columnOrRowCountJustIncreasedFromZero = columnCount > 0 && prevProps.columnCount === 0 || rowCount > 0 && prevProps.rowCount === 0; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        // @TRICKY :autoHeight and :autoWidth properties instructs Grid to leave :scrollTop and :scrollLeft management to an external HOC (eg WindowScroller).\n        // In this case we should avoid checking scrollingContainer.scrollTop and scrollingContainer.scrollLeft since it forces layout/flow.\n        if (!autoWidth && scrollLeft >= 0 && (scrollLeft !== this._scrollingContainer.scrollLeft || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (!autoHeight && scrollTop >= 0 && (scrollTop !== this._scrollingContainer.scrollTop || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Special case where the previous size was 0:\n      // In this case we don't show any windowed cells at all.\n      // So we should always recalculate offset afterwards.\n\n\n      var sizeJustIncreasedFromZero = (prevProps.width === 0 || prevProps.height === 0) && height > 0 && width > 0; // Update scroll offsets if the current :scrollToColumn or :scrollToRow values requires it\n      // @TODO Do we also need this check or can the one in componentWillUpdate() suffice?\n\n      if (this._recomputeScrollLeftFlag) {\n        this._recomputeScrollLeftFlag = false;\n\n        this._updateScrollLeftForScrollToColumn(this.props);\n      } else {\n        (0, _updateScrollIndexHelper[\"default\"])({\n          cellSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          previousCellsCount: prevProps.columnCount,\n          previousCellSize: prevProps.columnWidth,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToColumn,\n          previousSize: prevProps.width,\n          scrollOffset: scrollLeft,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToColumn,\n          size: width,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollLeftForScrollToColumn(_this2.props);\n          }\n        });\n      }\n\n      if (this._recomputeScrollTopFlag) {\n        this._recomputeScrollTopFlag = false;\n\n        this._updateScrollTopForScrollToRow(this.props);\n      } else {\n        (0, _updateScrollIndexHelper[\"default\"])({\n          cellSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          previousCellsCount: prevProps.rowCount,\n          previousCellSize: prevProps.rowHeight,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToRow,\n          previousSize: prevProps.height,\n          scrollOffset: scrollTop,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToRow,\n          size: height,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollTopForScrollToRow(_this2.props);\n          }\n        });\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnGridRenderedHelper(); // Changes to :scrollLeft or :scrollTop should also notify :onScroll listeners\n\n\n      if (scrollLeft !== prevState.scrollLeft || scrollTop !== prevState.scrollTop) {\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n\n        this._invokeOnScrollMemoizer({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          totalColumnsWidth: totalColumnsWidth,\n          totalRowsHeight: totalRowsHeight\n        });\n      }\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        (0, _requestAnimationTimeout.cancelAnimationTimeout)(this._disablePointerEventsTimeoutId);\n      }\n    }\n    /**\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoContainerWidth = _this$props6.autoContainerWidth,\n          autoHeight = _this$props6.autoHeight,\n          autoWidth = _this$props6.autoWidth,\n          className = _this$props6.className,\n          containerProps = _this$props6.containerProps,\n          containerRole = _this$props6.containerRole,\n          containerStyle = _this$props6.containerStyle,\n          height = _this$props6.height,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          role = _this$props6.role,\n          style = _this$props6.style,\n          tabIndex = _this$props6.tabIndex,\n          width = _this$props6.width;\n      var _this$state2 = this.state,\n          instanceProps = _this$state2.instanceProps,\n          needToResetStyleCache = _this$state2.needToResetStyleCache;\n\n      var isScrolling = this._isScrolling();\n\n      var gridStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        width: autoWidth ? 'auto' : width,\n        WebkitOverflowScrolling: 'touch',\n        willChange: 'transform'\n      };\n\n      if (needToResetStyleCache) {\n        this._styleCache = {};\n      } // calculate _styleCache here\n      // if state.isScrolling (not from _isScrolling) then reset\n\n\n      if (!this.state.isScrolling) {\n        this._resetStyleCache();\n      } // calculate children to render here\n\n\n      this._calculateChildrenToRender(this.props, this.state);\n\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize(); // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n      var horizontalScrollBarSize = totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n\n      if (horizontalScrollBarSize !== this._horizontalScrollBarSize || verticalScrollBarSize !== this._verticalScrollBarSize) {\n        this._horizontalScrollBarSize = horizontalScrollBarSize;\n        this._verticalScrollBarSize = verticalScrollBarSize;\n        this._scrollbarPresenceChanged = true;\n      } // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n\n      gridStyle.overflowX = totalColumnsWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      gridStyle.overflowY = totalRowsHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      var childrenToDisplay = this._childrenToDisplay;\n      var showNoContentRenderer = childrenToDisplay.length === 0 && height > 0 && width > 0;\n      return React.createElement(\"div\", (0, _extends2[\"default\"])({\n        ref: this._setScrollingContainerRef\n      }, containerProps, {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-readonly\": this.props['aria-readonly'],\n        className: (0, _clsx[\"default\"])('ReactVirtualized__Grid', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({}, gridStyle, {}, style),\n        tabIndex: tabIndex\n      }), childrenToDisplay.length > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Grid__innerScrollContainer\",\n        role: containerRole,\n        style: _objectSpread({\n          width: autoContainerWidth ? 'auto' : totalColumnsWidth,\n          height: totalRowsHeight,\n          maxWidth: totalColumnsWidth,\n          maxHeight: totalRowsHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }, containerStyle)\n      }, childrenToDisplay), showNoContentRenderer && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n  }, {\n    key: \"_calculateChildrenToRender\",\n    value: function _calculateChildrenToRender() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      var cellRenderer = props.cellRenderer,\n          cellRangeRenderer = props.cellRangeRenderer,\n          columnCount = props.columnCount,\n          deferredMeasurementCache = props.deferredMeasurementCache,\n          height = props.height,\n          overscanColumnCount = props.overscanColumnCount,\n          overscanIndicesGetter = props.overscanIndicesGetter,\n          overscanRowCount = props.overscanRowCount,\n          rowCount = props.rowCount,\n          width = props.width,\n          isScrollingOptOut = props.isScrollingOptOut;\n      var scrollDirectionHorizontal = state.scrollDirectionHorizontal,\n          scrollDirectionVertical = state.scrollDirectionVertical,\n          instanceProps = state.instanceProps;\n      var scrollTop = this._initialScrollTop > 0 ? this._initialScrollTop : state.scrollTop;\n      var scrollLeft = this._initialScrollLeft > 0 ? this._initialScrollLeft : state.scrollLeft;\n\n      var isScrolling = this._isScrolling(props, state);\n\n      this._childrenToDisplay = []; // Render only enough columns and rows to cover the visible area of the grid.\n\n      if (height > 0 && width > 0) {\n        var visibleColumnIndices = instanceProps.columnSizeAndPositionManager.getVisibleCellRange({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var visibleRowIndices = instanceProps.rowSizeAndPositionManager.getVisibleCellRange({\n          containerSize: height,\n          offset: scrollTop\n        });\n        var horizontalOffsetAdjustment = instanceProps.columnSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var verticalOffsetAdjustment = instanceProps.rowSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: height,\n          offset: scrollTop\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        this._renderedColumnStartIndex = visibleColumnIndices.start;\n        this._renderedColumnStopIndex = visibleColumnIndices.stop;\n        this._renderedRowStartIndex = visibleRowIndices.start;\n        this._renderedRowStopIndex = visibleRowIndices.stop;\n        var overscanColumnIndices = overscanIndicesGetter({\n          direction: 'horizontal',\n          cellCount: columnCount,\n          overscanCellsCount: overscanColumnCount,\n          scrollDirection: scrollDirectionHorizontal,\n          startIndex: typeof visibleColumnIndices.start === 'number' ? visibleColumnIndices.start : 0,\n          stopIndex: typeof visibleColumnIndices.stop === 'number' ? visibleColumnIndices.stop : -1\n        });\n        var overscanRowIndices = overscanIndicesGetter({\n          direction: 'vertical',\n          cellCount: rowCount,\n          overscanCellsCount: overscanRowCount,\n          scrollDirection: scrollDirectionVertical,\n          startIndex: typeof visibleRowIndices.start === 'number' ? visibleRowIndices.start : 0,\n          stopIndex: typeof visibleRowIndices.stop === 'number' ? visibleRowIndices.stop : -1\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        var columnStartIndex = overscanColumnIndices.overscanStartIndex;\n        var columnStopIndex = overscanColumnIndices.overscanStopIndex;\n        var rowStartIndex = overscanRowIndices.overscanStartIndex;\n        var rowStopIndex = overscanRowIndices.overscanStopIndex; // Advanced use-cases (eg CellMeasurer) require batched measurements to determine accurate sizes.\n\n        if (deferredMeasurementCache) {\n          // If rows have a dynamic height, scan the rows we are about to render.\n          // If any have not yet been measured, then we need to render all columns initially,\n          // Because the height of the row is equal to the tallest cell within that row,\n          // (And so we can't know the height without measuring all column-cells first).\n          if (!deferredMeasurementCache.hasFixedHeight()) {\n            for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n              if (!deferredMeasurementCache.has(rowIndex, 0)) {\n                columnStartIndex = 0;\n                columnStopIndex = columnCount - 1;\n                break;\n              }\n            }\n          } // If columns have a dynamic width, scan the columns we are about to render.\n          // If any have not yet been measured, then we need to render all rows initially,\n          // Because the width of the column is equal to the widest cell within that column,\n          // (And so we can't know the width without measuring all row-cells first).\n\n\n          if (!deferredMeasurementCache.hasFixedWidth()) {\n            for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n              if (!deferredMeasurementCache.has(0, columnIndex)) {\n                rowStartIndex = 0;\n                rowStopIndex = rowCount - 1;\n                break;\n              }\n            }\n          }\n        }\n\n        this._childrenToDisplay = cellRangeRenderer({\n          cellCache: this._cellCache,\n          cellRenderer: cellRenderer,\n          columnSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          columnStartIndex: columnStartIndex,\n          columnStopIndex: columnStopIndex,\n          deferredMeasurementCache: deferredMeasurementCache,\n          horizontalOffsetAdjustment: horizontalOffsetAdjustment,\n          isScrolling: isScrolling,\n          isScrollingOptOut: isScrollingOptOut,\n          parent: this,\n          rowSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          rowStartIndex: rowStartIndex,\n          rowStopIndex: rowStopIndex,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          styleCache: this._styleCache,\n          verticalOffsetAdjustment: verticalOffsetAdjustment,\n          visibleColumnIndices: visibleColumnIndices,\n          visibleRowIndices: visibleRowIndices\n        }); // update the indices\n\n        this._columnStartIndex = columnStartIndex;\n        this._columnStopIndex = columnStopIndex;\n        this._rowStartIndex = rowStartIndex;\n        this._rowStopIndex = rowStopIndex;\n      }\n    }\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Grid.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_debounceScrollEnded\",\n    value: function _debounceScrollEnded() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._disablePointerEventsTimeoutId) {\n        (0, _requestAnimationTimeout.cancelAnimationTimeout)(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = (0, _requestAnimationTimeout.requestAnimationTimeout)(this._debounceScrollEndedCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n\n    /**\n     * Check for batched CellMeasurer size invalidations.\n     * This will occur the first time one or more previously unmeasured cells are rendered.\n     */\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number' && typeof this._deferredInvalidateRowIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n      }\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref6) {\n      var _this3 = this;\n\n      var scrollLeft = _ref6.scrollLeft,\n          scrollTop = _ref6.scrollTop,\n          totalColumnsWidth = _ref6.totalColumnsWidth,\n          totalRowsHeight = _ref6.totalRowsHeight;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref7) {\n          var scrollLeft = _ref7.scrollLeft,\n              scrollTop = _ref7.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalRowsHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalColumnsWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_isScrolling\",\n    value: function _isScrolling() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      // If isScrolling is defined in props, use it to override the value in state\n      // This is a performance optimization for WindowScroller + Grid\n      return Object.hasOwnProperty.call(props, 'isScrolling') ? Boolean(props.isScrolling) : Boolean(state.isScrolling);\n    }\n  }, {\n    key: \"_maybeCallOnScrollbarPresenceChange\",\n    value: function _maybeCallOnScrollbarPresenceChange() {\n      if (this._scrollbarPresenceChanged) {\n        var onScrollbarPresenceChange = this.props.onScrollbarPresenceChange;\n        this._scrollbarPresenceChanged = false;\n        onScrollbarPresenceChange({\n          horizontal: this._horizontalScrollBarSize > 0,\n          size: this.state.instanceProps.scrollbarSize,\n          vertical: this._verticalScrollBarSize > 0\n        });\n      }\n    }\n  }, {\n    key: \"scrollToPosition\",\n\n    /**\n     * Scroll to the specified offset(s).\n     * Useful for animating position changes.\n     */\n    value: function scrollToPosition(_ref8) {\n      var scrollLeft = _ref8.scrollLeft,\n          scrollTop = _ref8.scrollTop;\n\n      var stateUpdate = Grid._getScrollToPositionStateUpdate({\n        prevState: this.state,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollLeft(props, state);\n    }\n  }, {\n    key: \"_updateScrollLeftForScrollToColumn\",\n    value: function _updateScrollLeftForScrollToColumn() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollLeftForScrollToColumnStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollTop(props, state);\n    }\n  }, {\n    key: \"_resetStyleCache\",\n    value: function _resetStyleCache() {\n      var styleCache = this._styleCache;\n      var cellCache = this._cellCache;\n      var isScrollingOptOut = this.props.isScrollingOptOut; // Reset cell and style caches once scrolling stops.\n      // This makes Grid simpler to use (since cells commonly change).\n      // And it keeps the caches from growing too large.\n      // Performance is most sensitive when a user is scrolling.\n      // Don't clear visible cells from cellCache if isScrollingOptOut is specified.\n      // This keeps the cellCache to a resonable size.\n\n      this._cellCache = {};\n      this._styleCache = {}; // Copy over the visible cell styles so avoid unnecessary re-render.\n\n      for (var rowIndex = this._rowStartIndex; rowIndex <= this._rowStopIndex; rowIndex++) {\n        for (var columnIndex = this._columnStartIndex; columnIndex <= this._columnStopIndex; columnIndex++) {\n          var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n          this._styleCache[key] = styleCache[key];\n\n          if (isScrollingOptOut) {\n            this._cellCache[key] = cellCache[key];\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_updateScrollTopForScrollToRow\",\n    value: function _updateScrollTopForScrollToRow() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollTopForScrollToRowStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var newState = {};\n\n      if (nextProps.columnCount === 0 && prevState.scrollLeft !== 0 || nextProps.rowCount === 0 && prevState.scrollTop !== 0) {\n        newState.scrollLeft = 0;\n        newState.scrollTop = 0; // only use scroll{Left,Top} from props if scrollTo{Column,Row} isn't specified\n        // scrollTo{Column,Row} should override scroll{Left,Top}\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft && nextProps.scrollToColumn < 0 || nextProps.scrollTop !== prevState.scrollTop && nextProps.scrollToRow < 0) {\n        Object.assign(newState, Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: nextProps.scrollLeft,\n          scrollTop: nextProps.scrollTop\n        }));\n      }\n\n      var instanceProps = prevState.instanceProps; // Initially we should not clearStyleCache\n\n      newState.needToResetStyleCache = false;\n\n      if (nextProps.columnWidth !== instanceProps.prevColumnWidth || nextProps.rowHeight !== instanceProps.prevRowHeight) {\n        // Reset cache. set it to {} in render\n        newState.needToResetStyleCache = true;\n      }\n\n      instanceProps.columnSizeAndPositionManager.configure({\n        cellCount: nextProps.columnCount,\n        estimatedCellSize: Grid._getEstimatedColumnSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.columnWidth)\n      });\n      instanceProps.rowSizeAndPositionManager.configure({\n        cellCount: nextProps.rowCount,\n        estimatedCellSize: Grid._getEstimatedRowSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.rowHeight)\n      });\n\n      if (instanceProps.prevColumnCount === 0 || instanceProps.prevRowCount === 0) {\n        instanceProps.prevColumnCount = 0;\n        instanceProps.prevRowCount = 0;\n      } // If scrolling is controlled outside this component, clear cache when scrolling stops\n\n\n      if (nextProps.autoHeight && nextProps.isScrolling === false && instanceProps.prevIsScrolling === true) {\n        Object.assign(newState, {\n          isScrolling: false\n        });\n      }\n\n      var maybeStateA;\n      var maybeStateB;\n      (0, _calculateSizeAndPositionDataAndUpdateScrollOffset[\"default\"])({\n        cellCount: instanceProps.prevColumnCount,\n        cellSize: typeof instanceProps.prevColumnWidth === 'number' ? instanceProps.prevColumnWidth : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.columnSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.columnCount,\n        nextCellSize: typeof nextProps.columnWidth === 'number' ? nextProps.columnWidth : null,\n        nextScrollToIndex: nextProps.scrollToColumn,\n        scrollToIndex: instanceProps.prevScrollToColumn,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateA = Grid._getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState);\n        }\n      });\n      (0, _calculateSizeAndPositionDataAndUpdateScrollOffset[\"default\"])({\n        cellCount: instanceProps.prevRowCount,\n        cellSize: typeof instanceProps.prevRowHeight === 'number' ? instanceProps.prevRowHeight : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.rowSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.rowCount,\n        nextCellSize: typeof nextProps.rowHeight === 'number' ? nextProps.rowHeight : null,\n        nextScrollToIndex: nextProps.scrollToRow,\n        scrollToIndex: instanceProps.prevScrollToRow,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateB = Grid._getScrollTopForScrollToRowStateUpdate(nextProps, prevState);\n        }\n      });\n      instanceProps.prevColumnCount = nextProps.columnCount;\n      instanceProps.prevColumnWidth = nextProps.columnWidth;\n      instanceProps.prevIsScrolling = nextProps.isScrolling === true;\n      instanceProps.prevRowCount = nextProps.rowCount;\n      instanceProps.prevRowHeight = nextProps.rowHeight;\n      instanceProps.prevScrollToColumn = nextProps.scrollToColumn;\n      instanceProps.prevScrollToRow = nextProps.scrollToRow; // getting scrollBarSize (moved from componentWillMount)\n\n      instanceProps.scrollbarSize = nextProps.getScrollbarSize();\n\n      if (instanceProps.scrollbarSize === undefined) {\n        instanceProps.scrollbarSizeMeasured = false;\n        instanceProps.scrollbarSize = 0;\n      } else {\n        instanceProps.scrollbarSizeMeasured = true;\n      }\n\n      newState.instanceProps = instanceProps;\n      return _objectSpread({}, newState, {}, maybeStateA, {}, maybeStateB);\n    }\n  }, {\n    key: \"_getEstimatedColumnSize\",\n    value: function _getEstimatedColumnSize(props) {\n      return typeof props.columnWidth === 'number' ? props.columnWidth : props.estimatedColumnSize;\n    }\n  }, {\n    key: \"_getEstimatedRowSize\",\n    value: function _getEstimatedRowSize(props) {\n      return typeof props.rowHeight === 'number' ? props.rowHeight : props.estimatedRowSize;\n    }\n  }, {\n    key: \"_getScrollToPositionStateUpdate\",\n\n    /**\n     * Get the updated state after scrolling to\n     * scrollLeft and scrollTop\n     */\n    value: function _getScrollToPositionStateUpdate(_ref9) {\n      var prevState = _ref9.prevState,\n          scrollLeft = _ref9.scrollLeft,\n          scrollTop = _ref9.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0) {\n        newState.scrollDirectionHorizontal = scrollLeft > prevState.scrollLeft ? _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD : _defaultOverscanIndicesGetter.SCROLL_DIRECTION_BACKWARD;\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (typeof scrollTop === 'number' && scrollTop >= 0) {\n        newState.scrollDirectionVertical = scrollTop > prevState.scrollTop ? _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD : _defaultOverscanIndicesGetter.SCROLL_DIRECTION_BACKWARD;\n        newState.scrollTop = scrollTop;\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft || typeof scrollTop === 'number' && scrollTop >= 0 && scrollTop !== prevState.scrollTop) {\n        return newState;\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_wrapSizeGetter\",\n    value: function _wrapSizeGetter(value) {\n      return typeof value === 'function' ? value : function () {\n        return value;\n      };\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft(nextProps, prevState) {\n      var columnCount = nextProps.columnCount,\n          height = nextProps.height,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToColumn = nextProps.scrollToColumn,\n          width = nextProps.width;\n      var scrollLeft = prevState.scrollLeft,\n          instanceProps = prevState.instanceProps;\n\n      if (columnCount > 0) {\n        var finalColumn = columnCount - 1;\n        var targetIndex = scrollToColumn < 0 ? finalColumn : Math.min(finalColumn, scrollToColumn);\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n        return instanceProps.columnSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: width - scrollBarSize,\n          currentOffset: scrollLeft,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollLeftForScrollToColumnStateUpdate\",\n    value: function _getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState) {\n      var scrollLeft = prevState.scrollLeft;\n\n      var calculatedScrollLeft = Grid._getCalculatedScrollLeft(nextProps, prevState);\n\n      if (typeof calculatedScrollLeft === 'number' && calculatedScrollLeft >= 0 && scrollLeft !== calculatedScrollLeft) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: calculatedScrollLeft,\n          scrollTop: -1\n        });\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop(nextProps, prevState) {\n      var height = nextProps.height,\n          rowCount = nextProps.rowCount,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToRow = nextProps.scrollToRow,\n          width = nextProps.width;\n      var scrollTop = prevState.scrollTop,\n          instanceProps = prevState.instanceProps;\n\n      if (rowCount > 0) {\n        var finalRow = rowCount - 1;\n        var targetIndex = scrollToRow < 0 ? finalRow : Math.min(finalRow, scrollToRow);\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n        return instanceProps.rowSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: height - scrollBarSize,\n          currentOffset: scrollTop,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollTopForScrollToRowStateUpdate\",\n    value: function _getScrollTopForScrollToRowStateUpdate(nextProps, prevState) {\n      var scrollTop = prevState.scrollTop;\n\n      var calculatedScrollTop = Grid._getCalculatedScrollTop(nextProps, prevState);\n\n      if (typeof calculatedScrollTop === 'number' && calculatedScrollTop >= 0 && scrollTop !== calculatedScrollTop) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: -1,\n          scrollTop: calculatedScrollTop\n        });\n      }\n\n      return {};\n    }\n  }]);\n  return Grid;\n}(React.PureComponent), (0, _defineProperty2[\"default\"])(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": _propTypes[\"default\"].string.isRequired,\n  \"aria-readonly\": _propTypes[\"default\"].bool,\n\n  /**\n   * Set the width of the inner scrollable container to 'auto'.\n   * This is useful for single-column Grids to ensure that the column doesn't extend below a vertical scrollbar.\n   */\n  \"autoContainerWidth\": _propTypes[\"default\"].bool.isRequired,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoHeight\": _propTypes[\"default\"].bool.isRequired,\n\n  /**\n   * Removes fixed width from the scrollingContainer so that the total width of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoWidth\": _propTypes[\"default\"].bool.isRequired,\n\n  /** Responsible for rendering a cell given an row and column index.  */\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof _types.bpfrpt_proptype_CellRenderer === \"function\" ? _types.bpfrpt_proptype_CellRenderer.isRequired ? _types.bpfrpt_proptype_CellRenderer.isRequired : _types.bpfrpt_proptype_CellRenderer : _propTypes[\"default\"].shape(_types.bpfrpt_proptype_CellRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a group of cells given their index ranges.  */\n  \"cellRangeRenderer\": function cellRangeRenderer() {\n    return (typeof _types.bpfrpt_proptype_CellRangeRenderer === \"function\" ? _types.bpfrpt_proptype_CellRangeRenderer.isRequired ? _types.bpfrpt_proptype_CellRangeRenderer.isRequired : _types.bpfrpt_proptype_CellRangeRenderer : _propTypes[\"default\"].shape(_types.bpfrpt_proptype_CellRangeRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Optional custom CSS class name to attach to root Grid element.  */\n  \"className\": _propTypes[\"default\"].string,\n\n  /** Number of columns in grid.  */\n  \"columnCount\": _propTypes[\"default\"].number.isRequired,\n\n  /** Either a fixed column width (number) or a function that returns the width of a column given its index.  */\n  \"columnWidth\": function columnWidth() {\n    return (typeof _types.bpfrpt_proptype_CellSize === \"function\" ? _types.bpfrpt_proptype_CellSize.isRequired ? _types.bpfrpt_proptype_CellSize.isRequired : _types.bpfrpt_proptype_CellSize : _propTypes[\"default\"].shape(_types.bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Unfiltered props for the Grid container. */\n  \"containerProps\": _propTypes[\"default\"].object,\n\n  /** ARIA role for the cell-container.  */\n  \"containerRole\": _propTypes[\"default\"].string.isRequired,\n\n  /** Optional inline style applied to inner cell-container */\n  \"containerStyle\": _propTypes[\"default\"].object.isRequired,\n\n  /**\n   * If CellMeasurer is used to measure this Grid's children, this should be a pointer to its CellMeasurerCache.\n   * A shared CellMeasurerCache reference enables Grid and CellMeasurer to share measurement data.\n   */\n  \"deferredMeasurementCache\": _propTypes[\"default\"].object,\n\n  /**\n   * Used to estimate the total width of a Grid before all of its columns have actually been measured.\n   * The estimated total width is adjusted as columns are rendered.\n   */\n  \"estimatedColumnSize\": _propTypes[\"default\"].number.isRequired,\n\n  /**\n   * Used to estimate the total height of a Grid before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": _propTypes[\"default\"].number.isRequired,\n\n  /** Exposed for testing purposes only.  */\n  \"getScrollbarSize\": _propTypes[\"default\"].func.isRequired,\n\n  /** Height of Grid; this property determines the number of visible (vs virtualized) rows.  */\n  \"height\": _propTypes[\"default\"].number.isRequired,\n\n  /** Optional custom id to attach to root Grid element.  */\n  \"id\": _propTypes[\"default\"].string,\n\n  /**\n   * Override internal is-scrolling state tracking.\n   * This property is primarily intended for use with the WindowScroller component.\n   */\n  \"isScrolling\": _propTypes[\"default\"].bool,\n\n  /**\n   * Opt-out of isScrolling param passed to cellRangeRenderer.\n   * To avoid the extra render when scroll stops.\n   */\n  \"isScrollingOptOut\": _propTypes[\"default\"].bool.isRequired,\n\n  /** Optional renderer to be used in place of rows when either :rowCount or :columnCount is 0.  */\n  \"noContentRenderer\": function noContentRenderer() {\n    return (typeof _types.bpfrpt_proptype_NoContentRenderer === \"function\" ? _types.bpfrpt_proptype_NoContentRenderer.isRequired ? _types.bpfrpt_proptype_NoContentRenderer.isRequired : _types.bpfrpt_proptype_NoContentRenderer : _propTypes[\"default\"].shape(_types.bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": _propTypes[\"default\"].func.isRequired,\n\n  /**\n   * Called whenever a horizontal or vertical scrollbar is added or removed.\n   * This prop is not intended for end-user use;\n   * It is used by MultiGrid to support fixed-row/fixed-column scroll syncing.\n   */\n  \"onScrollbarPresenceChange\": _propTypes[\"default\"].func.isRequired,\n\n  /** Callback invoked with information about the section of the Grid that was just rendered.  */\n  \"onSectionRendered\": _propTypes[\"default\"].func.isRequired,\n\n  /**\n   * Number of columns to render before/after the visible section of the grid.\n   * These columns can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanColumnCount\": _propTypes[\"default\"].number.isRequired,\n\n  /**\n   * Calculates the number of cells to overscan before and after a specified range.\n   * This function ensures that overscanning doesn't exceed the available cells.\n   */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof _types.bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? _types.bpfrpt_proptype_OverscanIndicesGetter.isRequired ? _types.bpfrpt_proptype_OverscanIndicesGetter.isRequired : _types.bpfrpt_proptype_OverscanIndicesGetter : _propTypes[\"default\"].shape(_types.bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible section of the grid.\n   * These rows can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanRowCount\": _propTypes[\"default\"].number.isRequired,\n\n  /** ARIA role for the grid element.  */\n  \"role\": _propTypes[\"default\"].string.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * Should implement the following interface: ({ index: number }): number\n   */\n  \"rowHeight\": function rowHeight() {\n    return (typeof _types.bpfrpt_proptype_CellSize === \"function\" ? _types.bpfrpt_proptype_CellSize.isRequired ? _types.bpfrpt_proptype_CellSize.isRequired : _types.bpfrpt_proptype_CellSize : _propTypes[\"default\"].shape(_types.bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in grid.  */\n  \"rowCount\": _propTypes[\"default\"].number.isRequired,\n\n  /** Wait this amount of time after the last scroll event before resetting Grid `pointer-events`. */\n  \"scrollingResetTimeInterval\": _propTypes[\"default\"].number.isRequired,\n\n  /** Horizontal offset. */\n  \"scrollLeft\": _propTypes[\"default\"].number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof _types.bpfrpt_proptype_Alignment === \"function\" ? _types.bpfrpt_proptype_Alignment.isRequired ? _types.bpfrpt_proptype_Alignment.isRequired : _types.bpfrpt_proptype_Alignment : _propTypes[\"default\"].shape(_types.bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Column index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToColumn\": _propTypes[\"default\"].number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": _propTypes[\"default\"].number,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToRow\": _propTypes[\"default\"].number.isRequired,\n\n  /** Optional inline style */\n  \"style\": _propTypes[\"default\"].object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": _propTypes[\"default\"].number,\n\n  /** Width of Grid; this property determines the number of visible (vs virtualized) columns.  */\n  \"width\": _propTypes[\"default\"].number.isRequired\n}), _temp);\n(0, _defineProperty2[\"default\"])(Grid, \"defaultProps\", {\n  'aria-label': 'grid',\n  'aria-readonly': true,\n  autoContainerWidth: false,\n  autoHeight: false,\n  autoWidth: false,\n  cellRangeRenderer: _defaultCellRangeRenderer[\"default\"],\n  containerRole: 'rowgroup',\n  containerStyle: {},\n  estimatedColumnSize: 100,\n  estimatedRowSize: 30,\n  getScrollbarSize: _scrollbarSize[\"default\"],\n  noContentRenderer: renderNull,\n  onScroll: function onScroll() {},\n  onScrollbarPresenceChange: function onScrollbarPresenceChange() {},\n  onSectionRendered: function onSectionRendered() {},\n  overscanColumnCount: 0,\n  overscanIndicesGetter: _defaultOverscanIndicesGetter[\"default\"],\n  overscanRowCount: 10,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  scrollToAlignment: 'auto',\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  tabIndex: 0,\n  isScrollingOptOut: false\n});\n(0, _reactLifecyclesCompat.polyfill)(Grid);\nvar _default = Grid;\nexports[\"default\"] = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = calculateSizeAndPositionDataAndUpdateScrollOffset;\n\n/**\n * Helper method that determines when to recalculate row or column metadata.\n */\nfunction calculateSizeAndPositionDataAndUpdateScrollOffset(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSize = _ref.cellSize,\n      computeMetadataCallback = _ref.computeMetadataCallback,\n      computeMetadataCallbackProps = _ref.computeMetadataCallbackProps,\n      nextCellsCount = _ref.nextCellsCount,\n      nextCellSize = _ref.nextCellSize,\n      nextScrollToIndex = _ref.nextScrollToIndex,\n      scrollToIndex = _ref.scrollToIndex,\n      updateScrollOffsetForScrollToIndex = _ref.updateScrollOffsetForScrollToIndex;\n\n  // Don't compare cell sizes if they are functions because inline functions would cause infinite loops.\n  // In that event users should use the manual recompute methods to inform of changes.\n  if (cellCount !== nextCellsCount || (typeof cellSize === 'number' || typeof nextCellSize === 'number') && cellSize !== nextCellSize) {\n    computeMetadataCallback(computeMetadataCallbackProps); // Updated cell metadata may have hidden the previous scrolled-to item.\n    // In this case we should also update the scrollTop to ensure it stays visible.\n\n    if (scrollToIndex >= 0 && scrollToIndex === nextScrollToIndex) {\n      updateScrollOffsetForScrollToIndex();\n    }\n  }\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _types = require(\"../types\");\n\n/**\n * Just-in-time calculates and caches size and position information for a collection of cells.\n */\nvar CellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  // Cache of size and position data for cells, mapped by cell index.\n  // Note that invalid values may exist in this map so only rely on cells up to this._lastMeasuredIndex\n  // Measurements for cells up to this index can be trusted; cells afterward should be estimated.\n  // Used in deferred mode to track which cells have been queued for measurement.\n  function CellSizeAndPositionManager(_ref) {\n    var cellCount = _ref.cellCount,\n        cellSizeGetter = _ref.cellSizeGetter,\n        estimatedCellSize = _ref.estimatedCellSize;\n    (0, _classCallCheck2[\"default\"])(this, CellSizeAndPositionManager);\n    (0, _defineProperty2[\"default\"])(this, \"_cellSizeAndPositionData\", {});\n    (0, _defineProperty2[\"default\"])(this, \"_lastMeasuredIndex\", -1);\n    (0, _defineProperty2[\"default\"])(this, \"_lastBatchedIndex\", -1);\n    (0, _defineProperty2[\"default\"])(this, \"_cellCount\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_cellSizeGetter\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_estimatedCellSize\", void 0);\n    this._cellSizeGetter = cellSizeGetter;\n    this._cellCount = cellCount;\n    this._estimatedCellSize = estimatedCellSize;\n  }\n\n  (0, _createClass2[\"default\"])(CellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return false;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(_ref2) {\n      var cellCount = _ref2.cellCount,\n          estimatedCellSize = _ref2.estimatedCellSize,\n          cellSizeGetter = _ref2.cellSizeGetter;\n      this._cellCount = cellCount;\n      this._estimatedCellSize = estimatedCellSize;\n      this._cellSizeGetter = cellSizeGetter;\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellCount;\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._estimatedCellSize;\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._lastMeasuredIndex;\n    }\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment() {\n      return 0;\n    }\n    /**\n     * This method returns the size and position for the cell at the specified index.\n     * It just-in-time calculates (or used cached values) for cells leading up to the index.\n     */\n\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      if (index < 0 || index >= this._cellCount) {\n        throw Error(\"Requested index \".concat(index, \" is outside of range 0..\").concat(this._cellCount));\n      }\n\n      if (index > this._lastMeasuredIndex) {\n        var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n        var offset = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n\n        for (var i = this._lastMeasuredIndex + 1; i <= index; i++) {\n          var size = this._cellSizeGetter({\n            index: i\n          }); // undefined or NaN probably means a logic error in the size getter.\n          // null means we're using CellMeasurer and haven't yet measured a given index.\n\n\n          if (size === undefined || isNaN(size)) {\n            throw Error(\"Invalid size returned for cell \".concat(i, \" of value \").concat(size));\n          } else if (size === null) {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: 0\n            };\n            this._lastBatchedIndex = index;\n          } else {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: size\n            };\n            offset += size;\n            this._lastMeasuredIndex = index;\n          }\n        }\n      }\n\n      return this._cellSizeAndPositionData[index];\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._lastMeasuredIndex >= 0 ? this._cellSizeAndPositionData[this._lastMeasuredIndex] : {\n        offset: 0,\n        size: 0\n      };\n    }\n    /**\n     * Total size of all cells being measured.\n     * This value will be completely estimated initially.\n     * As cells are measured, the estimate will be updated.\n     */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var totalSizeOfMeasuredCells = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n      var numUnmeasuredCells = this._cellCount - this._lastMeasuredIndex - 1;\n      var totalSizeOfUnmeasuredCells = numUnmeasuredCells * this._estimatedCellSize;\n      return totalSizeOfMeasuredCells + totalSizeOfUnmeasuredCells;\n    }\n    /**\n     * Determines a new offset that ensures a certain cell is visible, given the current offset.\n     * If the cell is already visible then the current offset will be returned.\n     * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n     *\n     * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n     * @param containerSize Size (width or height) of the container viewport\n     * @param currentOffset Container's current (x or y) offset\n     * @param totalSize Total size (width or height) of all cells\n     * @return Offset to use to ensure the specified cell is visible\n     */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n\n      if (containerSize <= 0) {\n        return 0;\n      }\n\n      var datum = this.getSizeAndPositionOfCell(targetIndex);\n      var maxOffset = datum.offset;\n      var minOffset = maxOffset - containerSize + datum.size;\n      var idealOffset;\n\n      switch (align) {\n        case 'start':\n          idealOffset = maxOffset;\n          break;\n\n        case 'end':\n          idealOffset = minOffset;\n          break;\n\n        case 'center':\n          idealOffset = maxOffset - (containerSize - datum.size) / 2;\n          break;\n\n        default:\n          idealOffset = Math.max(minOffset, Math.min(maxOffset, currentOffset));\n          break;\n      }\n\n      var totalSize = this.getTotalSize();\n      return Math.max(0, Math.min(totalSize - containerSize, idealOffset));\n    }\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(params) {\n      var containerSize = params.containerSize,\n          offset = params.offset;\n      var totalSize = this.getTotalSize();\n\n      if (totalSize === 0) {\n        return {};\n      }\n\n      var maxOffset = offset + containerSize;\n\n      var start = this._findNearestCell(offset);\n\n      var datum = this.getSizeAndPositionOfCell(start);\n      offset = datum.offset + datum.size;\n      var stop = start;\n\n      while (offset < maxOffset && stop < this._cellCount - 1) {\n        stop++;\n        offset += this.getSizeAndPositionOfCell(stop).size;\n      }\n\n      return {\n        start: start,\n        stop: stop\n      };\n    }\n    /**\n     * Clear all cached values for cells after the specified index.\n     * This method should be called for any cell that has changed its size.\n     * It will not immediately perform any calculations; they'll be performed the next time getSizeAndPositionOfCell() is called.\n     */\n\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._lastMeasuredIndex = Math.min(this._lastMeasuredIndex, index - 1);\n    }\n  }, {\n    key: \"_binarySearch\",\n    value: function _binarySearch(high, low, offset) {\n      while (low <= high) {\n        var middle = low + Math.floor((high - low) / 2);\n        var currentOffset = this.getSizeAndPositionOfCell(middle).offset;\n\n        if (currentOffset === offset) {\n          return middle;\n        } else if (currentOffset < offset) {\n          low = middle + 1;\n        } else if (currentOffset > offset) {\n          high = middle - 1;\n        }\n      }\n\n      if (low > 0) {\n        return low - 1;\n      } else {\n        return 0;\n      }\n    }\n  }, {\n    key: \"_exponentialSearch\",\n    value: function _exponentialSearch(index, offset) {\n      var interval = 1;\n\n      while (index < this._cellCount && this.getSizeAndPositionOfCell(index).offset < offset) {\n        index += interval;\n        interval *= 2;\n      }\n\n      return this._binarySearch(Math.min(index, this._cellCount - 1), Math.floor(index / 2), offset);\n    }\n    /**\n     * Searches for the cell (index) nearest the specified offset.\n     *\n     * If no exact match is found the next lowest cell index will be returned.\n     * This allows partially visible cells (with offsets just before/above the fold) to be visible.\n     */\n\n  }, {\n    key: \"_findNearestCell\",\n    value: function _findNearestCell(offset) {\n      if (isNaN(offset)) {\n        throw Error(\"Invalid offset \".concat(offset, \" specified\"));\n      } // Our search algorithms find the nearest match at or below the specified offset.\n      // So make sure the offset is at least 0 or no match will be found.\n\n\n      offset = Math.max(0, offset);\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var lastMeasuredIndex = Math.max(0, this._lastMeasuredIndex);\n\n      if (lastMeasuredCellSizeAndPosition.offset >= offset) {\n        // If we've already measured cells within this range just use a binary search as it's faster.\n        return this._binarySearch(lastMeasuredIndex, 0, offset);\n      } else {\n        // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n        // The exponential search avoids pre-computing sizes for the full set of cells as a binary search would.\n        // The overall complexity for this approach is O(log n).\n        return this._exponentialSearch(lastMeasuredIndex, offset);\n      }\n    }\n  }]);\n  return CellSizeAndPositionManager;\n}();\n\nexports[\"default\"] = CellSizeAndPositionManager;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getMaxElementSize = void 0;\nvar DEFAULT_MAX_ELEMENT_SIZE = 1500000;\nvar CHROME_MAX_ELEMENT_SIZE = 1.67771e7;\n\nvar isBrowser = function isBrowser() {\n  return typeof window !== 'undefined';\n};\n\nvar isChrome = function isChrome() {\n  return !!window.chrome;\n};\n\nvar getMaxElementSize = function getMaxElementSize() {\n  if (isBrowser()) {\n    if (isChrome()) {\n      return CHROME_MAX_ELEMENT_SIZE;\n    }\n  }\n\n  return DEFAULT_MAX_ELEMENT_SIZE;\n};\n\nexports.getMaxElementSize = getMaxElementSize;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = createCallbackMemoizer;\n\n/**\n * Helper utility that updates the specified callback whenever any of the specified indices have changed.\n */\nfunction createCallbackMemoizer() {\n  var requireAllKeys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  var cachedIndices = {};\n  return function (_ref) {\n    var callback = _ref.callback,\n        indices = _ref.indices;\n    var keys = Object.keys(indices);\n    var allInitialized = !requireAllKeys || keys.every(function (key) {\n      var value = indices[key];\n      return Array.isArray(value) ? value.length > 0 : value >= 0;\n    });\n    var indexChanged = keys.length !== Object.keys(cachedIndices).length || keys.some(function (key) {\n      var cachedValue = cachedIndices[key];\n      var value = indices[key];\n      return Array.isArray(value) ? cachedValue.join(',') !== value.join(',') : cachedValue !== value;\n    });\n    cachedIndices = indices;\n\n    if (allInitialized && indexChanged) {\n      callback(indices);\n    }\n  };\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = updateScrollIndexHelper;\n\nvar _ScalingCellSizeAndPositionManager = _interopRequireDefault(require(\"./ScalingCellSizeAndPositionManager.js\"));\n\nvar _types = require(\"../types\");\n\nfunction updateScrollIndexHelper(_ref) {\n  var cellSize = _ref.cellSize,\n      cellSizeAndPositionManager = _ref.cellSizeAndPositionManager,\n      previousCellsCount = _ref.previousCellsCount,\n      previousCellSize = _ref.previousCellSize,\n      previousScrollToAlignment = _ref.previousScrollToAlignment,\n      previousScrollToIndex = _ref.previousScrollToIndex,\n      previousSize = _ref.previousSize,\n      scrollOffset = _ref.scrollOffset,\n      scrollToAlignment = _ref.scrollToAlignment,\n      scrollToIndex = _ref.scrollToIndex,\n      size = _ref.size,\n      sizeJustIncreasedFromZero = _ref.sizeJustIncreasedFromZero,\n      updateScrollIndexCallback = _ref.updateScrollIndexCallback;\n  var cellCount = cellSizeAndPositionManager.getCellCount();\n  var hasScrollToIndex = scrollToIndex >= 0 && scrollToIndex < cellCount;\n  var sizeHasChanged = size !== previousSize || sizeJustIncreasedFromZero || !previousCellSize || typeof cellSize === 'number' && cellSize !== previousCellSize; // If we have a new scroll target OR if height/row-height has changed,\n  // We should ensure that the scroll target is visible.\n\n  if (hasScrollToIndex && (sizeHasChanged || scrollToAlignment !== previousScrollToAlignment || scrollToIndex !== previousScrollToIndex)) {\n    updateScrollIndexCallback(scrollToIndex); // If we don't have a selected item but list size or number of children have decreased,\n    // Make sure we aren't scrolled too far past the current content.\n  } else if (!hasScrollToIndex && cellCount > 0 && (size < previousSize || cellCount < previousCellsCount)) {\n    // We need to ensure that the current scroll offset is still within the collection's range.\n    // To do this, we don't need to measure everything; CellMeasurer would perform poorly.\n    // Just check to make sure we're still okay.\n    // Only adjust the scroll position if we've scrolled below the last set of rows.\n    if (scrollOffset > cellSizeAndPositionManager.getTotalSize() - size) {\n      updateScrollIndexCallback(cellCount - 1);\n    }\n  }\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bpfrpt_proptype_AnimationTimeoutId = exports.requestAnimationTimeout = exports.cancelAnimationTimeout = void 0;\n\nvar _animationFrame = require(\"./animationFrame\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar bpfrpt_proptype_AnimationTimeoutId = process.env.NODE_ENV === 'production' ? null : {\n  \"id\": _propTypes[\"default\"].number.isRequired\n};\nexports.bpfrpt_proptype_AnimationTimeoutId = bpfrpt_proptype_AnimationTimeoutId;\n\nvar cancelAnimationTimeout = function cancelAnimationTimeout(frame) {\n  return (0, _animationFrame.caf)(frame.id);\n};\n/**\n * Recursively calls requestAnimationFrame until a specified delay has been met or exceeded.\n * When the delay time has been reached the function you're timing out will be called.\n *\n * Credit: Joe Lambert (https://gist.github.com/joelambert/1002116#file-requesttimeout-js)\n */\n\n\nexports.cancelAnimationTimeout = cancelAnimationTimeout;\n\nvar requestAnimationTimeout = function requestAnimationTimeout(callback, delay) {\n  var start; // wait for end of processing current event handler, because event handler may be long\n\n  Promise.resolve().then(function () {\n    start = Date.now();\n  });\n\n  var timeout = function timeout() {\n    if (Date.now() - start >= delay) {\n      callback.call();\n    } else {\n      frame.id = (0, _animationFrame.raf)(timeout);\n    }\n  };\n\n  var frame = {\n    id: (0, _animationFrame.raf)(timeout)\n  };\n  return frame;\n};\n\nexports.requestAnimationTimeout = requestAnimationTimeout;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.caf = exports.raf = void 0;\n// Properly handle server-side rendering.\nvar win;\n\nif (typeof window !== 'undefined') {\n  win = window;\n} else if (typeof self !== 'undefined') {\n  win = self;\n} else {\n  win = {};\n} // requestAnimationFrame() shim by Paul Irish\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\nvar request = win.requestAnimationFrame || win.webkitRequestAnimationFrame || win.mozRequestAnimationFrame || win.oRequestAnimationFrame || win.msRequestAnimationFrame || function (callback) {\n  return win.setTimeout(callback, 1000 / 60);\n};\n\nvar cancel = win.cancelAnimationFrame || win.webkitCancelAnimationFrame || win.mozCancelAnimationFrame || win.oCancelAnimationFrame || win.msCancelAnimationFrame || function (id) {\n  win.clearTimeout(id);\n};\n\nvar raf = request;\nexports.raf = raf;\nvar caf = cancel;\nexports.caf = caf;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = defaultOverscanIndicesGetter;\nexports.SCROLL_DIRECTION_VERTICAL = exports.SCROLL_DIRECTION_HORIZONTAL = exports.SCROLL_DIRECTION_FORWARD = exports.SCROLL_DIRECTION_BACKWARD = void 0;\n\nvar _types = require(\"./types\");\n\nvar SCROLL_DIRECTION_BACKWARD = -1;\nexports.SCROLL_DIRECTION_BACKWARD = SCROLL_DIRECTION_BACKWARD;\nvar SCROLL_DIRECTION_FORWARD = 1;\nexports.SCROLL_DIRECTION_FORWARD = SCROLL_DIRECTION_FORWARD;\nvar SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexports.SCROLL_DIRECTION_HORIZONTAL = SCROLL_DIRECTION_HORIZONTAL;\nvar SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexports.SCROLL_DIRECTION_VERTICAL = SCROLL_DIRECTION_VERTICAL;\n\nfunction defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n  // Make sure we render at least 1 cell extra before and after (except near boundaries)\n  // This is necessary in order to support keyboard navigation (TAB/SHIFT+TAB) in some cases\n  // For more info see issues #625\n  overscanCellsCount = Math.max(1, overscanCellsCount);\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - 1),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + 1)\n    };\n  }\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calcColumnWidth = calcColumnWidth;\nfunction calcColumnWidth(index, columns, tableWidth) {\n  var column = columns[index];\n\n  var width = getDeterministicColumnWidth(column, tableWidth);\n\n  if (width) {\n    return width;\n  }\n\n  var totalAllocatedWidth = columns.reduce(function (result, c) {\n    return result + (getDeterministicColumnWidth(c, tableWidth) || 0);\n  }, 0);\n\n  // Evenly distribute remaining width amoungst columns (accounting for minWidths)\n  var variableWidthColumns = columns.filter(function (c) {\n    return typeof c.width !== 'number' && typeof c.width !== 'string';\n  });\n  var initialDistributedWidthPerColumn = (tableWidth - totalAllocatedWidth) / variableWidthColumns.length;\n  var activeMinWidthColumns = variableWidthColumns.filter(function (c) {\n    return c.minWidth > initialDistributedWidthPerColumn ? c.minWidth : 0;\n  });\n  var allocatedMinWidth = activeMinWidthColumns.reduce(function (result, c) {\n    return result + c.minWidth;\n  }, 0);\n  var remainingWidth = tableWidth - totalAllocatedWidth - allocatedMinWidth;\n\n  return Math.max(column.minWidth || 0, remainingWidth / (variableWidthColumns.length - activeMinWidthColumns.length));\n}\n\nfunction getDeterministicColumnWidth(column, tableWidth) {\n  if (typeof column.width === 'number') {\n    // Fixed width\n    return column.width;\n  } else if (typeof column.width === 'string') {\n    // Percentage width\n    var percentageBasedWidth = percentToFixedWidth(column.width, tableWidth);\n    return Math.max(percentageBasedWidth, column.minWidth || 0);\n  } else {\n    // Variable width\n    return null;\n  }\n}\n\nfunction percentToFixedWidth(percentAsString, tableWidth) {\n  return parseFloat(percentAsString) / 100 * tableWidth;\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf3 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _detectElementResize = _interopRequireDefault(require(\"../vendor/detectElementResize\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar AutoSizer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inherits2[\"default\"])(AutoSizer, _React$Component);\n\n  function AutoSizer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, AutoSizer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3[\"default\"])(AutoSizer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"state\", {\n      height: _this.props.defaultHeight || 0,\n      width: _this.props.defaultWidth || 0\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_parentNode\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_autoSizer\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_window\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_detectElementResize\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onResize\", function () {\n      var _this$props = _this.props,\n          disableHeight = _this$props.disableHeight,\n          disableWidth = _this$props.disableWidth,\n          onResize = _this$props.onResize;\n\n      if (_this._parentNode) {\n        // Guard against AutoSizer component being removed from the DOM immediately after being added.\n        // This can result in invalid style values which can result in NaN values if we don't handle them.\n        // See issue #150 for more context.\n        var height = _this._parentNode.offsetHeight || 0;\n        var width = _this._parentNode.offsetWidth || 0;\n        var win = _this._window || window;\n        var style = win.getComputedStyle(_this._parentNode) || {};\n        var paddingLeft = parseInt(style.paddingLeft, 10) || 0;\n        var paddingRight = parseInt(style.paddingRight, 10) || 0;\n        var paddingTop = parseInt(style.paddingTop, 10) || 0;\n        var paddingBottom = parseInt(style.paddingBottom, 10) || 0;\n        var newHeight = height - paddingTop - paddingBottom;\n        var newWidth = width - paddingLeft - paddingRight;\n\n        if (!disableHeight && _this.state.height !== newHeight || !disableWidth && _this.state.width !== newWidth) {\n          _this.setState({\n            height: height - paddingTop - paddingBottom,\n            width: width - paddingLeft - paddingRight\n          });\n\n          onResize({\n            height: height,\n            width: width\n          });\n        }\n      }\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_setRef\", function (autoSizer) {\n      _this._autoSizer = autoSizer;\n    });\n    return _this;\n  }\n\n  (0, _createClass2[\"default\"])(AutoSizer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var nonce = this.props.nonce;\n\n      if (this._autoSizer && this._autoSizer.parentNode && this._autoSizer.parentNode.ownerDocument && this._autoSizer.parentNode.ownerDocument.defaultView && this._autoSizer.parentNode instanceof this._autoSizer.parentNode.ownerDocument.defaultView.HTMLElement) {\n        // Delay access of parentNode until mount.\n        // This handles edge-cases where the component has already been unmounted before its ref has been set,\n        // As well as libraries like react-lite which have a slightly different lifecycle.\n        this._parentNode = this._autoSizer.parentNode;\n        this._window = this._autoSizer.parentNode.ownerDocument.defaultView; // Defer requiring resize handler in order to support server-side rendering.\n        // See issue #41\n\n        this._detectElementResize = (0, _detectElementResize[\"default\"])(nonce, this._window);\n\n        this._detectElementResize.addResizeListener(this._parentNode, this._onResize);\n\n        this._onResize();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._detectElementResize && this._parentNode) {\n        this._detectElementResize.removeResizeListener(this._parentNode, this._onResize);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          className = _this$props2.className,\n          disableHeight = _this$props2.disableHeight,\n          disableWidth = _this$props2.disableWidth,\n          style = _this$props2.style;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width; // Outer div should not force width/height since that may prevent containers from shrinking.\n      // Inner component should overflow and use calculated width/height.\n      // See issue #68 for more information.\n\n      var outerStyle = {\n        overflow: 'visible'\n      };\n      var childParams = {};\n\n      if (!disableHeight) {\n        outerStyle.height = 0;\n        childParams.height = height;\n      }\n\n      if (!disableWidth) {\n        outerStyle.width = 0;\n        childParams.width = width;\n      }\n      /**\n       * TODO: Avoid rendering children before the initial measurements have been collected.\n       * At best this would just be wasting cycles.\n       * Add this check into version 10 though as it could break too many ref callbacks in version 9.\n       * Note that if default width/height props were provided this would still work with SSR.\n      if (\n        height !== 0 &&\n        width !== 0\n      ) {\n        child = children({ height, width })\n      }\n      */\n\n\n      return React.createElement(\"div\", {\n        className: className,\n        ref: this._setRef,\n        style: _objectSpread({}, outerStyle, {}, style)\n      }, children(childParams));\n    }\n  }]);\n  return AutoSizer;\n}(React.Component), (0, _defineProperty2[\"default\"])(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /** Function responsible for rendering children.*/\n  \"children\": _propTypes[\"default\"].func.isRequired,\n\n  /** Optional custom CSS class name to attach to root AutoSizer element.  */\n  \"className\": _propTypes[\"default\"].string,\n\n  /** Default height to use for initial render; useful for SSR */\n  \"defaultHeight\": _propTypes[\"default\"].number,\n\n  /** Default width to use for initial render; useful for SSR */\n  \"defaultWidth\": _propTypes[\"default\"].number,\n\n  /** Disable dynamic :height property */\n  \"disableHeight\": _propTypes[\"default\"].bool.isRequired,\n\n  /** Disable dynamic :width property */\n  \"disableWidth\": _propTypes[\"default\"].bool.isRequired,\n\n  /** Nonce of the inlined stylesheet for Content Security Policy */\n  \"nonce\": _propTypes[\"default\"].string,\n\n  /** Callback to be invoked on-resize */\n  \"onResize\": _propTypes[\"default\"].func.isRequired,\n\n  /** Optional inline style */\n  \"style\": _propTypes[\"default\"].object\n}), _temp);\nexports[\"default\"] = AutoSizer;\n(0, _defineProperty2[\"default\"])(AutoSizer, \"defaultProps\", {\n  onResize: function onResize() {},\n  disableHeight: false,\n  disableWidth: false,\n  style: {}\n});","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = createDetectElementResize;\n\n/**\n * Detect Element Resize.\n * https://github.com/sdecima/javascript-detect-element-resize\n * Sebastian Decima\n *\n * Forked from version 0.5.3; includes the following modifications:\n * 1) Guard against unsafe 'window' and 'document' references (to support SSR).\n * 2) Defer initialization code via a top-level function wrapper (to support SSR).\n * 3) Avoid unnecessary reflows by not measuring size for scroll events bubbling from children.\n * 4) Add nonce for style element.\n * 5) Added support for injecting custom window object\n **/\nfunction createDetectElementResize(nonce, hostWindow) {\n  // Check `document` and `window` in case of server-side rendering\n  var _window;\n\n  if (typeof hostWindow !== 'undefined') {\n    _window = hostWindow;\n  } else if (typeof window !== 'undefined') {\n    _window = window;\n  } else if (typeof self !== 'undefined') {\n    _window = self;\n  } else {\n    _window = global;\n  }\n\n  var attachEvent = typeof _window.document !== 'undefined' && _window.document.attachEvent;\n\n  if (!attachEvent) {\n    var requestFrame = function () {\n      var raf = _window.requestAnimationFrame || _window.mozRequestAnimationFrame || _window.webkitRequestAnimationFrame || function (fn) {\n        return _window.setTimeout(fn, 20);\n      };\n\n      return function (fn) {\n        return raf(fn);\n      };\n    }();\n\n    var cancelFrame = function () {\n      var cancel = _window.cancelAnimationFrame || _window.mozCancelAnimationFrame || _window.webkitCancelAnimationFrame || _window.clearTimeout;\n      return function (id) {\n        return cancel(id);\n      };\n    }();\n\n    var resetTriggers = function resetTriggers(element) {\n      var triggers = element.__resizeTriggers__,\n          expand = triggers.firstElementChild,\n          contract = triggers.lastElementChild,\n          expandChild = expand.firstElementChild;\n      contract.scrollLeft = contract.scrollWidth;\n      contract.scrollTop = contract.scrollHeight;\n      expandChild.style.width = expand.offsetWidth + 1 + 'px';\n      expandChild.style.height = expand.offsetHeight + 1 + 'px';\n      expand.scrollLeft = expand.scrollWidth;\n      expand.scrollTop = expand.scrollHeight;\n    };\n\n    var checkTriggers = function checkTriggers(element) {\n      return element.offsetWidth != element.__resizeLast__.width || element.offsetHeight != element.__resizeLast__.height;\n    };\n\n    var scrollListener = function scrollListener(e) {\n      // Don't measure (which forces) reflow for scrolls that happen inside of children!\n      if (e.target.className && typeof e.target.className.indexOf === 'function' && e.target.className.indexOf('contract-trigger') < 0 && e.target.className.indexOf('expand-trigger') < 0) {\n        return;\n      }\n\n      var element = this;\n      resetTriggers(this);\n\n      if (this.__resizeRAF__) {\n        cancelFrame(this.__resizeRAF__);\n      }\n\n      this.__resizeRAF__ = requestFrame(function () {\n        if (checkTriggers(element)) {\n          element.__resizeLast__.width = element.offsetWidth;\n          element.__resizeLast__.height = element.offsetHeight;\n\n          element.__resizeListeners__.forEach(function (fn) {\n            fn.call(element, e);\n          });\n        }\n      });\n    };\n    /* Detect CSS Animations support to detect element display/re-attach */\n\n\n    var animation = false,\n        keyframeprefix = '',\n        animationstartevent = 'animationstart',\n        domPrefixes = 'Webkit Moz O ms'.split(' '),\n        startEvents = 'webkitAnimationStart animationstart oAnimationStart MSAnimationStart'.split(' '),\n        pfx = '';\n    {\n      var elm = _window.document.createElement('fakeelement');\n\n      if (elm.style.animationName !== undefined) {\n        animation = true;\n      }\n\n      if (animation === false) {\n        for (var i = 0; i < domPrefixes.length; i++) {\n          if (elm.style[domPrefixes[i] + 'AnimationName'] !== undefined) {\n            pfx = domPrefixes[i];\n            keyframeprefix = '-' + pfx.toLowerCase() + '-';\n            animationstartevent = startEvents[i];\n            animation = true;\n            break;\n          }\n        }\n      }\n    }\n    var animationName = 'resizeanim';\n    var animationKeyframes = '@' + keyframeprefix + 'keyframes ' + animationName + ' { from { opacity: 0; } to { opacity: 0; } } ';\n    var animationStyle = keyframeprefix + 'animation: 1ms ' + animationName + '; ';\n  }\n\n  var createStyles = function createStyles(doc) {\n    if (!doc.getElementById('detectElementResize')) {\n      //opacity:0 works around a chrome bug https://code.google.com/p/chromium/issues/detail?id=286360\n      var css = (animationKeyframes ? animationKeyframes : '') + '.resize-triggers { ' + (animationStyle ? animationStyle : '') + 'visibility: hidden; opacity: 0; } ' + '.resize-triggers, .resize-triggers > div, .contract-trigger:before { content: \" \"; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; z-index: -1; } .resize-triggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',\n          head = doc.head || doc.getElementsByTagName('head')[0],\n          style = doc.createElement('style');\n      style.id = 'detectElementResize';\n      style.type = 'text/css';\n\n      if (nonce != null) {\n        style.setAttribute('nonce', nonce);\n      }\n\n      if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n      } else {\n        style.appendChild(doc.createTextNode(css));\n      }\n\n      head.appendChild(style);\n    }\n  };\n\n  var addResizeListener = function addResizeListener(element, fn) {\n    if (attachEvent) {\n      element.attachEvent('onresize', fn);\n    } else {\n      if (!element.__resizeTriggers__) {\n        var doc = element.ownerDocument;\n\n        var elementStyle = _window.getComputedStyle(element);\n\n        if (elementStyle && elementStyle.position == 'static') {\n          element.style.position = 'relative';\n        }\n\n        createStyles(doc);\n        element.__resizeLast__ = {};\n        element.__resizeListeners__ = [];\n        (element.__resizeTriggers__ = doc.createElement('div')).className = 'resize-triggers';\n        element.__resizeTriggers__.innerHTML = '<div class=\"expand-trigger\"><div></div></div>' + '<div class=\"contract-trigger\"></div>';\n        element.appendChild(element.__resizeTriggers__);\n        resetTriggers(element);\n        element.addEventListener('scroll', scrollListener, true);\n        /* Listen for a css animation to detect element display/re-attach */\n\n        if (animationstartevent) {\n          element.__resizeTriggers__.__animationListener__ = function animationListener(e) {\n            if (e.animationName == animationName) {\n              resetTriggers(element);\n            }\n          };\n\n          element.__resizeTriggers__.addEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n        }\n      }\n\n      element.__resizeListeners__.push(fn);\n    }\n  };\n\n  var removeResizeListener = function removeResizeListener(element, fn) {\n    if (attachEvent) {\n      element.detachEvent('onresize', fn);\n    } else {\n      element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n\n      if (!element.__resizeListeners__.length) {\n        element.removeEventListener('scroll', scrollListener, true);\n\n        if (element.__resizeTriggers__.__animationListener__) {\n          element.__resizeTriggers__.removeEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n\n          element.__resizeTriggers__.__animationListener__ = null;\n        }\n\n        try {\n          element.__resizeTriggers__ = !element.removeChild(element.__resizeTriggers__);\n        } catch (e) {// Preact compat; see developit/preact-compat/issues/228\n        }\n      }\n    }\n  };\n\n  return {\n    addResizeListener: addResizeListener,\n    removeResizeListener: removeResizeListener\n  };\n}","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;","/**\n * Helper method that determines when to recalculate row or column metadata.\n */\nexport default function calculateSizeAndPositionDataAndUpdateScrollOffset(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSize = _ref.cellSize,\n      computeMetadataCallback = _ref.computeMetadataCallback,\n      computeMetadataCallbackProps = _ref.computeMetadataCallbackProps,\n      nextCellsCount = _ref.nextCellsCount,\n      nextCellSize = _ref.nextCellSize,\n      nextScrollToIndex = _ref.nextScrollToIndex,\n      scrollToIndex = _ref.scrollToIndex,\n      updateScrollOffsetForScrollToIndex = _ref.updateScrollOffsetForScrollToIndex;\n\n  // Don't compare cell sizes if they are functions because inline functions would cause infinite loops.\n  // In that event users should use the manual recompute methods to inform of changes.\n  if (cellCount !== nextCellsCount || (typeof cellSize === 'number' || typeof nextCellSize === 'number') && cellSize !== nextCellSize) {\n    computeMetadataCallback(computeMetadataCallbackProps); // Updated cell metadata may have hidden the previous scrolled-to item.\n    // In this case we should also update the scrollTop to ensure it stays visible.\n\n    if (scrollToIndex >= 0 && scrollToIndex === nextScrollToIndex) {\n      updateScrollOffsetForScrollToIndex();\n    }\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\n/**\n * Just-in-time calculates and caches size and position information for a collection of cells.\n */\nvar CellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  // Cache of size and position data for cells, mapped by cell index.\n  // Note that invalid values may exist in this map so only rely on cells up to this._lastMeasuredIndex\n  // Measurements for cells up to this index can be trusted; cells afterward should be estimated.\n  // Used in deferred mode to track which cells have been queued for measurement.\n  function CellSizeAndPositionManager(_ref) {\n    var cellCount = _ref.cellCount,\n        cellSizeGetter = _ref.cellSizeGetter,\n        estimatedCellSize = _ref.estimatedCellSize;\n\n    _classCallCheck(this, CellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionData\", {});\n\n    _defineProperty(this, \"_lastMeasuredIndex\", -1);\n\n    _defineProperty(this, \"_lastBatchedIndex\", -1);\n\n    _defineProperty(this, \"_cellCount\", void 0);\n\n    _defineProperty(this, \"_cellSizeGetter\", void 0);\n\n    _defineProperty(this, \"_estimatedCellSize\", void 0);\n\n    this._cellSizeGetter = cellSizeGetter;\n    this._cellCount = cellCount;\n    this._estimatedCellSize = estimatedCellSize;\n  }\n\n  _createClass(CellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return false;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(_ref2) {\n      var cellCount = _ref2.cellCount,\n          estimatedCellSize = _ref2.estimatedCellSize,\n          cellSizeGetter = _ref2.cellSizeGetter;\n      this._cellCount = cellCount;\n      this._estimatedCellSize = estimatedCellSize;\n      this._cellSizeGetter = cellSizeGetter;\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellCount;\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._estimatedCellSize;\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._lastMeasuredIndex;\n    }\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment() {\n      return 0;\n    }\n    /**\n     * This method returns the size and position for the cell at the specified index.\n     * It just-in-time calculates (or used cached values) for cells leading up to the index.\n     */\n\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      if (index < 0 || index >= this._cellCount) {\n        throw Error(\"Requested index \".concat(index, \" is outside of range 0..\").concat(this._cellCount));\n      }\n\n      if (index > this._lastMeasuredIndex) {\n        var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n        var offset = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n\n        for (var i = this._lastMeasuredIndex + 1; i <= index; i++) {\n          var size = this._cellSizeGetter({\n            index: i\n          }); // undefined or NaN probably means a logic error in the size getter.\n          // null means we're using CellMeasurer and haven't yet measured a given index.\n\n\n          if (size === undefined || isNaN(size)) {\n            throw Error(\"Invalid size returned for cell \".concat(i, \" of value \").concat(size));\n          } else if (size === null) {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: 0\n            };\n            this._lastBatchedIndex = index;\n          } else {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: size\n            };\n            offset += size;\n            this._lastMeasuredIndex = index;\n          }\n        }\n      }\n\n      return this._cellSizeAndPositionData[index];\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._lastMeasuredIndex >= 0 ? this._cellSizeAndPositionData[this._lastMeasuredIndex] : {\n        offset: 0,\n        size: 0\n      };\n    }\n    /**\n     * Total size of all cells being measured.\n     * This value will be completely estimated initially.\n     * As cells are measured, the estimate will be updated.\n     */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var totalSizeOfMeasuredCells = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n      var numUnmeasuredCells = this._cellCount - this._lastMeasuredIndex - 1;\n      var totalSizeOfUnmeasuredCells = numUnmeasuredCells * this._estimatedCellSize;\n      return totalSizeOfMeasuredCells + totalSizeOfUnmeasuredCells;\n    }\n    /**\n     * Determines a new offset that ensures a certain cell is visible, given the current offset.\n     * If the cell is already visible then the current offset will be returned.\n     * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n     *\n     * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n     * @param containerSize Size (width or height) of the container viewport\n     * @param currentOffset Container's current (x or y) offset\n     * @param totalSize Total size (width or height) of all cells\n     * @return Offset to use to ensure the specified cell is visible\n     */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n\n      if (containerSize <= 0) {\n        return 0;\n      }\n\n      var datum = this.getSizeAndPositionOfCell(targetIndex);\n      var maxOffset = datum.offset;\n      var minOffset = maxOffset - containerSize + datum.size;\n      var idealOffset;\n\n      switch (align) {\n        case 'start':\n          idealOffset = maxOffset;\n          break;\n\n        case 'end':\n          idealOffset = minOffset;\n          break;\n\n        case 'center':\n          idealOffset = maxOffset - (containerSize - datum.size) / 2;\n          break;\n\n        default:\n          idealOffset = Math.max(minOffset, Math.min(maxOffset, currentOffset));\n          break;\n      }\n\n      var totalSize = this.getTotalSize();\n      return Math.max(0, Math.min(totalSize - containerSize, idealOffset));\n    }\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(params) {\n      var containerSize = params.containerSize,\n          offset = params.offset;\n      var totalSize = this.getTotalSize();\n\n      if (totalSize === 0) {\n        return {};\n      }\n\n      var maxOffset = offset + containerSize;\n\n      var start = this._findNearestCell(offset);\n\n      var datum = this.getSizeAndPositionOfCell(start);\n      offset = datum.offset + datum.size;\n      var stop = start;\n\n      while (offset < maxOffset && stop < this._cellCount - 1) {\n        stop++;\n        offset += this.getSizeAndPositionOfCell(stop).size;\n      }\n\n      return {\n        start: start,\n        stop: stop\n      };\n    }\n    /**\n     * Clear all cached values for cells after the specified index.\n     * This method should be called for any cell that has changed its size.\n     * It will not immediately perform any calculations; they'll be performed the next time getSizeAndPositionOfCell() is called.\n     */\n\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._lastMeasuredIndex = Math.min(this._lastMeasuredIndex, index - 1);\n    }\n  }, {\n    key: \"_binarySearch\",\n    value: function _binarySearch(high, low, offset) {\n      while (low <= high) {\n        var middle = low + Math.floor((high - low) / 2);\n        var currentOffset = this.getSizeAndPositionOfCell(middle).offset;\n\n        if (currentOffset === offset) {\n          return middle;\n        } else if (currentOffset < offset) {\n          low = middle + 1;\n        } else if (currentOffset > offset) {\n          high = middle - 1;\n        }\n      }\n\n      if (low > 0) {\n        return low - 1;\n      } else {\n        return 0;\n      }\n    }\n  }, {\n    key: \"_exponentialSearch\",\n    value: function _exponentialSearch(index, offset) {\n      var interval = 1;\n\n      while (index < this._cellCount && this.getSizeAndPositionOfCell(index).offset < offset) {\n        index += interval;\n        interval *= 2;\n      }\n\n      return this._binarySearch(Math.min(index, this._cellCount - 1), Math.floor(index / 2), offset);\n    }\n    /**\n     * Searches for the cell (index) nearest the specified offset.\n     *\n     * If no exact match is found the next lowest cell index will be returned.\n     * This allows partially visible cells (with offsets just before/above the fold) to be visible.\n     */\n\n  }, {\n    key: \"_findNearestCell\",\n    value: function _findNearestCell(offset) {\n      if (isNaN(offset)) {\n        throw Error(\"Invalid offset \".concat(offset, \" specified\"));\n      } // Our search algorithms find the nearest match at or below the specified offset.\n      // So make sure the offset is at least 0 or no match will be found.\n\n\n      offset = Math.max(0, offset);\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var lastMeasuredIndex = Math.max(0, this._lastMeasuredIndex);\n\n      if (lastMeasuredCellSizeAndPosition.offset >= offset) {\n        // If we've already measured cells within this range just use a binary search as it's faster.\n        return this._binarySearch(lastMeasuredIndex, 0, offset);\n      } else {\n        // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n        // The exponential search avoids pre-computing sizes for the full set of cells as a binary search would.\n        // The overall complexity for this approach is O(log n).\n        return this._exponentialSearch(lastMeasuredIndex, offset);\n      }\n    }\n  }]);\n\n  return CellSizeAndPositionManager;\n}();\n\nexport { CellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","var DEFAULT_MAX_ELEMENT_SIZE = 1500000;\nvar CHROME_MAX_ELEMENT_SIZE = 1.67771e7;\n\nvar isBrowser = function isBrowser() {\n  return typeof window !== 'undefined';\n};\n\nvar isChrome = function isChrome() {\n  return !!window.chrome;\n};\n\nexport var getMaxElementSize = function getMaxElementSize() {\n  if (isBrowser()) {\n    if (isChrome()) {\n      return CHROME_MAX_ELEMENT_SIZE;\n    }\n  }\n\n  return DEFAULT_MAX_ELEMENT_SIZE;\n};","import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport CellSizeAndPositionManager from './CellSizeAndPositionManager';\nimport { getMaxElementSize } from './maxElementSize.js';\n\n/**\n * Extends CellSizeAndPositionManager and adds scaling behavior for lists that are too large to fit within a browser's native limits.\n */\nvar ScalingCellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  function ScalingCellSizeAndPositionManager(_ref) {\n    var _ref$maxScrollSize = _ref.maxScrollSize,\n        maxScrollSize = _ref$maxScrollSize === void 0 ? getMaxElementSize() : _ref$maxScrollSize,\n        params = _objectWithoutProperties(_ref, [\"maxScrollSize\"]);\n\n    _classCallCheck(this, ScalingCellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionManager\", void 0);\n\n    _defineProperty(this, \"_maxScrollSize\", void 0);\n\n    // Favor composition over inheritance to simplify IE10 support\n    this._cellSizeAndPositionManager = new CellSizeAndPositionManager(params);\n    this._maxScrollSize = maxScrollSize;\n  }\n\n  _createClass(ScalingCellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return this._cellSizeAndPositionManager.getTotalSize() > this._maxScrollSize;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(params) {\n      this._cellSizeAndPositionManager.configure(params);\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellSizeAndPositionManager.getCellCount();\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._cellSizeAndPositionManager.getEstimatedCellSize();\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._cellSizeAndPositionManager.getLastMeasuredIndex();\n    }\n    /**\n     * Number of pixels a cell at the given position (offset) should be shifted in order to fit within the scaled container.\n     * The offset passed to this function is scaled (safe) as well.\n     */\n\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment(_ref2) {\n      var containerSize = _ref2.containerSize,\n          offset = _ref2.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      var offsetPercentage = this._getOffsetPercentage({\n        containerSize: containerSize,\n        offset: offset,\n        totalSize: safeTotalSize\n      });\n\n      return Math.round(offsetPercentage * (safeTotalSize - totalSize));\n    }\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfCell(index);\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfLastMeasuredCell();\n    }\n    /** See CellSizeAndPositionManager#getTotalSize */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return Math.min(this._maxScrollSize, this._cellSizeAndPositionManager.getTotalSize());\n    }\n    /** See CellSizeAndPositionManager#getUpdatedOffsetForIndex */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n      currentOffset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: currentOffset\n      });\n\n      var offset = this._cellSizeAndPositionManager.getUpdatedOffsetForIndex({\n        align: align,\n        containerSize: containerSize,\n        currentOffset: currentOffset,\n        targetIndex: targetIndex\n      });\n\n      return this._offsetToSafeOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n    /** See CellSizeAndPositionManager#getVisibleCellRange */\n\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(_ref4) {\n      var containerSize = _ref4.containerSize,\n          offset = _ref4.offset;\n      offset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n      return this._cellSizeAndPositionManager.getVisibleCellRange({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._cellSizeAndPositionManager.resetCell(index);\n    }\n  }, {\n    key: \"_getOffsetPercentage\",\n    value: function _getOffsetPercentage(_ref5) {\n      var containerSize = _ref5.containerSize,\n          offset = _ref5.offset,\n          totalSize = _ref5.totalSize;\n      return totalSize <= containerSize ? 0 : offset / (totalSize - containerSize);\n    }\n  }, {\n    key: \"_offsetToSafeOffset\",\n    value: function _offsetToSafeOffset(_ref6) {\n      var containerSize = _ref6.containerSize,\n          offset = _ref6.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: totalSize\n        });\n\n        return Math.round(offsetPercentage * (safeTotalSize - containerSize));\n      }\n    }\n  }, {\n    key: \"_safeOffsetToOffset\",\n    value: function _safeOffsetToOffset(_ref7) {\n      var containerSize = _ref7.containerSize,\n          offset = _ref7.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: safeTotalSize\n        });\n\n        return Math.round(offsetPercentage * (totalSize - containerSize));\n      }\n    }\n  }]);\n\n  return ScalingCellSizeAndPositionManager;\n}();\n\nexport { ScalingCellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","/**\n * Helper utility that updates the specified callback whenever any of the specified indices have changed.\n */\nexport default function createCallbackMemoizer() {\n  var requireAllKeys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  var cachedIndices = {};\n  return function (_ref) {\n    var callback = _ref.callback,\n        indices = _ref.indices;\n    var keys = Object.keys(indices);\n    var allInitialized = !requireAllKeys || keys.every(function (key) {\n      var value = indices[key];\n      return Array.isArray(value) ? value.length > 0 : value >= 0;\n    });\n    var indexChanged = keys.length !== Object.keys(cachedIndices).length || keys.some(function (key) {\n      var cachedValue = cachedIndices[key];\n      var value = indices[key];\n      return Array.isArray(value) ? cachedValue.join(',') !== value.join(',') : cachedValue !== value;\n    });\n    cachedIndices = indices;\n\n    if (allInitialized && indexChanged) {\n      callback(indices);\n    }\n  };\n}","import ScalingCellSizeAndPositionManager from './ScalingCellSizeAndPositionManager.js';\n/**\n * Helper function that determines when to update scroll offsets to ensure that a scroll-to-index remains visible.\n * This function also ensures that the scroll ofset isn't past the last column/row of cells.\n */\n\nexport default function updateScrollIndexHelper(_ref) {\n  var cellSize = _ref.cellSize,\n      cellSizeAndPositionManager = _ref.cellSizeAndPositionManager,\n      previousCellsCount = _ref.previousCellsCount,\n      previousCellSize = _ref.previousCellSize,\n      previousScrollToAlignment = _ref.previousScrollToAlignment,\n      previousScrollToIndex = _ref.previousScrollToIndex,\n      previousSize = _ref.previousSize,\n      scrollOffset = _ref.scrollOffset,\n      scrollToAlignment = _ref.scrollToAlignment,\n      scrollToIndex = _ref.scrollToIndex,\n      size = _ref.size,\n      sizeJustIncreasedFromZero = _ref.sizeJustIncreasedFromZero,\n      updateScrollIndexCallback = _ref.updateScrollIndexCallback;\n  var cellCount = cellSizeAndPositionManager.getCellCount();\n  var hasScrollToIndex = scrollToIndex >= 0 && scrollToIndex < cellCount;\n  var sizeHasChanged = size !== previousSize || sizeJustIncreasedFromZero || !previousCellSize || typeof cellSize === 'number' && cellSize !== previousCellSize; // If we have a new scroll target OR if height/row-height has changed,\n  // We should ensure that the scroll target is visible.\n\n  if (hasScrollToIndex && (sizeHasChanged || scrollToAlignment !== previousScrollToAlignment || scrollToIndex !== previousScrollToIndex)) {\n    updateScrollIndexCallback(scrollToIndex); // If we don't have a selected item but list size or number of children have decreased,\n    // Make sure we aren't scrolled too far past the current content.\n  } else if (!hasScrollToIndex && cellCount > 0 && (size < previousSize || cellCount < previousCellsCount)) {\n    // We need to ensure that the current scroll offset is still within the collection's range.\n    // To do this, we don't need to measure everything; CellMeasurer would perform poorly.\n    // Just check to make sure we're still okay.\n    // Only adjust the scroll position if we've scrolled below the last set of rows.\n    if (scrollOffset > cellSizeAndPositionManager.getTotalSize() - size) {\n      updateScrollIndexCallback(cellCount - 1);\n    }\n  }\n}\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSize } from \"../types\";","// Properly handle server-side rendering.\nvar win;\n\nif (typeof window !== 'undefined') {\n  win = window;\n} else if (typeof self !== 'undefined') {\n  win = self;\n} else {\n  win = {};\n} // requestAnimationFrame() shim by Paul Irish\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\nvar request = win.requestAnimationFrame || win.webkitRequestAnimationFrame || win.mozRequestAnimationFrame || win.oRequestAnimationFrame || win.msRequestAnimationFrame || function (callback) {\n  return win.setTimeout(callback, 1000 / 60);\n};\n\nvar cancel = win.cancelAnimationFrame || win.webkitCancelAnimationFrame || win.mozCancelAnimationFrame || win.oCancelAnimationFrame || win.msCancelAnimationFrame || function (id) {\n  win.clearTimeout(id);\n};\n\nexport var raf = request;\nexport var caf = cancel;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport calculateSizeAndPositionDataAndUpdateScrollOffset from './utils/calculateSizeAndPositionDataAndUpdateScrollOffset';\nimport ScalingCellSizeAndPositionManager from './utils/ScalingCellSizeAndPositionManager';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport defaultOverscanIndicesGetter, { SCROLL_DIRECTION_BACKWARD, SCROLL_DIRECTION_FORWARD } from './defaultOverscanIndicesGetter';\nimport updateScrollIndexHelper from './utils/updateScrollIndexHelper';\nimport defaultCellRangeRenderer from './defaultCellRangeRenderer';\nimport scrollbarSize from 'dom-helpers/scrollbarSize';\nimport { polyfill } from 'react-lifecycles-compat';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n\nvar renderNull = function renderNull() {\n  return null;\n};\n\n/**\n * Renders tabular data with virtualization along the vertical and horizontal axes.\n * Row heights and column widths must be known ahead of time and specified as properties.\n */\nvar Grid = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Grid, _React$PureComponent);\n\n  // Invokes onSectionRendered callback only when start/stop row or column indices change\n  function Grid(props) {\n    var _this;\n\n    _classCallCheck(this, Grid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Grid).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"_onGridRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollLeftFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollTopFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_horizontalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_verticalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollbarPresenceChanged\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollingContainer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_childrenToDisplay\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollTop\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollLeft\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_disablePointerEventsTimeoutId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_styleCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceScrollEndedCallback\", function () {\n      _this._disablePointerEventsTimeoutId = null; // isScrolling is used to determine if we reset styleCache\n\n      _this.setState({\n        isScrolling: false,\n        needToResetStyleCache: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnGridRenderedHelper\", function () {\n      var onSectionRendered = _this.props.onSectionRendered;\n\n      _this._onGridRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          columnOverscanStartIndex: _this._columnStartIndex,\n          columnOverscanStopIndex: _this._columnStopIndex,\n          columnStartIndex: _this._renderedColumnStartIndex,\n          columnStopIndex: _this._renderedColumnStopIndex,\n          rowOverscanStartIndex: _this._rowStartIndex,\n          rowOverscanStopIndex: _this._rowStopIndex,\n          rowStartIndex: _this._renderedRowStartIndex,\n          rowStopIndex: _this._renderedRowStopIndex\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target === _this._scrollingContainer) {\n        _this.handleScrollEvent(event.target);\n      }\n    });\n\n    var columnSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.columnCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.columnWidth)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedColumnSize(props)\n    });\n    var rowSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.rowCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.rowHeight)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedRowSize(props)\n    });\n    _this.state = {\n      instanceProps: {\n        columnSizeAndPositionManager: columnSizeAndPositionManager,\n        rowSizeAndPositionManager: rowSizeAndPositionManager,\n        prevColumnWidth: props.columnWidth,\n        prevRowHeight: props.rowHeight,\n        prevColumnCount: props.columnCount,\n        prevRowCount: props.rowCount,\n        prevIsScrolling: props.isScrolling === true,\n        prevScrollToColumn: props.scrollToColumn,\n        prevScrollToRow: props.scrollToRow,\n        scrollbarSize: 0,\n        scrollbarSizeMeasured: false\n      },\n      isScrolling: false,\n      scrollDirectionHorizontal: SCROLL_DIRECTION_FORWARD,\n      scrollDirectionVertical: SCROLL_DIRECTION_FORWARD,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollPositionChangeReason: null,\n      needToResetStyleCache: false\n    };\n\n    if (props.scrollToRow > 0) {\n      _this._initialScrollTop = _this._getCalculatedScrollTop(props, _this.state);\n    }\n\n    if (props.scrollToColumn > 0) {\n      _this._initialScrollLeft = _this._getCalculatedScrollLeft(props, _this.state);\n    }\n\n    return _this;\n  }\n  /**\n   * Gets offsets for a given cell and alignment.\n   */\n\n\n  _createClass(Grid, [{\n    key: \"getOffsetForCell\",\n    value: function getOffsetForCell() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$alignment = _ref.alignment,\n          alignment = _ref$alignment === void 0 ? this.props.scrollToAlignment : _ref$alignment,\n          _ref$columnIndex = _ref.columnIndex,\n          columnIndex = _ref$columnIndex === void 0 ? this.props.scrollToColumn : _ref$columnIndex,\n          _ref$rowIndex = _ref.rowIndex,\n          rowIndex = _ref$rowIndex === void 0 ? this.props.scrollToRow : _ref$rowIndex;\n\n      var offsetProps = _objectSpread({}, this.props, {\n        scrollToAlignment: alignment,\n        scrollToColumn: columnIndex,\n        scrollToRow: rowIndex\n      });\n\n      return {\n        scrollLeft: this._getCalculatedScrollLeft(offsetProps),\n        scrollTop: this._getCalculatedScrollTop(offsetProps)\n      };\n    }\n    /**\n     * Gets estimated total rows' height.\n     */\n\n  }, {\n    key: \"getTotalRowsHeight\",\n    value: function getTotalRowsHeight() {\n      return this.state.instanceProps.rowSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * Gets estimated total columns' width.\n     */\n\n  }, {\n    key: \"getTotalColumnsWidth\",\n    value: function getTotalColumnsWidth() {\n      return this.state.instanceProps.columnSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * This method handles a scroll event originating from an external scroll control.\n     * It's an advanced method and should probably not be used unless you're implementing a custom scroll-bar solution.\n     */\n\n  }, {\n    key: \"handleScrollEvent\",\n    value: function handleScrollEvent(_ref2) {\n      var _ref2$scrollLeft = _ref2.scrollLeft,\n          scrollLeftParam = _ref2$scrollLeft === void 0 ? 0 : _ref2$scrollLeft,\n          _ref2$scrollTop = _ref2.scrollTop,\n          scrollTopParam = _ref2$scrollTop === void 0 ? 0 : _ref2$scrollTop;\n\n      // On iOS, we can arrive at negative offsets by swiping past the start.\n      // To prevent flicker here, we make playing in the negative offset zone cause nothing to happen.\n      if (scrollTopParam < 0) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      this._debounceScrollEnded();\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          autoWidth = _this$props.autoWidth,\n          height = _this$props.height,\n          width = _this$props.width;\n      var instanceProps = this.state.instanceProps; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollbarSize = instanceProps.scrollbarSize;\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var scrollLeft = Math.min(Math.max(0, totalColumnsWidth - width + scrollbarSize), scrollLeftParam);\n      var scrollTop = Math.min(Math.max(0, totalRowsHeight - height + scrollbarSize), scrollTopParam); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (this.state.scrollLeft !== scrollLeft || this.state.scrollTop !== scrollTop) {\n        // Track scrolling direction so we can more efficiently overscan rows to reduce empty space around the edges while scrolling.\n        // Don't change direction for an axis unless scroll offset has changed.\n        var scrollDirectionHorizontal = scrollLeft !== this.state.scrollLeft ? scrollLeft > this.state.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionHorizontal;\n        var scrollDirectionVertical = scrollTop !== this.state.scrollTop ? scrollTop > this.state.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionVertical;\n        var newState = {\n          isScrolling: true,\n          scrollDirectionHorizontal: scrollDirectionHorizontal,\n          scrollDirectionVertical: scrollDirectionVertical,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.OBSERVED\n        };\n\n        if (!autoHeight) {\n          newState.scrollTop = scrollTop;\n        }\n\n        if (!autoWidth) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        newState.needToResetStyleCache = false;\n        this.setState(newState);\n      }\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalColumnsWidth: totalColumnsWidth,\n        totalRowsHeight: totalRowsHeight\n      });\n    }\n    /**\n     * Invalidate Grid size and recompute visible cells.\n     * This is a deferred wrapper for recomputeGridSize().\n     * It sets a flag to be evaluated on cDM/cDU to avoid unnecessary renders.\n     * This method is intended for advanced use-cases like CellMeasurer.\n     */\n    // @TODO (bvaughn) Add automated test coverage for this.\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rowIndex = _ref3.rowIndex;\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /**\n     * Pre-measure all columns and rows in a Grid.\n     * Typically cells are only measured as needed and estimated sizes are used for cells that have not yet been measured.\n     * This method ensures that the next call to getTotalSize() returns an exact size (as opposed to just an estimated one).\n     */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      var _this$props2 = this.props,\n          columnCount = _this$props2.columnCount,\n          rowCount = _this$props2.rowCount;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.getSizeAndPositionOfCell(columnCount - 1);\n      instanceProps.rowSizeAndPositionManager.getSizeAndPositionOfCell(rowCount - 1);\n    }\n    /**\n     * Forced recompute of row heights and column widths.\n     * This function should be called if dynamic column or row sizes have changed but nothing else has.\n     * Since Grid only receives :columnCount and :rowCount it has no way of detecting when the underlying data changes.\n     */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref4$columnIndex = _ref4.columnIndex,\n          columnIndex = _ref4$columnIndex === void 0 ? 0 : _ref4$columnIndex,\n          _ref4$rowIndex = _ref4.rowIndex,\n          rowIndex = _ref4$rowIndex === void 0 ? 0 : _ref4$rowIndex;\n\n      var _this$props3 = this.props,\n          scrollToColumn = _this$props3.scrollToColumn,\n          scrollToRow = _this$props3.scrollToRow;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.resetCell(columnIndex);\n      instanceProps.rowSizeAndPositionManager.resetCell(rowIndex); // Cell sizes may be determined by a function property.\n      // In this case the cDU handler can't know if they changed.\n      // Store this flag to let the next cDU pass know it needs to recompute the scroll offset.\n\n      this._recomputeScrollLeftFlag = scrollToColumn >= 0 && (this.state.scrollDirectionHorizontal === SCROLL_DIRECTION_FORWARD ? columnIndex <= scrollToColumn : columnIndex >= scrollToColumn);\n      this._recomputeScrollTopFlag = scrollToRow >= 0 && (this.state.scrollDirectionVertical === SCROLL_DIRECTION_FORWARD ? rowIndex <= scrollToRow : rowIndex >= scrollToRow); // Clear cell cache in case we are scrolling;\n      // Invalid row heights likely mean invalid cached content as well.\n\n      this._styleCache = {};\n      this._cellCache = {};\n      this.forceUpdate();\n    }\n    /**\n     * Ensure column and row are visible.\n     */\n\n  }, {\n    key: \"scrollToCell\",\n    value: function scrollToCell(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n      var columnCount = this.props.columnCount;\n      var props = this.props; // Don't adjust scroll offset for single-column grids (eg List, Table).\n      // This can cause a funky scroll offset because of the vertical scrollbar width.\n\n      if (columnCount > 1 && columnIndex !== undefined) {\n        this._updateScrollLeftForScrollToColumn(_objectSpread({}, props, {\n          scrollToColumn: columnIndex\n        }));\n      }\n\n      if (rowIndex !== undefined) {\n        this._updateScrollTopForScrollToRow(_objectSpread({}, props, {\n          scrollToRow: rowIndex\n        }));\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          getScrollbarSize = _this$props4.getScrollbarSize,\n          height = _this$props4.height,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToColumn = _this$props4.scrollToColumn,\n          scrollTop = _this$props4.scrollTop,\n          scrollToRow = _this$props4.scrollToRow,\n          width = _this$props4.width;\n      var instanceProps = this.state.instanceProps; // Reset initial offsets to be ignored in browser\n\n      this._initialScrollTop = 0;\n      this._initialScrollLeft = 0; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n\n      if (!instanceProps.scrollbarSizeMeasured) {\n        this.setState(function (prevState) {\n          var stateUpdate = _objectSpread({}, prevState, {\n            needToResetStyleCache: false\n          });\n\n          stateUpdate.instanceProps.scrollbarSize = getScrollbarSize();\n          stateUpdate.instanceProps.scrollbarSizeMeasured = true;\n          return stateUpdate;\n        });\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 || typeof scrollTop === 'number' && scrollTop >= 0) {\n        var stateUpdate = Grid._getScrollToPositionStateUpdate({\n          prevState: this.state,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        if (stateUpdate) {\n          stateUpdate.needToResetStyleCache = false;\n          this.setState(stateUpdate);\n        }\n      } // refs don't work in `react-test-renderer`\n\n\n      if (this._scrollingContainer) {\n        // setting the ref's scrollLeft and scrollTop.\n        // Somehow in MultiGrid the main grid doesn't trigger a update on mount.\n        if (this._scrollingContainer.scrollLeft !== this.state.scrollLeft) {\n          this._scrollingContainer.scrollLeft = this.state.scrollLeft;\n        }\n\n        if (this._scrollingContainer.scrollTop !== this.state.scrollTop) {\n          this._scrollingContainer.scrollTop = this.state.scrollTop;\n        }\n      } // Don't update scroll offset if the size is 0; we don't render any cells in this case.\n      // Setting a state may cause us to later thing we've updated the offce when we haven't.\n\n\n      var sizeIsBiggerThanZero = height > 0 && width > 0;\n\n      if (scrollToColumn >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollLeftForScrollToColumn();\n      }\n\n      if (scrollToRow >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollTopForScrollToRow();\n      } // Update onRowsRendered callback\n\n\n      this._invokeOnGridRenderedHelper(); // Initialize onScroll callback\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalColumnsWidth: instanceProps.columnSizeAndPositionManager.getTotalSize(),\n        totalRowsHeight: instanceProps.rowSizeAndPositionManager.getTotalSize()\n      });\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) New scroll-to-cell props have been set\n     */\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      var _this$props5 = this.props,\n          autoHeight = _this$props5.autoHeight,\n          autoWidth = _this$props5.autoWidth,\n          columnCount = _this$props5.columnCount,\n          height = _this$props5.height,\n          rowCount = _this$props5.rowCount,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToColumn = _this$props5.scrollToColumn,\n          scrollToRow = _this$props5.scrollToRow,\n          width = _this$props5.width;\n      var _this$state = this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollPositionChangeReason = _this$state.scrollPositionChangeReason,\n          scrollTop = _this$state.scrollTop,\n          instanceProps = _this$state.instanceProps; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // Handle edge case where column or row count has only just increased over 0.\n      // In this case we may have to restore a previously-specified scroll offset.\n      // For more info see bvaughn/react-virtualized/issues/218\n\n\n      var columnOrRowCountJustIncreasedFromZero = columnCount > 0 && prevProps.columnCount === 0 || rowCount > 0 && prevProps.rowCount === 0; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        // @TRICKY :autoHeight and :autoWidth properties instructs Grid to leave :scrollTop and :scrollLeft management to an external HOC (eg WindowScroller).\n        // In this case we should avoid checking scrollingContainer.scrollTop and scrollingContainer.scrollLeft since it forces layout/flow.\n        if (!autoWidth && scrollLeft >= 0 && (scrollLeft !== this._scrollingContainer.scrollLeft || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (!autoHeight && scrollTop >= 0 && (scrollTop !== this._scrollingContainer.scrollTop || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Special case where the previous size was 0:\n      // In this case we don't show any windowed cells at all.\n      // So we should always recalculate offset afterwards.\n\n\n      var sizeJustIncreasedFromZero = (prevProps.width === 0 || prevProps.height === 0) && height > 0 && width > 0; // Update scroll offsets if the current :scrollToColumn or :scrollToRow values requires it\n      // @TODO Do we also need this check or can the one in componentWillUpdate() suffice?\n\n      if (this._recomputeScrollLeftFlag) {\n        this._recomputeScrollLeftFlag = false;\n\n        this._updateScrollLeftForScrollToColumn(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          previousCellsCount: prevProps.columnCount,\n          previousCellSize: prevProps.columnWidth,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToColumn,\n          previousSize: prevProps.width,\n          scrollOffset: scrollLeft,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToColumn,\n          size: width,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollLeftForScrollToColumn(_this2.props);\n          }\n        });\n      }\n\n      if (this._recomputeScrollTopFlag) {\n        this._recomputeScrollTopFlag = false;\n\n        this._updateScrollTopForScrollToRow(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          previousCellsCount: prevProps.rowCount,\n          previousCellSize: prevProps.rowHeight,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToRow,\n          previousSize: prevProps.height,\n          scrollOffset: scrollTop,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToRow,\n          size: height,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollTopForScrollToRow(_this2.props);\n          }\n        });\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnGridRenderedHelper(); // Changes to :scrollLeft or :scrollTop should also notify :onScroll listeners\n\n\n      if (scrollLeft !== prevState.scrollLeft || scrollTop !== prevState.scrollTop) {\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n\n        this._invokeOnScrollMemoizer({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          totalColumnsWidth: totalColumnsWidth,\n          totalRowsHeight: totalRowsHeight\n        });\n      }\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n    /**\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoContainerWidth = _this$props6.autoContainerWidth,\n          autoHeight = _this$props6.autoHeight,\n          autoWidth = _this$props6.autoWidth,\n          className = _this$props6.className,\n          containerProps = _this$props6.containerProps,\n          containerRole = _this$props6.containerRole,\n          containerStyle = _this$props6.containerStyle,\n          height = _this$props6.height,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          role = _this$props6.role,\n          style = _this$props6.style,\n          tabIndex = _this$props6.tabIndex,\n          width = _this$props6.width;\n      var _this$state2 = this.state,\n          instanceProps = _this$state2.instanceProps,\n          needToResetStyleCache = _this$state2.needToResetStyleCache;\n\n      var isScrolling = this._isScrolling();\n\n      var gridStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        width: autoWidth ? 'auto' : width,\n        WebkitOverflowScrolling: 'touch',\n        willChange: 'transform'\n      };\n\n      if (needToResetStyleCache) {\n        this._styleCache = {};\n      } // calculate _styleCache here\n      // if state.isScrolling (not from _isScrolling) then reset\n\n\n      if (!this.state.isScrolling) {\n        this._resetStyleCache();\n      } // calculate children to render here\n\n\n      this._calculateChildrenToRender(this.props, this.state);\n\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize(); // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n      var horizontalScrollBarSize = totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n\n      if (horizontalScrollBarSize !== this._horizontalScrollBarSize || verticalScrollBarSize !== this._verticalScrollBarSize) {\n        this._horizontalScrollBarSize = horizontalScrollBarSize;\n        this._verticalScrollBarSize = verticalScrollBarSize;\n        this._scrollbarPresenceChanged = true;\n      } // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n\n      gridStyle.overflowX = totalColumnsWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      gridStyle.overflowY = totalRowsHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      var childrenToDisplay = this._childrenToDisplay;\n      var showNoContentRenderer = childrenToDisplay.length === 0 && height > 0 && width > 0;\n      return React.createElement(\"div\", _extends({\n        ref: this._setScrollingContainerRef\n      }, containerProps, {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-readonly\": this.props['aria-readonly'],\n        className: clsx('ReactVirtualized__Grid', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({}, gridStyle, {}, style),\n        tabIndex: tabIndex\n      }), childrenToDisplay.length > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Grid__innerScrollContainer\",\n        role: containerRole,\n        style: _objectSpread({\n          width: autoContainerWidth ? 'auto' : totalColumnsWidth,\n          height: totalRowsHeight,\n          maxWidth: totalColumnsWidth,\n          maxHeight: totalRowsHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }, containerStyle)\n      }, childrenToDisplay), showNoContentRenderer && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n  }, {\n    key: \"_calculateChildrenToRender\",\n    value: function _calculateChildrenToRender() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      var cellRenderer = props.cellRenderer,\n          cellRangeRenderer = props.cellRangeRenderer,\n          columnCount = props.columnCount,\n          deferredMeasurementCache = props.deferredMeasurementCache,\n          height = props.height,\n          overscanColumnCount = props.overscanColumnCount,\n          overscanIndicesGetter = props.overscanIndicesGetter,\n          overscanRowCount = props.overscanRowCount,\n          rowCount = props.rowCount,\n          width = props.width,\n          isScrollingOptOut = props.isScrollingOptOut;\n      var scrollDirectionHorizontal = state.scrollDirectionHorizontal,\n          scrollDirectionVertical = state.scrollDirectionVertical,\n          instanceProps = state.instanceProps;\n      var scrollTop = this._initialScrollTop > 0 ? this._initialScrollTop : state.scrollTop;\n      var scrollLeft = this._initialScrollLeft > 0 ? this._initialScrollLeft : state.scrollLeft;\n\n      var isScrolling = this._isScrolling(props, state);\n\n      this._childrenToDisplay = []; // Render only enough columns and rows to cover the visible area of the grid.\n\n      if (height > 0 && width > 0) {\n        var visibleColumnIndices = instanceProps.columnSizeAndPositionManager.getVisibleCellRange({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var visibleRowIndices = instanceProps.rowSizeAndPositionManager.getVisibleCellRange({\n          containerSize: height,\n          offset: scrollTop\n        });\n        var horizontalOffsetAdjustment = instanceProps.columnSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var verticalOffsetAdjustment = instanceProps.rowSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: height,\n          offset: scrollTop\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        this._renderedColumnStartIndex = visibleColumnIndices.start;\n        this._renderedColumnStopIndex = visibleColumnIndices.stop;\n        this._renderedRowStartIndex = visibleRowIndices.start;\n        this._renderedRowStopIndex = visibleRowIndices.stop;\n        var overscanColumnIndices = overscanIndicesGetter({\n          direction: 'horizontal',\n          cellCount: columnCount,\n          overscanCellsCount: overscanColumnCount,\n          scrollDirection: scrollDirectionHorizontal,\n          startIndex: typeof visibleColumnIndices.start === 'number' ? visibleColumnIndices.start : 0,\n          stopIndex: typeof visibleColumnIndices.stop === 'number' ? visibleColumnIndices.stop : -1\n        });\n        var overscanRowIndices = overscanIndicesGetter({\n          direction: 'vertical',\n          cellCount: rowCount,\n          overscanCellsCount: overscanRowCount,\n          scrollDirection: scrollDirectionVertical,\n          startIndex: typeof visibleRowIndices.start === 'number' ? visibleRowIndices.start : 0,\n          stopIndex: typeof visibleRowIndices.stop === 'number' ? visibleRowIndices.stop : -1\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        var columnStartIndex = overscanColumnIndices.overscanStartIndex;\n        var columnStopIndex = overscanColumnIndices.overscanStopIndex;\n        var rowStartIndex = overscanRowIndices.overscanStartIndex;\n        var rowStopIndex = overscanRowIndices.overscanStopIndex; // Advanced use-cases (eg CellMeasurer) require batched measurements to determine accurate sizes.\n\n        if (deferredMeasurementCache) {\n          // If rows have a dynamic height, scan the rows we are about to render.\n          // If any have not yet been measured, then we need to render all columns initially,\n          // Because the height of the row is equal to the tallest cell within that row,\n          // (And so we can't know the height without measuring all column-cells first).\n          if (!deferredMeasurementCache.hasFixedHeight()) {\n            for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n              if (!deferredMeasurementCache.has(rowIndex, 0)) {\n                columnStartIndex = 0;\n                columnStopIndex = columnCount - 1;\n                break;\n              }\n            }\n          } // If columns have a dynamic width, scan the columns we are about to render.\n          // If any have not yet been measured, then we need to render all rows initially,\n          // Because the width of the column is equal to the widest cell within that column,\n          // (And so we can't know the width without measuring all row-cells first).\n\n\n          if (!deferredMeasurementCache.hasFixedWidth()) {\n            for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n              if (!deferredMeasurementCache.has(0, columnIndex)) {\n                rowStartIndex = 0;\n                rowStopIndex = rowCount - 1;\n                break;\n              }\n            }\n          }\n        }\n\n        this._childrenToDisplay = cellRangeRenderer({\n          cellCache: this._cellCache,\n          cellRenderer: cellRenderer,\n          columnSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          columnStartIndex: columnStartIndex,\n          columnStopIndex: columnStopIndex,\n          deferredMeasurementCache: deferredMeasurementCache,\n          horizontalOffsetAdjustment: horizontalOffsetAdjustment,\n          isScrolling: isScrolling,\n          isScrollingOptOut: isScrollingOptOut,\n          parent: this,\n          rowSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          rowStartIndex: rowStartIndex,\n          rowStopIndex: rowStopIndex,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          styleCache: this._styleCache,\n          verticalOffsetAdjustment: verticalOffsetAdjustment,\n          visibleColumnIndices: visibleColumnIndices,\n          visibleRowIndices: visibleRowIndices\n        }); // update the indices\n\n        this._columnStartIndex = columnStartIndex;\n        this._columnStopIndex = columnStopIndex;\n        this._rowStartIndex = rowStartIndex;\n        this._rowStopIndex = rowStopIndex;\n      }\n    }\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Grid.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_debounceScrollEnded\",\n    value: function _debounceScrollEnded() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = requestAnimationTimeout(this._debounceScrollEndedCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n\n    /**\n     * Check for batched CellMeasurer size invalidations.\n     * This will occur the first time one or more previously unmeasured cells are rendered.\n     */\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number' && typeof this._deferredInvalidateRowIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n      }\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref6) {\n      var _this3 = this;\n\n      var scrollLeft = _ref6.scrollLeft,\n          scrollTop = _ref6.scrollTop,\n          totalColumnsWidth = _ref6.totalColumnsWidth,\n          totalRowsHeight = _ref6.totalRowsHeight;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref7) {\n          var scrollLeft = _ref7.scrollLeft,\n              scrollTop = _ref7.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalRowsHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalColumnsWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_isScrolling\",\n    value: function _isScrolling() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      // If isScrolling is defined in props, use it to override the value in state\n      // This is a performance optimization for WindowScroller + Grid\n      return Object.hasOwnProperty.call(props, 'isScrolling') ? Boolean(props.isScrolling) : Boolean(state.isScrolling);\n    }\n  }, {\n    key: \"_maybeCallOnScrollbarPresenceChange\",\n    value: function _maybeCallOnScrollbarPresenceChange() {\n      if (this._scrollbarPresenceChanged) {\n        var onScrollbarPresenceChange = this.props.onScrollbarPresenceChange;\n        this._scrollbarPresenceChanged = false;\n        onScrollbarPresenceChange({\n          horizontal: this._horizontalScrollBarSize > 0,\n          size: this.state.instanceProps.scrollbarSize,\n          vertical: this._verticalScrollBarSize > 0\n        });\n      }\n    }\n  }, {\n    key: \"scrollToPosition\",\n\n    /**\n     * Scroll to the specified offset(s).\n     * Useful for animating position changes.\n     */\n    value: function scrollToPosition(_ref8) {\n      var scrollLeft = _ref8.scrollLeft,\n          scrollTop = _ref8.scrollTop;\n\n      var stateUpdate = Grid._getScrollToPositionStateUpdate({\n        prevState: this.state,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollLeft(props, state);\n    }\n  }, {\n    key: \"_updateScrollLeftForScrollToColumn\",\n    value: function _updateScrollLeftForScrollToColumn() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollLeftForScrollToColumnStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollTop(props, state);\n    }\n  }, {\n    key: \"_resetStyleCache\",\n    value: function _resetStyleCache() {\n      var styleCache = this._styleCache;\n      var cellCache = this._cellCache;\n      var isScrollingOptOut = this.props.isScrollingOptOut; // Reset cell and style caches once scrolling stops.\n      // This makes Grid simpler to use (since cells commonly change).\n      // And it keeps the caches from growing too large.\n      // Performance is most sensitive when a user is scrolling.\n      // Don't clear visible cells from cellCache if isScrollingOptOut is specified.\n      // This keeps the cellCache to a resonable size.\n\n      this._cellCache = {};\n      this._styleCache = {}; // Copy over the visible cell styles so avoid unnecessary re-render.\n\n      for (var rowIndex = this._rowStartIndex; rowIndex <= this._rowStopIndex; rowIndex++) {\n        for (var columnIndex = this._columnStartIndex; columnIndex <= this._columnStopIndex; columnIndex++) {\n          var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n          this._styleCache[key] = styleCache[key];\n\n          if (isScrollingOptOut) {\n            this._cellCache[key] = cellCache[key];\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_updateScrollTopForScrollToRow\",\n    value: function _updateScrollTopForScrollToRow() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollTopForScrollToRowStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var newState = {};\n\n      if (nextProps.columnCount === 0 && prevState.scrollLeft !== 0 || nextProps.rowCount === 0 && prevState.scrollTop !== 0) {\n        newState.scrollLeft = 0;\n        newState.scrollTop = 0; // only use scroll{Left,Top} from props if scrollTo{Column,Row} isn't specified\n        // scrollTo{Column,Row} should override scroll{Left,Top}\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft && nextProps.scrollToColumn < 0 || nextProps.scrollTop !== prevState.scrollTop && nextProps.scrollToRow < 0) {\n        Object.assign(newState, Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: nextProps.scrollLeft,\n          scrollTop: nextProps.scrollTop\n        }));\n      }\n\n      var instanceProps = prevState.instanceProps; // Initially we should not clearStyleCache\n\n      newState.needToResetStyleCache = false;\n\n      if (nextProps.columnWidth !== instanceProps.prevColumnWidth || nextProps.rowHeight !== instanceProps.prevRowHeight) {\n        // Reset cache. set it to {} in render\n        newState.needToResetStyleCache = true;\n      }\n\n      instanceProps.columnSizeAndPositionManager.configure({\n        cellCount: nextProps.columnCount,\n        estimatedCellSize: Grid._getEstimatedColumnSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.columnWidth)\n      });\n      instanceProps.rowSizeAndPositionManager.configure({\n        cellCount: nextProps.rowCount,\n        estimatedCellSize: Grid._getEstimatedRowSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.rowHeight)\n      });\n\n      if (instanceProps.prevColumnCount === 0 || instanceProps.prevRowCount === 0) {\n        instanceProps.prevColumnCount = 0;\n        instanceProps.prevRowCount = 0;\n      } // If scrolling is controlled outside this component, clear cache when scrolling stops\n\n\n      if (nextProps.autoHeight && nextProps.isScrolling === false && instanceProps.prevIsScrolling === true) {\n        Object.assign(newState, {\n          isScrolling: false\n        });\n      }\n\n      var maybeStateA;\n      var maybeStateB;\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevColumnCount,\n        cellSize: typeof instanceProps.prevColumnWidth === 'number' ? instanceProps.prevColumnWidth : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.columnSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.columnCount,\n        nextCellSize: typeof nextProps.columnWidth === 'number' ? nextProps.columnWidth : null,\n        nextScrollToIndex: nextProps.scrollToColumn,\n        scrollToIndex: instanceProps.prevScrollToColumn,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateA = Grid._getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState);\n        }\n      });\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevRowCount,\n        cellSize: typeof instanceProps.prevRowHeight === 'number' ? instanceProps.prevRowHeight : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.rowSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.rowCount,\n        nextCellSize: typeof nextProps.rowHeight === 'number' ? nextProps.rowHeight : null,\n        nextScrollToIndex: nextProps.scrollToRow,\n        scrollToIndex: instanceProps.prevScrollToRow,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateB = Grid._getScrollTopForScrollToRowStateUpdate(nextProps, prevState);\n        }\n      });\n      instanceProps.prevColumnCount = nextProps.columnCount;\n      instanceProps.prevColumnWidth = nextProps.columnWidth;\n      instanceProps.prevIsScrolling = nextProps.isScrolling === true;\n      instanceProps.prevRowCount = nextProps.rowCount;\n      instanceProps.prevRowHeight = nextProps.rowHeight;\n      instanceProps.prevScrollToColumn = nextProps.scrollToColumn;\n      instanceProps.prevScrollToRow = nextProps.scrollToRow; // getting scrollBarSize (moved from componentWillMount)\n\n      instanceProps.scrollbarSize = nextProps.getScrollbarSize();\n\n      if (instanceProps.scrollbarSize === undefined) {\n        instanceProps.scrollbarSizeMeasured = false;\n        instanceProps.scrollbarSize = 0;\n      } else {\n        instanceProps.scrollbarSizeMeasured = true;\n      }\n\n      newState.instanceProps = instanceProps;\n      return _objectSpread({}, newState, {}, maybeStateA, {}, maybeStateB);\n    }\n  }, {\n    key: \"_getEstimatedColumnSize\",\n    value: function _getEstimatedColumnSize(props) {\n      return typeof props.columnWidth === 'number' ? props.columnWidth : props.estimatedColumnSize;\n    }\n  }, {\n    key: \"_getEstimatedRowSize\",\n    value: function _getEstimatedRowSize(props) {\n      return typeof props.rowHeight === 'number' ? props.rowHeight : props.estimatedRowSize;\n    }\n  }, {\n    key: \"_getScrollToPositionStateUpdate\",\n\n    /**\n     * Get the updated state after scrolling to\n     * scrollLeft and scrollTop\n     */\n    value: function _getScrollToPositionStateUpdate(_ref9) {\n      var prevState = _ref9.prevState,\n          scrollLeft = _ref9.scrollLeft,\n          scrollTop = _ref9.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0) {\n        newState.scrollDirectionHorizontal = scrollLeft > prevState.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (typeof scrollTop === 'number' && scrollTop >= 0) {\n        newState.scrollDirectionVertical = scrollTop > prevState.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollTop = scrollTop;\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft || typeof scrollTop === 'number' && scrollTop >= 0 && scrollTop !== prevState.scrollTop) {\n        return newState;\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_wrapSizeGetter\",\n    value: function _wrapSizeGetter(value) {\n      return typeof value === 'function' ? value : function () {\n        return value;\n      };\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft(nextProps, prevState) {\n      var columnCount = nextProps.columnCount,\n          height = nextProps.height,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToColumn = nextProps.scrollToColumn,\n          width = nextProps.width;\n      var scrollLeft = prevState.scrollLeft,\n          instanceProps = prevState.instanceProps;\n\n      if (columnCount > 0) {\n        var finalColumn = columnCount - 1;\n        var targetIndex = scrollToColumn < 0 ? finalColumn : Math.min(finalColumn, scrollToColumn);\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n        return instanceProps.columnSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: width - scrollBarSize,\n          currentOffset: scrollLeft,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollLeftForScrollToColumnStateUpdate\",\n    value: function _getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState) {\n      var scrollLeft = prevState.scrollLeft;\n\n      var calculatedScrollLeft = Grid._getCalculatedScrollLeft(nextProps, prevState);\n\n      if (typeof calculatedScrollLeft === 'number' && calculatedScrollLeft >= 0 && scrollLeft !== calculatedScrollLeft) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: calculatedScrollLeft,\n          scrollTop: -1\n        });\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop(nextProps, prevState) {\n      var height = nextProps.height,\n          rowCount = nextProps.rowCount,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToRow = nextProps.scrollToRow,\n          width = nextProps.width;\n      var scrollTop = prevState.scrollTop,\n          instanceProps = prevState.instanceProps;\n\n      if (rowCount > 0) {\n        var finalRow = rowCount - 1;\n        var targetIndex = scrollToRow < 0 ? finalRow : Math.min(finalRow, scrollToRow);\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n        return instanceProps.rowSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: height - scrollBarSize,\n          currentOffset: scrollTop,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollTopForScrollToRowStateUpdate\",\n    value: function _getScrollTopForScrollToRowStateUpdate(nextProps, prevState) {\n      var scrollTop = prevState.scrollTop;\n\n      var calculatedScrollTop = Grid._getCalculatedScrollTop(nextProps, prevState);\n\n      if (typeof calculatedScrollTop === 'number' && calculatedScrollTop >= 0 && scrollTop !== calculatedScrollTop) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: -1,\n          scrollTop: calculatedScrollTop\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return Grid;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string.isRequired,\n  \"aria-readonly\": PropTypes.bool,\n\n  /**\n   * Set the width of the inner scrollable container to 'auto'.\n   * This is useful for single-column Grids to ensure that the column doesn't extend below a vertical scrollbar.\n   */\n  \"autoContainerWidth\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed width from the scrollingContainer so that the total width of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoWidth\": PropTypes.bool.isRequired,\n\n  /** Responsible for rendering a cell given an row and column index.  */\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof bpfrpt_proptype_CellRenderer === \"function\" ? bpfrpt_proptype_CellRenderer.isRequired ? bpfrpt_proptype_CellRenderer.isRequired : bpfrpt_proptype_CellRenderer : PropTypes.shape(bpfrpt_proptype_CellRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a group of cells given their index ranges.  */\n  \"cellRangeRenderer\": function cellRangeRenderer() {\n    return (typeof bpfrpt_proptype_CellRangeRenderer === \"function\" ? bpfrpt_proptype_CellRangeRenderer.isRequired ? bpfrpt_proptype_CellRangeRenderer.isRequired : bpfrpt_proptype_CellRangeRenderer : PropTypes.shape(bpfrpt_proptype_CellRangeRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Optional custom CSS class name to attach to root Grid element.  */\n  \"className\": PropTypes.string,\n\n  /** Number of columns in grid.  */\n  \"columnCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed column width (number) or a function that returns the width of a column given its index.  */\n  \"columnWidth\": function columnWidth() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Unfiltered props for the Grid container. */\n  \"containerProps\": PropTypes.object,\n\n  /** ARIA role for the cell-container.  */\n  \"containerRole\": PropTypes.string.isRequired,\n\n  /** Optional inline style applied to inner cell-container */\n  \"containerStyle\": PropTypes.object.isRequired,\n\n  /**\n   * If CellMeasurer is used to measure this Grid's children, this should be a pointer to its CellMeasurerCache.\n   * A shared CellMeasurerCache reference enables Grid and CellMeasurer to share measurement data.\n   */\n  \"deferredMeasurementCache\": PropTypes.object,\n\n  /**\n   * Used to estimate the total width of a Grid before all of its columns have actually been measured.\n   * The estimated total width is adjusted as columns are rendered.\n   */\n  \"estimatedColumnSize\": PropTypes.number.isRequired,\n\n  /**\n   * Used to estimate the total height of a Grid before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Exposed for testing purposes only.  */\n  \"getScrollbarSize\": PropTypes.func.isRequired,\n\n  /** Height of Grid; this property determines the number of visible (vs virtualized) rows.  */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional custom id to attach to root Grid element.  */\n  \"id\": PropTypes.string,\n\n  /**\n   * Override internal is-scrolling state tracking.\n   * This property is primarily intended for use with the WindowScroller component.\n   */\n  \"isScrolling\": PropTypes.bool,\n\n  /**\n   * Opt-out of isScrolling param passed to cellRangeRenderer.\n   * To avoid the extra render when scroll stops.\n   */\n  \"isScrollingOptOut\": PropTypes.bool.isRequired,\n\n  /** Optional renderer to be used in place of rows when either :rowCount or :columnCount is 0.  */\n  \"noContentRenderer\": function noContentRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /**\n   * Called whenever a horizontal or vertical scrollbar is added or removed.\n   * This prop is not intended for end-user use;\n   * It is used by MultiGrid to support fixed-row/fixed-column scroll syncing.\n   */\n  \"onScrollbarPresenceChange\": PropTypes.func.isRequired,\n\n  /** Callback invoked with information about the section of the Grid that was just rendered.  */\n  \"onSectionRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Number of columns to render before/after the visible section of the grid.\n   * These columns can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanColumnCount\": PropTypes.number.isRequired,\n\n  /**\n   * Calculates the number of cells to overscan before and after a specified range.\n   * This function ensures that overscanning doesn't exceed the available cells.\n   */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible section of the grid.\n   * These rows can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** ARIA role for the grid element.  */\n  \"role\": PropTypes.string.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * Should implement the following interface: ({ index: number }): number\n   */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in grid.  */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** Wait this amount of time after the last scroll event before resetting Grid `pointer-events`. */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Horizontal offset. */\n  \"scrollLeft\": PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Column index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToColumn\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToRow\": PropTypes.number.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of Grid; this property determines the number of visible (vs virtualized) columns.  */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(Grid, \"defaultProps\", {\n  'aria-label': 'grid',\n  'aria-readonly': true,\n  autoContainerWidth: false,\n  autoHeight: false,\n  autoWidth: false,\n  cellRangeRenderer: defaultCellRangeRenderer,\n  containerRole: 'rowgroup',\n  containerStyle: {},\n  estimatedColumnSize: 100,\n  estimatedRowSize: 30,\n  getScrollbarSize: scrollbarSize,\n  noContentRenderer: renderNull,\n  onScroll: function onScroll() {},\n  onScrollbarPresenceChange: function onScrollbarPresenceChange() {},\n  onSectionRendered: function onSectionRendered() {},\n  overscanColumnCount: 0,\n  overscanIndicesGetter: defaultOverscanIndicesGetter,\n  overscanRowCount: 10,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  scrollToAlignment: 'auto',\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  tabIndex: 0,\n  isScrollingOptOut: false\n});\n\npolyfill(Grid);\nexport default Grid;\nimport { bpfrpt_proptype_CellRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellRangeRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellPosition } from \"./types\";\nimport { bpfrpt_proptype_CellSize } from \"./types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"./types\";\nimport { bpfrpt_proptype_NoContentRenderer } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport { bpfrpt_proptype_ScrollbarPresenceChange } from \"./types\";\nimport { bpfrpt_proptype_RenderedSection } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"./types\";\nimport { bpfrpt_proptype_Alignment } from \"./types\";\nimport { bpfrpt_proptype_CellCache } from \"./types\";\nimport { bpfrpt_proptype_StyleCache } from \"./types\";\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";","import { caf, raf } from './animationFrame';\nvar bpfrpt_proptype_AnimationTimeoutId = process.env.NODE_ENV === 'production' ? null : {\n  \"id\": PropTypes.number.isRequired\n};\nexport var cancelAnimationTimeout = function cancelAnimationTimeout(frame) {\n  return caf(frame.id);\n};\n/**\n * Recursively calls requestAnimationFrame until a specified delay has been met or exceeded.\n * When the delay time has been reached the function you're timing out will be called.\n *\n * Credit: Joe Lambert (https://gist.github.com/joelambert/1002116#file-requesttimeout-js)\n */\n\nexport var requestAnimationTimeout = function requestAnimationTimeout(callback, delay) {\n  var start; // wait for end of processing current event handler, because event handler may be long\n\n  Promise.resolve().then(function () {\n    start = Date.now();\n  });\n\n  var timeout = function timeout() {\n    if (Date.now() - start >= delay) {\n      callback.call();\n    } else {\n      frame.id = raf(timeout);\n    }\n  };\n\n  var frame = {\n    id: raf(timeout)\n  };\n  return frame;\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_AnimationTimeoutId };","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","/**\n * Default implementation of cellRangeRenderer used by Grid.\n * This renderer supports cell-caching while the user is scrolling.\n */\nexport default function defaultCellRangeRenderer(_ref) {\n  var cellCache = _ref.cellCache,\n      cellRenderer = _ref.cellRenderer,\n      columnSizeAndPositionManager = _ref.columnSizeAndPositionManager,\n      columnStartIndex = _ref.columnStartIndex,\n      columnStopIndex = _ref.columnStopIndex,\n      deferredMeasurementCache = _ref.deferredMeasurementCache,\n      horizontalOffsetAdjustment = _ref.horizontalOffsetAdjustment,\n      isScrolling = _ref.isScrolling,\n      isScrollingOptOut = _ref.isScrollingOptOut,\n      parent = _ref.parent,\n      rowSizeAndPositionManager = _ref.rowSizeAndPositionManager,\n      rowStartIndex = _ref.rowStartIndex,\n      rowStopIndex = _ref.rowStopIndex,\n      styleCache = _ref.styleCache,\n      verticalOffsetAdjustment = _ref.verticalOffsetAdjustment,\n      visibleColumnIndices = _ref.visibleColumnIndices,\n      visibleRowIndices = _ref.visibleRowIndices;\n  var renderedCells = []; // Browsers have native size limits for elements (eg Chrome 33M pixels, IE 1.5M pixes).\n  // User cannot scroll beyond these size limitations.\n  // In order to work around this, ScalingCellSizeAndPositionManager compresses offsets.\n  // We should never cache styles for compressed offsets though as this can lead to bugs.\n  // See issue #576 for more.\n\n  var areOffsetsAdjusted = columnSizeAndPositionManager.areOffsetsAdjusted() || rowSizeAndPositionManager.areOffsetsAdjusted();\n  var canCacheStyle = !isScrolling && !areOffsetsAdjusted;\n\n  for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n    var rowDatum = rowSizeAndPositionManager.getSizeAndPositionOfCell(rowIndex);\n\n    for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n      var columnDatum = columnSizeAndPositionManager.getSizeAndPositionOfCell(columnIndex);\n      var isVisible = columnIndex >= visibleColumnIndices.start && columnIndex <= visibleColumnIndices.stop && rowIndex >= visibleRowIndices.start && rowIndex <= visibleRowIndices.stop;\n      var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n      var style = void 0; // Cache style objects so shallow-compare doesn't re-render unnecessarily.\n\n      if (canCacheStyle && styleCache[key]) {\n        style = styleCache[key];\n      } else {\n        // In deferred mode, cells will be initially rendered before we know their size.\n        // Don't interfere with CellMeasurer's measurements by setting an invalid size.\n        if (deferredMeasurementCache && !deferredMeasurementCache.has(rowIndex, columnIndex)) {\n          // Position not-yet-measured cells at top/left 0,0,\n          // And give them width/height of 'auto' so they can grow larger than the parent Grid if necessary.\n          // Positioning them further to the right/bottom influences their measured size.\n          style = {\n            height: 'auto',\n            left: 0,\n            position: 'absolute',\n            top: 0,\n            width: 'auto'\n          };\n        } else {\n          style = {\n            height: rowDatum.size,\n            left: columnDatum.offset + horizontalOffsetAdjustment,\n            position: 'absolute',\n            top: rowDatum.offset + verticalOffsetAdjustment,\n            width: columnDatum.size\n          };\n          styleCache[key] = style;\n        }\n      }\n\n      var cellRendererParams = {\n        columnIndex: columnIndex,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent,\n        rowIndex: rowIndex,\n        style: style\n      };\n      var renderedCell = void 0; // Avoid re-creating cells while scrolling.\n      // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n      // If a scroll is in progress- cache and reuse cells.\n      // This cache will be thrown away once scrolling completes.\n      // However if we are scaling scroll positions and sizes, we should also avoid caching.\n      // This is because the offset changes slightly as scroll position changes and caching leads to stale values.\n      // For more info refer to issue #395\n      //\n      // If isScrollingOptOut is specified, we always cache cells.\n      // For more info refer to issue #1028\n\n      if ((isScrollingOptOut || isScrolling) && !horizontalOffsetAdjustment && !verticalOffsetAdjustment) {\n        if (!cellCache[key]) {\n          cellCache[key] = cellRenderer(cellRendererParams);\n        }\n\n        renderedCell = cellCache[key]; // If the user is no longer scrolling, don't cache cells.\n        // This makes dynamic cell content difficult for users and would also lead to a heavier memory footprint.\n      } else {\n        renderedCell = cellRenderer(cellRendererParams);\n      }\n\n      if (renderedCell == null || renderedCell === false) {\n        continue;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        warnAboutMissingStyle(parent, renderedCell);\n      }\n\n      renderedCells.push(renderedCell);\n    }\n  }\n\n  return renderedCells;\n}\n\nfunction warnAboutMissingStyle(parent, renderedCell) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (renderedCell) {\n      // If the direct child is a CellMeasurer, then we should check its child\n      // See issue #611\n      if (renderedCell.type && renderedCell.type.__internalCellMeasurerFlag) {\n        renderedCell = renderedCell.props.children;\n      }\n\n      if (renderedCell && renderedCell.props && renderedCell.props.style === undefined && parent.__warnedAboutMissingStyle !== true) {\n        parent.__warnedAboutMissingStyle = true;\n        console.warn('Rendered cell should include style property for positioning.');\n      }\n    }\n  }\n}\n\nimport { bpfrpt_proptype_CellRangeRendererParams } from \"./types\";","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n  // Make sure we render at least 1 cell extra before and after (except near boundaries)\n  // This is necessary in order to support keyboard navigation (TAB/SHIFT+TAB) in some cases\n  // For more info see issues #625\n  overscanCellsCount = Math.max(1, overscanCellsCount);\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - 1),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + 1)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","var bpfrpt_proptype_ScrollIndices = process.env.NODE_ENV === 'production' ? null : {\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_ScrollIndices };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\n/**\n * This HOC decorates a virtualized component and responds to arrow-key events by scrolling one row or column at a time.\n */\n\nvar ArrowKeyStepper = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ArrowKeyStepper, _React$PureComponent);\n\n  function ArrowKeyStepper() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ArrowKeyStepper);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ArrowKeyStepper)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollToColumn: 0,\n      scrollToRow: 0,\n      instanceProps: {\n        prevScrollToColumn: 0,\n        prevScrollToRow: 0\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onKeyDown\", function (event) {\n      var _this$props = _this.props,\n          columnCount = _this$props.columnCount,\n          disabled = _this$props.disabled,\n          mode = _this$props.mode,\n          rowCount = _this$props.rowCount;\n\n      if (disabled) {\n        return;\n      }\n\n      var _this$_getScrollState = _this._getScrollState(),\n          scrollToColumnPrevious = _this$_getScrollState.scrollToColumn,\n          scrollToRowPrevious = _this$_getScrollState.scrollToRow;\n\n      var _this$_getScrollState2 = _this._getScrollState(),\n          scrollToColumn = _this$_getScrollState2.scrollToColumn,\n          scrollToRow = _this$_getScrollState2.scrollToRow; // The above cases all prevent default event event behavior.\n      // This is to keep the grid from scrolling after the snap-to update.\n\n\n      switch (event.key) {\n        case 'ArrowDown':\n          scrollToRow = mode === 'cells' ? Math.min(scrollToRow + 1, rowCount - 1) : Math.min(_this._rowStopIndex + 1, rowCount - 1);\n          break;\n\n        case 'ArrowLeft':\n          scrollToColumn = mode === 'cells' ? Math.max(scrollToColumn - 1, 0) : Math.max(_this._columnStartIndex - 1, 0);\n          break;\n\n        case 'ArrowRight':\n          scrollToColumn = mode === 'cells' ? Math.min(scrollToColumn + 1, columnCount - 1) : Math.min(_this._columnStopIndex + 1, columnCount - 1);\n          break;\n\n        case 'ArrowUp':\n          scrollToRow = mode === 'cells' ? Math.max(scrollToRow - 1, 0) : Math.max(_this._rowStartIndex - 1, 0);\n          break;\n      }\n\n      if (scrollToColumn !== scrollToColumnPrevious || scrollToRow !== scrollToRowPrevious) {\n        event.preventDefault();\n\n        _this._updateScrollState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref) {\n      var columnStartIndex = _ref.columnStartIndex,\n          columnStopIndex = _ref.columnStopIndex,\n          rowStartIndex = _ref.rowStartIndex,\n          rowStopIndex = _ref.rowStopIndex;\n      _this._columnStartIndex = columnStartIndex;\n      _this._columnStopIndex = columnStopIndex;\n      _this._rowStartIndex = rowStartIndex;\n      _this._rowStopIndex = rowStopIndex;\n    });\n\n    return _this;\n  }\n\n  _createClass(ArrowKeyStepper, [{\n    key: \"setScrollIndexes\",\n    value: function setScrollIndexes(_ref2) {\n      var scrollToColumn = _ref2.scrollToColumn,\n          scrollToRow = _ref2.scrollToRow;\n      this.setState({\n        scrollToRow: scrollToRow,\n        scrollToColumn: scrollToColumn\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          className = _this$props2.className,\n          children = _this$props2.children;\n\n      var _this$_getScrollState3 = this._getScrollState(),\n          scrollToColumn = _this$_getScrollState3.scrollToColumn,\n          scrollToRow = _this$_getScrollState3.scrollToRow;\n\n      return React.createElement(\"div\", {\n        className: className,\n        onKeyDown: this._onKeyDown\n      }, children({\n        onSectionRendered: this._onSectionRendered,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow\n      }));\n    }\n  }, {\n    key: \"_getScrollState\",\n    value: function _getScrollState() {\n      return this.props.isControlled ? this.props : this.state;\n    }\n  }, {\n    key: \"_updateScrollState\",\n    value: function _updateScrollState(_ref3) {\n      var scrollToColumn = _ref3.scrollToColumn,\n          scrollToRow = _ref3.scrollToRow;\n      var _this$props3 = this.props,\n          isControlled = _this$props3.isControlled,\n          onScrollToChange = _this$props3.onScrollToChange;\n\n      if (typeof onScrollToChange === 'function') {\n        onScrollToChange({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n\n      if (!isControlled) {\n        this.setState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.isControlled) {\n        return {};\n      }\n\n      if (nextProps.scrollToColumn !== prevState.instanceProps.prevScrollToColumn || nextProps.scrollToRow !== prevState.instanceProps.prevScrollToRow) {\n        return _objectSpread({}, prevState, {\n          scrollToColumn: nextProps.scrollToColumn,\n          scrollToRow: nextProps.scrollToRow,\n          instanceProps: {\n            prevScrollToColumn: nextProps.scrollToColumn,\n            prevScrollToRow: nextProps.scrollToRow\n          }\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return ArrowKeyStepper;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"children\": PropTypes.func.isRequired,\n  \"className\": PropTypes.string,\n  \"columnCount\": PropTypes.number.isRequired,\n  \"disabled\": PropTypes.bool.isRequired,\n  \"isControlled\": PropTypes.bool.isRequired,\n  \"mode\": PropTypes.oneOf([\"cells\", \"edges\"]).isRequired,\n  \"onScrollToChange\": PropTypes.func,\n  \"rowCount\": PropTypes.number.isRequired,\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(ArrowKeyStepper, \"defaultProps\", {\n  disabled: false,\n  isControlled: false,\n  mode: 'edges',\n  scrollToColumn: 0,\n  scrollToRow: 0\n});\n\npolyfill(ArrowKeyStepper);\nexport default ArrowKeyStepper;\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_ScrollIndices } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport createDetectElementResize from '../vendor/detectElementResize';\nvar AutoSizer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AutoSizer, _React$Component);\n\n  function AutoSizer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AutoSizer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AutoSizer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      height: _this.props.defaultHeight || 0,\n      width: _this.props.defaultWidth || 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_parentNode\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_autoSizer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      var _this$props = _this.props,\n          disableHeight = _this$props.disableHeight,\n          disableWidth = _this$props.disableWidth,\n          onResize = _this$props.onResize;\n\n      if (_this._parentNode) {\n        // Guard against AutoSizer component being removed from the DOM immediately after being added.\n        // This can result in invalid style values which can result in NaN values if we don't handle them.\n        // See issue #150 for more context.\n        var height = _this._parentNode.offsetHeight || 0;\n        var width = _this._parentNode.offsetWidth || 0;\n        var win = _this._window || window;\n        var style = win.getComputedStyle(_this._parentNode) || {};\n        var paddingLeft = parseInt(style.paddingLeft, 10) || 0;\n        var paddingRight = parseInt(style.paddingRight, 10) || 0;\n        var paddingTop = parseInt(style.paddingTop, 10) || 0;\n        var paddingBottom = parseInt(style.paddingBottom, 10) || 0;\n        var newHeight = height - paddingTop - paddingBottom;\n        var newWidth = width - paddingLeft - paddingRight;\n\n        if (!disableHeight && _this.state.height !== newHeight || !disableWidth && _this.state.width !== newWidth) {\n          _this.setState({\n            height: height - paddingTop - paddingBottom,\n            width: width - paddingLeft - paddingRight\n          });\n\n          onResize({\n            height: height,\n            width: width\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (autoSizer) {\n      _this._autoSizer = autoSizer;\n    });\n\n    return _this;\n  }\n\n  _createClass(AutoSizer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var nonce = this.props.nonce;\n\n      if (this._autoSizer && this._autoSizer.parentNode && this._autoSizer.parentNode.ownerDocument && this._autoSizer.parentNode.ownerDocument.defaultView && this._autoSizer.parentNode instanceof this._autoSizer.parentNode.ownerDocument.defaultView.HTMLElement) {\n        // Delay access of parentNode until mount.\n        // This handles edge-cases where the component has already been unmounted before its ref has been set,\n        // As well as libraries like react-lite which have a slightly different lifecycle.\n        this._parentNode = this._autoSizer.parentNode;\n        this._window = this._autoSizer.parentNode.ownerDocument.defaultView; // Defer requiring resize handler in order to support server-side rendering.\n        // See issue #41\n\n        this._detectElementResize = createDetectElementResize(nonce, this._window);\n\n        this._detectElementResize.addResizeListener(this._parentNode, this._onResize);\n\n        this._onResize();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._detectElementResize && this._parentNode) {\n        this._detectElementResize.removeResizeListener(this._parentNode, this._onResize);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          className = _this$props2.className,\n          disableHeight = _this$props2.disableHeight,\n          disableWidth = _this$props2.disableWidth,\n          style = _this$props2.style;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width; // Outer div should not force width/height since that may prevent containers from shrinking.\n      // Inner component should overflow and use calculated width/height.\n      // See issue #68 for more information.\n\n      var outerStyle = {\n        overflow: 'visible'\n      };\n      var childParams = {};\n\n      if (!disableHeight) {\n        outerStyle.height = 0;\n        childParams.height = height;\n      }\n\n      if (!disableWidth) {\n        outerStyle.width = 0;\n        childParams.width = width;\n      }\n      /**\n       * TODO: Avoid rendering children before the initial measurements have been collected.\n       * At best this would just be wasting cycles.\n       * Add this check into version 10 though as it could break too many ref callbacks in version 9.\n       * Note that if default width/height props were provided this would still work with SSR.\n      if (\n        height !== 0 &&\n        width !== 0\n      ) {\n        child = children({ height, width })\n      }\n      */\n\n\n      return React.createElement(\"div\", {\n        className: className,\n        ref: this._setRef,\n        style: _objectSpread({}, outerStyle, {}, style)\n      }, children(childParams));\n    }\n  }]);\n\n  return AutoSizer;\n}(React.Component), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /** Function responsible for rendering children.*/\n  \"children\": PropTypes.func.isRequired,\n\n  /** Optional custom CSS class name to attach to root AutoSizer element.  */\n  \"className\": PropTypes.string,\n\n  /** Default height to use for initial render; useful for SSR */\n  \"defaultHeight\": PropTypes.number,\n\n  /** Default width to use for initial render; useful for SSR */\n  \"defaultWidth\": PropTypes.number,\n\n  /** Disable dynamic :height property */\n  \"disableHeight\": PropTypes.bool.isRequired,\n\n  /** Disable dynamic :width property */\n  \"disableWidth\": PropTypes.bool.isRequired,\n\n  /** Nonce of the inlined stylesheet for Content Security Policy */\n  \"nonce\": PropTypes.string,\n\n  /** Callback to be invoked on-resize */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object\n}), _temp);\n\n_defineProperty(AutoSizer, \"defaultProps\", {\n  onResize: function onResize() {},\n  disableHeight: false,\n  disableWidth: false,\n  style: {}\n});\n\nexport { AutoSizer as default };\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\n\n/**\n * Wraps a cell and measures its rendered content.\n * Measurements are stored in a per-cell cache.\n * Cached-content is not be re-measured.\n */\nvar CellMeasurer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CellMeasurer, _React$PureComponent);\n\n  function CellMeasurer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CellMeasurer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CellMeasurer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_measure\", function () {\n      var _this$props = _this.props,\n          cache = _this$props.cache,\n          _this$props$columnInd = _this$props.columnIndex,\n          columnIndex = _this$props$columnInd === void 0 ? 0 : _this$props$columnInd,\n          parent = _this$props.parent,\n          _this$props$rowIndex = _this$props.rowIndex,\n          rowIndex = _this$props$rowIndex === void 0 ? _this.props.index || 0 : _this$props$rowIndex;\n\n      var _this$_getCellMeasure = _this._getCellMeasurements(),\n          height = _this$_getCellMeasure.height,\n          width = _this$_getCellMeasure.width;\n\n      if (height !== cache.getHeight(rowIndex, columnIndex) || width !== cache.getWidth(rowIndex, columnIndex)) {\n        cache.set(rowIndex, columnIndex, width, height);\n\n        if (parent && typeof parent.recomputeGridSize === 'function') {\n          parent.recomputeGridSize({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('CellMeasurer registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      if (element) {\n        _this._maybeMeasureCell();\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(CellMeasurer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return typeof children === 'function' ? children({\n        measure: this._measure,\n        registerChild: this._registerChild\n      }) : children;\n    }\n  }, {\n    key: \"_getCellMeasurements\",\n    value: function _getCellMeasurements() {\n      var cache = this.props.cache;\n      var node = this._child || findDOMNode(this); // TODO Check for a bad combination of fixedWidth and missing numeric width or vice versa with height\n\n      if (node && node.ownerDocument && node.ownerDocument.defaultView && node instanceof node.ownerDocument.defaultView.HTMLElement) {\n        var styleWidth = node.style.width;\n        var styleHeight = node.style.height; // If we are re-measuring a cell that has already been measured,\n        // It will have a hard-coded width/height from the previous measurement.\n        // The fact that we are measuring indicates this measurement is probably stale,\n        // So explicitly clear it out (eg set to \"auto\") so we can recalculate.\n        // See issue #593 for more info.\n        // Even if we are measuring initially- if we're inside of a MultiGrid component,\n        // Explicitly clear width/height before measuring to avoid being tainted by another Grid.\n        // eg top/left Grid renders before bottom/right Grid\n        // Since the CellMeasurerCache is shared between them this taints derived cell size values.\n\n        if (!cache.hasFixedWidth()) {\n          node.style.width = 'auto';\n        }\n\n        if (!cache.hasFixedHeight()) {\n          node.style.height = 'auto';\n        }\n\n        var height = Math.ceil(node.offsetHeight);\n        var width = Math.ceil(node.offsetWidth); // Reset after measuring to avoid breaking styles; see #660\n\n        if (styleWidth) {\n          node.style.width = styleWidth;\n        }\n\n        if (styleHeight) {\n          node.style.height = styleHeight;\n        }\n\n        return {\n          height: height,\n          width: width\n        };\n      } else {\n        return {\n          height: 0,\n          width: 0\n        };\n      }\n    }\n  }, {\n    key: \"_maybeMeasureCell\",\n    value: function _maybeMeasureCell() {\n      var _this$props2 = this.props,\n          cache = _this$props2.cache,\n          _this$props2$columnIn = _this$props2.columnIndex,\n          columnIndex = _this$props2$columnIn === void 0 ? 0 : _this$props2$columnIn,\n          parent = _this$props2.parent,\n          _this$props2$rowIndex = _this$props2.rowIndex,\n          rowIndex = _this$props2$rowIndex === void 0 ? this.props.index || 0 : _this$props2$rowIndex;\n\n      if (!cache.has(rowIndex, columnIndex)) {\n        var _this$_getCellMeasure2 = this._getCellMeasurements(),\n            height = _this$_getCellMeasure2.height,\n            width = _this$_getCellMeasure2.width;\n\n        cache.set(rowIndex, columnIndex, width, height); // If size has changed, let Grid know to re-render.\n\n        if (parent && typeof parent.invalidateCellSizeAfterRender === 'function') {\n          parent.invalidateCellSizeAfterRender({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    }\n  }]);\n\n  return CellMeasurer;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"cache\": function cache() {\n    return (typeof bpfrpt_proptype_CellMeasureCache === \"function\" ? bpfrpt_proptype_CellMeasureCache.isRequired ? bpfrpt_proptype_CellMeasureCache.isRequired : bpfrpt_proptype_CellMeasureCache : PropTypes.shape(bpfrpt_proptype_CellMeasureCache).isRequired).apply(this, arguments);\n  },\n  \"children\": PropTypes.oneOfType([PropTypes.func, PropTypes.node]).isRequired,\n  \"columnIndex\": PropTypes.number,\n  \"index\": PropTypes.number,\n  \"parent\": PropTypes.shape({\n    invalidateCellSizeAfterRender: PropTypes.func,\n    recomputeGridSize: PropTypes.func\n  }).isRequired,\n  \"rowIndex\": PropTypes.number\n}), _temp); // Used for DEV mode warning check\n\n_defineProperty(CellMeasurer, \"__internalCellMeasurerFlag\", false);\n\nexport { CellMeasurer as default };\n\nif (process.env.NODE_ENV !== 'production') {\n  CellMeasurer.__internalCellMeasurerFlag = true;\n}\n\nimport { bpfrpt_proptype_CellMeasureCache } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nexport var DEFAULT_HEIGHT = 30;\nexport var DEFAULT_WIDTH = 100; // Enables more intelligent mapping of a given column and row index to an item ID.\n// This prevents a cell cache from being invalidated when its parent collection is modified.\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCache =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCache() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCache);\n\n    _defineProperty(this, \"_cellHeightCache\", {});\n\n    _defineProperty(this, \"_cellWidthCache\", {});\n\n    _defineProperty(this, \"_columnWidthCache\", {});\n\n    _defineProperty(this, \"_rowHeightCache\", {});\n\n    _defineProperty(this, \"_defaultHeight\", void 0);\n\n    _defineProperty(this, \"_defaultWidth\", void 0);\n\n    _defineProperty(this, \"_minHeight\", void 0);\n\n    _defineProperty(this, \"_minWidth\", void 0);\n\n    _defineProperty(this, \"_keyMapper\", void 0);\n\n    _defineProperty(this, \"_hasFixedHeight\", void 0);\n\n    _defineProperty(this, \"_hasFixedWidth\", void 0);\n\n    _defineProperty(this, \"_columnCount\", 0);\n\n    _defineProperty(this, \"_rowCount\", 0);\n\n    _defineProperty(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      var key = _this._keyMapper(0, index);\n\n      return _this._columnWidthCache[key] !== undefined ? _this._columnWidthCache[key] : _this._defaultWidth;\n    });\n\n    _defineProperty(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      var key = _this._keyMapper(index, 0);\n\n      return _this._rowHeightCache[key] !== undefined ? _this._rowHeightCache[key] : _this._defaultHeight;\n    });\n\n    var defaultHeight = params.defaultHeight,\n        defaultWidth = params.defaultWidth,\n        fixedHeight = params.fixedHeight,\n        fixedWidth = params.fixedWidth,\n        keyMapper = params.keyMapper,\n        minHeight = params.minHeight,\n        minWidth = params.minWidth;\n    this._hasFixedHeight = fixedHeight === true;\n    this._hasFixedWidth = fixedWidth === true;\n    this._minHeight = minHeight || 0;\n    this._minWidth = minWidth || 0;\n    this._keyMapper = keyMapper || defaultKeyMapper;\n    this._defaultHeight = Math.max(this._minHeight, typeof defaultHeight === 'number' ? defaultHeight : DEFAULT_HEIGHT);\n    this._defaultWidth = Math.max(this._minWidth, typeof defaultWidth === 'number' ? defaultWidth : DEFAULT_WIDTH);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (this._hasFixedHeight === false && this._hasFixedWidth === false) {\n        console.warn(\"CellMeasurerCache should only measure a cell's width or height. \" + 'You have configured CellMeasurerCache to measure both. ' + 'This will result in poor performance.');\n      }\n\n      if (this._hasFixedHeight === false && this._defaultHeight === 0) {\n        console.warn('Fixed height CellMeasurerCache should specify a :defaultHeight greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n\n      if (this._hasFixedWidth === false && this._defaultWidth === 0) {\n        console.warn('Fixed width CellMeasurerCache should specify a :defaultWidth greater than 0. ' + 'Failing to do so will lead to unnecessary layout and poor performance.');\n      }\n    }\n  }\n\n  _createClass(CellMeasurerCache, [{\n    key: \"clear\",\n    value: function clear(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      delete this._cellHeightCache[key];\n      delete this._cellWidthCache[key];\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellHeightCache = {};\n      this._cellWidthCache = {};\n      this._columnWidthCache = {};\n      this._rowHeightCache = {};\n      this._rowCount = 0;\n      this._columnCount = 0;\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._hasFixedHeight;\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._hasFixedWidth;\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedHeight) {\n        return this._defaultHeight;\n      } else {\n        var _key = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellHeightCache[_key] !== undefined ? Math.max(this._minHeight, this._cellHeightCache[_key]) : this._defaultHeight;\n      }\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (this._hasFixedWidth) {\n        return this._defaultWidth;\n      } else {\n        var _key2 = this._keyMapper(rowIndex, columnIndex);\n\n        return this._cellWidthCache[_key2] !== undefined ? Math.max(this._minWidth, this._cellWidthCache[_key2]) : this._defaultWidth;\n      }\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      return this._cellHeightCache[key] !== undefined;\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      var key = this._keyMapper(rowIndex, columnIndex);\n\n      if (columnIndex >= this._columnCount) {\n        this._columnCount = columnIndex + 1;\n      }\n\n      if (rowIndex >= this._rowCount) {\n        this._rowCount = rowIndex + 1;\n      } // Size is cached per cell so we don't have to re-measure if cells are re-ordered.\n\n\n      this._cellHeightCache[key] = height;\n      this._cellWidthCache[key] = width;\n\n      this._updateCachedColumnAndRowSizes(rowIndex, columnIndex);\n    }\n  }, {\n    key: \"_updateCachedColumnAndRowSizes\",\n    value: function _updateCachedColumnAndRowSizes(rowIndex, columnIndex) {\n      // :columnWidth and :rowHeight are derived based on all cells in a column/row.\n      // Pre-cache these derived values for faster lookup later.\n      // Reads are expected to occur more frequently than writes in this case.\n      // Only update non-fixed dimensions though to avoid doing unnecessary work.\n      if (!this._hasFixedWidth) {\n        var columnWidth = 0;\n\n        for (var i = 0; i < this._rowCount; i++) {\n          columnWidth = Math.max(columnWidth, this.getWidth(i, columnIndex));\n        }\n\n        var columnKey = this._keyMapper(0, columnIndex);\n\n        this._columnWidthCache[columnKey] = columnWidth;\n      }\n\n      if (!this._hasFixedHeight) {\n        var rowHeight = 0;\n\n        for (var _i = 0; _i < this._columnCount; _i++) {\n          rowHeight = Math.max(rowHeight, this.getHeight(rowIndex, _i));\n        }\n\n        var rowKey = this._keyMapper(rowIndex, 0);\n\n        this._rowHeightCache[rowKey] = rowHeight;\n      }\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCache;\n}();\n\nexport { CellMeasurerCache as default };\n\nfunction defaultKeyMapper(rowIndex, columnIndex) {\n  return \"\".concat(rowIndex, \"-\").concat(columnIndex);\n}\n\nimport { bpfrpt_proptype_CellMeasureCache } from \"./types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize'; // @TODO Merge Collection and CollectionView\n\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nvar IS_SCROLLING_TIMEOUT = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n/**\n * Monitors changes in properties (eg. cellCount) and state (eg. scroll offsets) to determine when rendering needs to occur.\n * This component does not render any visible content itself; it defers to the specified :cellLayoutManager.\n */\n\nvar CollectionView =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CollectionView, _React$PureComponent);\n\n  // Invokes callbacks only when their values have changed.\n  function CollectionView() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CollectionView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CollectionView)).call.apply(_getPrototypeOf2, [this].concat(args))); // If this component is being rendered server-side, getScrollbarSize() will return undefined.\n    // We handle this case in componentDidMount()\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_calculateSizeAndPositionDataOnNextUpdate\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnSectionRenderedHelper\", function () {\n      var _this$props = _this.props,\n          cellLayoutManager = _this$props.cellLayoutManager,\n          onSectionRendered = _this$props.onSectionRendered;\n\n      _this._onSectionRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          indices: cellLayoutManager.getLastRenderedIndices()\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_updateScrollPositionForScrollToCell\", function () {\n      var _this$props2 = _this.props,\n          cellLayoutManager = _this$props2.cellLayoutManager,\n          height = _this$props2.height,\n          scrollToAlignment = _this$props2.scrollToAlignment,\n          scrollToCell = _this$props2.scrollToCell,\n          width = _this$props2.width;\n      var _this$state = _this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop;\n\n      if (scrollToCell >= 0) {\n        var scrollPosition = cellLayoutManager.getScrollPositionForCell({\n          align: scrollToAlignment,\n          cellIndex: scrollToCell,\n          height: height,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          width: width\n        });\n\n        if (scrollPosition.scrollLeft !== scrollLeft || scrollPosition.scrollTop !== scrollTop) {\n          _this._setScrollPosition(scrollPosition);\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target !== _this._scrollingContainer) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._enablePointerEventsAfterDelay(); // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scrollTop never exceeds the total height.\n\n\n      var _this$props3 = _this.props,\n          cellLayoutManager = _this$props3.cellLayoutManager,\n          height = _this$props3.height,\n          isScrollingChange = _this$props3.isScrollingChange,\n          width = _this$props3.width;\n      var scrollbarSize = _this._scrollbarSize;\n\n      var _cellLayoutManager$ge = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge.height,\n          totalWidth = _cellLayoutManager$ge.width;\n\n      var scrollLeft = Math.max(0, Math.min(totalWidth - width + scrollbarSize, event.target.scrollLeft));\n      var scrollTop = Math.max(0, Math.min(totalHeight - height + scrollbarSize, event.target.scrollTop)); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (_this.state.scrollLeft !== scrollLeft || _this.state.scrollTop !== scrollTop) {\n        // Browsers with cancelable scroll events (eg. Firefox) interrupt scrolling animations if scrollTop/scrollLeft is set.\n        // Other browsers (eg. Safari) don't scroll as well without the help under certain conditions (DOM or style changes during scrolling).\n        // All things considered, this seems to be the best current work around that I'm aware of.\n        // For more information see https://github.com/bvaughn/react-virtualized/pull/124\n        var scrollPositionChangeReason = event.cancelable ? SCROLL_POSITION_CHANGE_REASONS.OBSERVED : SCROLL_POSITION_CHANGE_REASONS.REQUESTED; // Synchronously set :isScrolling the first time (since _setNextState will reschedule its animation frame each time it's called)\n\n        if (!_this.state.isScrolling) {\n          isScrollingChange(true);\n        }\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollPositionChangeReason: scrollPositionChangeReason,\n          scrollTop: scrollTop\n        });\n      }\n\n      _this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalWidth: totalWidth,\n        totalHeight: totalHeight\n      });\n    });\n\n    _this._scrollbarSize = getScrollbarSize();\n\n    if (_this._scrollbarSize === undefined) {\n      _this._scrollbarSizeMeasured = false;\n      _this._scrollbarSize = 0;\n    } else {\n      _this._scrollbarSizeMeasured = true;\n    }\n\n    return _this;\n  }\n  /**\n   * Forced recompute of cell sizes and positions.\n   * This function should be called if cell sizes have changed but nothing else has.\n   * Since cell positions are calculated by callbacks, the collection view has no way of detecting when the underlying data has changed.\n   */\n\n\n  _createClass(CollectionView, [{\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._calculateSizeAndPositionDataOnNextUpdate = true;\n      this.forceUpdate();\n    }\n    /* ---------------------------- Component lifecycle methods ---------------------------- */\n\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          cellLayoutManager = _this$props4.cellLayoutManager,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToCell = _this$props4.scrollToCell,\n          scrollTop = _this$props4.scrollTop; // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n      if (!this._scrollbarSizeMeasured) {\n        this._scrollbarSize = getScrollbarSize();\n        this._scrollbarSizeMeasured = true;\n        this.setState({});\n      }\n\n      if (scrollToCell >= 0) {\n        this._updateScrollPositionForScrollToCell();\n      } else if (scrollLeft >= 0 || scrollTop >= 0) {\n        this._setScrollPosition({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      } // Update onSectionRendered callback.\n\n\n      this._invokeOnSectionRenderedHelper();\n\n      var _cellLayoutManager$ge2 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge2.height,\n          totalWidth = _cellLayoutManager$ge2.width; // Initialize onScroll callback.\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalHeight: totalHeight,\n        totalWidth: totalWidth\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this$props5 = this.props,\n          height = _this$props5.height,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToCell = _this$props5.scrollToCell,\n          width = _this$props5.width;\n      var _this$state2 = this.state,\n          scrollLeft = _this$state2.scrollLeft,\n          scrollPositionChangeReason = _this$state2.scrollPositionChangeReason,\n          scrollTop = _this$state2.scrollTop; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        if (scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft && scrollLeft !== this._scrollingContainer.scrollLeft) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop >= 0 && scrollTop !== prevState.scrollTop && scrollTop !== this._scrollingContainer.scrollTop) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Update scroll offsets if the current :scrollToCell values requires it\n\n\n      if (height !== prevProps.height || scrollToAlignment !== prevProps.scrollToAlignment || scrollToCell !== prevProps.scrollToCell || width !== prevProps.width) {\n        this._updateScrollPositionForScrollToCell();\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnSectionRenderedHelper();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoHeight = _this$props6.autoHeight,\n          cellCount = _this$props6.cellCount,\n          cellLayoutManager = _this$props6.cellLayoutManager,\n          className = _this$props6.className,\n          height = _this$props6.height,\n          horizontalOverscanSize = _this$props6.horizontalOverscanSize,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          style = _this$props6.style,\n          verticalOverscanSize = _this$props6.verticalOverscanSize,\n          width = _this$props6.width;\n      var _this$state3 = this.state,\n          isScrolling = _this$state3.isScrolling,\n          scrollLeft = _this$state3.scrollLeft,\n          scrollTop = _this$state3.scrollTop; // Memoization reset\n\n      if (this._lastRenderedCellCount !== cellCount || this._lastRenderedCellLayoutManager !== cellLayoutManager || this._calculateSizeAndPositionDataOnNextUpdate) {\n        this._lastRenderedCellCount = cellCount;\n        this._lastRenderedCellLayoutManager = cellLayoutManager;\n        this._calculateSizeAndPositionDataOnNextUpdate = false;\n        cellLayoutManager.calculateSizeAndPositionData();\n      }\n\n      var _cellLayoutManager$ge3 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge3.height,\n          totalWidth = _cellLayoutManager$ge3.width; // Safely expand the rendered area by the specified overscan amount\n\n\n      var left = Math.max(0, scrollLeft - horizontalOverscanSize);\n      var top = Math.max(0, scrollTop - verticalOverscanSize);\n      var right = Math.min(totalWidth, scrollLeft + width + horizontalOverscanSize);\n      var bottom = Math.min(totalHeight, scrollTop + height + verticalOverscanSize);\n      var childrenToDisplay = height > 0 && width > 0 ? cellLayoutManager.cellRenderers({\n        height: bottom - top,\n        isScrolling: isScrolling,\n        width: right - left,\n        x: left,\n        y: top\n      }) : [];\n      var collectionStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        WebkitOverflowScrolling: 'touch',\n        width: width,\n        willChange: 'transform'\n      }; // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalHeight > height ? this._scrollbarSize : 0;\n      var horizontalScrollBarSize = totalWidth > width ? this._scrollbarSize : 0; // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n      collectionStyle.overflowX = totalWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      collectionStyle.overflowY = totalHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Collection', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: \"grid\",\n        style: _objectSpread({}, collectionStyle, {}, style),\n        tabIndex: 0\n      }, cellCount > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Collection__innerScrollContainer\",\n        style: {\n          height: totalHeight,\n          maxHeight: totalHeight,\n          maxWidth: totalWidth,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          width: totalWidth\n        }\n      }, childrenToDisplay), cellCount === 0 && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Collection.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_enablePointerEventsAfterDelay\",\n    value: function _enablePointerEventsAfterDelay() {\n      var _this2 = this;\n\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = setTimeout(function () {\n        var isScrollingChange = _this2.props.isScrollingChange;\n        isScrollingChange(false);\n        _this2._disablePointerEventsTimeoutId = null;\n\n        _this2.setState({\n          isScrolling: false\n        });\n      }, IS_SCROLLING_TIMEOUT);\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref) {\n      var _this3 = this;\n\n      var scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          totalHeight = _ref.totalHeight,\n          totalWidth = _ref.totalWidth;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref2) {\n          var scrollLeft = _ref2.scrollLeft,\n              scrollTop = _ref2.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_setScrollPosition\",\n    value: function _setScrollPosition(_ref3) {\n      var scrollLeft = _ref3.scrollLeft,\n          scrollTop = _ref3.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (scrollLeft >= 0) {\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (scrollTop >= 0) {\n        newState.scrollTop = scrollTop;\n      }\n\n      if (scrollLeft >= 0 && scrollLeft !== this.state.scrollLeft || scrollTop >= 0 && scrollTop !== this.state.scrollTop) {\n        this.setState(newState);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.cellCount === 0 && (prevState.scrollLeft !== 0 || prevState.scrollTop !== 0)) {\n        return {\n          scrollLeft: 0,\n          scrollTop: 0,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null ? nextProps.scrollTop : prevState.scrollTop,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return CollectionView;\n}(React.PureComponent);\n\n_defineProperty(CollectionView, \"defaultProps\", {\n  'aria-label': 'grid',\n  horizontalOverscanSize: 0,\n  noContentRenderer: function noContentRenderer() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  onSectionRendered: function onSectionRendered() {\n    return null;\n  },\n  scrollToAlignment: 'auto',\n  scrollToCell: -1,\n  style: {},\n  verticalOverscanSize: 0\n});\n\nCollectionView.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /**\n   * Number of cells in collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Calculates cell sizes and positions and manages rendering the appropriate cells given a specified window.\n   */\n  cellLayoutManager: PropTypes.object.isRequired,\n\n  /**\n   * Optional custom CSS class name to attach to root Collection element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * Height of Collection; this property determines the number of visible (vs virtualized) rows.\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Optional custom id to attach to root Collection element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Enables the `Collection` to horiontally \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  horizontalOverscanSize: PropTypes.number.isRequired,\n  isScrollingChange: PropTypes.func,\n\n  /**\n   * Optional renderer to be used in place of rows when either :rowCount or :cellCount is 0.\n   */\n  noContentRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, clientWidth, scrollHeight, scrollLeft, scrollTop, scrollWidth }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked with information about the section of the Collection that was just rendered.\n   * This callback is passed a named :indices parameter which is an Array of the most recently rendered section indices.\n   */\n  onSectionRendered: PropTypes.func.isRequired,\n\n  /**\n   * Horizontal offset.\n   */\n  scrollLeft: PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /**\n   * Cell index to ensure visible (by forcefully scrolling if necessary).\n   */\n  scrollToCell: PropTypes.number.isRequired,\n\n  /**\n   * Vertical offset.\n   */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Optional custom inline style to attach to root Collection element.\n   */\n  style: PropTypes.object,\n\n  /**\n   * Enables the `Collection` to vertically \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  verticalOverscanSize: PropTypes.number.isRequired,\n\n  /**\n   * Width of Collection; this property determines the number of visible (vs virtualized) columns.\n   */\n  width: PropTypes.number.isRequired\n} : {};\npolyfill(CollectionView);\nexport default CollectionView;","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * A section of the Window.\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * Sections have a fixed size and contain 0 to many cells (tracked by their indices).\n */\nvar Section =\n/*#__PURE__*/\nfunction () {\n  function Section(_ref) {\n    var height = _ref.height,\n        width = _ref.width,\n        x = _ref.x,\n        y = _ref.y;\n\n    _classCallCheck(this, Section);\n\n    this.height = height;\n    this.width = width;\n    this.x = x;\n    this.y = y;\n    this._indexMap = {};\n    this._indices = [];\n  }\n  /** Add a cell to this section. */\n\n\n  _createClass(Section, [{\n    key: \"addCellIndex\",\n    value: function addCellIndex(_ref2) {\n      var index = _ref2.index;\n\n      if (!this._indexMap[index]) {\n        this._indexMap[index] = true;\n\n        this._indices.push(index);\n      }\n    }\n    /** Get all cell indices that have been added to this section. */\n\n  }, {\n    key: \"getCellIndices\",\n    value: function getCellIndices() {\n      return this._indices;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.x, \",\").concat(this.y, \" \").concat(this.width, \"x\").concat(this.height);\n    }\n  }]);\n\n  return Section;\n}();\n\nexport { Section as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * \n */\nimport Section from './Section';\nvar SECTION_SIZE = 100;\n\n/**\n * Contains 0 to many Sections.\n * Grows (and adds Sections) dynamically as cells are registered.\n * Automatically adds cells to the appropriate Section(s).\n */\nvar SectionManager =\n/*#__PURE__*/\nfunction () {\n  function SectionManager() {\n    var sectionSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SECTION_SIZE;\n\n    _classCallCheck(this, SectionManager);\n\n    this._sectionSize = sectionSize;\n    this._cellMetadata = [];\n    this._sections = {};\n  }\n  /**\n   * Gets all cell indices contained in the specified region.\n   * A region may encompass 1 or more Sections.\n   */\n\n\n  _createClass(SectionManager, [{\n    key: \"getCellIndices\",\n    value: function getCellIndices(_ref) {\n      var height = _ref.height,\n          width = _ref.width,\n          x = _ref.x,\n          y = _ref.y;\n      var indices = {};\n      this.getSections({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      }).forEach(function (section) {\n        return section.getCellIndices().forEach(function (index) {\n          indices[index] = index;\n        });\n      }); // Object keys are strings; this function returns numbers\n\n      return Object.keys(indices).map(function (index) {\n        return indices[index];\n      });\n    }\n    /** Get size and position information for the cell specified. */\n\n  }, {\n    key: \"getCellMetadata\",\n    value: function getCellMetadata(_ref2) {\n      var index = _ref2.index;\n      return this._cellMetadata[index];\n    }\n    /** Get all Sections overlapping the specified region. */\n\n  }, {\n    key: \"getSections\",\n    value: function getSections(_ref3) {\n      var height = _ref3.height,\n          width = _ref3.width,\n          x = _ref3.x,\n          y = _ref3.y;\n      var sectionXStart = Math.floor(x / this._sectionSize);\n      var sectionXStop = Math.floor((x + width - 1) / this._sectionSize);\n      var sectionYStart = Math.floor(y / this._sectionSize);\n      var sectionYStop = Math.floor((y + height - 1) / this._sectionSize);\n      var sections = [];\n\n      for (var sectionX = sectionXStart; sectionX <= sectionXStop; sectionX++) {\n        for (var sectionY = sectionYStart; sectionY <= sectionYStop; sectionY++) {\n          var key = \"\".concat(sectionX, \".\").concat(sectionY);\n\n          if (!this._sections[key]) {\n            this._sections[key] = new Section({\n              height: this._sectionSize,\n              width: this._sectionSize,\n              x: sectionX * this._sectionSize,\n              y: sectionY * this._sectionSize\n            });\n          }\n\n          sections.push(this._sections[key]);\n        }\n      }\n\n      return sections;\n    }\n    /** Total number of Sections based on the currently registered cells. */\n\n  }, {\n    key: \"getTotalSectionCount\",\n    value: function getTotalSectionCount() {\n      return Object.keys(this._sections).length;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var _this = this;\n\n      return Object.keys(this._sections).map(function (index) {\n        return _this._sections[index].toString();\n      });\n    }\n    /** Adds a cell to the appropriate Sections and registers it metadata for later retrievable. */\n\n  }, {\n    key: \"registerCell\",\n    value: function registerCell(_ref4) {\n      var cellMetadatum = _ref4.cellMetadatum,\n          index = _ref4.index;\n      this._cellMetadata[index] = cellMetadatum;\n      this.getSections(cellMetadatum).forEach(function (section) {\n        return section.addCellIndex({\n          index: index\n        });\n      });\n    }\n  }]);\n\n  return SectionManager;\n}();\n\nexport { SectionManager as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","/**\n * Determines a new offset that ensures a certain cell is visible, given the current offset.\n * If the cell is already visible then the current offset will be returned.\n * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n *\n * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n * @param cellOffset Offset (x or y) position for cell\n * @param cellSize Size (width or height) of cell\n * @param containerSize Total size (width or height) of the container\n * @param currentOffset Container's current (x or y) offset\n * @return Offset to use to ensure the specified cell is visible\n */\nexport default function getUpdatedOffsetForIndex(_ref) {\n  var _ref$align = _ref.align,\n      align = _ref$align === void 0 ? 'auto' : _ref$align,\n      cellOffset = _ref.cellOffset,\n      cellSize = _ref.cellSize,\n      containerSize = _ref.containerSize,\n      currentOffset = _ref.currentOffset;\n  var maxOffset = cellOffset;\n  var minOffset = maxOffset - containerSize + cellSize;\n\n  switch (align) {\n    case 'start':\n      return maxOffset;\n\n    case 'end':\n      return minOffset;\n\n    case 'center':\n      return maxOffset - (containerSize - cellSize) / 2;\n\n    default:\n      return Math.max(minOffset, Math.min(maxOffset, currentOffset));\n  }\n}","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport CollectionView from './CollectionView';\nimport _calculateSizeAndPositionData from './utils/calculateSizeAndPositionData';\nimport getUpdatedOffsetForIndex from '../utils/getUpdatedOffsetForIndex';\n\n/**\n * Renders scattered or non-linear data.\n * Unlike Grid, which renders checkerboard data, Collection can render arbitrarily positioned- even overlapping- data.\n */\nvar Collection =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Collection, _React$PureComponent);\n\n  function Collection(props, context) {\n    var _this;\n\n    _classCallCheck(this, Collection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Collection).call(this, props, context));\n    _this._cellMetadata = [];\n    _this._lastRenderedCellIndices = []; // Cell cache during scroll (for performance)\n\n    _this._cellCache = [];\n    _this._isScrollingChange = _this._isScrollingChange.bind(_assertThisInitialized(_this));\n    _this._setCollectionViewRef = _this._setCollectionViewRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Collection, [{\n    key: \"forceUpdate\",\n    value: function forceUpdate() {\n      if (this._collectionView !== undefined) {\n        this._collectionView.forceUpdate();\n      }\n    }\n    /** See Collection#recomputeCellSizesAndPositions */\n\n  }, {\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._cellCache = [];\n\n      this._collectionView.recomputeCellSizesAndPositions();\n    }\n    /** React lifecycle methods */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = _extends({}, this.props);\n\n      return React.createElement(CollectionView, _extends({\n        cellLayoutManager: this,\n        isScrollingChange: this._isScrollingChange,\n        ref: this._setCollectionViewRef\n      }, props));\n    }\n    /** CellLayoutManager interface */\n\n  }, {\n    key: \"calculateSizeAndPositionData\",\n    value: function calculateSizeAndPositionData() {\n      var _this$props = this.props,\n          cellCount = _this$props.cellCount,\n          cellSizeAndPositionGetter = _this$props.cellSizeAndPositionGetter,\n          sectionSize = _this$props.sectionSize;\n\n      var data = _calculateSizeAndPositionData({\n        cellCount: cellCount,\n        cellSizeAndPositionGetter: cellSizeAndPositionGetter,\n        sectionSize: sectionSize\n      });\n\n      this._cellMetadata = data.cellMetadata;\n      this._sectionManager = data.sectionManager;\n      this._height = data.height;\n      this._width = data.width;\n    }\n    /**\n     * Returns the most recently rendered set of cell indices.\n     */\n\n  }, {\n    key: \"getLastRenderedIndices\",\n    value: function getLastRenderedIndices() {\n      return this._lastRenderedCellIndices;\n    }\n    /**\n     * Calculates the minimum amount of change from the current scroll position to ensure the specified cell is (fully) visible.\n     */\n\n  }, {\n    key: \"getScrollPositionForCell\",\n    value: function getScrollPositionForCell(_ref) {\n      var align = _ref.align,\n          cellIndex = _ref.cellIndex,\n          height = _ref.height,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          width = _ref.width;\n      var cellCount = this.props.cellCount;\n\n      if (cellIndex >= 0 && cellIndex < cellCount) {\n        var cellMetadata = this._cellMetadata[cellIndex];\n        scrollLeft = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.x,\n          cellSize: cellMetadata.width,\n          containerSize: width,\n          currentOffset: scrollLeft,\n          targetIndex: cellIndex\n        });\n        scrollTop = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.y,\n          cellSize: cellMetadata.height,\n          containerSize: height,\n          currentOffset: scrollTop,\n          targetIndex: cellIndex\n        });\n      }\n\n      return {\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      };\n    }\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return {\n        height: this._height,\n        width: this._width\n      };\n    }\n  }, {\n    key: \"cellRenderers\",\n    value: function cellRenderers(_ref2) {\n      var _this2 = this;\n\n      var height = _ref2.height,\n          isScrolling = _ref2.isScrolling,\n          width = _ref2.width,\n          x = _ref2.x,\n          y = _ref2.y;\n      var _this$props2 = this.props,\n          cellGroupRenderer = _this$props2.cellGroupRenderer,\n          cellRenderer = _this$props2.cellRenderer; // Store for later calls to getLastRenderedIndices()\n\n      this._lastRenderedCellIndices = this._sectionManager.getCellIndices({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      });\n      return cellGroupRenderer({\n        cellCache: this._cellCache,\n        cellRenderer: cellRenderer,\n        cellSizeAndPositionGetter: function cellSizeAndPositionGetter(_ref3) {\n          var index = _ref3.index;\n          return _this2._sectionManager.getCellMetadata({\n            index: index\n          });\n        },\n        indices: this._lastRenderedCellIndices,\n        isScrolling: isScrolling\n      });\n    }\n  }, {\n    key: \"_isScrollingChange\",\n    value: function _isScrollingChange(isScrolling) {\n      if (!isScrolling) {\n        this._cellCache = [];\n      }\n    }\n  }, {\n    key: \"_setCollectionViewRef\",\n    value: function _setCollectionViewRef(ref) {\n      this._collectionView = ref;\n    }\n  }]);\n\n  return Collection;\n}(React.PureComponent);\n\n_defineProperty(Collection, \"defaultProps\", {\n  'aria-label': 'grid',\n  cellGroupRenderer: defaultCellGroupRenderer\n});\n\nexport { Collection as default };\nCollection.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Number of cells in Collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a group of cells given their indices.\n   * Should implement the following interface: ({\n   *   cellSizeAndPositionGetter:Function,\n   *   indices: Array<number>,\n   *   cellRenderer: Function\n   * }): Array<PropTypes.node>\n   */\n  cellGroupRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Responsible for rendering a cell given an row and column index.\n   * Should implement the following interface: ({ index: number, key: string, style: object }): PropTypes.element\n   */\n  cellRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback responsible for returning size and offset/position information for a given cell (index).\n   * ({ index: number }): { height: number, width: number, x: number, y: number }\n   */\n  cellSizeAndPositionGetter: PropTypes.func.isRequired,\n\n  /**\n   * Optionally override the size of the sections a Collection's cells are split into.\n   */\n  sectionSize: PropTypes.number\n} : {};\n\nfunction defaultCellGroupRenderer(_ref4) {\n  var cellCache = _ref4.cellCache,\n      cellRenderer = _ref4.cellRenderer,\n      cellSizeAndPositionGetter = _ref4.cellSizeAndPositionGetter,\n      indices = _ref4.indices,\n      isScrolling = _ref4.isScrolling;\n  return indices.map(function (index) {\n    var cellMetadata = cellSizeAndPositionGetter({\n      index: index\n    });\n    var cellRendererProps = {\n      index: index,\n      isScrolling: isScrolling,\n      key: index,\n      style: {\n        height: cellMetadata.height,\n        left: cellMetadata.x,\n        position: 'absolute',\n        top: cellMetadata.y,\n        width: cellMetadata.width\n      }\n    }; // Avoid re-creating cells while scrolling.\n    // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n    // If a scroll is in progress- cache and reuse cells.\n    // This cache will be thrown away once scrolling complets.\n\n    if (isScrolling) {\n      if (!(index in cellCache)) {\n        cellCache[index] = cellRenderer(cellRendererProps);\n      }\n\n      return cellCache[index];\n    } else {\n      return cellRenderer(cellRendererProps);\n    }\n  }).filter(function (renderedCell) {\n    return !!renderedCell;\n  });\n}\n\nimport { bpfrpt_proptype_ScrollPosition } from \"./types\";\nimport { bpfrpt_proptype_SizeInfo } from \"./types\";","import SectionManager from '../SectionManager';\nexport default function calculateSizeAndPositionData(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSizeAndPositionGetter = _ref.cellSizeAndPositionGetter,\n      sectionSize = _ref.sectionSize;\n  var cellMetadata = [];\n  var sectionManager = new SectionManager(sectionSize);\n  var height = 0;\n  var width = 0;\n\n  for (var index = 0; index < cellCount; index++) {\n    var cellMetadatum = cellSizeAndPositionGetter({\n      index: index\n    });\n\n    if (cellMetadatum.height == null || isNaN(cellMetadatum.height) || cellMetadatum.width == null || isNaN(cellMetadatum.width) || cellMetadatum.x == null || isNaN(cellMetadatum.x) || cellMetadatum.y == null || isNaN(cellMetadatum.y)) {\n      throw Error(\"Invalid metadata returned for cell \".concat(index, \":\\n        x:\").concat(cellMetadatum.x, \", y:\").concat(cellMetadatum.y, \", width:\").concat(cellMetadatum.width, \", height:\").concat(cellMetadatum.height));\n    }\n\n    height = Math.max(height, cellMetadatum.y + cellMetadatum.height);\n    width = Math.max(width, cellMetadatum.x + cellMetadatum.width);\n    cellMetadata[index] = cellMetadatum;\n    sectionManager.registerCell({\n      cellMetadatum: cellMetadatum,\n      index: index\n    });\n  }\n\n  return {\n    cellMetadata: cellMetadata,\n    height: height,\n    sectionManager: sectionManager,\n    width: width\n  };\n}","import Collection from './Collection';\nexport default Collection;\nexport { Collection };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * High-order component that auto-calculates column-widths for `Grid` cells.\n */\n\nvar ColumnSizer =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ColumnSizer, _React$PureComponent);\n\n  function ColumnSizer(props, context) {\n    var _this;\n\n    _classCallCheck(this, ColumnSizer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ColumnSizer).call(this, props, context));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ColumnSizer, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props = this.props,\n          columnMaxWidth = _this$props.columnMaxWidth,\n          columnMinWidth = _this$props.columnMinWidth,\n          columnCount = _this$props.columnCount,\n          width = _this$props.width;\n\n      if (columnMaxWidth !== prevProps.columnMaxWidth || columnMinWidth !== prevProps.columnMinWidth || columnCount !== prevProps.columnCount || width !== prevProps.width) {\n        if (this._registeredChild) {\n          this._registeredChild.recomputeGridSize();\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          columnMaxWidth = _this$props2.columnMaxWidth,\n          columnMinWidth = _this$props2.columnMinWidth,\n          columnCount = _this$props2.columnCount,\n          width = _this$props2.width;\n      var safeColumnMinWidth = columnMinWidth || 1;\n      var safeColumnMaxWidth = columnMaxWidth ? Math.min(columnMaxWidth, width) : width;\n      var columnWidth = width / columnCount;\n      columnWidth = Math.max(safeColumnMinWidth, columnWidth);\n      columnWidth = Math.min(safeColumnMaxWidth, columnWidth);\n      columnWidth = Math.floor(columnWidth);\n      var adjustedWidth = Math.min(width, columnWidth * columnCount);\n      return children({\n        adjustedWidth: adjustedWidth,\n        columnWidth: columnWidth,\n        getColumnWidth: function getColumnWidth() {\n          return columnWidth;\n        },\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(child) {\n      if (child && typeof child.recomputeGridSize !== 'function') {\n        throw Error('Unexpected child type registered; only Grid/MultiGrid children are supported.');\n      }\n\n      this._registeredChild = child;\n\n      if (this._registeredChild) {\n        this._registeredChild.recomputeGridSize();\n      }\n    }\n  }]);\n\n  return ColumnSizer;\n}(React.PureComponent);\n\nexport { ColumnSizer as default };\nColumnSizer.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized Grid.\n   * This function should implement the following signature:\n   * ({ adjustedWidth, getColumnWidth, registerChild }) => PropTypes.element\n   *\n   * The specified :getColumnWidth function should be passed to the Grid's :columnWidth property.\n   * The :registerChild should be passed to the Grid's :ref property.\n   * The :adjustedWidth property is optional; it reflects the lesser of the overall width or the width of all columns.\n   */\n  children: PropTypes.func.isRequired,\n\n  /** Optional maximum allowed column width */\n  columnMaxWidth: PropTypes.number,\n\n  /** Optional minimum allowed column width */\n  columnMinWidth: PropTypes.number,\n\n  /** Number of columns in Grid or Table child */\n  columnCount: PropTypes.number.isRequired,\n\n  /** Width of Grid or Table child */\n  width: PropTypes.number.isRequired\n} : {};","import ColumnSizer from './ColumnSizer';\nexport default ColumnSizer;\nexport { ColumnSizer };","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\n/**\n * Higher-order component that manages lazy-loading for \"infinite\" data.\n * This component decorates a virtual component and just-in-time prefetches rows as a user scrolls.\n * It is intended as a convenience component; fork it if you'd like finer-grained control over data-loading.\n */\n\nvar InfiniteLoader =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(InfiniteLoader, _React$PureComponent);\n\n  function InfiniteLoader(props, context) {\n    var _this;\n\n    _classCallCheck(this, InfiniteLoader);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InfiniteLoader).call(this, props, context));\n    _this._loadMoreRowsMemoizer = createCallbackMemoizer();\n    _this._onRowsRendered = _this._onRowsRendered.bind(_assertThisInitialized(_this));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(InfiniteLoader, [{\n    key: \"resetLoadMoreRowsCache\",\n    value: function resetLoadMoreRowsCache(autoReload) {\n      this._loadMoreRowsMemoizer = createCallbackMemoizer();\n\n      if (autoReload) {\n        this._doStuff(this._lastRenderedStartIndex, this._lastRenderedStopIndex);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return children({\n        onRowsRendered: this._onRowsRendered,\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_loadUnloadedRanges\",\n    value: function _loadUnloadedRanges(unloadedRanges) {\n      var _this2 = this;\n\n      var loadMoreRows = this.props.loadMoreRows;\n      unloadedRanges.forEach(function (unloadedRange) {\n        var promise = loadMoreRows(unloadedRange);\n\n        if (promise) {\n          promise.then(function () {\n            // Refresh the visible rows if any of them have just been loaded.\n            // Otherwise they will remain in their unloaded visual state.\n            if (isRangeVisible({\n              lastRenderedStartIndex: _this2._lastRenderedStartIndex,\n              lastRenderedStopIndex: _this2._lastRenderedStopIndex,\n              startIndex: unloadedRange.startIndex,\n              stopIndex: unloadedRange.stopIndex\n            })) {\n              if (_this2._registeredChild) {\n                forceUpdateReactVirtualizedComponent(_this2._registeredChild, _this2._lastRenderedStartIndex);\n              }\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_onRowsRendered\",\n    value: function _onRowsRendered(_ref) {\n      var startIndex = _ref.startIndex,\n          stopIndex = _ref.stopIndex;\n      this._lastRenderedStartIndex = startIndex;\n      this._lastRenderedStopIndex = stopIndex;\n\n      this._doStuff(startIndex, stopIndex);\n    }\n  }, {\n    key: \"_doStuff\",\n    value: function _doStuff(startIndex, stopIndex) {\n      var _ref2,\n          _this3 = this;\n\n      var _this$props = this.props,\n          isRowLoaded = _this$props.isRowLoaded,\n          minimumBatchSize = _this$props.minimumBatchSize,\n          rowCount = _this$props.rowCount,\n          threshold = _this$props.threshold;\n      var unloadedRanges = scanForUnloadedRanges({\n        isRowLoaded: isRowLoaded,\n        minimumBatchSize: minimumBatchSize,\n        rowCount: rowCount,\n        startIndex: Math.max(0, startIndex - threshold),\n        stopIndex: Math.min(rowCount - 1, stopIndex + threshold)\n      }); // For memoize comparison\n\n      var squashedUnloadedRanges = (_ref2 = []).concat.apply(_ref2, _toConsumableArray(unloadedRanges.map(function (_ref3) {\n        var startIndex = _ref3.startIndex,\n            stopIndex = _ref3.stopIndex;\n        return [startIndex, stopIndex];\n      })));\n\n      this._loadMoreRowsMemoizer({\n        callback: function callback() {\n          _this3._loadUnloadedRanges(unloadedRanges);\n        },\n        indices: {\n          squashedUnloadedRanges: squashedUnloadedRanges\n        }\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(registeredChild) {\n      this._registeredChild = registeredChild;\n    }\n  }]);\n\n  return InfiniteLoader;\n}(React.PureComponent);\n/**\n * Determines if the specified start/stop range is visible based on the most recently rendered range.\n */\n\n\n_defineProperty(InfiniteLoader, \"defaultProps\", {\n  minimumBatchSize: 10,\n  rowCount: 0,\n  threshold: 15\n});\n\nexport { InfiniteLoader as default };\nInfiniteLoader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized component.\n   * This function should implement the following signature:\n   * ({ onRowsRendered, registerChild }) => PropTypes.element\n   *\n   * The specified :onRowsRendered function should be passed through to the child's :onRowsRendered property.\n   * The :registerChild callback should be set as the virtualized component's :ref.\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Function responsible for tracking the loaded state of each row.\n   * It should implement the following signature: ({ index: number }): boolean\n   */\n  isRowLoaded: PropTypes.func.isRequired,\n\n  /**\n   * Callback to be invoked when more rows must be loaded.\n   * It should implement the following signature: ({ startIndex, stopIndex }): Promise\n   * The returned Promise should be resolved once row data has finished loading.\n   * It will be used to determine when to refresh the list with the newly-loaded data.\n   * This callback may be called multiple times in reaction to a single scroll event.\n   */\n  loadMoreRows: PropTypes.func.isRequired,\n\n  /**\n   * Minimum number of rows to be loaded at a time.\n   * This property can be used to batch requests to reduce HTTP requests.\n   */\n  minimumBatchSize: PropTypes.number.isRequired,\n\n  /**\n   * Number of rows in list; can be arbitrary high number if actual number is unknown.\n   */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Threshold at which to pre-fetch data.\n   * A threshold X means that data will start loading when a user scrolls within X rows.\n   * This value defaults to 15.\n   */\n  threshold: PropTypes.number.isRequired\n} : {};\nexport function isRangeVisible(_ref4) {\n  var lastRenderedStartIndex = _ref4.lastRenderedStartIndex,\n      lastRenderedStopIndex = _ref4.lastRenderedStopIndex,\n      startIndex = _ref4.startIndex,\n      stopIndex = _ref4.stopIndex;\n  return !(startIndex > lastRenderedStopIndex || stopIndex < lastRenderedStartIndex);\n}\n/**\n * Returns all of the ranges within a larger range that contain unloaded rows.\n */\n\nexport function scanForUnloadedRanges(_ref5) {\n  var isRowLoaded = _ref5.isRowLoaded,\n      minimumBatchSize = _ref5.minimumBatchSize,\n      rowCount = _ref5.rowCount,\n      startIndex = _ref5.startIndex,\n      stopIndex = _ref5.stopIndex;\n  var unloadedRanges = [];\n  var rangeStartIndex = null;\n  var rangeStopIndex = null;\n\n  for (var index = startIndex; index <= stopIndex; index++) {\n    var loaded = isRowLoaded({\n      index: index\n    });\n\n    if (!loaded) {\n      rangeStopIndex = index;\n\n      if (rangeStartIndex === null) {\n        rangeStartIndex = index;\n      }\n    } else if (rangeStopIndex !== null) {\n      unloadedRanges.push({\n        startIndex: rangeStartIndex,\n        stopIndex: rangeStopIndex\n      });\n      rangeStartIndex = rangeStopIndex = null;\n    }\n  } // If :rangeStopIndex is not null it means we haven't ran out of unloaded rows.\n  // Scan forward to try filling our :minimumBatchSize.\n\n\n  if (rangeStopIndex !== null) {\n    var potentialStopIndex = Math.min(Math.max(rangeStopIndex, rangeStartIndex + minimumBatchSize - 1), rowCount - 1);\n\n    for (var _index = rangeStopIndex + 1; _index <= potentialStopIndex; _index++) {\n      if (!isRowLoaded({\n        index: _index\n      })) {\n        rangeStopIndex = _index;\n      } else {\n        break;\n      }\n    }\n\n    unloadedRanges.push({\n      startIndex: rangeStartIndex,\n      stopIndex: rangeStopIndex\n    });\n  } // Check to see if our first range ended prematurely.\n  // In this case we should scan backwards to try filling our :minimumBatchSize.\n\n\n  if (unloadedRanges.length) {\n    var firstUnloadedRange = unloadedRanges[0];\n\n    while (firstUnloadedRange.stopIndex - firstUnloadedRange.startIndex + 1 < minimumBatchSize && firstUnloadedRange.startIndex > 0) {\n      var _index2 = firstUnloadedRange.startIndex - 1;\n\n      if (!isRowLoaded({\n        index: _index2\n      })) {\n        firstUnloadedRange.startIndex = _index2;\n      } else {\n        break;\n      }\n    }\n  }\n\n  return unloadedRanges;\n}\n/**\n * Since RV components use shallowCompare we need to force a render (even though props haven't changed).\n * However InfiniteLoader may wrap a Grid or it may wrap a Table or List.\n * In the first case the built-in React forceUpdate() method is sufficient to force a re-render,\n * But in the latter cases we need to use the RV-specific forceUpdateGrid() method.\n * Else the inner Grid will not be re-rendered and visuals may be stale.\n *\n * Additionally, while a Grid is scrolling the cells can be cached,\n * So it's important to invalidate that cache by recalculating sizes\n * before forcing a rerender.\n */\n\nexport function forceUpdateReactVirtualizedComponent(component) {\n  var currentIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var recomputeSize = typeof component.recomputeGridSize === 'function' ? component.recomputeGridSize : component.recomputeRowHeights;\n\n  if (recomputeSize) {\n    recomputeSize.call(component, currentIndex);\n  } else {\n    component.forceUpdate();\n  }\n}","import InfiniteLoader from './InfiniteLoader';\nexport default InfiniteLoader;\nexport { InfiniteLoader };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport * as React from 'react';\nimport clsx from 'clsx';\n/**\n * It is inefficient to create and manage a large list of DOM elements within a scrolling container\n * if only a few of those elements are visible. The primary purpose of this component is to improve\n * performance by only rendering the DOM nodes that a user is able to see based on their current\n * scroll position.\n *\n * This component renders a virtualized list of elements with either fixed or dynamic heights.\n */\n\nvar List = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(List, _React$PureComponent);\n\n  function List() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, List);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(List)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"Grid\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRenderer\", function (_ref) {\n      var parent = _ref.parent,\n          rowIndex = _ref.rowIndex,\n          style = _ref.style,\n          isScrolling = _ref.isScrolling,\n          isVisible = _ref.isVisible,\n          key = _ref.key;\n      var rowRenderer = _this.props.rowRenderer; // TRICKY The style object is sometimes cached by Grid.\n      // This prevents new style objects from bypassing shallowCompare().\n      // However as of React 16, style props are auto-frozen (at least in dev mode)\n      // Check to make sure we can still modify the style before proceeding.\n      // https://github.com/facebook/react/commit/977357765b44af8ff0cfea327866861073095c12#commitcomment-20648713\n\n      var widthDescriptor = Object.getOwnPropertyDescriptor(style, 'width');\n\n      if (widthDescriptor && widthDescriptor.writable) {\n        // By default, List cells should be 100% width.\n        // This prevents them from flowing under a scrollbar (if present).\n        style.width = '100%';\n      }\n\n      return rowRenderer({\n        index: rowIndex,\n        style: style,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (ref) {\n      _this.Grid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (_ref2) {\n      var clientHeight = _ref2.clientHeight,\n          scrollHeight = _ref2.scrollHeight,\n          scrollTop = _ref2.scrollTop;\n      var onScroll = _this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref3) {\n      var rowOverscanStartIndex = _ref3.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref3.rowOverscanStopIndex,\n          rowStartIndex = _ref3.rowStartIndex,\n          rowStopIndex = _ref3.rowStopIndex;\n      var onRowsRendered = _this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref4) {\n      var alignment = _ref4.alignment,\n          index = _ref4.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index,\n          columnIndex: 0\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref6 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref6$columnIndex = _ref6.columnIndex,\n          columnIndex = _ref6$columnIndex === void 0 ? 0 : _ref6$columnIndex,\n          _ref6$rowIndex = _ref6.rowIndex,\n          rowIndex = _ref6$rowIndex === void 0 ? 0 : _ref6$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index,\n          columnIndex: 0\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          scrollToIndex = _this$props.scrollToIndex,\n          width = _this$props.width;\n      var classNames = clsx('ReactVirtualized__List', className);\n      return React.createElement(Grid, _extends({}, this.props, {\n        autoContainerWidth: true,\n        cellRenderer: this._cellRenderer,\n        className: classNames,\n        columnWidth: width,\n        columnCount: 1,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        scrollToRow: scrollToIndex\n      }));\n    }\n  }]);\n\n  return List;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /** Optional CSS class name */\n  \"className\": PropTypes.string,\n\n  /**\n   * Used to estimate the total height of a List before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Height constraint for list (determines how many actual rows are rendered) */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional renderer to be used in place of rows when rowCount is 0 */\n  \"noRowsRenderer\": function noRowsRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Callback invoked with information about the slice of rows that were just rendered.  */\n  \"onRowsRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed row height (number) or a function that returns the height of a row given its index.  */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a row given an index; ({ index: number }): node */\n  \"rowRenderer\": function rowRenderer() {\n    return (typeof bpfrpt_proptype_RowRenderer === \"function\" ? bpfrpt_proptype_RowRenderer.isRequired ? bpfrpt_proptype_RowRenderer.isRequired : bpfrpt_proptype_RowRenderer : PropTypes.shape(bpfrpt_proptype_RowRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in list. */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** See Grid#scrollToAlignment */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToIndex\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of list */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(List, \"defaultProps\", {\n  autoHeight: false,\n  estimatedRowSize: 30,\n  onScroll: function onScroll() {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {},\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { List as default };\nimport { bpfrpt_proptype_NoContentRenderer } from \"../Grid\";\nimport { bpfrpt_proptype_Alignment } from \"../Grid\";\nimport { bpfrpt_proptype_CellSize } from \"../Grid\";\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"../Grid\";\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_CellRendererParams } from \"../Grid\";\nimport { bpfrpt_proptype_Scroll as bpfrpt_proptype_GridScroll } from \"../Grid\";\nimport { bpfrpt_proptype_RowRenderer } from \"./types\";\nimport { bpfrpt_proptype_RenderedRows } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport PropTypes from \"prop-types\";","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/binary-search-bounds\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nfunction _GEA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x >= y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GEP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) >= 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _GTA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x > y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GTP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) > 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LTA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x < y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LTP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) < 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LEA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x <= y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LEP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) <= 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _EQA(a, l, h, y) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x === y) {\n      return m;\n    } else if (x <= y) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction _EQP(a, l, h, y, c) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n    var p = c(x, y);\n\n    if (p === 0) {\n      return m;\n    } else if (p <= 0) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction dispatchBsearchEQ(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _EQP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _EQA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nexport default {\n  ge: dispatchBsearchGE,\n  gt: dispatchBsearchGT,\n  lt: dispatchBsearchLT,\n  le: dispatchBsearchLE,\n  eq: dispatchBsearchEQ\n};","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/interval-tree-1d\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax in an upstream dependency.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nimport bounds from './binarySearchBounds';\nvar NOT_FOUND = 0;\nvar SUCCESS = 1;\nvar EMPTY = 2;\n\nfunction IntervalTreeNode(mid, left, right, leftPoints, rightPoints) {\n  this.mid = mid;\n  this.left = left;\n  this.right = right;\n  this.leftPoints = leftPoints;\n  this.rightPoints = rightPoints;\n  this.count = (left ? left.count : 0) + (right ? right.count : 0) + leftPoints.length;\n}\n\nvar proto = IntervalTreeNode.prototype;\n\nfunction copy(a, b) {\n  a.mid = b.mid;\n  a.left = b.left;\n  a.right = b.right;\n  a.leftPoints = b.leftPoints;\n  a.rightPoints = b.rightPoints;\n  a.count = b.count;\n}\n\nfunction rebuild(node, intervals) {\n  var ntree = createIntervalTree(intervals);\n  node.mid = ntree.mid;\n  node.left = ntree.left;\n  node.right = ntree.right;\n  node.leftPoints = ntree.leftPoints;\n  node.rightPoints = ntree.rightPoints;\n  node.count = ntree.count;\n}\n\nfunction rebuildWithInterval(node, interval) {\n  var intervals = node.intervals([]);\n  intervals.push(interval);\n  rebuild(node, intervals);\n}\n\nfunction rebuildWithoutInterval(node, interval) {\n  var intervals = node.intervals([]);\n  var idx = intervals.indexOf(interval);\n\n  if (idx < 0) {\n    return NOT_FOUND;\n  }\n\n  intervals.splice(idx, 1);\n  rebuild(node, intervals);\n  return SUCCESS;\n}\n\nproto.intervals = function (result) {\n  result.push.apply(result, this.leftPoints);\n\n  if (this.left) {\n    this.left.intervals(result);\n  }\n\n  if (this.right) {\n    this.right.intervals(result);\n  }\n\n  return result;\n};\n\nproto.insert = function (interval) {\n  var weight = this.count - this.leftPoints.length;\n  this.count += 1;\n\n  if (interval[1] < this.mid) {\n    if (this.left) {\n      if (4 * (this.left.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.left.insert(interval);\n      }\n    } else {\n      this.left = createIntervalTree([interval]);\n    }\n  } else if (interval[0] > this.mid) {\n    if (this.right) {\n      if (4 * (this.right.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.right.insert(interval);\n      }\n    } else {\n      this.right = createIntervalTree([interval]);\n    }\n  } else {\n    var l = bounds.ge(this.leftPoints, interval, compareBegin);\n    var r = bounds.ge(this.rightPoints, interval, compareEnd);\n    this.leftPoints.splice(l, 0, interval);\n    this.rightPoints.splice(r, 0, interval);\n  }\n};\n\nproto.remove = function (interval) {\n  var weight = this.count - this.leftPoints;\n\n  if (interval[1] < this.mid) {\n    if (!this.left) {\n      return NOT_FOUND;\n    }\n\n    var rw = this.right ? this.right.count : 0;\n\n    if (4 * rw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.left.remove(interval);\n\n    if (r === EMPTY) {\n      this.left = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else if (interval[0] > this.mid) {\n    if (!this.right) {\n      return NOT_FOUND;\n    }\n\n    var lw = this.left ? this.left.count : 0;\n\n    if (4 * lw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.right.remove(interval);\n\n    if (r === EMPTY) {\n      this.right = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else {\n    if (this.count === 1) {\n      if (this.leftPoints[0] === interval) {\n        return EMPTY;\n      } else {\n        return NOT_FOUND;\n      }\n    }\n\n    if (this.leftPoints.length === 1 && this.leftPoints[0] === interval) {\n      if (this.left && this.right) {\n        var p = this;\n        var n = this.left;\n\n        while (n.right) {\n          p = n;\n          n = n.right;\n        }\n\n        if (p === this) {\n          n.right = this.right;\n        } else {\n          var l = this.left;\n          var r = this.right;\n          p.count -= n.count;\n          p.right = n.left;\n          n.left = l;\n          n.right = r;\n        }\n\n        copy(this, n);\n        this.count = (this.left ? this.left.count : 0) + (this.right ? this.right.count : 0) + this.leftPoints.length;\n      } else if (this.left) {\n        copy(this, this.left);\n      } else {\n        copy(this, this.right);\n      }\n\n      return SUCCESS;\n    }\n\n    for (var l = bounds.ge(this.leftPoints, interval, compareBegin); l < this.leftPoints.length; ++l) {\n      if (this.leftPoints[l][0] !== interval[0]) {\n        break;\n      }\n\n      if (this.leftPoints[l] === interval) {\n        this.count -= 1;\n        this.leftPoints.splice(l, 1);\n\n        for (var r = bounds.ge(this.rightPoints, interval, compareEnd); r < this.rightPoints.length; ++r) {\n          if (this.rightPoints[r][1] !== interval[1]) {\n            break;\n          } else if (this.rightPoints[r] === interval) {\n            this.rightPoints.splice(r, 1);\n            return SUCCESS;\n          }\n        }\n      }\n    }\n\n    return NOT_FOUND;\n  }\n};\n\nfunction reportLeftRange(arr, hi, cb) {\n  for (var i = 0; i < arr.length && arr[i][0] <= hi; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRightRange(arr, lo, cb) {\n  for (var i = arr.length - 1; i >= 0 && arr[i][1] >= lo; --i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRange(arr, cb) {\n  for (var i = 0; i < arr.length; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nproto.queryPoint = function (x, cb) {\n  if (x < this.mid) {\n    if (this.left) {\n      var r = this.left.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportLeftRange(this.leftPoints, x, cb);\n  } else if (x > this.mid) {\n    if (this.right) {\n      var r = this.right.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportRightRange(this.rightPoints, x, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nproto.queryInterval = function (lo, hi, cb) {\n  if (lo < this.mid && this.left) {\n    var r = this.left.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi > this.mid && this.right) {\n    var r = this.right.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi < this.mid) {\n    return reportLeftRange(this.leftPoints, hi, cb);\n  } else if (lo > this.mid) {\n    return reportRightRange(this.rightPoints, lo, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\nfunction compareBegin(a, b) {\n  var d = a[0] - b[0];\n\n  if (d) {\n    return d;\n  }\n\n  return a[1] - b[1];\n}\n\nfunction compareEnd(a, b) {\n  var d = a[1] - b[1];\n\n  if (d) {\n    return d;\n  }\n\n  return a[0] - b[0];\n}\n\nfunction createIntervalTree(intervals) {\n  if (intervals.length === 0) {\n    return null;\n  }\n\n  var pts = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    pts.push(intervals[i][0], intervals[i][1]);\n  }\n\n  pts.sort(compareNumbers);\n  var mid = pts[pts.length >> 1];\n  var leftIntervals = [];\n  var rightIntervals = [];\n  var centerIntervals = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    var s = intervals[i];\n\n    if (s[1] < mid) {\n      leftIntervals.push(s);\n    } else if (mid < s[0]) {\n      rightIntervals.push(s);\n    } else {\n      centerIntervals.push(s);\n    }\n  } //Split center intervals\n\n\n  var leftPoints = centerIntervals;\n  var rightPoints = centerIntervals.slice();\n  leftPoints.sort(compareBegin);\n  rightPoints.sort(compareEnd);\n  return new IntervalTreeNode(mid, createIntervalTree(leftIntervals), createIntervalTree(rightIntervals), leftPoints, rightPoints);\n} //User friendly wrapper that makes it possible to support empty trees\n\n\nfunction IntervalTree(root) {\n  this.root = root;\n}\n\nvar tproto = IntervalTree.prototype;\n\ntproto.insert = function (interval) {\n  if (this.root) {\n    this.root.insert(interval);\n  } else {\n    this.root = new IntervalTreeNode(interval[0], null, null, [interval], [interval]);\n  }\n};\n\ntproto.remove = function (interval) {\n  if (this.root) {\n    var r = this.root.remove(interval);\n\n    if (r === EMPTY) {\n      this.root = null;\n    }\n\n    return r !== NOT_FOUND;\n  }\n\n  return false;\n};\n\ntproto.queryPoint = function (p, cb) {\n  if (this.root) {\n    return this.root.queryPoint(p, cb);\n  }\n};\n\ntproto.queryInterval = function (lo, hi, cb) {\n  if (lo <= hi && this.root) {\n    return this.root.queryInterval(lo, hi, cb);\n  }\n};\n\nObject.defineProperty(tproto, 'count', {\n  get: function get() {\n    if (this.root) {\n      return this.root.count;\n    }\n\n    return 0;\n  }\n});\nObject.defineProperty(tproto, 'intervals', {\n  get: function get() {\n    if (this.root) {\n      return this.root.intervals([]);\n    }\n\n    return [];\n  }\n});\nexport default function createWrapper(intervals) {\n  if (!intervals || intervals.length === 0) {\n    return new IntervalTree(null);\n  }\n\n  return new IntervalTree(createIntervalTree(intervals));\n}","import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport createIntervalTree from '../vendor/intervalTree';\n\n// Position cache requirements:\n//   O(log(n)) lookup of cells to render for a given viewport size\n//   O(1) lookup of shortest measured column (so we know when to enter phase 1)\nvar PositionCache =\n/*#__PURE__*/\nfunction () {\n  function PositionCache() {\n    _classCallCheck(this, PositionCache);\n\n    _defineProperty(this, \"_columnSizeMap\", {});\n\n    _defineProperty(this, \"_intervalTree\", createIntervalTree());\n\n    _defineProperty(this, \"_leftMap\", {});\n  }\n\n  _createClass(PositionCache, [{\n    key: \"estimateTotalHeight\",\n    value: function estimateTotalHeight(cellCount, columnCount, defaultCellHeight) {\n      var unmeasuredCellCount = cellCount - this.count;\n      return this.tallestColumnSize + Math.ceil(unmeasuredCellCount / columnCount) * defaultCellHeight;\n    } // Render all cells visible within the viewport range defined.\n\n  }, {\n    key: \"range\",\n    value: function range(scrollTop, clientHeight, renderCallback) {\n      var _this = this;\n\n      this._intervalTree.queryInterval(scrollTop, scrollTop + clientHeight, function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 3),\n            top = _ref2[0],\n            _ = _ref2[1],\n            index = _ref2[2];\n\n        return renderCallback(index, _this._leftMap[index], top);\n      });\n    }\n  }, {\n    key: \"setPosition\",\n    value: function setPosition(index, left, top, height) {\n      this._intervalTree.insert([top, top + height, index]);\n\n      this._leftMap[index] = left;\n      var columnSizeMap = this._columnSizeMap;\n      var columnHeight = columnSizeMap[left];\n\n      if (columnHeight === undefined) {\n        columnSizeMap[left] = top + height;\n      } else {\n        columnSizeMap[left] = Math.max(columnHeight, top + height);\n      }\n    }\n  }, {\n    key: \"count\",\n    get: function get() {\n      return this._intervalTree.count;\n    }\n  }, {\n    key: \"shortestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = size === 0 ? height : Math.min(size, height);\n      }\n\n      return size;\n    }\n  }, {\n    key: \"tallestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = Math.max(size, height);\n      }\n\n      return size;\n    }\n  }]);\n\n  return PositionCache;\n}();\n\nexport { PositionCache as default };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport PositionCache from './PositionCache';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\nvar emptyObject = {};\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * This component efficiently displays arbitrarily positioned cells using windowing techniques.\n * Cell position is determined by an injected `cellPositioner` property.\n * Windowing is vertical; this component does not support horizontal scrolling.\n *\n * Rendering occurs in two phases:\n * 1) First pass uses estimated cell sizes (provided by the cache) to determine how many cells to measure in a batch.\n *    Batch size is chosen using a fast, naive layout algorithm that stacks images in order until the viewport has been filled.\n *    After measurement is complete (componentDidMount or componentDidUpdate) this component evaluates positioned cells\n *    in order to determine if another measurement pass is required (eg if actual cell sizes were less than estimated sizes).\n *    All measurements are permanently cached (keyed by `keyMapper`) for performance purposes.\n * 2) Second pass uses the external `cellPositioner` to layout cells.\n *    At this time the positioner has access to cached size measurements for all cells.\n *    The positions it returns are cached by Masonry for fast access later.\n *    Phase one is repeated if the user scrolls beyond the current layout's bounds.\n *    If the layout is invalidated due to eg a resize, cached positions can be cleared using `recomputeCellPositions()`.\n *\n * Animation constraints:\n *   Simple animations are supported (eg translate/slide into place on initial reveal).\n *   More complex animations are not (eg flying from one position to another on resize).\n *\n * Layout constraints:\n *   This component supports multi-column layout.\n *   The height of each item may vary.\n *   The width of each item must not exceed the width of the column it is \"in\".\n *   The left position of all items within a column must align.\n *   (Items may not span multiple columns.)\n */\n\nvar Masonry = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Masonry, _React$PureComponent);\n\n  function Masonry() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Masonry);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Masonry)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStartIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionCache\", new PositionCache());\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingCallback\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      var height = _this.props.height;\n      var eventScrollTop = event.currentTarget.scrollTop; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollTop = Math.min(Math.max(0, _this._getEstimatedTotalHeight() - height), eventScrollTop); // On iOS, we can arrive at negative offsets by swiping past the start or end.\n      // Avoid re-rendering in this case as it can cause problems; see #532 for more.\n\n      if (eventScrollTop !== scrollTop) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._debounceResetIsScrolling(); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n\n      if (_this.state.scrollTop !== scrollTop) {\n        _this.setState({\n          isScrolling: true,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Masonry, [{\n    key: \"clearCellPositions\",\n    value: function clearCellPositions() {\n      this._positionCache = new PositionCache();\n      this.forceUpdate();\n    } // HACK This method signature was intended for Grid\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref) {\n      var index = _ref.rowIndex;\n\n      if (this._invalidateOnUpdateStartIndex === null) {\n        this._invalidateOnUpdateStartIndex = index;\n        this._invalidateOnUpdateStopIndex = index;\n      } else {\n        this._invalidateOnUpdateStartIndex = Math.min(this._invalidateOnUpdateStartIndex, index);\n        this._invalidateOnUpdateStopIndex = Math.max(this._invalidateOnUpdateStopIndex, index);\n      }\n    }\n  }, {\n    key: \"recomputeCellPositions\",\n    value: function recomputeCellPositions() {\n      var stopIndex = this._positionCache.count - 1;\n      this._positionCache = new PositionCache();\n\n      this._populatePositionCache(0, stopIndex);\n\n      this.forceUpdate();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n\n      if (this.props.scrollTop !== prevProps.scrollTop) {\n        this._debounceResetIsScrolling();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          cellCount = _this$props.cellCount,\n          cellMeasurerCache = _this$props.cellMeasurerCache,\n          cellRenderer = _this$props.cellRenderer,\n          className = _this$props.className,\n          height = _this$props.height,\n          id = _this$props.id,\n          keyMapper = _this$props.keyMapper,\n          overscanByPixels = _this$props.overscanByPixels,\n          role = _this$props.role,\n          style = _this$props.style,\n          tabIndex = _this$props.tabIndex,\n          width = _this$props.width,\n          rowDirection = _this$props.rowDirection;\n      var _this$state = this.state,\n          isScrolling = _this$state.isScrolling,\n          scrollTop = _this$state.scrollTop;\n      var children = [];\n\n      var estimateTotalHeight = this._getEstimatedTotalHeight();\n\n      var shortestColumnSize = this._positionCache.shortestColumnSize;\n      var measuredCellCount = this._positionCache.count;\n      var startIndex = 0;\n      var stopIndex;\n\n      this._positionCache.range(Math.max(0, scrollTop - overscanByPixels), height + overscanByPixels * 2, function (index, left, top) {\n        var _style;\n\n        if (typeof stopIndex === 'undefined') {\n          startIndex = index;\n          stopIndex = index;\n        } else {\n          startIndex = Math.min(startIndex, index);\n          stopIndex = Math.max(stopIndex, index);\n        }\n\n        children.push(cellRenderer({\n          index: index,\n          isScrolling: isScrolling,\n          key: keyMapper(index),\n          parent: _this2,\n          style: (_style = {\n            height: cellMeasurerCache.getHeight(index)\n          }, _defineProperty(_style, rowDirection === 'ltr' ? 'left' : 'right', left), _defineProperty(_style, \"position\", 'absolute'), _defineProperty(_style, \"top\", top), _defineProperty(_style, \"width\", cellMeasurerCache.getWidth(index)), _style)\n        }));\n      }); // We need to measure additional cells for this layout\n\n\n      if (shortestColumnSize < scrollTop + height + overscanByPixels && measuredCellCount < cellCount) {\n        var batchSize = Math.min(cellCount - measuredCellCount, Math.ceil((scrollTop + height + overscanByPixels - shortestColumnSize) / cellMeasurerCache.defaultHeight * width / cellMeasurerCache.defaultWidth));\n\n        for (var _index = measuredCellCount; _index < measuredCellCount + batchSize; _index++) {\n          stopIndex = _index;\n          children.push(cellRenderer({\n            index: _index,\n            isScrolling: isScrolling,\n            key: keyMapper(_index),\n            parent: this,\n            style: {\n              width: cellMeasurerCache.getWidth(_index)\n            }\n          }));\n        }\n      }\n\n      this._startIndex = startIndex;\n      this._stopIndex = stopIndex;\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Masonry', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({\n          boxSizing: 'border-box',\n          direction: 'ltr',\n          height: autoHeight ? 'auto' : height,\n          overflowX: 'hidden',\n          overflowY: estimateTotalHeight < height ? 'hidden' : 'auto',\n          position: 'relative',\n          width: width,\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform'\n        }, style),\n        tabIndex: tabIndex\n      }, React.createElement(\"div\", {\n        className: \"ReactVirtualized__Masonry__innerScrollContainer\",\n        style: {\n          width: '100%',\n          height: estimateTotalHeight,\n          maxWidth: '100%',\n          maxHeight: estimateTotalHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }\n      }, children));\n    }\n  }, {\n    key: \"_checkInvalidateOnUpdate\",\n    value: function _checkInvalidateOnUpdate() {\n      if (typeof this._invalidateOnUpdateStartIndex === 'number') {\n        var startIndex = this._invalidateOnUpdateStartIndex;\n        var stopIndex = this._invalidateOnUpdateStopIndex;\n        this._invalidateOnUpdateStartIndex = null;\n        this._invalidateOnUpdateStopIndex = null; // Query external layout logic for position of newly-measured cells\n\n        this._populatePositionCache(startIndex, stopIndex);\n\n        this.forceUpdate();\n      }\n    }\n  }, {\n    key: \"_debounceResetIsScrolling\",\n    value: function _debounceResetIsScrolling() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n\n      this._debounceResetIsScrollingId = requestAnimationTimeout(this._debounceResetIsScrollingCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_getEstimatedTotalHeight\",\n    value: function _getEstimatedTotalHeight() {\n      var _this$props2 = this.props,\n          cellCount = _this$props2.cellCount,\n          cellMeasurerCache = _this$props2.cellMeasurerCache,\n          width = _this$props2.width;\n      var estimatedColumnCount = Math.max(1, Math.floor(width / cellMeasurerCache.defaultWidth));\n      return this._positionCache.estimateTotalHeight(cellCount, estimatedColumnCount, cellMeasurerCache.defaultHeight);\n    }\n  }, {\n    key: \"_invokeOnScrollCallback\",\n    value: function _invokeOnScrollCallback() {\n      var _this$props3 = this.props,\n          height = _this$props3.height,\n          onScroll = _this$props3.onScroll;\n      var scrollTop = this.state.scrollTop;\n\n      if (this._onScrollMemoized !== scrollTop) {\n        onScroll({\n          clientHeight: height,\n          scrollHeight: this._getEstimatedTotalHeight(),\n          scrollTop: scrollTop\n        });\n        this._onScrollMemoized = scrollTop;\n      }\n    }\n  }, {\n    key: \"_invokeOnCellsRenderedCallback\",\n    value: function _invokeOnCellsRenderedCallback() {\n      if (this._startIndexMemoized !== this._startIndex || this._stopIndexMemoized !== this._stopIndex) {\n        var onCellsRendered = this.props.onCellsRendered;\n        onCellsRendered({\n          startIndex: this._startIndex,\n          stopIndex: this._stopIndex\n        });\n        this._startIndexMemoized = this._startIndex;\n        this._stopIndexMemoized = this._stopIndex;\n      }\n    }\n  }, {\n    key: \"_populatePositionCache\",\n    value: function _populatePositionCache(startIndex, stopIndex) {\n      var _this$props4 = this.props,\n          cellMeasurerCache = _this$props4.cellMeasurerCache,\n          cellPositioner = _this$props4.cellPositioner;\n\n      for (var _index2 = startIndex; _index2 <= stopIndex; _index2++) {\n        var _cellPositioner = cellPositioner(_index2),\n            left = _cellPositioner.left,\n            top = _cellPositioner.top;\n\n        this._positionCache.setPosition(_index2, left, top, cellMeasurerCache.getHeight(_index2));\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollTop !== undefined && prevState.scrollTop !== nextProps.scrollTop) {\n        return {\n          isScrolling: true,\n          scrollTop: nextProps.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Masonry;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"autoHeight\": PropTypes.bool.isRequired,\n  \"cellCount\": PropTypes.number.isRequired,\n  \"cellMeasurerCache\": function cellMeasurerCache() {\n    return (typeof CellMeasurerCache === \"function\" ? PropTypes.instanceOf(CellMeasurerCache).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellPositioner\": function cellPositioner() {\n    return (typeof Positioner === \"function\" ? PropTypes.instanceOf(Positioner).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof CellRenderer === \"function\" ? PropTypes.instanceOf(CellRenderer).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"className\": PropTypes.string,\n  \"height\": PropTypes.number.isRequired,\n  \"id\": PropTypes.string,\n  \"keyMapper\": function keyMapper() {\n    return (typeof KeyMapper === \"function\" ? PropTypes.instanceOf(KeyMapper).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"onCellsRendered\": function onCellsRendered() {\n    return (typeof OnCellsRenderedCallback === \"function\" ? PropTypes.instanceOf(OnCellsRenderedCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"onScroll\": function onScroll() {\n    return (typeof OnScrollCallback === \"function\" ? PropTypes.instanceOf(OnScrollCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"overscanByPixels\": PropTypes.number.isRequired,\n  \"role\": PropTypes.string.isRequired,\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n  \"style\": function style(props, propName, componentName) {\n    if (!Object.prototype.hasOwnProperty.call(props, propName)) {\n      throw new Error(\"Prop `\".concat(propName, \"` has type 'any' or 'mixed', but was not provided to `\").concat(componentName, \"`. Pass undefined or any other value.\"));\n    }\n  },\n  \"tabIndex\": PropTypes.number.isRequired,\n  \"width\": PropTypes.number.isRequired,\n  \"rowDirection\": PropTypes.string.isRequired,\n  \"scrollTop\": PropTypes.number\n}), _temp);\n\n_defineProperty(Masonry, \"defaultProps\", {\n  autoHeight: false,\n  keyMapper: identity,\n  onCellsRendered: noop,\n  onScroll: noop,\n  overscanByPixels: 20,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  style: emptyObject,\n  tabIndex: 0,\n  rowDirection: 'ltr'\n});\n\nfunction identity(value) {\n  return value;\n}\n\nfunction noop() {}\n\nvar bpfrpt_proptype_CellMeasurerCache = process.env.NODE_ENV === 'production' ? null : {\n  \"defaultHeight\": PropTypes.number.isRequired,\n  \"defaultWidth\": PropTypes.number.isRequired,\n  \"getHeight\": PropTypes.func.isRequired,\n  \"getWidth\": PropTypes.func.isRequired\n};\npolyfill(Masonry);\nexport default Masonry;\nvar bpfrpt_proptype_Positioner = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_CellMeasurerCache };\nexport { bpfrpt_proptype_Positioner };","import createCellPositioner from './createCellPositioner';\nimport Masonry from './Masonry';\nexport default Masonry;\nexport { createCellPositioner, Masonry };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { CellMeasurerCache } from '../CellMeasurer';\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCacheDecorator =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCacheDecorator() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCacheDecorator);\n\n    _defineProperty(this, \"_cellMeasurerCache\", void 0);\n\n    _defineProperty(this, \"_columnIndexOffset\", void 0);\n\n    _defineProperty(this, \"_rowIndexOffset\", void 0);\n\n    _defineProperty(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      _this._cellMeasurerCache.columnWidth({\n        index: index + _this._columnIndexOffset\n      });\n    });\n\n    _defineProperty(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      _this._cellMeasurerCache.rowHeight({\n        index: index + _this._rowIndexOffset\n      });\n    });\n\n    var cellMeasurerCache = params.cellMeasurerCache,\n        _params$columnIndexOf = params.columnIndexOffset,\n        columnIndexOffset = _params$columnIndexOf === void 0 ? 0 : _params$columnIndexOf,\n        _params$rowIndexOffse = params.rowIndexOffset,\n        rowIndexOffset = _params$rowIndexOffse === void 0 ? 0 : _params$rowIndexOffse;\n    this._cellMeasurerCache = cellMeasurerCache;\n    this._columnIndexOffset = columnIndexOffset;\n    this._rowIndexOffset = rowIndexOffset;\n  }\n\n  _createClass(CellMeasurerCacheDecorator, [{\n    key: \"clear\",\n    value: function clear(rowIndex, columnIndex) {\n      this._cellMeasurerCache.clear(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellMeasurerCache.clearAll();\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._cellMeasurerCache.hasFixedHeight();\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._cellMeasurerCache.hasFixedWidth();\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getHeight(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getWidth(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.has(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      this._cellMeasurerCache.set(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset, width, height);\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCacheDecorator;\n}();\n\nexport { CellMeasurerCacheDecorator as default };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport CellMeasurerCacheDecorator from './CellMeasurerCacheDecorator';\nimport Grid from '../Grid';\nvar SCROLLBAR_SIZE_BUFFER = 20;\n/**\n * Renders 1, 2, or 4 Grids depending on configuration.\n * A main (body) Grid will always be rendered.\n * Optionally, 1-2 Grids for sticky header rows will also be rendered.\n * If no sticky columns, only 1 sticky header Grid will be rendered.\n * If sticky columns, 2 sticky header Grids will be rendered.\n */\n\nvar MultiGrid =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(MultiGrid, _React$PureComponent);\n\n  function MultiGrid(props, context) {\n    var _this;\n\n    _classCallCheck(this, MultiGrid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MultiGrid).call(this, props, context));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollbarSize: 0,\n      showHorizontalScrollbar: false,\n      showVerticalScrollbar: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomLeftGridRef\", function (ref) {\n      _this._bottomLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomRightGridRef\", function (ref) {\n      _this._bottomRightGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomLeftGrid\", function (_ref) {\n      var rowIndex = _ref.rowIndex,\n          rest = _objectWithoutProperties(_ref, [\"rowIndex\"]);\n\n      var _this$props = _this.props,\n          cellRenderer = _this$props.cellRenderer,\n          fixedRowCount = _this$props.fixedRowCount,\n          rowCount = _this$props.rowCount;\n\n      if (rowIndex === rowCount - fixedRowCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            height: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          parent: _assertThisInitialized(_this),\n          rowIndex: rowIndex + fixedRowCount\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomRightGrid\", function (_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex,\n          rest = _objectWithoutProperties(_ref2, [\"columnIndex\", \"rowIndex\"]);\n\n      var _this$props2 = _this.props,\n          cellRenderer = _this$props2.cellRenderer,\n          fixedColumnCount = _this$props2.fixedColumnCount,\n          fixedRowCount = _this$props2.fixedRowCount;\n      return cellRenderer(_objectSpread({}, rest, {\n        columnIndex: columnIndex + fixedColumnCount,\n        parent: _assertThisInitialized(_this),\n        rowIndex: rowIndex + fixedRowCount\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererTopRightGrid\", function (_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rest = _objectWithoutProperties(_ref3, [\"columnIndex\"]);\n\n      var _this$props3 = _this.props,\n          cellRenderer = _this$props3.cellRenderer,\n          columnCount = _this$props3.columnCount,\n          fixedColumnCount = _this$props3.fixedColumnCount;\n\n      if (columnIndex === columnCount - fixedColumnCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            width: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          columnIndex: columnIndex + fixedColumnCount,\n          parent: _assertThisInitialized(_this)\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnWidthRightGrid\", function (_ref4) {\n      var index = _ref4.index;\n      var _this$props4 = _this.props,\n          columnCount = _this$props4.columnCount,\n          fixedColumnCount = _this$props4.fixedColumnCount,\n          columnWidth = _this$props4.columnWidth;\n      var _this$state = _this.state,\n          scrollbarSize = _this$state.scrollbarSize,\n          showHorizontalScrollbar = _this$state.showHorizontalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showHorizontalScrollbar && index === columnCount - fixedColumnCount) {\n        return scrollbarSize;\n      }\n\n      return typeof columnWidth === 'function' ? columnWidth({\n        index: index + fixedColumnCount\n      }) : columnWidth;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft,\n          scrollTop = scrollInfo.scrollTop;\n\n      _this.setState({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      var onScroll = _this.props.onScroll;\n\n      if (onScroll) {\n        onScroll(scrollInfo);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollbarPresenceChange\", function (_ref5) {\n      var horizontal = _ref5.horizontal,\n          size = _ref5.size,\n          vertical = _ref5.vertical;\n      var _this$state2 = _this.state,\n          showHorizontalScrollbar = _this$state2.showHorizontalScrollbar,\n          showVerticalScrollbar = _this$state2.showVerticalScrollbar;\n\n      if (horizontal !== showHorizontalScrollbar || vertical !== showVerticalScrollbar) {\n        _this.setState({\n          scrollbarSize: size,\n          showHorizontalScrollbar: horizontal,\n          showVerticalScrollbar: vertical\n        });\n\n        var onScrollbarPresenceChange = _this.props.onScrollbarPresenceChange;\n\n        if (typeof onScrollbarPresenceChange === 'function') {\n          onScrollbarPresenceChange({\n            horizontal: horizontal,\n            size: size,\n            vertical: vertical\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollLeft\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft;\n\n      _this._onScroll({\n        scrollLeft: scrollLeft,\n        scrollTop: _this.state.scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollTop\", function (scrollInfo) {\n      var scrollTop = scrollInfo.scrollTop;\n\n      _this._onScroll({\n        scrollTop: scrollTop,\n        scrollLeft: _this.state.scrollLeft\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowHeightBottomGrid\", function (_ref6) {\n      var index = _ref6.index;\n      var _this$props5 = _this.props,\n          fixedRowCount = _this$props5.fixedRowCount,\n          rowCount = _this$props5.rowCount,\n          rowHeight = _this$props5.rowHeight;\n      var _this$state3 = _this.state,\n          scrollbarSize = _this$state3.scrollbarSize,\n          showVerticalScrollbar = _this$state3.showVerticalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showVerticalScrollbar && index === rowCount - fixedRowCount) {\n        return scrollbarSize;\n      }\n\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: index + fixedRowCount\n      }) : rowHeight;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topLeftGridRef\", function (ref) {\n      _this._topLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topRightGridRef\", function (ref) {\n      _this._topRightGrid = ref;\n    });\n\n    var deferredMeasurementCache = props.deferredMeasurementCache,\n        _fixedColumnCount = props.fixedColumnCount,\n        _fixedRowCount = props.fixedRowCount;\n\n    _this._maybeCalculateCachedStyles(true);\n\n    if (deferredMeasurementCache) {\n      _this._deferredMeasurementCacheBottomLeftGrid = _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: 0,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheBottomRightGrid = _fixedColumnCount > 0 || _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheTopRightGrid = _fixedColumnCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: 0\n      }) : deferredMeasurementCache;\n    }\n\n    return _this;\n  }\n\n  _createClass(MultiGrid, [{\n    key: \"forceUpdateGrids\",\n    value: function forceUpdateGrids() {\n      this._bottomLeftGrid && this._bottomLeftGrid.forceUpdate();\n      this._bottomRightGrid && this._bottomRightGrid.forceUpdate();\n      this._topLeftGrid && this._topLeftGrid.forceUpdate();\n      this._topRightGrid && this._topRightGrid.forceUpdate();\n    }\n    /** See Grid#invalidateCellSizeAfterRender */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender() {\n      var _ref7 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref7$columnIndex = _ref7.columnIndex,\n          columnIndex = _ref7$columnIndex === void 0 ? 0 : _ref7$columnIndex,\n          _ref7$rowIndex = _ref7.rowIndex,\n          rowIndex = _ref7$rowIndex === void 0 ? 0 : _ref7$rowIndex;\n\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      this._bottomLeftGrid && this._bottomLeftGrid.measureAllCells();\n      this._bottomRightGrid && this._bottomRightGrid.measureAllCells();\n      this._topLeftGrid && this._topLeftGrid.measureAllCells();\n      this._topRightGrid && this._topRightGrid.measureAllCells();\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref8 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref8$columnIndex = _ref8.columnIndex,\n          columnIndex = _ref8$columnIndex === void 0 ? 0 : _ref8$columnIndex,\n          _ref8$rowIndex = _ref8.rowIndex,\n          rowIndex = _ref8$rowIndex === void 0 ? 0 : _ref8$rowIndex;\n\n      var _this$props6 = this.props,\n          fixedColumnCount = _this$props6.fixedColumnCount,\n          fixedRowCount = _this$props6.fixedRowCount;\n      var adjustedColumnIndex = Math.max(0, columnIndex - fixedColumnCount);\n      var adjustedRowIndex = Math.max(0, rowIndex - fixedRowCount);\n      this._bottomLeftGrid && this._bottomLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._bottomRightGrid && this._bottomRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._topLeftGrid && this._topLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: rowIndex\n      });\n      this._topRightGrid && this._topRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: rowIndex\n      });\n      this._leftGridWidth = null;\n      this._topGridHeight = null;\n\n      this._maybeCalculateCachedStyles(true);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props7 = this.props,\n          scrollLeft = _this$props7.scrollLeft,\n          scrollTop = _this$props7.scrollTop;\n\n      if (scrollLeft > 0 || scrollTop > 0) {\n        var newState = {};\n\n        if (scrollLeft > 0) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop > 0) {\n          newState.scrollTop = scrollTop;\n        }\n\n        this.setState(newState);\n      }\n\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props8 = this.props,\n          onScroll = _this$props8.onScroll,\n          onSectionRendered = _this$props8.onSectionRendered,\n          onScrollbarPresenceChange = _this$props8.onScrollbarPresenceChange,\n          scrollLeftProp = _this$props8.scrollLeft,\n          scrollToColumn = _this$props8.scrollToColumn,\n          scrollTopProp = _this$props8.scrollTop,\n          scrollToRow = _this$props8.scrollToRow,\n          rest = _objectWithoutProperties(_this$props8, [\"onScroll\", \"onSectionRendered\", \"onScrollbarPresenceChange\", \"scrollLeft\", \"scrollToColumn\", \"scrollTop\", \"scrollToRow\"]);\n\n      this._prepareForRender(); // Don't render any of our Grids if there are no cells.\n      // This mirrors what Grid does,\n      // And prevents us from recording inaccurage measurements when used with CellMeasurer.\n\n\n      if (this.props.width === 0 || this.props.height === 0) {\n        return null;\n      } // scrollTop and scrollLeft props are explicitly filtered out and ignored\n\n\n      var _this$state4 = this.state,\n          scrollLeft = _this$state4.scrollLeft,\n          scrollTop = _this$state4.scrollTop;\n      return React.createElement(\"div\", {\n        style: this._containerOuterStyle\n      }, React.createElement(\"div\", {\n        style: this._containerTopStyle\n      }, this._renderTopLeftGrid(rest), this._renderTopRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollLeft: scrollLeft\n      }))), React.createElement(\"div\", {\n        style: this._containerBottomStyle\n      }, this._renderBottomLeftGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollTop: scrollTop\n      })), this._renderBottomRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        onSectionRendered: onSectionRendered,\n        scrollLeft: scrollLeft,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow,\n        scrollTop: scrollTop\n      }))));\n    }\n  }, {\n    key: \"_getBottomGridHeight\",\n    value: function _getBottomGridHeight(props) {\n      var height = props.height;\n\n      var topGridHeight = this._getTopGridHeight(props);\n\n      return height - topGridHeight;\n    }\n  }, {\n    key: \"_getLeftGridWidth\",\n    value: function _getLeftGridWidth(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          columnWidth = props.columnWidth;\n\n      if (this._leftGridWidth == null) {\n        if (typeof columnWidth === 'function') {\n          var leftGridWidth = 0;\n\n          for (var index = 0; index < fixedColumnCount; index++) {\n            leftGridWidth += columnWidth({\n              index: index\n            });\n          }\n\n          this._leftGridWidth = leftGridWidth;\n        } else {\n          this._leftGridWidth = columnWidth * fixedColumnCount;\n        }\n      }\n\n      return this._leftGridWidth;\n    }\n  }, {\n    key: \"_getRightGridWidth\",\n    value: function _getRightGridWidth(props) {\n      var width = props.width;\n\n      var leftGridWidth = this._getLeftGridWidth(props);\n\n      return width - leftGridWidth;\n    }\n  }, {\n    key: \"_getTopGridHeight\",\n    value: function _getTopGridHeight(props) {\n      var fixedRowCount = props.fixedRowCount,\n          rowHeight = props.rowHeight;\n\n      if (this._topGridHeight == null) {\n        if (typeof rowHeight === 'function') {\n          var topGridHeight = 0;\n\n          for (var index = 0; index < fixedRowCount; index++) {\n            topGridHeight += rowHeight({\n              index: index\n            });\n          }\n\n          this._topGridHeight = topGridHeight;\n        } else {\n          this._topGridHeight = rowHeight * fixedRowCount;\n        }\n      }\n\n      return this._topGridHeight;\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n        this.forceUpdate();\n      }\n    }\n    /**\n     * Avoid recreating inline styles each render; this bypasses Grid's shallowCompare.\n     * This method recalculates styles only when specific props change.\n     */\n\n  }, {\n    key: \"_maybeCalculateCachedStyles\",\n    value: function _maybeCalculateCachedStyles(resetAll) {\n      var _this$props9 = this.props,\n          columnWidth = _this$props9.columnWidth,\n          enableFixedColumnScroll = _this$props9.enableFixedColumnScroll,\n          enableFixedRowScroll = _this$props9.enableFixedRowScroll,\n          height = _this$props9.height,\n          fixedColumnCount = _this$props9.fixedColumnCount,\n          fixedRowCount = _this$props9.fixedRowCount,\n          rowHeight = _this$props9.rowHeight,\n          style = _this$props9.style,\n          styleBottomLeftGrid = _this$props9.styleBottomLeftGrid,\n          styleBottomRightGrid = _this$props9.styleBottomRightGrid,\n          styleTopLeftGrid = _this$props9.styleTopLeftGrid,\n          styleTopRightGrid = _this$props9.styleTopRightGrid,\n          width = _this$props9.width;\n      var sizeChange = resetAll || height !== this._lastRenderedHeight || width !== this._lastRenderedWidth;\n      var leftSizeChange = resetAll || columnWidth !== this._lastRenderedColumnWidth || fixedColumnCount !== this._lastRenderedFixedColumnCount;\n      var topSizeChange = resetAll || fixedRowCount !== this._lastRenderedFixedRowCount || rowHeight !== this._lastRenderedRowHeight;\n\n      if (resetAll || sizeChange || style !== this._lastRenderedStyle) {\n        this._containerOuterStyle = _objectSpread({\n          height: height,\n          overflow: 'visible',\n          // Let :focus outline show through\n          width: width\n        }, style);\n      }\n\n      if (resetAll || sizeChange || topSizeChange) {\n        this._containerTopStyle = {\n          height: this._getTopGridHeight(this.props),\n          position: 'relative',\n          width: width\n        };\n        this._containerBottomStyle = {\n          height: height - this._getTopGridHeight(this.props),\n          overflow: 'visible',\n          // Let :focus outline show through\n          position: 'relative',\n          width: width\n        };\n      }\n\n      if (resetAll || styleBottomLeftGrid !== this._lastRenderedStyleBottomLeftGrid) {\n        this._bottomLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: enableFixedColumnScroll ? 'auto' : 'hidden',\n          position: 'absolute'\n        }, styleBottomLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleBottomRightGrid !== this._lastRenderedStyleBottomRightGrid) {\n        this._bottomRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          position: 'absolute'\n        }, styleBottomRightGrid);\n      }\n\n      if (resetAll || styleTopLeftGrid !== this._lastRenderedStyleTopLeftGrid) {\n        this._topLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleTopRightGrid !== this._lastRenderedStyleTopRightGrid) {\n        this._topRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          overflowX: enableFixedRowScroll ? 'auto' : 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopRightGrid);\n      }\n\n      this._lastRenderedColumnWidth = columnWidth;\n      this._lastRenderedFixedColumnCount = fixedColumnCount;\n      this._lastRenderedFixedRowCount = fixedRowCount;\n      this._lastRenderedHeight = height;\n      this._lastRenderedRowHeight = rowHeight;\n      this._lastRenderedStyle = style;\n      this._lastRenderedStyleBottomLeftGrid = styleBottomLeftGrid;\n      this._lastRenderedStyleBottomRightGrid = styleBottomRightGrid;\n      this._lastRenderedStyleTopLeftGrid = styleTopLeftGrid;\n      this._lastRenderedStyleTopRightGrid = styleTopRightGrid;\n      this._lastRenderedWidth = width;\n    }\n  }, {\n    key: \"_prepareForRender\",\n    value: function _prepareForRender() {\n      if (this._lastRenderedColumnWidth !== this.props.columnWidth || this._lastRenderedFixedColumnCount !== this.props.fixedColumnCount) {\n        this._leftGridWidth = null;\n      }\n\n      if (this._lastRenderedFixedRowCount !== this.props.fixedRowCount || this._lastRenderedRowHeight !== this.props.rowHeight) {\n        this._topGridHeight = null;\n      }\n\n      this._maybeCalculateCachedStyles();\n\n      this._lastRenderedColumnWidth = this.props.columnWidth;\n      this._lastRenderedFixedColumnCount = this.props.fixedColumnCount;\n      this._lastRenderedFixedRowCount = this.props.fixedRowCount;\n      this._lastRenderedRowHeight = this.props.rowHeight;\n    }\n  }, {\n    key: \"_renderBottomLeftGrid\",\n    value: function _renderBottomLeftGrid(props) {\n      var enableFixedColumnScroll = props.enableFixedColumnScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          hideBottomLeftGridScrollbar = props.hideBottomLeftGridScrollbar;\n      var showVerticalScrollbar = this.state.showVerticalScrollbar;\n\n      if (!fixedColumnCount) {\n        return null;\n      }\n\n      var additionalRowCount = showVerticalScrollbar ? 1 : 0,\n          height = this._getBottomGridHeight(props),\n          width = this._getLeftGridWidth(props),\n          scrollbarSize = this.state.showVerticalScrollbar ? this.state.scrollbarSize : 0,\n          gridWidth = hideBottomLeftGridScrollbar ? width + scrollbarSize : width;\n\n      var bottomLeftGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomLeftGrid,\n        className: this.props.classNameBottomLeftGrid,\n        columnCount: fixedColumnCount,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomLeftGrid,\n        height: height,\n        onScroll: enableFixedColumnScroll ? this._onScrollTop : undefined,\n        ref: this._bottomLeftGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount) + additionalRowCount,\n        rowHeight: this._rowHeightBottomGrid,\n        style: this._bottomLeftGridStyle,\n        tabIndex: null,\n        width: gridWidth\n      }));\n\n      if (hideBottomLeftGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"BottomLeftGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._bottomLeftGridStyle, {\n            height: height,\n            width: width,\n            overflowY: 'hidden'\n          })\n        }, bottomLeftGrid);\n      }\n\n      return bottomLeftGrid;\n    }\n  }, {\n    key: \"_renderBottomRightGrid\",\n    value: function _renderBottomRightGrid(props) {\n      var columnCount = props.columnCount,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          scrollToColumn = props.scrollToColumn,\n          scrollToRow = props.scrollToRow;\n      return React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomRightGrid,\n        className: this.props.classNameBottomRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount),\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomRightGrid,\n        height: this._getBottomGridHeight(props),\n        onScroll: this._onScroll,\n        onScrollbarPresenceChange: this._onScrollbarPresenceChange,\n        ref: this._bottomRightGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount),\n        rowHeight: this._rowHeightBottomGrid,\n        scrollToColumn: scrollToColumn - fixedColumnCount,\n        scrollToRow: scrollToRow - fixedRowCount,\n        style: this._bottomRightGridStyle,\n        width: this._getRightGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopLeftGrid\",\n    value: function _renderTopLeftGrid(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount;\n\n      if (!fixedColumnCount || !fixedRowCount) {\n        return null;\n      }\n\n      return React.createElement(Grid, _extends({}, props, {\n        className: this.props.classNameTopLeftGrid,\n        columnCount: fixedColumnCount,\n        height: this._getTopGridHeight(props),\n        ref: this._topLeftGridRef,\n        rowCount: fixedRowCount,\n        style: this._topLeftGridStyle,\n        tabIndex: null,\n        width: this._getLeftGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopRightGrid\",\n    value: function _renderTopRightGrid(props) {\n      var columnCount = props.columnCount,\n          enableFixedRowScroll = props.enableFixedRowScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          scrollLeft = props.scrollLeft,\n          hideTopRightGridScrollbar = props.hideTopRightGridScrollbar;\n      var _this$state5 = this.state,\n          showHorizontalScrollbar = _this$state5.showHorizontalScrollbar,\n          scrollbarSize = _this$state5.scrollbarSize;\n\n      if (!fixedRowCount) {\n        return null;\n      }\n\n      var additionalColumnCount = showHorizontalScrollbar ? 1 : 0,\n          height = this._getTopGridHeight(props),\n          width = this._getRightGridWidth(props),\n          additionalHeight = showHorizontalScrollbar ? scrollbarSize : 0;\n\n      var gridHeight = height,\n          style = this._topRightGridStyle;\n\n      if (hideTopRightGridScrollbar) {\n        gridHeight = height + additionalHeight;\n        style = _objectSpread({}, this._topRightGridStyle, {\n          left: 0\n        });\n      }\n\n      var topRightGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererTopRightGrid,\n        className: this.props.classNameTopRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount) + additionalColumnCount,\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheTopRightGrid,\n        height: gridHeight,\n        onScroll: enableFixedRowScroll ? this._onScrollLeft : undefined,\n        ref: this._topRightGridRef,\n        rowCount: fixedRowCount,\n        scrollLeft: scrollLeft,\n        style: style,\n        tabIndex: null,\n        width: width\n      }));\n\n      if (hideTopRightGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"TopRightGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._topRightGridStyle, {\n            height: height,\n            width: width,\n            overflowX: 'hidden'\n          })\n        }, topRightGrid);\n      }\n\n      return topRightGrid;\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null && nextProps.scrollLeft >= 0 ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null && nextProps.scrollTop >= 0 ? nextProps.scrollTop : prevState.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return MultiGrid;\n}(React.PureComponent);\n\n_defineProperty(MultiGrid, \"defaultProps\", {\n  classNameBottomLeftGrid: '',\n  classNameBottomRightGrid: '',\n  classNameTopLeftGrid: '',\n  classNameTopRightGrid: '',\n  enableFixedColumnScroll: false,\n  enableFixedRowScroll: false,\n  fixedColumnCount: 0,\n  fixedRowCount: 0,\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  styleBottomLeftGrid: {},\n  styleBottomRightGrid: {},\n  styleTopLeftGrid: {},\n  styleTopRightGrid: {},\n  hideTopRightGridScrollbar: false,\n  hideBottomLeftGridScrollbar: false\n});\n\nMultiGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  classNameBottomLeftGrid: PropTypes.string.isRequired,\n  classNameBottomRightGrid: PropTypes.string.isRequired,\n  classNameTopLeftGrid: PropTypes.string.isRequired,\n  classNameTopRightGrid: PropTypes.string.isRequired,\n  enableFixedColumnScroll: PropTypes.bool.isRequired,\n  enableFixedRowScroll: PropTypes.bool.isRequired,\n  fixedColumnCount: PropTypes.number.isRequired,\n  fixedRowCount: PropTypes.number.isRequired,\n  onScrollbarPresenceChange: PropTypes.func,\n  style: PropTypes.object.isRequired,\n  styleBottomLeftGrid: PropTypes.object.isRequired,\n  styleBottomRightGrid: PropTypes.object.isRequired,\n  styleTopLeftGrid: PropTypes.object.isRequired,\n  styleTopRightGrid: PropTypes.object.isRequired,\n  hideTopRightGridScrollbar: PropTypes.bool,\n  hideBottomLeftGridScrollbar: PropTypes.bool\n} : {};\npolyfill(MultiGrid);\nexport default MultiGrid;","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * HOC that simplifies the process of synchronizing scrolling between two or more virtualized components.\n */\n\nvar ScrollSync =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ScrollSync, _React$PureComponent);\n\n  function ScrollSync(props, context) {\n    var _this;\n\n    _classCallCheck(this, ScrollSync);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ScrollSync).call(this, props, context));\n    _this.state = {\n      clientHeight: 0,\n      clientWidth: 0,\n      scrollHeight: 0,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollWidth: 0\n    };\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ScrollSync, [{\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state = this.state,\n          clientHeight = _this$state.clientHeight,\n          clientWidth = _this$state.clientWidth,\n          scrollHeight = _this$state.scrollHeight,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop,\n          scrollWidth = _this$state.scrollWidth;\n      return children({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        onScroll: this._onScroll,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref) {\n      var clientHeight = _ref.clientHeight,\n          clientWidth = _ref.clientWidth,\n          scrollHeight = _ref.scrollHeight,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          scrollWidth = _ref.scrollWidth;\n      this.setState({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }]);\n\n  return ScrollSync;\n}(React.PureComponent);\n\nexport { ScrollSync as default };\nScrollSync.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering 2 or more virtualized components.\n   * This function should implement the following signature:\n   * ({ onScroll, scrollLeft, scrollTop }) => PropTypes.element\n   */\n  children: PropTypes.func.isRequired\n} : {};","import * as React from 'react';\nexport default function defaultHeaderRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      style = _ref.style;\n  return React.createElement(\"div\", {\n    className: className,\n    role: \"row\",\n    style: style\n  }, columns);\n}\ndefaultHeaderRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRowRendererParams;\nimport { bpfrpt_proptype_HeaderRowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","var SortDirection = {\n  /**\n   * Sort items in ascending order.\n   * This means arranging from the lowest value to the highest (e.g. a-z, 0-9).\n   */\n  ASC: 'ASC',\n\n  /**\n   * Sort items in descending order.\n   * This means arranging from the highest value to the lowest (e.g. z-a, 9-0).\n   */\n  DESC: 'DESC'\n};\nexport default SortDirection;","import clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport SortDirection from './SortDirection';\n/**\n * Displayed beside a header to indicate that a Table is currently sorted by this column.\n */\n\nexport default function SortIndicator(_ref) {\n  var sortDirection = _ref.sortDirection;\n  var classNames = clsx('ReactVirtualized__Table__sortableHeaderIcon', {\n    'ReactVirtualized__Table__sortableHeaderIcon--ASC': sortDirection === SortDirection.ASC,\n    'ReactVirtualized__Table__sortableHeaderIcon--DESC': sortDirection === SortDirection.DESC\n  });\n  return React.createElement(\"svg\", {\n    className: classNames,\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 24 24\"\n  }, sortDirection === SortDirection.ASC ? React.createElement(\"path\", {\n    d: \"M7 14l5-5 5 5z\"\n  }) : React.createElement(\"path\", {\n    d: \"M7 10l5 5 5-5z\"\n  }), React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  }));\n}\nSortIndicator.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC])\n} : {};","import * as React from 'react';\nimport SortIndicator from './SortIndicator';\n\n/**\n * Default table header renderer.\n */\nexport default function defaultHeaderRenderer(_ref) {\n  var dataKey = _ref.dataKey,\n      label = _ref.label,\n      sortBy = _ref.sortBy,\n      sortDirection = _ref.sortDirection;\n  var showSortIndicator = sortBy === dataKey;\n  var children = [React.createElement(\"span\", {\n    className: \"ReactVirtualized__Table__headerTruncatedText\",\n    key: \"label\",\n    title: typeof label === 'string' ? label : null\n  }, label)];\n\n  if (showSortIndicator) {\n    children.push(React.createElement(SortIndicator, {\n      key: \"SortIndicator\",\n      sortDirection: sortDirection\n    }));\n  }\n\n  return children;\n}\ndefaultHeaderRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRendererParams;\nimport { bpfrpt_proptype_HeaderRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\n\n/**\n * Default row renderer for Table.\n */\nexport default function defaultRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      index = _ref.index,\n      key = _ref.key,\n      onRowClick = _ref.onRowClick,\n      onRowDoubleClick = _ref.onRowDoubleClick,\n      onRowMouseOut = _ref.onRowMouseOut,\n      onRowMouseOver = _ref.onRowMouseOver,\n      onRowRightClick = _ref.onRowRightClick,\n      rowData = _ref.rowData,\n      style = _ref.style;\n  var a11yProps = {\n    'aria-rowindex': index + 1\n  };\n\n  if (onRowClick || onRowDoubleClick || onRowMouseOut || onRowMouseOver || onRowRightClick) {\n    a11yProps['aria-label'] = 'row';\n    a11yProps.tabIndex = 0;\n\n    if (onRowClick) {\n      a11yProps.onClick = function (event) {\n        return onRowClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowDoubleClick) {\n      a11yProps.onDoubleClick = function (event) {\n        return onRowDoubleClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOut) {\n      a11yProps.onMouseOut = function (event) {\n        return onRowMouseOut({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOver) {\n      a11yProps.onMouseOver = function (event) {\n        return onRowMouseOver({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowRightClick) {\n      a11yProps.onContextMenu = function (event) {\n        return onRowRightClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n  }\n\n  return React.createElement(\"div\", _extends({}, a11yProps, {\n    className: className,\n    key: key,\n    role: \"row\",\n    style: style\n  }), columns);\n}\ndefaultRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_RowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_RowRendererParams;\nimport { bpfrpt_proptype_RowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport SortDirection from './SortDirection';\n/**\n * Describes the header and cell contents of a table column.\n */\n\nvar Column =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Column, _React$Component);\n\n  function Column() {\n    _classCallCheck(this, Column);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Column).apply(this, arguments));\n  }\n\n  return Column;\n}(React.Component);\n\n_defineProperty(Column, \"defaultProps\", {\n  cellDataGetter: defaultCellDataGetter,\n  cellRenderer: defaultCellRenderer,\n  defaultSortDirection: SortDirection.ASC,\n  flexGrow: 0,\n  flexShrink: 1,\n  headerRenderer: defaultHeaderRenderer,\n  style: {}\n});\n\nexport { Column as default };\nColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Optional aria-label value to set on the column header */\n  'aria-label': PropTypes.string,\n\n  /**\n   * Callback responsible for returning a cell's data, given its :dataKey\n   * ({ columnData: any, dataKey: string, rowData: any }): any\n   */\n  cellDataGetter: PropTypes.func,\n\n  /**\n   * Callback responsible for rendering a cell's contents.\n   * ({ cellData: any, columnData: any, dataKey: string, rowData: any, rowIndex: number }): node\n   */\n  cellRenderer: PropTypes.func,\n\n  /** Optional CSS class to apply to cell */\n  className: PropTypes.string,\n\n  /** Optional additional data passed to this column's :cellDataGetter */\n  columnData: PropTypes.object,\n\n  /** Uniquely identifies the row-data attribute corresponding to this cell */\n  dataKey: PropTypes.any.isRequired,\n\n  /** Optional direction to be used when clicked the first time */\n  defaultSortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** If sort is enabled for the table at large, disable it for this column */\n  disableSort: PropTypes.bool,\n\n  /** Flex grow style; defaults to 0 */\n  flexGrow: PropTypes.number,\n\n  /** Flex shrink style; defaults to 1 */\n  flexShrink: PropTypes.number,\n\n  /** Optional CSS class to apply to this column's header */\n  headerClassName: PropTypes.string,\n\n  /**\n   * Optional callback responsible for rendering a column header contents.\n   * ({ columnData: object, dataKey: string, disableSort: boolean, label: node, sortBy: string, sortDirection: string }): PropTypes.node\n   */\n  headerRenderer: PropTypes.func.isRequired,\n\n  /** Optional inline style to apply to this column's header */\n  headerStyle: PropTypes.object,\n\n  /** Optional id to set on the column header */\n  id: PropTypes.string,\n\n  /** Header label for this column */\n  label: PropTypes.node,\n\n  /** Maximum width of column; this property will only be used if :flexGrow is > 0. */\n  maxWidth: PropTypes.number,\n\n  /** Minimum width of column. */\n  minWidth: PropTypes.number,\n\n  /** Optional inline style to apply to cell */\n  style: PropTypes.object,\n\n  /** Flex basis (width) for this column; This value can grow or shrink based on :flexGrow and :flexShrink properties. */\n  width: PropTypes.number.isRequired\n} : {};","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport Column from './Column';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer';\nimport SortDirection from './SortDirection';\n/**\n * Table component with fixed headers and virtualized rows for improved performance with large data sets.\n * This component expects explicit width, height, and padding parameters.\n */\n\nvar Table =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Table, _React$PureComponent);\n\n  function Table(props) {\n    var _this;\n\n    _classCallCheck(this, Table);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Table).call(this, props));\n    _this.state = {\n      scrollbarWidth: 0\n    };\n    _this._createColumn = _this._createColumn.bind(_assertThisInitialized(_this));\n    _this._createRow = _this._createRow.bind(_assertThisInitialized(_this));\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    _this._onSectionRendered = _this._onSectionRendered.bind(_assertThisInitialized(_this));\n    _this._setRef = _this._setRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Table, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref) {\n      var alignment = _ref.alignment,\n          index = _ref.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref3$columnIndex = _ref3.columnIndex,\n          columnIndex = _ref3$columnIndex === void 0 ? 0 : _ref3$columnIndex,\n          _ref3$rowIndex = _ref3.rowIndex,\n          rowIndex = _ref3$rowIndex === void 0 ? 0 : _ref3$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"getScrollbarWidth\",\n    value: function getScrollbarWidth() {\n      if (this.Grid) {\n        var _Grid = findDOMNode(this.Grid);\n\n        var clientWidth = _Grid.clientWidth || 0;\n        var offsetWidth = _Grid.offsetWidth || 0;\n        return offsetWidth - clientWidth;\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          children = _this$props.children,\n          className = _this$props.className,\n          disableHeader = _this$props.disableHeader,\n          gridClassName = _this$props.gridClassName,\n          gridStyle = _this$props.gridStyle,\n          headerHeight = _this$props.headerHeight,\n          headerRowRenderer = _this$props.headerRowRenderer,\n          height = _this$props.height,\n          id = _this$props.id,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          rowClassName = _this$props.rowClassName,\n          rowStyle = _this$props.rowStyle,\n          scrollToIndex = _this$props.scrollToIndex,\n          style = _this$props.style,\n          width = _this$props.width;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var availableRowsHeight = disableHeader ? height : height - headerHeight;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: -1\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: -1\n      }) : rowStyle; // Precompute and cache column styles before rendering rows and columns to speed things up\n\n      this._cachedColumnStyles = [];\n      React.Children.toArray(children).forEach(function (column, index) {\n        var flexStyles = _this2._getFlexStyleForColumn(column, column.props.style);\n\n        _this2._cachedColumnStyles[index] = _objectSpread({\n          overflow: 'hidden'\n        }, flexStyles);\n      }); // Note that we specify :rowCount, :scrollbarWidth, :sortBy, and :sortDirection as properties on Grid even though these have nothing to do with Grid.\n      // This is done because Grid is a pure component and won't update unless its properties or state has changed.\n      // Any property that should trigger a re-render of Grid then is specified here to avoid a stale display.\n\n      return React.createElement(\"div\", {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-labelledby\": this.props['aria-labelledby'],\n        \"aria-colcount\": React.Children.toArray(children).length,\n        \"aria-rowcount\": this.props.rowCount,\n        className: clsx('ReactVirtualized__Table', className),\n        id: id,\n        role: \"grid\",\n        style: style\n      }, !disableHeader && headerRowRenderer({\n        className: clsx('ReactVirtualized__Table__headerRow', rowClass),\n        columns: this._getHeaderColumns(),\n        style: _objectSpread({\n          height: headerHeight,\n          overflow: 'hidden',\n          paddingRight: scrollbarWidth,\n          width: width\n        }, rowStyleObject)\n      }), React.createElement(Grid, _extends({}, this.props, {\n        \"aria-readonly\": null,\n        autoContainerWidth: true,\n        className: clsx('ReactVirtualized__Table__Grid', gridClassName),\n        cellRenderer: this._createRow,\n        columnWidth: width,\n        columnCount: 1,\n        height: availableRowsHeight,\n        id: undefined,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        role: \"rowgroup\",\n        scrollbarWidth: scrollbarWidth,\n        scrollToRow: scrollToIndex,\n        style: _objectSpread({}, gridStyle, {\n          overflowX: 'hidden'\n        })\n      })));\n    }\n  }, {\n    key: \"_createColumn\",\n    value: function _createColumn(_ref4) {\n      var column = _ref4.column,\n          columnIndex = _ref4.columnIndex,\n          isScrolling = _ref4.isScrolling,\n          parent = _ref4.parent,\n          rowData = _ref4.rowData,\n          rowIndex = _ref4.rowIndex;\n      var onColumnClick = this.props.onColumnClick;\n      var _column$props = column.props,\n          cellDataGetter = _column$props.cellDataGetter,\n          cellRenderer = _column$props.cellRenderer,\n          className = _column$props.className,\n          columnData = _column$props.columnData,\n          dataKey = _column$props.dataKey,\n          id = _column$props.id;\n      var cellData = cellDataGetter({\n        columnData: columnData,\n        dataKey: dataKey,\n        rowData: rowData\n      });\n      var renderedCell = cellRenderer({\n        cellData: cellData,\n        columnData: columnData,\n        columnIndex: columnIndex,\n        dataKey: dataKey,\n        isScrolling: isScrolling,\n        parent: parent,\n        rowData: rowData,\n        rowIndex: rowIndex\n      });\n\n      var onClick = function onClick(event) {\n        onColumnClick && onColumnClick({\n          columnData: columnData,\n          dataKey: dataKey,\n          event: event\n        });\n      };\n\n      var style = this._cachedColumnStyles[columnIndex];\n      var title = typeof renderedCell === 'string' ? renderedCell : null; // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n      return React.createElement(\"div\", {\n        \"aria-colindex\": columnIndex + 1,\n        \"aria-describedby\": id,\n        className: clsx('ReactVirtualized__Table__rowColumn', className),\n        key: 'Row' + rowIndex + '-' + 'Col' + columnIndex,\n        onClick: onClick,\n        role: \"gridcell\",\n        style: style,\n        title: title\n      }, renderedCell);\n    }\n  }, {\n    key: \"_createHeader\",\n    value: function _createHeader(_ref5) {\n      var column = _ref5.column,\n          index = _ref5.index;\n      var _this$props2 = this.props,\n          headerClassName = _this$props2.headerClassName,\n          headerStyle = _this$props2.headerStyle,\n          onHeaderClick = _this$props2.onHeaderClick,\n          sort = _this$props2.sort,\n          sortBy = _this$props2.sortBy,\n          sortDirection = _this$props2.sortDirection;\n      var _column$props2 = column.props,\n          columnData = _column$props2.columnData,\n          dataKey = _column$props2.dataKey,\n          defaultSortDirection = _column$props2.defaultSortDirection,\n          disableSort = _column$props2.disableSort,\n          headerRenderer = _column$props2.headerRenderer,\n          id = _column$props2.id,\n          label = _column$props2.label;\n      var sortEnabled = !disableSort && sort;\n      var classNames = clsx('ReactVirtualized__Table__headerColumn', headerClassName, column.props.headerClassName, {\n        ReactVirtualized__Table__sortableHeaderColumn: sortEnabled\n      });\n\n      var style = this._getFlexStyleForColumn(column, _objectSpread({}, headerStyle, {}, column.props.headerStyle));\n\n      var renderedHeader = headerRenderer({\n        columnData: columnData,\n        dataKey: dataKey,\n        disableSort: disableSort,\n        label: label,\n        sortBy: sortBy,\n        sortDirection: sortDirection\n      });\n      var headerOnClick, headerOnKeyDown, headerTabIndex, headerAriaSort, headerAriaLabel;\n\n      if (sortEnabled || onHeaderClick) {\n        // If this is a sortable header, clicking it should update the table data's sorting.\n        var isFirstTimeSort = sortBy !== dataKey; // If this is the firstTime sort of this column, use the column default sort order.\n        // Otherwise, invert the direction of the sort.\n\n        var newSortDirection = isFirstTimeSort ? defaultSortDirection : sortDirection === SortDirection.DESC ? SortDirection.ASC : SortDirection.DESC;\n\n        var onClick = function onClick(event) {\n          sortEnabled && sort({\n            defaultSortDirection: defaultSortDirection,\n            event: event,\n            sortBy: dataKey,\n            sortDirection: newSortDirection\n          });\n          onHeaderClick && onHeaderClick({\n            columnData: columnData,\n            dataKey: dataKey,\n            event: event\n          });\n        };\n\n        var onKeyDown = function onKeyDown(event) {\n          if (event.key === 'Enter' || event.key === ' ') {\n            onClick(event);\n          }\n        };\n\n        headerAriaLabel = column.props['aria-label'] || label || dataKey;\n        headerAriaSort = 'none';\n        headerTabIndex = 0;\n        headerOnClick = onClick;\n        headerOnKeyDown = onKeyDown;\n      }\n\n      if (sortBy === dataKey) {\n        headerAriaSort = sortDirection === SortDirection.ASC ? 'ascending' : 'descending';\n      } // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n\n      return React.createElement(\"div\", {\n        \"aria-label\": headerAriaLabel,\n        \"aria-sort\": headerAriaSort,\n        className: classNames,\n        id: id,\n        key: 'Header-Col' + index,\n        onClick: headerOnClick,\n        onKeyDown: headerOnKeyDown,\n        role: \"columnheader\",\n        style: style,\n        tabIndex: headerTabIndex\n      }, renderedHeader);\n    }\n  }, {\n    key: \"_createRow\",\n    value: function _createRow(_ref6) {\n      var _this3 = this;\n\n      var index = _ref6.rowIndex,\n          isScrolling = _ref6.isScrolling,\n          key = _ref6.key,\n          parent = _ref6.parent,\n          style = _ref6.style;\n      var _this$props3 = this.props,\n          children = _this$props3.children,\n          onRowClick = _this$props3.onRowClick,\n          onRowDoubleClick = _this$props3.onRowDoubleClick,\n          onRowRightClick = _this$props3.onRowRightClick,\n          onRowMouseOver = _this$props3.onRowMouseOver,\n          onRowMouseOut = _this$props3.onRowMouseOut,\n          rowClassName = _this$props3.rowClassName,\n          rowGetter = _this$props3.rowGetter,\n          rowRenderer = _this$props3.rowRenderer,\n          rowStyle = _this$props3.rowStyle;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: index\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: index\n      }) : rowStyle;\n      var rowData = rowGetter({\n        index: index\n      });\n      var columns = React.Children.toArray(children).map(function (column, columnIndex) {\n        return _this3._createColumn({\n          column: column,\n          columnIndex: columnIndex,\n          isScrolling: isScrolling,\n          parent: parent,\n          rowData: rowData,\n          rowIndex: index,\n          scrollbarWidth: scrollbarWidth\n        });\n      });\n      var className = clsx('ReactVirtualized__Table__row', rowClass);\n\n      var flattenedStyle = _objectSpread({}, style, {\n        height: this._getRowHeight(index),\n        overflow: 'hidden',\n        paddingRight: scrollbarWidth\n      }, rowStyleObject);\n\n      return rowRenderer({\n        className: className,\n        columns: columns,\n        index: index,\n        isScrolling: isScrolling,\n        key: key,\n        onRowClick: onRowClick,\n        onRowDoubleClick: onRowDoubleClick,\n        onRowRightClick: onRowRightClick,\n        onRowMouseOver: onRowMouseOver,\n        onRowMouseOut: onRowMouseOut,\n        rowData: rowData,\n        style: flattenedStyle\n      });\n    }\n    /**\n     * Determines the flex-shrink, flex-grow, and width values for a cell (header or column).\n     */\n\n  }, {\n    key: \"_getFlexStyleForColumn\",\n    value: function _getFlexStyleForColumn(column) {\n      var customStyle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var flexValue = \"\".concat(column.props.flexGrow, \" \").concat(column.props.flexShrink, \" \").concat(column.props.width, \"px\");\n\n      var style = _objectSpread({}, customStyle, {\n        flex: flexValue,\n        msFlex: flexValue,\n        WebkitFlex: flexValue\n      });\n\n      if (column.props.maxWidth) {\n        style.maxWidth = column.props.maxWidth;\n      }\n\n      if (column.props.minWidth) {\n        style.minWidth = column.props.minWidth;\n      }\n\n      return style;\n    }\n  }, {\n    key: \"_getHeaderColumns\",\n    value: function _getHeaderColumns() {\n      var _this4 = this;\n\n      var _this$props4 = this.props,\n          children = _this$props4.children,\n          disableHeader = _this$props4.disableHeader;\n      var items = disableHeader ? [] : React.Children.toArray(children);\n      return items.map(function (column, index) {\n        return _this4._createHeader({\n          column: column,\n          index: index\n        });\n      });\n    }\n  }, {\n    key: \"_getRowHeight\",\n    value: function _getRowHeight(rowIndex) {\n      var rowHeight = this.props.rowHeight;\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: rowIndex\n      }) : rowHeight;\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref7) {\n      var clientHeight = _ref7.clientHeight,\n          scrollHeight = _ref7.scrollHeight,\n          scrollTop = _ref7.scrollTop;\n      var onScroll = this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    }\n  }, {\n    key: \"_onSectionRendered\",\n    value: function _onSectionRendered(_ref8) {\n      var rowOverscanStartIndex = _ref8.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref8.rowOverscanStopIndex,\n          rowStartIndex = _ref8.rowStartIndex,\n          rowStopIndex = _ref8.rowStopIndex;\n      var onRowsRendered = this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    }\n  }, {\n    key: \"_setRef\",\n    value: function _setRef(ref) {\n      this.Grid = ref;\n    }\n  }, {\n    key: \"_setScrollbarWidth\",\n    value: function _setScrollbarWidth() {\n      var scrollbarWidth = this.getScrollbarWidth();\n      this.setState({\n        scrollbarWidth: scrollbarWidth\n      });\n    }\n  }]);\n\n  return Table;\n}(React.PureComponent);\n\n_defineProperty(Table, \"defaultProps\", {\n  disableHeader: false,\n  estimatedRowSize: 30,\n  headerHeight: 0,\n  headerStyle: {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  rowRenderer: defaultRowRenderer,\n  headerRowRenderer: defaultHeaderRowRenderer,\n  rowStyle: {},\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { Table as default };\nTable.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** This is just set on the grid top element. */\n  'aria-label': PropTypes.string,\n\n  /** This is just set on the grid top element. */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /** One or more Columns describing the data displayed in this row */\n  children: function children(props) {\n    var children = React.Children.toArray(props.children);\n\n    for (var i = 0; i < children.length; i++) {\n      var childType = children[i].type;\n\n      if (childType !== Column && !(childType.prototype instanceof Column)) {\n        return new Error('Table only accepts children of type Column');\n      }\n    }\n  },\n\n  /** Optional CSS class name */\n  className: PropTypes.string,\n\n  /** Disable rendering the header at all */\n  disableHeader: PropTypes.bool,\n\n  /**\n   * Used to estimate the total height of a Table before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  estimatedRowSize: PropTypes.number.isRequired,\n\n  /** Optional custom CSS class name to attach to inner Grid element. */\n  gridClassName: PropTypes.string,\n\n  /** Optional inline style to attach to inner Grid element. */\n  gridStyle: PropTypes.object,\n\n  /** Optional CSS class to apply to all column headers */\n  headerClassName: PropTypes.string,\n\n  /** Fixed height of header row */\n  headerHeight: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: any[],\n   *   style: any\n   * }): PropTypes.node\n   */\n  headerRowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table header columns. */\n  headerStyle: PropTypes.object,\n\n  /** Fixed/available height for out DOM element */\n  height: PropTypes.number.isRequired,\n\n  /** Optional id */\n  id: PropTypes.string,\n\n  /** Optional renderer to be used in place of table body rows when rowCount is 0 */\n  noRowsRenderer: PropTypes.func,\n\n  /**\n   * Optional callback when a column is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onColumnClick: PropTypes.func,\n\n  /**\n   * Optional callback when a column's header is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onHeaderClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user double-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowDoubleClick: PropTypes.func,\n\n  /**\n   * Callback invoked when the mouse leaves a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOut: PropTypes.func,\n\n  /**\n   * Callback invoked when a user moves the mouse over a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOver: PropTypes.func,\n\n  /**\n   * Callback invoked when a user right-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowRightClick: PropTypes.func,\n\n  /**\n   * Callback invoked with information about the slice of rows that were just rendered.\n   * ({ startIndex, stopIndex }): void\n   */\n  onRowsRendered: PropTypes.func,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, scrollHeight, scrollTop }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  overscanIndicesGetter: PropTypes.func.isRequired,\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  overscanRowCount: PropTypes.number.isRequired,\n\n  /**\n   * Optional CSS class to apply to all table rows (including the header row).\n   * This property can be a CSS class name (string) or a function that returns a class name.\n   * If a function is provided its signature should be: ({ index: number }): string\n   */\n  rowClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n\n  /**\n   * Callback responsible for returning a data row given an index.\n   * ({ index: number }): any\n   */\n  rowGetter: PropTypes.func.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * ({ index: number }): number\n   */\n  rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n\n  /** Number of rows in table. */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: Array,\n   *   index: number,\n   *   isScrolling: boolean,\n   *   onRowClick: ?Function,\n   *   onRowDoubleClick: ?Function,\n   *   onRowMouseOver: ?Function,\n   *   onRowMouseOut: ?Function,\n   *   rowData: any,\n   *   style: any\n   * }): PropTypes.node\n   */\n  rowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table rows. */\n  rowStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n\n  /** See Grid#scrollToAlignment */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  scrollToIndex: PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Sort function to be called if a sortable header is clicked.\n   * Should implement the following interface: ({\n   *   defaultSortDirection: 'ASC' | 'DESC',\n   *   event: MouseEvent,\n   *   sortBy: string,\n   *   sortDirection: SortDirection\n   * }): void\n   */\n  sort: PropTypes.func,\n\n  /** Table data is currently sorted by this :dataKey (if it is sorted at all) */\n  sortBy: PropTypes.string,\n\n  /** Table data is currently sorted in this direction (if it is sorted at all) */\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** Optional inline style */\n  style: PropTypes.object,\n\n  /** Tab index for focus */\n  tabIndex: PropTypes.number,\n\n  /** Width of list */\n  width: PropTypes.number.isRequired\n} : {};\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";","/**\n * Default accessor for returning a cell value for a given attribute.\n * This function expects to operate on either a vanilla Object or an Immutable Map.\n * You should override the column's cellDataGetter if your data is some other type of object.\n */\nexport default function defaultCellDataGetter(_ref) {\n  var dataKey = _ref.dataKey,\n      rowData = _ref.rowData;\n\n  if (typeof rowData.get === 'function') {\n    return rowData.get(dataKey);\n  } else {\n    return rowData[dataKey];\n  }\n}\nimport { bpfrpt_proptype_CellDataGetterParams } from \"./types\";","/**\n * Default cell renderer that displays an attribute as a simple string\n * You should override the column's cellRenderer if your data is some other type of object.\n */\nexport default function defaultCellRenderer(_ref) {\n  var cellData = _ref.cellData;\n\n  if (cellData == null) {\n    return '';\n  } else {\n    return String(cellData);\n  }\n}\nimport { bpfrpt_proptype_CellRendererParams } from \"./types\";","import createMultiSort from './createMultiSort';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer.js';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport Column from './Column';\nimport SortDirection from './SortDirection';\nimport SortIndicator from './SortIndicator';\nimport Table from './Table';\nexport default Table;\nexport { createMultiSort, defaultCellDataGetter, defaultCellRenderer, defaultHeaderRowRenderer, defaultHeaderRenderer, defaultRowRenderer, Column, SortDirection, SortIndicator, Table };","import { requestAnimationTimeout, cancelAnimationTimeout } from '../../utils/requestAnimationTimeout';\nvar mountedInstances = [];\nvar originalBodyPointerEvents = null;\nvar disablePointerEventsTimeoutId = null;\n\nfunction enablePointerEventsIfDisabled() {\n  if (disablePointerEventsTimeoutId) {\n    disablePointerEventsTimeoutId = null;\n\n    if (document.body && originalBodyPointerEvents != null) {\n      document.body.style.pointerEvents = originalBodyPointerEvents;\n    }\n\n    originalBodyPointerEvents = null;\n  }\n}\n\nfunction enablePointerEventsAfterDelayCallback() {\n  enablePointerEventsIfDisabled();\n  mountedInstances.forEach(function (instance) {\n    return instance.__resetIsScrolling();\n  });\n}\n\nfunction enablePointerEventsAfterDelay() {\n  if (disablePointerEventsTimeoutId) {\n    cancelAnimationTimeout(disablePointerEventsTimeoutId);\n  }\n\n  var maximumTimeout = 0;\n  mountedInstances.forEach(function (instance) {\n    maximumTimeout = Math.max(maximumTimeout, instance.props.scrollingResetTimeInterval);\n  });\n  disablePointerEventsTimeoutId = requestAnimationTimeout(enablePointerEventsAfterDelayCallback, maximumTimeout);\n}\n\nfunction onScrollWindow(event) {\n  if (event.currentTarget === window && originalBodyPointerEvents == null && document.body) {\n    originalBodyPointerEvents = document.body.style.pointerEvents;\n    document.body.style.pointerEvents = 'none';\n  }\n\n  enablePointerEventsAfterDelay();\n  mountedInstances.forEach(function (instance) {\n    if (instance.props.scrollElement === event.currentTarget) {\n      instance.__handleWindowScrollEvent();\n    }\n  });\n}\n\nexport function registerScrollListener(component, element) {\n  if (!mountedInstances.some(function (instance) {\n    return instance.props.scrollElement === element;\n  })) {\n    element.addEventListener('scroll', onScrollWindow);\n  }\n\n  mountedInstances.push(component);\n}\nexport function unregisterScrollListener(component, element) {\n  mountedInstances = mountedInstances.filter(function (instance) {\n    return instance !== component;\n  });\n\n  if (!mountedInstances.length) {\n    element.removeEventListener('scroll', onScrollWindow);\n\n    if (disablePointerEventsTimeoutId) {\n      cancelAnimationTimeout(disablePointerEventsTimeoutId);\n      enablePointerEventsIfDisabled();\n    }\n  }\n}\nimport { bpfrpt_proptype_WindowScroller } from \"../WindowScroller.js\";","/**\n * Gets the dimensions of the element, accounting for API differences between\n * `window` and other DOM elements.\n */\n// TODO Move this into WindowScroller and import from there\nvar isWindow = function isWindow(element) {\n  return element === window;\n};\n\nvar getBoundingBox = function getBoundingBox(element) {\n  return element.getBoundingClientRect();\n};\n\nexport function getDimensions(scrollElement, props) {\n  if (!scrollElement) {\n    return {\n      height: props.serverHeight,\n      width: props.serverWidth\n    };\n  } else if (isWindow(scrollElement)) {\n    var _window = window,\n        innerHeight = _window.innerHeight,\n        innerWidth = _window.innerWidth;\n    return {\n      height: typeof innerHeight === 'number' ? innerHeight : 0,\n      width: typeof innerWidth === 'number' ? innerWidth : 0\n    };\n  } else {\n    return getBoundingBox(scrollElement);\n  }\n}\n/**\n * Gets the vertical and horizontal position of an element within its scroll container.\n * Elements that have been “scrolled past” return negative values.\n * Handles edge-case where a user is navigating back (history) from an already-scrolled page.\n * In this case the body’s top or left position will be a negative number and this element’s top or left will be increased (by that amount).\n */\n\nexport function getPositionOffset(element, container) {\n  if (isWindow(container) && document.documentElement) {\n    var containerElement = document.documentElement;\n    var elementRect = getBoundingBox(element);\n    var containerRect = getBoundingBox(containerElement);\n    return {\n      top: elementRect.top - containerRect.top,\n      left: elementRect.left - containerRect.left\n    };\n  } else {\n    var scrollOffset = getScrollOffset(container);\n\n    var _elementRect = getBoundingBox(element);\n\n    var _containerRect = getBoundingBox(container);\n\n    return {\n      top: _elementRect.top + scrollOffset.top - _containerRect.top,\n      left: _elementRect.left + scrollOffset.left - _containerRect.left\n    };\n  }\n}\n/**\n * Gets the vertical and horizontal scroll amount of the element, accounting for IE compatibility\n * and API differences between `window` and other DOM elements.\n */\n\nexport function getScrollOffset(element) {\n  if (isWindow(element) && document.documentElement) {\n    return {\n      top: 'scrollY' in window ? window.scrollY : document.documentElement.scrollTop,\n      left: 'scrollX' in window ? window.scrollX : document.documentElement.scrollLeft\n    };\n  } else {\n    return {\n      top: element.scrollTop,\n      left: element.scrollLeft\n    };\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { registerScrollListener, unregisterScrollListener } from './utils/onScroll';\nimport { getDimensions, getPositionOffset, getScrollOffset } from './utils/dimensions';\nimport createDetectElementResize from '../vendor/detectElementResize';\n\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\nexport var IS_SCROLLING_TIMEOUT = 150;\n\nvar getWindow = function getWindow() {\n  return typeof window !== 'undefined' ? window : undefined;\n};\n\nvar WindowScroller = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(WindowScroller, _React$PureComponent);\n\n  function WindowScroller() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, WindowScroller);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(WindowScroller)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", getWindow());\n\n    _defineProperty(_assertThisInitialized(_this), \"_isMounted\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromTop\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromLeft\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", _objectSpread({}, getDimensions(_this.props.scrollElement, _this.props), {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    }));\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('WindowScroller registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onChildScroll\", function (_ref) {\n      var scrollTop = _ref.scrollTop;\n\n      if (_this.state.scrollTop === scrollTop) {\n        return;\n      }\n\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        if (typeof scrollElement.scrollTo === 'function') {\n          scrollElement.scrollTo(0, scrollTop + _this._positionFromTop);\n        } else {\n          scrollElement.scrollTop = scrollTop + _this._positionFromTop;\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerResizeListener\", function (element) {\n      if (element === window) {\n        window.addEventListener('resize', _this._onResize, false);\n      } else {\n        _this._detectElementResize.addResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_unregisterResizeListener\", function (element) {\n      if (element === window) {\n        window.removeEventListener('resize', _this._onResize, false);\n      } else if (element) {\n        _this._detectElementResize.removeResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__handleWindowScrollEvent\", function () {\n      if (!_this._isMounted) {\n        return;\n      }\n\n      var onScroll = _this.props.onScroll;\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        var scrollOffset = getScrollOffset(scrollElement);\n        var scrollLeft = Math.max(0, scrollOffset.left - _this._positionFromLeft);\n        var scrollTop = Math.max(0, scrollOffset.top - _this._positionFromTop);\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        onScroll({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__resetIsScrolling\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(WindowScroller, [{\n    key: \"updatePosition\",\n    value: function updatePosition() {\n      var scrollElement = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.scrollElement;\n      var onResize = this.props.onResize;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width;\n      var thisNode = this._child || ReactDOM.findDOMNode(this);\n\n      if (thisNode instanceof Element && scrollElement) {\n        var offset = getPositionOffset(thisNode, scrollElement);\n        this._positionFromTop = offset.top;\n        this._positionFromLeft = offset.left;\n      }\n\n      var dimensions = getDimensions(scrollElement, this.props);\n\n      if (height !== dimensions.height || width !== dimensions.width) {\n        this.setState({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n        onResize({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var scrollElement = this.props.scrollElement;\n      this._detectElementResize = createDetectElementResize();\n      this.updatePosition(scrollElement);\n\n      if (scrollElement) {\n        registerScrollListener(this, scrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n\n      this._isMounted = true;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var scrollElement = this.props.scrollElement;\n      var prevScrollElement = prevProps.scrollElement;\n\n      if (prevScrollElement !== scrollElement && prevScrollElement != null && scrollElement != null) {\n        this.updatePosition(scrollElement);\n        unregisterScrollListener(this, prevScrollElement);\n        registerScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(prevScrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var scrollElement = this.props.scrollElement;\n\n      if (scrollElement) {\n        unregisterScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(scrollElement);\n      }\n\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state2 = this.state,\n          isScrolling = _this$state2.isScrolling,\n          scrollTop = _this$state2.scrollTop,\n          scrollLeft = _this$state2.scrollLeft,\n          height = _this$state2.height,\n          width = _this$state2.width;\n      return children({\n        onChildScroll: this._onChildScroll,\n        registerChild: this._registerChild,\n        height: height,\n        isScrolling: isScrolling,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        width: width\n      });\n    }\n  }]);\n\n  return WindowScroller;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /**\n   * Function responsible for rendering children.\n   * This function should implement the following signature:\n   * ({ height, isScrolling, scrollLeft, scrollTop, width }) => PropTypes.element\n   */\n  \"children\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-resize: ({ height, width }) */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-scroll: ({ scrollLeft, scrollTop }) */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** Element to attach scroll event listeners. Defaults to window. */\n  \"scrollElement\": PropTypes.oneOfType([PropTypes.any, function () {\n    return (typeof Element === \"function\" ? PropTypes.instanceOf(Element) : PropTypes.any).apply(this, arguments);\n  }]),\n\n  /**\n   * Wait this amount of time after the last scroll event before resetting child `pointer-events`.\n   */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Height used for server-side rendering */\n  \"serverHeight\": PropTypes.number.isRequired,\n\n  /** Width used for server-side rendering */\n  \"serverWidth\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(WindowScroller, \"defaultProps\", {\n  onResize: function onResize() {},\n  onScroll: function onScroll() {},\n  scrollingResetTimeInterval: IS_SCROLLING_TIMEOUT,\n  scrollElement: getWindow(),\n  serverHeight: 0,\n  serverWidth: 0\n});\n\nexport { WindowScroller as default };\nimport PropTypes from \"prop-types\";","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport useTheme from '../styles/useTheme';\nimport IconButton from '../IconButton';\n/**\n * @ignore - internal component.\n */\n\nvar _ref = /*#__PURE__*/React.createElement(KeyboardArrowRight, null);\n\nvar _ref2 = /*#__PURE__*/React.createElement(KeyboardArrowLeft, null);\n\nvar _ref3 = /*#__PURE__*/React.createElement(KeyboardArrowLeft, null);\n\nvar _ref4 = /*#__PURE__*/React.createElement(KeyboardArrowRight, null);\n\nvar TablePaginationActions = /*#__PURE__*/React.forwardRef(function TablePaginationActions(props, ref) {\n  var backIconButtonProps = props.backIconButtonProps,\n      count = props.count,\n      nextIconButtonProps = props.nextIconButtonProps,\n      onChangePage = props.onChangePage,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      other = _objectWithoutProperties(props, [\"backIconButtonProps\", \"count\", \"nextIconButtonProps\", \"onChangePage\", \"page\", \"rowsPerPage\"]);\n\n  var theme = useTheme();\n\n  var handleBackButtonClick = function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  };\n\n  var handleNextButtonClick = function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(IconButton, _extends({\n    onClick: handleBackButtonClick,\n    disabled: page === 0,\n    color: \"inherit\"\n  }, backIconButtonProps), theme.direction === 'rtl' ? _ref : _ref2), /*#__PURE__*/React.createElement(IconButton, _extends({\n    onClick: handleNextButtonClick,\n    disabled: count !== -1 ? page >= Math.ceil(count / rowsPerPage) - 1 : false,\n    color: \"inherit\"\n  }, nextIconButtonProps), theme.direction === 'rtl' ? _ref3 : _ref4));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePaginationActions.propTypes = {\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) element.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onChangePage: PropTypes.func.isRequired,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: PropTypes.number.isRequired,\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired\n} : void 0;\nexport default TablePaginationActions;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@material-ui/utils';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport InputBase from '../InputBase';\nimport MenuItem from '../MenuItem';\nimport Select from '../Select';\nimport TableCell from '../TableCell';\nimport Toolbar from '../Toolbar';\nimport Typography from '../Typography';\nimport TablePaginationActions from './TablePaginationActions';\nimport useId from '../utils/unstable_useId';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.primary,\n      fontSize: theme.typography.pxToRem(14),\n      overflow: 'auto',\n      // Increase the specificity to override TableCell.\n      '&:last-child': {\n        padding: 0\n      }\n    },\n\n    /* Styles applied to the Toolbar component. */\n    toolbar: {\n      minHeight: 52,\n      paddingRight: 2\n    },\n\n    /* Styles applied to the spacer element. */\n    spacer: {\n      flex: '1 1 100%'\n    },\n\n    /* Styles applied to the caption Typography components if `variant=\"caption\"`. */\n    caption: {\n      flexShrink: 0\n    },\n    // TODO v5: `.selectRoot` should be merged with `.input`\n\n    /* Styles applied to the Select component root element. */\n    selectRoot: {\n      marginRight: 32,\n      marginLeft: 8\n    },\n\n    /* Styles applied to the Select component `select` class. */\n    select: {\n      paddingLeft: 8,\n      paddingRight: 24,\n      textAlign: 'right',\n      textAlignLast: 'right' // Align <select> on Chrome.\n\n    },\n    // TODO v5: remove\n\n    /* Styles applied to the Select component `icon` class. */\n    selectIcon: {},\n\n    /* Styles applied to the `InputBase` component. */\n    input: {\n      color: 'inherit',\n      fontSize: 'inherit',\n      flexShrink: 0\n    },\n\n    /* Styles applied to the MenuItem component. */\n    menuItem: {},\n\n    /* Styles applied to the internal `TablePaginationActions` component. */\n    actions: {\n      flexShrink: 0,\n      marginLeft: 20\n    }\n  };\n};\n\nvar defaultLabelDisplayedRows = function defaultLabelDisplayedRows(_ref) {\n  var from = _ref.from,\n      to = _ref.to,\n      count = _ref.count;\n  return \"\".concat(from, \"-\").concat(to, \" of \").concat(count !== -1 ? count : \"more than \".concat(to));\n};\n\nvar defaultRowsPerPageOptions = [10, 25, 50, 100];\n/**\n * A `TableCell` based component for placing inside `TableFooter` for pagination.\n */\n\nvar TablePagination = /*#__PURE__*/React.forwardRef(function TablePagination(props, ref) {\n  var _props$ActionsCompone = props.ActionsComponent,\n      ActionsComponent = _props$ActionsCompone === void 0 ? TablePaginationActions : _props$ActionsCompone,\n      backIconButtonProps = props.backIconButtonProps,\n      _props$backIconButton = props.backIconButtonText,\n      backIconButtonText = _props$backIconButton === void 0 ? 'Previous page' : _props$backIconButton,\n      classes = props.classes,\n      className = props.className,\n      colSpanProp = props.colSpan,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? TableCell : _props$component,\n      count = props.count,\n      _props$labelDisplayed = props.labelDisplayedRows,\n      labelDisplayedRows = _props$labelDisplayed === void 0 ? defaultLabelDisplayedRows : _props$labelDisplayed,\n      _props$labelRowsPerPa = props.labelRowsPerPage,\n      labelRowsPerPage = _props$labelRowsPerPa === void 0 ? 'Rows per page:' : _props$labelRowsPerPa,\n      nextIconButtonProps = props.nextIconButtonProps,\n      _props$nextIconButton = props.nextIconButtonText,\n      nextIconButtonText = _props$nextIconButton === void 0 ? 'Next page' : _props$nextIconButton,\n      onChangePage = props.onChangePage,\n      onChangeRowsPerPage = props.onChangeRowsPerPage,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      _props$rowsPerPageOpt = props.rowsPerPageOptions,\n      rowsPerPageOptions = _props$rowsPerPageOpt === void 0 ? defaultRowsPerPageOptions : _props$rowsPerPageOpt,\n      _props$SelectProps = props.SelectProps,\n      SelectProps = _props$SelectProps === void 0 ? {} : _props$SelectProps,\n      other = _objectWithoutProperties(props, [\"ActionsComponent\", \"backIconButtonProps\", \"backIconButtonText\", \"classes\", \"className\", \"colSpan\", \"component\", \"count\", \"labelDisplayedRows\", \"labelRowsPerPage\", \"nextIconButtonProps\", \"nextIconButtonText\", \"onChangePage\", \"onChangeRowsPerPage\", \"page\", \"rowsPerPage\", \"rowsPerPageOptions\", \"SelectProps\"]);\n\n  var colSpan;\n\n  if (Component === TableCell || Component === 'td') {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n\n  var selectId = useId();\n  var labelId = useId();\n  var MenuItemComponent = SelectProps.native ? 'option' : MenuItem;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    colSpan: colSpan,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(Toolbar, {\n    className: classes.toolbar\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.spacer\n  }), rowsPerPageOptions.length > 1 && /*#__PURE__*/React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"body2\",\n    className: classes.caption,\n    id: labelId\n  }, labelRowsPerPage), rowsPerPageOptions.length > 1 && /*#__PURE__*/React.createElement(Select, _extends({\n    classes: {\n      select: classes.select,\n      icon: classes.selectIcon\n    },\n    input: /*#__PURE__*/React.createElement(InputBase, {\n      className: clsx(classes.input, classes.selectRoot)\n    }),\n    value: rowsPerPage,\n    onChange: onChangeRowsPerPage,\n    id: selectId,\n    labelId: labelId\n  }, SelectProps), rowsPerPageOptions.map(function (rowsPerPageOption) {\n    return /*#__PURE__*/React.createElement(MenuItemComponent, {\n      className: classes.menuItem,\n      key: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption,\n      value: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption\n    }, rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption);\n  })), /*#__PURE__*/React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"body2\",\n    className: classes.caption\n  }, labelDisplayedRows({\n    from: count === 0 ? 0 : page * rowsPerPage + 1,\n    to: count !== -1 ? Math.min(count, (page + 1) * rowsPerPage) : (page + 1) * rowsPerPage,\n    count: count === -1 ? -1 : count,\n    page: page\n  })), /*#__PURE__*/React.createElement(ActionsComponent, {\n    className: classes.actions,\n    backIconButtonProps: _extends({\n      title: backIconButtonText,\n      'aria-label': backIconButtonText\n    }, backIconButtonProps),\n    count: count,\n    nextIconButtonProps: _extends({\n      title: nextIconButtonText,\n      'aria-label': nextIconButtonText\n    }, nextIconButtonProps),\n    onChangePage: onChangePage,\n    page: page,\n    rowsPerPage: rowsPerPage\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePagination.propTypes = {\n  /**\n   * The component used for displaying the actions.\n   * Either a string to use a HTML element or a component.\n   */\n  ActionsComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) component.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * Text label for the back arrow icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  backIconButtonText: PropTypes.string,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * The total number of rows.\n   *\n   * To enable server side pagination for an unknown number of items, provide -1.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`\n   * object.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  labelDisplayedRows: PropTypes.func,\n\n  /**\n   * Customize the rows per page label.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  labelRowsPerPage: PropTypes.node,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Text label for the next arrow icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  nextIconButtonText: PropTypes.string,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onChangePage: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onChangeRowsPerPage: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(PropTypes.number.isRequired, function (props) {\n    var count = props.count,\n        page = props.page,\n        rowsPerPage = props.rowsPerPage;\n\n    if (count === -1) {\n      return null;\n    }\n\n    var newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n\n    if (page < 0 || page > newLastPage) {\n      return new Error('Material-UI: The page prop of a TablePagination is out of range ' + \"(0 to \".concat(newLastPage, \", but page is \").concat(page, \").\"));\n    }\n\n    return null;\n  }),\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired,\n\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   */\n  rowsPerPageOptions: PropTypes.array,\n\n  /**\n   * Props applied to the rows per page [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTablePagination'\n})(TablePagination);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport ArrowDownwardIcon from '../internal/svg-icons/ArrowDownward';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      cursor: 'pointer',\n      display: 'inline-flex',\n      justifyContent: 'flex-start',\n      flexDirection: 'inherit',\n      alignItems: 'center',\n      '&:focus': {\n        color: theme.palette.text.secondary\n      },\n      '&:hover': {\n        color: theme.palette.text.secondary,\n        '& $icon': {\n          opacity: 0.5\n        }\n      },\n      '&$active': {\n        color: theme.palette.text.primary,\n        // && instead of & is a workaround for https://github.com/cssinjs/jss/issues/1045\n        '&& $icon': {\n          opacity: 1,\n          color: theme.palette.text.secondary\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the root element if `active={true}`. */\n    active: {},\n\n    /* Styles applied to the icon component. */\n    icon: {\n      fontSize: 18,\n      marginRight: 4,\n      marginLeft: 4,\n      opacity: 0,\n      transition: theme.transitions.create(['opacity', 'transform'], {\n        duration: theme.transitions.duration.shorter\n      }),\n      userSelect: 'none'\n    },\n\n    /* Styles applied to the icon component if `direction=\"desc\"`. */\n    iconDirectionDesc: {\n      transform: 'rotate(0deg)'\n    },\n\n    /* Styles applied to the icon component if `direction=\"asc\"`. */\n    iconDirectionAsc: {\n      transform: 'rotate(180deg)'\n    }\n  };\n};\n/**\n * A button based label for placing inside `TableCell` for column sorting.\n */\n\nvar TableSortLabel = /*#__PURE__*/React.forwardRef(function TableSortLabel(props, ref) {\n  var _props$active = props.active,\n      active = _props$active === void 0 ? false : _props$active,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'asc' : _props$direction,\n      _props$hideSortIcon = props.hideSortIcon,\n      hideSortIcon = _props$hideSortIcon === void 0 ? false : _props$hideSortIcon,\n      _props$IconComponent = props.IconComponent,\n      IconComponent = _props$IconComponent === void 0 ? ArrowDownwardIcon : _props$IconComponent,\n      other = _objectWithoutProperties(props, [\"active\", \"children\", \"classes\", \"className\", \"direction\", \"hideSortIcon\", \"IconComponent\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className, active && classes.active),\n    component: \"span\",\n    disableRipple: true,\n    ref: ref\n  }, other), children, hideSortIcon && !active ? null : /*#__PURE__*/React.createElement(IconComponent, {\n    className: clsx(classes.icon, classes[\"iconDirection\".concat(capitalize(direction))])\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableSortLabel.propTypes = {\n  /**\n   * If `true`, the label will have the active styling (should be true for the sorted column).\n   */\n  active: PropTypes.bool,\n\n  /**\n   * Label contents, the arrow will be appended automatically.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The current sort direction.\n   */\n  direction: PropTypes.oneOf(['asc', 'desc']),\n\n  /**\n   * Hide sort icon when active is false.\n   */\n  hideSortIcon: PropTypes.bool,\n\n  /**\n   * Sort icon to use.\n   */\n  IconComponent: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableSortLabel'\n})(TableSortLabel);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport TableContext from './TableContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'table',\n      width: '100%',\n      borderCollapse: 'collapse',\n      borderSpacing: 0,\n      '& caption': _extends({}, theme.typography.body2, {\n        padding: theme.spacing(2),\n        color: theme.palette.text.secondary,\n        textAlign: 'left',\n        captionSide: 'bottom'\n      })\n    },\n\n    /* Styles applied to the root element if `stickyHeader={true}`. */\n    stickyHeader: {\n      borderCollapse: 'separate'\n    }\n  };\n};\nvar defaultComponent = 'table';\nvar Table = /*#__PURE__*/React.forwardRef(function Table(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      _props$padding = props.padding,\n      padding = _props$padding === void 0 ? 'default' : _props$padding,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$stickyHeader = props.stickyHeader,\n      stickyHeader = _props$stickyHeader === void 0 ? false : _props$stickyHeader,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"padding\", \"size\", \"stickyHeader\"]);\n\n  var table = React.useMemo(function () {\n    return {\n      padding: padding,\n      size: size,\n      stickyHeader: stickyHeader\n    };\n  }, [padding, size, stickyHeader]);\n  return /*#__PURE__*/React.createElement(TableContext.Provider, {\n    value: table\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    role: Component === defaultComponent ? null : 'table',\n    ref: ref,\n    className: clsx(classes.root, className, stickyHeader && classes.stickyHeader)\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Table.propTypes = {\n  /**\n   * The content of the table, normally `TableHead` and `TableBody`.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Allows TableCells to inherit padding of the Table.\n   */\n  padding: PropTypes.oneOf(['default', 'checkbox', 'none']),\n\n  /**\n   * Allows TableCells to inherit size of the Table.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * Set the header sticky.\n   *\n   * ⚠️ It doesn't work with IE 11.\n   */\n  stickyHeader: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTable'\n})(Table);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table-footer-group'\n  }\n};\nvar tablelvl2 = {\n  variant: 'footer'\n};\nvar defaultComponent = 'tfoot';\nvar TableFooter = /*#__PURE__*/React.forwardRef(function TableFooter(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Tablelvl2Context.Provider, {\n    value: tablelvl2\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: Component === defaultComponent ? null : 'rowgroup'\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableFooter.propTypes = {\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableFooter'\n})(TableFooter);","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","var _typeof = require(\"../helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","import { deepmerge } from '@material-ui/utils';\nimport createMuiTheme from './createMuiTheme';\nexport default function createMuiStrictModeTheme(options) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  return createMuiTheme.apply(void 0, [deepmerge({\n    unstable_strictMode: true\n  }, options)].concat(args));\n}","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nexport function isUnitless(value) {\n  return String(parseFloat(value)).length === String(value).length;\n} // Ported from Compass\n// https://github.com/Compass/compass/blob/master/core/stylesheets/compass/typography/_units.scss\n// Emulate the sass function \"unit\"\n\nexport function getUnit(input) {\n  return String(input).match(/[\\d.\\-+]*\\s*(.*)/)[1] || '';\n} // Emulate the sass function \"unitless\"\n\nexport function toUnitless(length) {\n  return parseFloat(length);\n} // Convert any CSS <length> or <percentage> value to any another.\n// From https://github.com/KyleAMathews/convert-css-length\n\nexport function convertLength(baseFontSize) {\n  return function (length, toUnit) {\n    var fromUnit = getUnit(length); // Optimize for cases where `from` and `to` units are accidentally the same.\n\n    if (fromUnit === toUnit) {\n      return length;\n    } // Convert input length to pixels.\n\n\n    var pxLength = toUnitless(length);\n\n    if (fromUnit !== 'px') {\n      if (fromUnit === 'em') {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n      } else if (fromUnit === 'rem') {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n        return length;\n      }\n    } // Convert length in pixels to the output unit\n\n\n    var outputLength = pxLength;\n\n    if (toUnit !== 'px') {\n      if (toUnit === 'em') {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else if (toUnit === 'rem') {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else {\n        return length;\n      }\n    }\n\n    return parseFloat(outputLength.toFixed(5)) + toUnit;\n  };\n}\nexport function alignProperty(_ref) {\n  var size = _ref.size,\n      grid = _ref.grid;\n  var sizeBelow = size - size % grid;\n  var sizeAbove = sizeBelow + grid;\n  return size - sizeBelow < sizeAbove - size ? sizeBelow : sizeAbove;\n} // fontGrid finds a minimal grid (in rem) for the fontSize values so that the\n// lineHeight falls under a x pixels grid, 4px in the case of Material Design,\n// without changing the relative line height\n\nexport function fontGrid(_ref2) {\n  var lineHeight = _ref2.lineHeight,\n      pixels = _ref2.pixels,\n      htmlFontSize = _ref2.htmlFontSize;\n  return pixels / (lineHeight * htmlFontSize);\n}\n/**\n * generate a responsive version of a given CSS property\n * @example\n * responsiveProperty({\n *   cssProperty: 'fontSize',\n *   min: 15,\n *   max: 20,\n *   unit: 'px',\n *   breakpoints: [300, 600],\n * })\n *\n * // this returns\n *\n * {\n *   fontSize: '15px',\n *   '@media (min-width:300px)': {\n *     fontSize: '17.5px',\n *   },\n *   '@media (min-width:600px)': {\n *     fontSize: '20px',\n *   },\n * }\n *\n * @param {Object} params\n * @param {string} params.cssProperty - The CSS property to be made responsive\n * @param {number} params.min - The smallest value of the CSS property\n * @param {number} params.max - The largest value of the CSS property\n * @param {string} [params.unit] - The unit to be used for the CSS property\n * @param {Array.number} [params.breakpoints]  - An array of breakpoints\n * @param {number} [params.alignStep] - Round scaled value to fall under this grid\n * @returns {Object} responsive styles for {params.cssProperty}\n */\n\nexport function responsiveProperty(_ref3) {\n  var cssProperty = _ref3.cssProperty,\n      min = _ref3.min,\n      max = _ref3.max,\n      _ref3$unit = _ref3.unit,\n      unit = _ref3$unit === void 0 ? 'rem' : _ref3$unit,\n      _ref3$breakpoints = _ref3.breakpoints,\n      breakpoints = _ref3$breakpoints === void 0 ? [600, 960, 1280] : _ref3$breakpoints,\n      _ref3$transform = _ref3.transform,\n      transform = _ref3$transform === void 0 ? null : _ref3$transform;\n\n  var output = _defineProperty({}, cssProperty, \"\".concat(min).concat(unit));\n\n  var factor = (max - min) / breakpoints[breakpoints.length - 1];\n  breakpoints.forEach(function (breakpoint) {\n    var value = min + factor * breakpoint;\n\n    if (transform !== null) {\n      value = transform(value);\n    }\n\n    output[\"@media (min-width:\".concat(breakpoint, \"px)\")] = _defineProperty({}, cssProperty, \"\".concat(Math.round(value * 10000) / 10000).concat(unit));\n  });\n  return output;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@material-ui/utils\";\nimport { isUnitless, convertLength, responsiveProperty, alignProperty, fontGrid } from './cssUtils';\nexport default function responsiveFontSizes(themeInput) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$breakpoints = options.breakpoints,\n      breakpoints = _options$breakpoints === void 0 ? ['sm', 'md', 'lg'] : _options$breakpoints,\n      _options$disableAlign = options.disableAlign,\n      disableAlign = _options$disableAlign === void 0 ? false : _options$disableAlign,\n      _options$factor = options.factor,\n      factor = _options$factor === void 0 ? 2 : _options$factor,\n      _options$variants = options.variants,\n      variants = _options$variants === void 0 ? ['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline'] : _options$variants;\n\n  var theme = _extends({}, themeInput);\n\n  theme.typography = _extends({}, theme.typography);\n  var typography = theme.typography; // Convert between css lengths e.g. em->px or px->rem\n  // Set the baseFontSize for your project. Defaults to 16px (also the browser default).\n\n  var convert = convertLength(typography.htmlFontSize);\n  var breakpointValues = breakpoints.map(function (x) {\n    return theme.breakpoints.values[x];\n  });\n  variants.forEach(function (variant) {\n    var style = typography[variant];\n    var remFontSize = parseFloat(convert(style.fontSize, 'rem'));\n\n    if (remFontSize <= 1) {\n      return;\n    }\n\n    var maxFontSize = remFontSize;\n    var minFontSize = 1 + (maxFontSize - 1) / factor;\n    var lineHeight = style.lineHeight;\n\n    if (!isUnitless(lineHeight) && !disableAlign) {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? \"Material-UI: Unsupported non-unitless line height with grid alignment.\\nUse unitless line heights instead.\" : _formatMuiErrorMessage(6));\n    }\n\n    if (!isUnitless(lineHeight)) {\n      // make it unitless\n      lineHeight = parseFloat(convert(lineHeight, 'rem')) / parseFloat(remFontSize);\n    }\n\n    var transform = null;\n\n    if (!disableAlign) {\n      transform = function transform(value) {\n        return alignProperty({\n          size: value,\n          grid: fontGrid({\n            pixels: 4,\n            lineHeight: lineHeight,\n            htmlFontSize: typography.htmlFontSize\n          })\n        });\n      };\n    }\n\n    typography[variant] = _extends({}, style, responsiveProperty({\n      cssProperty: 'fontSize',\n      min: minFontSize,\n      max: maxFontSize,\n      unit: 'rem',\n      breakpoints: breakpointValues,\n      transform: transform\n    }));\n  });\n  return theme;\n}","import { withThemeCreator } from '@material-ui/styles';\nimport defaultTheme from './defaultTheme';\nvar withTheme = withThemeCreator({\n  defaultTheme: defaultTheme\n});\nexport default withTheme;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bpfrpt_proptype_VisibleCellRange = exports.bpfrpt_proptype_Alignment = exports.bpfrpt_proptype_OverscanIndicesGetter = exports.bpfrpt_proptype_OverscanIndices = exports.bpfrpt_proptype_OverscanIndicesGetterParams = exports.bpfrpt_proptype_RenderedSection = exports.bpfrpt_proptype_ScrollbarPresenceChange = exports.bpfrpt_proptype_Scroll = exports.bpfrpt_proptype_NoContentRenderer = exports.bpfrpt_proptype_CellSize = exports.bpfrpt_proptype_CellSizeGetter = exports.bpfrpt_proptype_CellRangeRenderer = exports.bpfrpt_proptype_CellRangeRendererParams = exports.bpfrpt_proptype_StyleCache = exports.bpfrpt_proptype_CellCache = exports.bpfrpt_proptype_CellRenderer = exports.bpfrpt_proptype_CellRendererParams = exports.bpfrpt_proptype_CellPosition = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _ScalingCellSizeAndPositionManager = _interopRequireDefault(require(\"./utils/ScalingCellSizeAndPositionManager\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar bpfrpt_proptype_CellPosition = process.env.NODE_ENV === 'production' ? null : {\n  \"columnIndex\": _propTypes[\"default\"].number.isRequired,\n  \"rowIndex\": _propTypes[\"default\"].number.isRequired\n};\nexports.bpfrpt_proptype_CellPosition = bpfrpt_proptype_CellPosition;\nvar bpfrpt_proptype_CellRendererParams = process.env.NODE_ENV === 'production' ? null : {\n  \"columnIndex\": _propTypes[\"default\"].number.isRequired,\n  \"isScrolling\": _propTypes[\"default\"].bool.isRequired,\n  \"isVisible\": _propTypes[\"default\"].bool.isRequired,\n  \"key\": _propTypes[\"default\"].string.isRequired,\n  \"parent\": _propTypes[\"default\"].object.isRequired,\n  \"rowIndex\": _propTypes[\"default\"].number.isRequired,\n  \"style\": _propTypes[\"default\"].object.isRequired\n};\nexports.bpfrpt_proptype_CellRendererParams = bpfrpt_proptype_CellRendererParams;\nvar bpfrpt_proptype_CellRenderer = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].func;\nexports.bpfrpt_proptype_CellRenderer = bpfrpt_proptype_CellRenderer;\nvar bpfrpt_proptype_CellCache = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].objectOf(_propTypes[\"default\"].node.isRequired);\nexports.bpfrpt_proptype_CellCache = bpfrpt_proptype_CellCache;\nvar bpfrpt_proptype_StyleCache = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].objectOf(_propTypes[\"default\"].object.isRequired);\nexports.bpfrpt_proptype_StyleCache = bpfrpt_proptype_StyleCache;\nvar bpfrpt_proptype_CellRangeRendererParams = process.env.NODE_ENV === 'production' ? null : {\n  \"cellCache\": _propTypes[\"default\"].objectOf(_propTypes[\"default\"].node.isRequired).isRequired,\n  \"cellRenderer\": _propTypes[\"default\"].func.isRequired,\n  \"columnSizeAndPositionManager\": function columnSizeAndPositionManager() {\n    return (typeof _ScalingCellSizeAndPositionManager[\"default\"] === \"function\" ? _propTypes[\"default\"].instanceOf(_ScalingCellSizeAndPositionManager[\"default\"]).isRequired : _propTypes[\"default\"].any.isRequired).apply(this, arguments);\n  },\n  \"columnStartIndex\": _propTypes[\"default\"].number.isRequired,\n  \"columnStopIndex\": _propTypes[\"default\"].number.isRequired,\n  \"deferredMeasurementCache\": _propTypes[\"default\"].object,\n  \"horizontalOffsetAdjustment\": _propTypes[\"default\"].number.isRequired,\n  \"isScrolling\": _propTypes[\"default\"].bool.isRequired,\n  \"isScrollingOptOut\": _propTypes[\"default\"].bool.isRequired,\n  \"parent\": _propTypes[\"default\"].object.isRequired,\n  \"rowSizeAndPositionManager\": function rowSizeAndPositionManager() {\n    return (typeof _ScalingCellSizeAndPositionManager[\"default\"] === \"function\" ? _propTypes[\"default\"].instanceOf(_ScalingCellSizeAndPositionManager[\"default\"]).isRequired : _propTypes[\"default\"].any.isRequired).apply(this, arguments);\n  },\n  \"rowStartIndex\": _propTypes[\"default\"].number.isRequired,\n  \"rowStopIndex\": _propTypes[\"default\"].number.isRequired,\n  \"scrollLeft\": _propTypes[\"default\"].number.isRequired,\n  \"scrollTop\": _propTypes[\"default\"].number.isRequired,\n  \"styleCache\": _propTypes[\"default\"].objectOf(_propTypes[\"default\"].object.isRequired).isRequired,\n  \"verticalOffsetAdjustment\": _propTypes[\"default\"].number.isRequired,\n  \"visibleColumnIndices\": _propTypes[\"default\"].object.isRequired,\n  \"visibleRowIndices\": _propTypes[\"default\"].object.isRequired\n};\nexports.bpfrpt_proptype_CellRangeRendererParams = bpfrpt_proptype_CellRangeRendererParams;\nvar bpfrpt_proptype_CellRangeRenderer = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].func;\nexports.bpfrpt_proptype_CellRangeRenderer = bpfrpt_proptype_CellRangeRenderer;\nvar bpfrpt_proptype_CellSizeGetter = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].func;\nexports.bpfrpt_proptype_CellSizeGetter = bpfrpt_proptype_CellSizeGetter;\nvar bpfrpt_proptype_CellSize = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].func, _propTypes[\"default\"].number]);\nexports.bpfrpt_proptype_CellSize = bpfrpt_proptype_CellSize;\nvar bpfrpt_proptype_NoContentRenderer = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].func;\nexports.bpfrpt_proptype_NoContentRenderer = bpfrpt_proptype_NoContentRenderer;\nvar bpfrpt_proptype_Scroll = process.env.NODE_ENV === 'production' ? null : {\n  \"clientHeight\": _propTypes[\"default\"].number.isRequired,\n  \"clientWidth\": _propTypes[\"default\"].number.isRequired,\n  \"scrollHeight\": _propTypes[\"default\"].number.isRequired,\n  \"scrollLeft\": _propTypes[\"default\"].number.isRequired,\n  \"scrollTop\": _propTypes[\"default\"].number.isRequired,\n  \"scrollWidth\": _propTypes[\"default\"].number.isRequired\n};\nexports.bpfrpt_proptype_Scroll = bpfrpt_proptype_Scroll;\nvar bpfrpt_proptype_ScrollbarPresenceChange = process.env.NODE_ENV === 'production' ? null : {\n  \"horizontal\": _propTypes[\"default\"].bool.isRequired,\n  \"vertical\": _propTypes[\"default\"].bool.isRequired,\n  \"size\": _propTypes[\"default\"].number.isRequired\n};\nexports.bpfrpt_proptype_ScrollbarPresenceChange = bpfrpt_proptype_ScrollbarPresenceChange;\nvar bpfrpt_proptype_RenderedSection = process.env.NODE_ENV === 'production' ? null : {\n  \"columnOverscanStartIndex\": _propTypes[\"default\"].number.isRequired,\n  \"columnOverscanStopIndex\": _propTypes[\"default\"].number.isRequired,\n  \"columnStartIndex\": _propTypes[\"default\"].number.isRequired,\n  \"columnStopIndex\": _propTypes[\"default\"].number.isRequired,\n  \"rowOverscanStartIndex\": _propTypes[\"default\"].number.isRequired,\n  \"rowOverscanStopIndex\": _propTypes[\"default\"].number.isRequired,\n  \"rowStartIndex\": _propTypes[\"default\"].number.isRequired,\n  \"rowStopIndex\": _propTypes[\"default\"].number.isRequired\n};\nexports.bpfrpt_proptype_RenderedSection = bpfrpt_proptype_RenderedSection;\nvar bpfrpt_proptype_OverscanIndicesGetterParams = process.env.NODE_ENV === 'production' ? null : {\n  // One of SCROLL_DIRECTION_HORIZONTAL or SCROLL_DIRECTION_VERTICAL\n  \"direction\": _propTypes[\"default\"].oneOf([\"horizontal\", \"vertical\"]).isRequired,\n  // One of SCROLL_DIRECTION_BACKWARD or SCROLL_DIRECTION_FORWARD\n  \"scrollDirection\": _propTypes[\"default\"].oneOf([-1, 1]).isRequired,\n  // Number of rows or columns in the current axis\n  \"cellCount\": _propTypes[\"default\"].number.isRequired,\n  // Maximum number of cells to over-render in either direction\n  \"overscanCellsCount\": _propTypes[\"default\"].number.isRequired,\n  // Begin of range of visible cells\n  \"startIndex\": _propTypes[\"default\"].number.isRequired,\n  // End of range of visible cells\n  \"stopIndex\": _propTypes[\"default\"].number.isRequired\n};\nexports.bpfrpt_proptype_OverscanIndicesGetterParams = bpfrpt_proptype_OverscanIndicesGetterParams;\nvar bpfrpt_proptype_OverscanIndices = process.env.NODE_ENV === 'production' ? null : {\n  \"overscanStartIndex\": _propTypes[\"default\"].number.isRequired,\n  \"overscanStopIndex\": _propTypes[\"default\"].number.isRequired\n};\nexports.bpfrpt_proptype_OverscanIndices = bpfrpt_proptype_OverscanIndices;\nvar bpfrpt_proptype_OverscanIndicesGetter = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].func;\nexports.bpfrpt_proptype_OverscanIndicesGetter = bpfrpt_proptype_OverscanIndicesGetter;\nvar bpfrpt_proptype_Alignment = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].oneOf([\"auto\", \"end\", \"start\", \"center\"]);\nexports.bpfrpt_proptype_Alignment = bpfrpt_proptype_Alignment;\nvar bpfrpt_proptype_VisibleCellRange = process.env.NODE_ENV === 'production' ? null : {\n  \"start\": _propTypes[\"default\"].number,\n  \"stop\": _propTypes[\"default\"].number\n};\nexports.bpfrpt_proptype_VisibleCellRange = bpfrpt_proptype_VisibleCellRange;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nfunction componentWillMount() {\n  // Call this.constructor.gDSFP to support sub-classes.\n  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);\n  if (state !== null && state !== undefined) {\n    this.setState(state);\n  }\n}\n\nfunction componentWillReceiveProps(nextProps) {\n  // Call this.constructor.gDSFP to support sub-classes.\n  // Use the setState() updater to ensure state isn't stale in certain edge cases.\n  function updater(prevState) {\n    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);\n    return state !== null && state !== undefined ? state : null;\n  }\n  // Binding \"this\" is important for shallow renderer support.\n  this.setState(updater.bind(this));\n}\n\nfunction componentWillUpdate(nextProps, nextState) {\n  try {\n    var prevProps = this.props;\n    var prevState = this.state;\n    this.props = nextProps;\n    this.state = nextState;\n    this.__reactInternalSnapshotFlag = true;\n    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(\n      prevProps,\n      prevState\n    );\n  } finally {\n    this.props = prevProps;\n    this.state = prevState;\n  }\n}\n\n// React may warn about cWM/cWRP/cWU methods being deprecated.\n// Add a flag to suppress these warnings for this special case.\ncomponentWillMount.__suppressDeprecationWarning = true;\ncomponentWillReceiveProps.__suppressDeprecationWarning = true;\ncomponentWillUpdate.__suppressDeprecationWarning = true;\n\nfunction polyfill(Component) {\n  var prototype = Component.prototype;\n\n  if (!prototype || !prototype.isReactComponent) {\n    throw new Error('Can only polyfill class components');\n  }\n\n  if (\n    typeof Component.getDerivedStateFromProps !== 'function' &&\n    typeof prototype.getSnapshotBeforeUpdate !== 'function'\n  ) {\n    return Component;\n  }\n\n  // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n  // Error if any of these lifecycles are present,\n  // Because they would work differently between older and newer (16.3+) versions of React.\n  var foundWillMountName = null;\n  var foundWillReceivePropsName = null;\n  var foundWillUpdateName = null;\n  if (typeof prototype.componentWillMount === 'function') {\n    foundWillMountName = 'componentWillMount';\n  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {\n    foundWillMountName = 'UNSAFE_componentWillMount';\n  }\n  if (typeof prototype.componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'componentWillReceiveProps';\n  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n  }\n  if (typeof prototype.componentWillUpdate === 'function') {\n    foundWillUpdateName = 'componentWillUpdate';\n  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {\n    foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n  }\n  if (\n    foundWillMountName !== null ||\n    foundWillReceivePropsName !== null ||\n    foundWillUpdateName !== null\n  ) {\n    var componentName = Component.displayName || Component.name;\n    var newApiName =\n      typeof Component.getDerivedStateFromProps === 'function'\n        ? 'getDerivedStateFromProps()'\n        : 'getSnapshotBeforeUpdate()';\n\n    throw Error(\n      'Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' +\n        componentName +\n        ' uses ' +\n        newApiName +\n        ' but also contains the following legacy lifecycles:' +\n        (foundWillMountName !== null ? '\\n  ' + foundWillMountName : '') +\n        (foundWillReceivePropsName !== null\n          ? '\\n  ' + foundWillReceivePropsName\n          : '') +\n        (foundWillUpdateName !== null ? '\\n  ' + foundWillUpdateName : '') +\n        '\\n\\nThe above lifecycles should be removed. Learn more about this warning here:\\n' +\n        'https://fb.me/react-async-component-lifecycle-hooks'\n    );\n  }\n\n  // React <= 16.2 does not support static getDerivedStateFromProps.\n  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.\n  // Newer versions of React will ignore these lifecycles if gDSFP exists.\n  if (typeof Component.getDerivedStateFromProps === 'function') {\n    prototype.componentWillMount = componentWillMount;\n    prototype.componentWillReceiveProps = componentWillReceiveProps;\n  }\n\n  // React <= 16.2 does not support getSnapshotBeforeUpdate.\n  // As a workaround, use cWU to invoke the new lifecycle.\n  // Newer versions of React will ignore that lifecycle if gSBU exists.\n  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {\n    if (typeof prototype.componentDidUpdate !== 'function') {\n      throw new Error(\n        'Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype'\n      );\n    }\n\n    prototype.componentWillUpdate = componentWillUpdate;\n\n    var componentDidUpdate = prototype.componentDidUpdate;\n\n    prototype.componentDidUpdate = function componentDidUpdatePolyfill(\n      prevProps,\n      prevState,\n      maybeSnapshot\n    ) {\n      // 16.3+ will not execute our will-update method;\n      // It will pass a snapshot value to did-update though.\n      // Older versions will require our polyfilled will-update value.\n      // We need to handle both cases, but can't just check for the presence of \"maybeSnapshot\",\n      // Because for <= 15.x versions this might be a \"prevContext\" object.\n      // We also can't just check \"__reactInternalSnapshot\",\n      // Because get-snapshot might return a falsy value.\n      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.\n      var snapshot = this.__reactInternalSnapshotFlag\n        ? this.__reactInternalSnapshot\n        : maybeSnapshot;\n\n      componentDidUpdate.call(this, prevProps, prevState, snapshot);\n    };\n  }\n\n  return Component;\n}\n\nexport { polyfill };\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _CellSizeAndPositionManager = _interopRequireDefault(require(\"./CellSizeAndPositionManager\"));\n\nvar _maxElementSize = require(\"./maxElementSize.js\");\n\nvar _types = require(\"../types\");\n\n/**\n * Extends CellSizeAndPositionManager and adds scaling behavior for lists that are too large to fit within a browser's native limits.\n */\nvar ScalingCellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  function ScalingCellSizeAndPositionManager(_ref) {\n    var _ref$maxScrollSize = _ref.maxScrollSize,\n        maxScrollSize = _ref$maxScrollSize === void 0 ? (0, _maxElementSize.getMaxElementSize)() : _ref$maxScrollSize,\n        params = (0, _objectWithoutProperties2[\"default\"])(_ref, [\"maxScrollSize\"]);\n    (0, _classCallCheck2[\"default\"])(this, ScalingCellSizeAndPositionManager);\n    (0, _defineProperty2[\"default\"])(this, \"_cellSizeAndPositionManager\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_maxScrollSize\", void 0);\n    // Favor composition over inheritance to simplify IE10 support\n    this._cellSizeAndPositionManager = new _CellSizeAndPositionManager[\"default\"](params);\n    this._maxScrollSize = maxScrollSize;\n  }\n\n  (0, _createClass2[\"default\"])(ScalingCellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return this._cellSizeAndPositionManager.getTotalSize() > this._maxScrollSize;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(params) {\n      this._cellSizeAndPositionManager.configure(params);\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellSizeAndPositionManager.getCellCount();\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._cellSizeAndPositionManager.getEstimatedCellSize();\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._cellSizeAndPositionManager.getLastMeasuredIndex();\n    }\n    /**\n     * Number of pixels a cell at the given position (offset) should be shifted in order to fit within the scaled container.\n     * The offset passed to this function is scaled (safe) as well.\n     */\n\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment(_ref2) {\n      var containerSize = _ref2.containerSize,\n          offset = _ref2.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      var offsetPercentage = this._getOffsetPercentage({\n        containerSize: containerSize,\n        offset: offset,\n        totalSize: safeTotalSize\n      });\n\n      return Math.round(offsetPercentage * (safeTotalSize - totalSize));\n    }\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfCell(index);\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfLastMeasuredCell();\n    }\n    /** See CellSizeAndPositionManager#getTotalSize */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return Math.min(this._maxScrollSize, this._cellSizeAndPositionManager.getTotalSize());\n    }\n    /** See CellSizeAndPositionManager#getUpdatedOffsetForIndex */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n      currentOffset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: currentOffset\n      });\n\n      var offset = this._cellSizeAndPositionManager.getUpdatedOffsetForIndex({\n        align: align,\n        containerSize: containerSize,\n        currentOffset: currentOffset,\n        targetIndex: targetIndex\n      });\n\n      return this._offsetToSafeOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n    /** See CellSizeAndPositionManager#getVisibleCellRange */\n\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(_ref4) {\n      var containerSize = _ref4.containerSize,\n          offset = _ref4.offset;\n      offset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n      return this._cellSizeAndPositionManager.getVisibleCellRange({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._cellSizeAndPositionManager.resetCell(index);\n    }\n  }, {\n    key: \"_getOffsetPercentage\",\n    value: function _getOffsetPercentage(_ref5) {\n      var containerSize = _ref5.containerSize,\n          offset = _ref5.offset,\n          totalSize = _ref5.totalSize;\n      return totalSize <= containerSize ? 0 : offset / (totalSize - containerSize);\n    }\n  }, {\n    key: \"_offsetToSafeOffset\",\n    value: function _offsetToSafeOffset(_ref6) {\n      var containerSize = _ref6.containerSize,\n          offset = _ref6.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: totalSize\n        });\n\n        return Math.round(offsetPercentage * (safeTotalSize - containerSize));\n      }\n    }\n  }, {\n    key: \"_safeOffsetToOffset\",\n    value: function _safeOffsetToOffset(_ref7) {\n      var containerSize = _ref7.containerSize,\n          offset = _ref7.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: safeTotalSize\n        });\n\n        return Math.round(offsetPercentage * (totalSize - containerSize));\n      }\n    }\n  }]);\n  return ScalingCellSizeAndPositionManager;\n}();\n\nexports[\"default\"] = ScalingCellSizeAndPositionManager;","export default !!(typeof window !== 'undefined' && window.document && window.document.createElement);","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bpfrpt_proptype_CellMeasureCache = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar bpfrpt_proptype_CellMeasureCache = process.env.NODE_ENV === 'production' ? null : {\n  \"hasFixedWidth\": _propTypes[\"default\"].func.isRequired,\n  \"hasFixedHeight\": _propTypes[\"default\"].func.isRequired,\n  \"has\": _propTypes[\"default\"].func.isRequired,\n  \"set\": _propTypes[\"default\"].func.isRequired,\n  \"getHeight\": _propTypes[\"default\"].func.isRequired,\n  \"getWidth\": _propTypes[\"default\"].func.isRequired\n};\nexports.bpfrpt_proptype_CellMeasureCache = bpfrpt_proptype_CellMeasureCache;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = defaultOverscanIndicesGetter;\nexports.SCROLL_DIRECTION_VERTICAL = exports.SCROLL_DIRECTION_HORIZONTAL = exports.SCROLL_DIRECTION_FORWARD = exports.SCROLL_DIRECTION_BACKWARD = void 0;\n\nvar _types = require(\"./types\");\n\nvar SCROLL_DIRECTION_BACKWARD = -1;\nexports.SCROLL_DIRECTION_BACKWARD = SCROLL_DIRECTION_BACKWARD;\nvar SCROLL_DIRECTION_FORWARD = 1;\nexports.SCROLL_DIRECTION_FORWARD = SCROLL_DIRECTION_FORWARD;\nvar SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexports.SCROLL_DIRECTION_HORIZONTAL = SCROLL_DIRECTION_HORIZONTAL;\nvar SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexports.SCROLL_DIRECTION_VERTICAL = SCROLL_DIRECTION_VERTICAL;\n\nfunction defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex)\n    };\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = defaultCellRangeRenderer;\n\nvar _types = require(\"./types\");\n\n/**\n * Default implementation of cellRangeRenderer used by Grid.\n * This renderer supports cell-caching while the user is scrolling.\n */\nfunction defaultCellRangeRenderer(_ref) {\n  var cellCache = _ref.cellCache,\n      cellRenderer = _ref.cellRenderer,\n      columnSizeAndPositionManager = _ref.columnSizeAndPositionManager,\n      columnStartIndex = _ref.columnStartIndex,\n      columnStopIndex = _ref.columnStopIndex,\n      deferredMeasurementCache = _ref.deferredMeasurementCache,\n      horizontalOffsetAdjustment = _ref.horizontalOffsetAdjustment,\n      isScrolling = _ref.isScrolling,\n      isScrollingOptOut = _ref.isScrollingOptOut,\n      parent = _ref.parent,\n      rowSizeAndPositionManager = _ref.rowSizeAndPositionManager,\n      rowStartIndex = _ref.rowStartIndex,\n      rowStopIndex = _ref.rowStopIndex,\n      styleCache = _ref.styleCache,\n      verticalOffsetAdjustment = _ref.verticalOffsetAdjustment,\n      visibleColumnIndices = _ref.visibleColumnIndices,\n      visibleRowIndices = _ref.visibleRowIndices;\n  var renderedCells = []; // Browsers have native size limits for elements (eg Chrome 33M pixels, IE 1.5M pixes).\n  // User cannot scroll beyond these size limitations.\n  // In order to work around this, ScalingCellSizeAndPositionManager compresses offsets.\n  // We should never cache styles for compressed offsets though as this can lead to bugs.\n  // See issue #576 for more.\n\n  var areOffsetsAdjusted = columnSizeAndPositionManager.areOffsetsAdjusted() || rowSizeAndPositionManager.areOffsetsAdjusted();\n  var canCacheStyle = !isScrolling && !areOffsetsAdjusted;\n\n  for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n    var rowDatum = rowSizeAndPositionManager.getSizeAndPositionOfCell(rowIndex);\n\n    for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n      var columnDatum = columnSizeAndPositionManager.getSizeAndPositionOfCell(columnIndex);\n      var isVisible = columnIndex >= visibleColumnIndices.start && columnIndex <= visibleColumnIndices.stop && rowIndex >= visibleRowIndices.start && rowIndex <= visibleRowIndices.stop;\n      var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n      var style = void 0; // Cache style objects so shallow-compare doesn't re-render unnecessarily.\n\n      if (canCacheStyle && styleCache[key]) {\n        style = styleCache[key];\n      } else {\n        // In deferred mode, cells will be initially rendered before we know their size.\n        // Don't interfere with CellMeasurer's measurements by setting an invalid size.\n        if (deferredMeasurementCache && !deferredMeasurementCache.has(rowIndex, columnIndex)) {\n          // Position not-yet-measured cells at top/left 0,0,\n          // And give them width/height of 'auto' so they can grow larger than the parent Grid if necessary.\n          // Positioning them further to the right/bottom influences their measured size.\n          style = {\n            height: 'auto',\n            left: 0,\n            position: 'absolute',\n            top: 0,\n            width: 'auto'\n          };\n        } else {\n          style = {\n            height: rowDatum.size,\n            left: columnDatum.offset + horizontalOffsetAdjustment,\n            position: 'absolute',\n            top: rowDatum.offset + verticalOffsetAdjustment,\n            width: columnDatum.size\n          };\n          styleCache[key] = style;\n        }\n      }\n\n      var cellRendererParams = {\n        columnIndex: columnIndex,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent,\n        rowIndex: rowIndex,\n        style: style\n      };\n      var renderedCell = void 0; // Avoid re-creating cells while scrolling.\n      // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n      // If a scroll is in progress- cache and reuse cells.\n      // This cache will be thrown away once scrolling completes.\n      // However if we are scaling scroll positions and sizes, we should also avoid caching.\n      // This is because the offset changes slightly as scroll position changes and caching leads to stale values.\n      // For more info refer to issue #395\n      //\n      // If isScrollingOptOut is specified, we always cache cells.\n      // For more info refer to issue #1028\n\n      if ((isScrollingOptOut || isScrolling) && !horizontalOffsetAdjustment && !verticalOffsetAdjustment) {\n        if (!cellCache[key]) {\n          cellCache[key] = cellRenderer(cellRendererParams);\n        }\n\n        renderedCell = cellCache[key]; // If the user is no longer scrolling, don't cache cells.\n        // This makes dynamic cell content difficult for users and would also lead to a heavier memory footprint.\n      } else {\n        renderedCell = cellRenderer(cellRendererParams);\n      }\n\n      if (renderedCell == null || renderedCell === false) {\n        continue;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        warnAboutMissingStyle(parent, renderedCell);\n      }\n\n      renderedCells.push(renderedCell);\n    }\n  }\n\n  return renderedCells;\n}\n\nfunction warnAboutMissingStyle(parent, renderedCell) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (renderedCell) {\n      // If the direct child is a CellMeasurer, then we should check its child\n      // See issue #611\n      if (renderedCell.type && renderedCell.type.__internalCellMeasurerFlag) {\n        renderedCell = renderedCell.props.children;\n      }\n\n      if (renderedCell && renderedCell.props && renderedCell.props.style === undefined && parent.__warnedAboutMissingStyle !== true) {\n        parent.__warnedAboutMissingStyle = true;\n        console.warn('Rendered cell should include style property for positioning.');\n      }\n    }\n  }\n}","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar TableContext = /*#__PURE__*/React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  TableContext.displayName = 'TableContext';\n}\n\nexport default TableContext;","export { default } from './TableCell';","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport { darken, fade, lighten } from '../styles/colorManipulator';\nimport TableContext from '../Table/TableContext';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body2, {\n      display: 'table-cell',\n      verticalAlign: 'inherit',\n      // Workaround for a rendering bug with spanned columns in Chrome 62.0.\n      // Removes the alpha (sets it to 1), and lightens or darkens the theme color.\n      borderBottom: \"1px solid\\n    \".concat(theme.palette.type === 'light' ? lighten(fade(theme.palette.divider, 1), 0.88) : darken(fade(theme.palette.divider, 1), 0.68)),\n      textAlign: 'left',\n      padding: 16\n    }),\n\n    /* Styles applied to the root element if `variant=\"head\"` or `context.table.head`. */\n    head: {\n      color: theme.palette.text.primary,\n      lineHeight: theme.typography.pxToRem(24),\n      fontWeight: theme.typography.fontWeightMedium\n    },\n\n    /* Styles applied to the root element if `variant=\"body\"` or `context.table.body`. */\n    body: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `variant=\"footer\"` or `context.table.footer`. */\n    footer: {\n      color: theme.palette.text.secondary,\n      lineHeight: theme.typography.pxToRem(21),\n      fontSize: theme.typography.pxToRem(12)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      padding: '6px 24px 6px 16px',\n      '&:last-child': {\n        paddingRight: 16\n      },\n      '&$paddingCheckbox': {\n        width: 24,\n        // prevent the checkbox column from growing\n        padding: '0 12px 0 16px',\n        '&:last-child': {\n          paddingLeft: 12,\n          paddingRight: 16\n        },\n        '& > *': {\n          padding: 0\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `padding=\"checkbox\"`. */\n    paddingCheckbox: {\n      width: 48,\n      // prevent the checkbox column from growing\n      padding: '0 0 0 4px',\n      '&:last-child': {\n        paddingLeft: 0,\n        paddingRight: 4\n      }\n    },\n\n    /* Styles applied to the root element if `padding=\"none\"`. */\n    paddingNone: {\n      padding: 0,\n      '&:last-child': {\n        padding: 0\n      }\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right',\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `context.table.stickyHeader={true}`. */\n    stickyHeader: {\n      position: 'sticky',\n      top: 0,\n      left: 0,\n      zIndex: 2,\n      backgroundColor: theme.palette.background.default\n    }\n  };\n};\n/**\n * The component renders a `<th>` element when the parent context is a header\n * or otherwise a `<td>` element.\n */\n\nvar TableCell = /*#__PURE__*/React.forwardRef(function TableCell(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      component = props.component,\n      paddingProp = props.padding,\n      scopeProp = props.scope,\n      sizeProp = props.size,\n      sortDirection = props.sortDirection,\n      variantProp = props.variant,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"component\", \"padding\", \"scope\", \"size\", \"sortDirection\", \"variant\"]);\n\n  var table = React.useContext(TableContext);\n  var tablelvl2 = React.useContext(Tablelvl2Context);\n  var isHeadCell = tablelvl2 && tablelvl2.variant === 'head';\n  var role;\n  var Component;\n\n  if (component) {\n    Component = component;\n    role = isHeadCell ? 'columnheader' : 'cell';\n  } else {\n    Component = isHeadCell ? 'th' : 'td';\n  }\n\n  var scope = scopeProp;\n\n  if (!scope && isHeadCell) {\n    scope = 'col';\n  }\n\n  var padding = paddingProp || (table && table.padding ? table.padding : 'default');\n  var size = sizeProp || (table && table.size ? table.size : 'medium');\n  var variant = variantProp || tablelvl2 && tablelvl2.variant;\n  var ariaSort = null;\n\n  if (sortDirection) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, classes[variant], className, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], padding !== 'default' && classes[\"padding\".concat(capitalize(padding))], size !== 'medium' && classes[\"size\".concat(capitalize(size))], variant === 'head' && table && table.stickyHeader && classes.stickyHeader),\n    \"aria-sort\": ariaSort,\n    role: role,\n    scope: scope\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Set the text-align on the table cell content.\n   *\n   * Monetary or generally number fields **should be right aligned** as that allows\n   * you to add them up quickly in your head without having to worry about decimals.\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n\n  /**\n   * The table cell contents.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Sets the padding applied to the cell.\n   * By default, the Table parent component set the value (`default`).\n   */\n  padding: PropTypes.oneOf(['checkbox', 'default', 'none']),\n\n  /**\n   * Set scope attribute.\n   */\n  scope: PropTypes.string,\n\n  /**\n   * Specify the size of the cell.\n   * By default, the Table parent component set the value (`medium`).\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * Set aria-sort direction.\n   */\n  sortDirection: PropTypes.oneOf(['asc', 'desc', false]),\n\n  /**\n   * Specify the cell type.\n   * By default, the TableHead, TableBody or TableFooter parent component set the value.\n   */\n  variant: PropTypes.oneOf(['body', 'footer', 'head'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableCell'\n})(TableCell);","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar Tablelvl2Context = /*#__PURE__*/React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  Tablelvl2Context.displayName = 'Tablelvl2Context';\n}\n\nexport default Tablelvl2Context;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function get() {\n    return _AutoSizer[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"AutoSizer\", {\n  enumerable: true,\n  get: function get() {\n    return _AutoSizer[\"default\"];\n  }\n});\n\nvar _AutoSizer = _interopRequireDefault(require(\"./AutoSizer\"));","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React from 'react';\n\nvar Component = function (_React$Component) {\n  _inherits(Component, _React$Component);\n\n  function Component() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Component);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _initialiseProps.call(_this), _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  Component.prototype.getArgs = function getArgs() {\n    var state = this.state,\n        props = this.props,\n        setState = this._setState,\n        forceUpdate = this._forceUpdate;\n\n    return {\n      state: state,\n      props: props,\n      setState: setState,\n      forceUpdate: forceUpdate\n    };\n  };\n\n  Component.prototype.componentDidMount = function componentDidMount() {\n    if (this.props.didMount) this.props.didMount(this.getArgs());\n  };\n\n  Component.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState) {\n    if (this.props.shouldUpdate) return this.props.shouldUpdate({\n      props: this.props,\n      state: this.state,\n      nextProps: nextProps,\n      nextState: nextState\n    });else return true;\n  };\n\n  Component.prototype.componentWillUnmount = function componentWillUnmount() {\n    if (this.props.willUnmount) this.props.willUnmount({\n      state: this.state,\n      props: this.props\n    });\n  };\n\n  Component.prototype.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n    if (this.props.didUpdate) this.props.didUpdate(Object.assign(this.getArgs(), {\n      prevProps: prevProps,\n      prevState: prevState\n    }));\n  };\n\n  Component.prototype.render = function render() {\n    var _props = this.props,\n        children = _props.children,\n        render = _props.render;\n\n    return children ? typeof children === 'function' ? children(this.getArgs()) : children : render ? render(this.getArgs()) : null;\n  };\n\n  return Component;\n}(React.Component);\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this2 = this;\n\n  this.state = this.props.initialState;\n\n  this._setState = function () {\n    return _this2.setState.apply(_this2, arguments);\n  };\n\n  this._forceUpdate = function () {\n    return _this2.forceUpdate.apply(_this2, arguments);\n  };\n};\n\nexport default Component;","/**\n * Detect Element Resize.\n * https://github.com/sdecima/javascript-detect-element-resize\n * Sebastian Decima\n *\n * Forked from version 0.5.3; includes the following modifications:\n * 1) Guard against unsafe 'window' and 'document' references (to support SSR).\n * 2) Defer initialization code via a top-level function wrapper (to support SSR).\n * 3) Avoid unnecessary reflows by not measuring size for scroll events bubbling from children.\n * 4) Add nonce for style element.\n * 5) Added support for injecting custom window object\n **/\nexport default function createDetectElementResize(nonce, hostWindow) {\n  // Check `document` and `window` in case of server-side rendering\n  var _window;\n\n  if (typeof hostWindow !== 'undefined') {\n    _window = hostWindow;\n  } else if (typeof window !== 'undefined') {\n    _window = window;\n  } else if (typeof self !== 'undefined') {\n    _window = self;\n  } else {\n    _window = global;\n  }\n\n  var attachEvent = typeof _window.document !== 'undefined' && _window.document.attachEvent;\n\n  if (!attachEvent) {\n    var requestFrame = function () {\n      var raf = _window.requestAnimationFrame || _window.mozRequestAnimationFrame || _window.webkitRequestAnimationFrame || function (fn) {\n        return _window.setTimeout(fn, 20);\n      };\n\n      return function (fn) {\n        return raf(fn);\n      };\n    }();\n\n    var cancelFrame = function () {\n      var cancel = _window.cancelAnimationFrame || _window.mozCancelAnimationFrame || _window.webkitCancelAnimationFrame || _window.clearTimeout;\n      return function (id) {\n        return cancel(id);\n      };\n    }();\n\n    var resetTriggers = function resetTriggers(element) {\n      var triggers = element.__resizeTriggers__,\n          expand = triggers.firstElementChild,\n          contract = triggers.lastElementChild,\n          expandChild = expand.firstElementChild;\n      contract.scrollLeft = contract.scrollWidth;\n      contract.scrollTop = contract.scrollHeight;\n      expandChild.style.width = expand.offsetWidth + 1 + 'px';\n      expandChild.style.height = expand.offsetHeight + 1 + 'px';\n      expand.scrollLeft = expand.scrollWidth;\n      expand.scrollTop = expand.scrollHeight;\n    };\n\n    var checkTriggers = function checkTriggers(element) {\n      return element.offsetWidth != element.__resizeLast__.width || element.offsetHeight != element.__resizeLast__.height;\n    };\n\n    var scrollListener = function scrollListener(e) {\n      // Don't measure (which forces) reflow for scrolls that happen inside of children!\n      if (e.target.className && typeof e.target.className.indexOf === 'function' && e.target.className.indexOf('contract-trigger') < 0 && e.target.className.indexOf('expand-trigger') < 0) {\n        return;\n      }\n\n      var element = this;\n      resetTriggers(this);\n\n      if (this.__resizeRAF__) {\n        cancelFrame(this.__resizeRAF__);\n      }\n\n      this.__resizeRAF__ = requestFrame(function () {\n        if (checkTriggers(element)) {\n          element.__resizeLast__.width = element.offsetWidth;\n          element.__resizeLast__.height = element.offsetHeight;\n\n          element.__resizeListeners__.forEach(function (fn) {\n            fn.call(element, e);\n          });\n        }\n      });\n    };\n    /* Detect CSS Animations support to detect element display/re-attach */\n\n\n    var animation = false,\n        keyframeprefix = '',\n        animationstartevent = 'animationstart',\n        domPrefixes = 'Webkit Moz O ms'.split(' '),\n        startEvents = 'webkitAnimationStart animationstart oAnimationStart MSAnimationStart'.split(' '),\n        pfx = '';\n    {\n      var elm = _window.document.createElement('fakeelement');\n\n      if (elm.style.animationName !== undefined) {\n        animation = true;\n      }\n\n      if (animation === false) {\n        for (var i = 0; i < domPrefixes.length; i++) {\n          if (elm.style[domPrefixes[i] + 'AnimationName'] !== undefined) {\n            pfx = domPrefixes[i];\n            keyframeprefix = '-' + pfx.toLowerCase() + '-';\n            animationstartevent = startEvents[i];\n            animation = true;\n            break;\n          }\n        }\n      }\n    }\n    var animationName = 'resizeanim';\n    var animationKeyframes = '@' + keyframeprefix + 'keyframes ' + animationName + ' { from { opacity: 0; } to { opacity: 0; } } ';\n    var animationStyle = keyframeprefix + 'animation: 1ms ' + animationName + '; ';\n  }\n\n  var createStyles = function createStyles(doc) {\n    if (!doc.getElementById('detectElementResize')) {\n      //opacity:0 works around a chrome bug https://code.google.com/p/chromium/issues/detail?id=286360\n      var css = (animationKeyframes ? animationKeyframes : '') + '.resize-triggers { ' + (animationStyle ? animationStyle : '') + 'visibility: hidden; opacity: 0; } ' + '.resize-triggers, .resize-triggers > div, .contract-trigger:before { content: \" \"; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; z-index: -1; } .resize-triggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',\n          head = doc.head || doc.getElementsByTagName('head')[0],\n          style = doc.createElement('style');\n      style.id = 'detectElementResize';\n      style.type = 'text/css';\n\n      if (nonce != null) {\n        style.setAttribute('nonce', nonce);\n      }\n\n      if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n      } else {\n        style.appendChild(doc.createTextNode(css));\n      }\n\n      head.appendChild(style);\n    }\n  };\n\n  var addResizeListener = function addResizeListener(element, fn) {\n    if (attachEvent) {\n      element.attachEvent('onresize', fn);\n    } else {\n      if (!element.__resizeTriggers__) {\n        var doc = element.ownerDocument;\n\n        var elementStyle = _window.getComputedStyle(element);\n\n        if (elementStyle && elementStyle.position == 'static') {\n          element.style.position = 'relative';\n        }\n\n        createStyles(doc);\n        element.__resizeLast__ = {};\n        element.__resizeListeners__ = [];\n        (element.__resizeTriggers__ = doc.createElement('div')).className = 'resize-triggers';\n        element.__resizeTriggers__.innerHTML = '<div class=\"expand-trigger\"><div></div></div>' + '<div class=\"contract-trigger\"></div>';\n        element.appendChild(element.__resizeTriggers__);\n        resetTriggers(element);\n        element.addEventListener('scroll', scrollListener, true);\n        /* Listen for a css animation to detect element display/re-attach */\n\n        if (animationstartevent) {\n          element.__resizeTriggers__.__animationListener__ = function animationListener(e) {\n            if (e.animationName == animationName) {\n              resetTriggers(element);\n            }\n          };\n\n          element.__resizeTriggers__.addEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n        }\n      }\n\n      element.__resizeListeners__.push(fn);\n    }\n  };\n\n  var removeResizeListener = function removeResizeListener(element, fn) {\n    if (attachEvent) {\n      element.detachEvent('onresize', fn);\n    } else {\n      element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n\n      if (!element.__resizeListeners__.length) {\n        element.removeEventListener('scroll', scrollListener, true);\n\n        if (element.__resizeTriggers__.__animationListener__) {\n          element.__resizeTriggers__.removeEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n\n          element.__resizeTriggers__.__animationListener__ = null;\n        }\n\n        try {\n          element.__resizeTriggers__ = !element.removeChild(element.__resizeTriggers__);\n        } catch (e) {// Preact compat; see developit/preact-compat/issues/228\n        }\n      }\n    }\n  };\n\n  return {\n    addResizeListener: addResizeListener,\n    removeResizeListener: removeResizeListener\n  };\n}","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nexports.default = MuiTable;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _MultiGrid = require('react-virtualized/dist/commonjs/MultiGrid');\n\nvar _MultiGrid2 = _interopRequireDefault(_MultiGrid);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _Table = require('@material-ui/core/Table');\n\nvar _Table2 = _interopRequireDefault(_Table);\n\nvar _TableCell = require('@material-ui/core/TableCell');\n\nvar _TableCell2 = _interopRequireDefault(_TableCell);\n\nvar _TableFooter = require('@material-ui/core/TableFooter');\n\nvar _TableFooter2 = _interopRequireDefault(_TableFooter);\n\nvar _TablePagination = require('@material-ui/core/TablePagination');\n\nvar _TablePagination2 = _interopRequireDefault(_TablePagination);\n\nvar _TableSortLabel = require('@material-ui/core/TableSortLabel');\n\nvar _TableSortLabel2 = _interopRequireDefault(_TableSortLabel);\n\nvar _styles = require('@material-ui/core/styles');\n\nvar _reactDraggable = require('react-draggable');\n\nvar _reactDraggable2 = _interopRequireDefault(_reactDraggable);\n\nvar _utils = require('./utils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar FOOTER_BORDER_HEIGHT = 1;\n\nvar useStyles = (0, _styles.makeStyles)(function (theme) {\n  return {\n    table: {\n      boxSizing: 'border-box',\n\n      '& .topLeftGrid': {\n        backgroundColor: theme.palette.grey[theme.palette.type === 'dark' ? 800 : 200],\n        borderBottom: '2px solid ' + theme.palette.divider,\n        borderRight: '2px solid ' + theme.palette.divider,\n        color: theme.palette.text.secondary,\n        fontSize: theme.typography.pxToRem(12),\n\n        // Hide scrollbars on Chrome/Safari/IE\n        '&::-webkit-scrollbar': {\n          display: 'none'\n        },\n        '-ms-overflow-style': 'none'\n      },\n\n      '& .topRightGrid': {\n        backgroundColor: theme.palette.grey[theme.palette.type === 'dark' ? 800 : 200],\n        borderBottom: '2px solid ' + theme.palette.divider,\n        color: theme.palette.text.secondary,\n        fontSize: theme.typography.pxToRem(12),\n\n        // Hide scrollbars on Chrome/Safari/IE\n        '&::-webkit-scrollbar': {\n          display: 'none'\n        },\n        '-ms-overflow-style': 'none'\n      },\n\n      '& .bottomLeftGrid': {\n        backgroundColor: theme.palette.grey[theme.palette.type === 'dark' ? 800 : 200],\n        borderRight: '2px solid ' + theme.palette.divider,\n        color: theme.palette.text.secondary,\n        fontSize: theme.typography.pxToRem(13),\n\n        // Hide scrollbars on Chrome/Safari/IE\n        '&::-webkit-scrollbar': {\n          display: 'none'\n        },\n        '-ms-overflow-style': 'none'\n      },\n\n      '& .bottomRightGrid': {\n        color: theme.palette.text.primary,\n        fontSize: theme.typography.pxToRem(13),\n        outline: 'none' // See: https://github.com/bvaughn/react-virtualized/issues/381\n      }\n    },\n    cell: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    cellClickable: {\n      cursor: 'pointer'\n    },\n    cellSelected: {\n      backgroundColor: theme.palette.grey[theme.palette.type === 'dark' ? 900 : 100]\n    },\n    cellHovered: {\n      backgroundColor: theme.palette.grey[theme.palette.type === 'dark' ? 800 : 200]\n    },\n    cellDisabled: {\n      opacity: 0.5\n    },\n    cellContents: {\n      width: '100%',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      textOverflow: 'ellipsis'\n    },\n    cellHeader: {\n      fontSize: theme.typography.pxToRem(12),\n      fontWeight: theme.typography.fontWeightMedium,\n      color: theme.palette.text.secondary\n    },\n    cellInLastColumn: {\n      paddingRight: theme.spacing(3)\n    },\n    cellInLastRow: {\n      borderBottom: 'none'\n    },\n    footer: {\n      borderTop: FOOTER_BORDER_HEIGHT + 'px solid ' + theme.palette.divider\n    },\n    dragHandle: {\n      flex: '0 0 16px',\n      zIndex: 2,\n      cursor: 'col-resize',\n      color: '#0085ff'\n    },\n    DragHandleActive: {\n      color: '#0b6fcc',\n      zIndex: 3\n    },\n    DragHandleIcon: {\n      flex: '0 0 12px',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  };\n});\n\nvar calculateWidths = function calculateWidths(_ref) {\n  var resizable = _ref.resizable,\n      Columns = _ref.columns;\n\n  var widths = [];\n  if (resizable) {\n    var initialWidth = 1;\n    var columns = [];\n    Columns.forEach(function (c) {\n      if (c.width) {\n        widths[c.name] = 0.1;\n        initialWidth = initialWidth - 0.1;\n      } else {\n        columns.push(c);\n      }\n    });\n    columns.forEach(function (c) {\n      widths[c.name] = initialWidth / columns.length;\n    });\n  }\n  return widths;\n};\n\nvar useCellRenderer = function useCellRenderer(_ref2) {\n  var recomputeGridSize = _ref2.recomputeGridSize,\n      columns = _ref2.columns,\n      width = _ref2.width,\n      includeHeaders = _ref2.includeHeaders,\n      data = _ref2.data,\n      columnWidth = _ref2.columnWidth,\n      isCellHovered = _ref2.isCellHovered,\n      isCellSelected = _ref2.isCellSelected,\n      isCellDisabled = _ref2.isCellDisabled,\n      classes = _ref2.classes,\n      orderBy = _ref2.orderBy,\n      orderDirection = _ref2.orderDirection,\n      onHeaderClick = _ref2.onHeaderClick,\n      onCellClick = _ref2.onCellClick,\n      onCellDoubleClick = _ref2.onCellDoubleClick,\n      onCellContextMenu = _ref2.onCellContextMenu,\n      resizable = _ref2.resizable,\n      defaultCellProps = _ref2.cellProps;\n\n  var _React$useState = _react2.default.useState({\n    hoveredColumn: null,\n    hoveredRowData: null\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      _React$useState2$ = _React$useState2[0],\n      hoveredColumn = _React$useState2$.hoveredColumn,\n      hoveredRowData = _React$useState2$.hoveredRowData,\n      setHovered = _React$useState2[1];\n\n  var _React$useState3 = _react2.default.useState(calculateWidths({ resizable: resizable, columns: columns })),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      widths = _React$useState4[0],\n      setWidths = _React$useState4[1];\n\n  _react2.default.useEffect(function () {\n    recomputeGridSize();\n  }, [recomputeGridSize, hoveredColumn, hoveredRowData, widths]);\n\n  var resizableColumnWidths = _react2.default.useCallback(function (index, columns, tableWidth) {\n    return widths[columns[index].name] * tableWidth;\n  }, [widths]);\n\n  var getColumnWidth = _react2.default.useCallback(function (_ref3) {\n    var index = _ref3.index;\n    return typeof columnWidth === 'function' ? columnWidth({ index: index, columns: columns, width: width }) : resizable ? resizableColumnWidths(index, columns, width) : (0, _utils.calcColumnWidth)(index, columns, width);\n  }, [columnWidth, resizable, columns, width, resizableColumnWidths]);\n\n  var resizeRow = _react2.default.useCallback(function (_ref4) {\n    var dataKey = _ref4.dataKey,\n        deltaX = _ref4.deltaX;\n    return setWidths(function (prev) {\n      var _extends2;\n\n      var delta = deltaX / width;\n      var index = columns.findIndex(function (c) {\n        return c.name === dataKey;\n      });\n      var nextDataKey = columns[index + 1].name;\n      return _extends({}, prev, (_extends2 = {}, _defineProperty(_extends2, dataKey, prev[dataKey] + delta), _defineProperty(_extends2, nextDataKey, prev[nextDataKey] - delta), _extends2));\n    });\n  }, [setWidths, columns, width]);\n\n  var handleDrag = _react2.default.useCallback(function (dataKey) {\n    return function (event, _ref5) {\n      var deltaX = _ref5.deltaX;\n      return resizeRow({\n        dataKey: dataKey,\n        deltaX: deltaX\n      });\n    };\n  }, [resizeRow]);\n\n  var handleMouse = _react2.default.useCallback(function (hoveredColumn, hoveredRowData) {\n    return function (e) {\n      return setHovered({\n        hoveredColumn: hoveredColumn,\n        hoveredRowData: hoveredRowData\n      });\n    };\n  }, [setHovered]);\n\n  var cellRenderer = function cellRenderer(_ref6) {\n    var _classNames;\n\n    var columnIndex = _ref6.columnIndex,\n        rowIndex = _ref6.rowIndex,\n        key = _ref6.key,\n        style = _ref6.style;\n\n    var column = columns[columnIndex];\n    var isHeader = includeHeaders && rowIndex === 0;\n    var headerOffset = includeHeaders ? 1 : 0;\n    var rowData = data && data[rowIndex - headerOffset] || {};\n\n    var isSelected = isCellSelected && isCellSelected(column, rowData);\n    var isDisabled = isCellDisabled && isCellDisabled(column, rowData);\n\n    var isHovered = hoveredColumn && hoveredRowData && isCellHovered && isCellHovered(column, rowData, hoveredColumn, hoveredRowData);\n\n    var resolveCellProps = function resolveCellProps(cellProps) {\n      return typeof cellProps === 'function' ? cellProps(column, rowData, hoveredColumn, hoveredRowData) : cellProps;\n    };\n    // TODO: Deep merge (do not override all defaultCellProps styles if column.cellProps.styles defined?)\n\n    var _resolveCellProps$res = _extends({}, resolveCellProps(defaultCellProps), resolveCellProps(column.cellProps)),\n        cellStyle = _resolveCellProps$res.style,\n        cellProps = _objectWithoutProperties(_resolveCellProps$res, ['style']);\n\n    var contents = _react2.default.createElement(\n      'div',\n      { className: classes.cellContents },\n      _react2.default.createElement(\n        'span',\n        { style: { flex: 'auto' } },\n        isHeader ? column.header != null ? column.header : column.name : column.cell ? column.cell(rowData) : rowData[column.name]\n      ),\n      _react2.default.createElement(\n        'span',\n        { style: { float: 'right' } },\n        isHeader && resizable && columnIndex < columns.length - 1 && _react2.default.createElement(\n          _reactDraggable2.default,\n          {\n            axis: 'x',\n            defaultClassName: classes.dragHandle,\n            defaultClassNameDragging: classes.DragHandleActive,\n            onDrag: handleDrag(column.name),\n            position: { x: 0 }\n          },\n          _react2.default.createElement(\n            'span',\n            { className: classes.DragHandleIcon },\n            '\\u22EE'\n          )\n        )\n      )\n    );\n\n    var hasCellClick = !isHeader && onCellClick;\n    var hasCellDoubleClick = !isHeader && onCellDoubleClick;\n    var hasCellContextMenu = !isHeader && onCellContextMenu;\n    var isClickable = hasCellClick || hasCellDoubleClick || hasCellContextMenu || column.onClick;\n\n    var className = (0, _classnames2.default)(classes.cell, (_classNames = {}, _defineProperty(_classNames, classes.cellClickable, isClickable), _defineProperty(_classNames, classes.cellHovered, isHovered), _defineProperty(_classNames, classes.cellSelected, isSelected), _defineProperty(_classNames, classes.cellDisabled, isDisabled), _defineProperty(_classNames, classes.cellHeader, isHeader), _defineProperty(_classNames, classes.cellInLastColumn, columnIndex === columns.length - 1), _defineProperty(_classNames, classes.cellInLastRow, !isHeader && rowIndex === (data ? data.length : 0)), _classNames));\n\n    return _react2.default.createElement(\n      _TableCell2.default,\n      _extends({\n        component: 'div',\n        className: className,\n        key: key,\n        onMouseEnter: handleMouse(column, rowData),\n        onMouseLeave: handleMouse(null, null),\n        style: _extends({}, style, cellStyle)\n      }, hasCellClick && {\n        onClick: function onClick(event) {\n          return onCellClick(event, { column: column, rowData: rowData, data: data });\n        }\n      }, hasCellDoubleClick && {\n        onDoubleClick: function onDoubleClick(event) {\n          return onCellDoubleClick(event, { column: column, rowData: rowData, data: data });\n        }\n      }, hasCellContextMenu && {\n        onContextMenu: function onContextMenu(event) {\n          return onCellContextMenu(event, { column: column, rowData: rowData, data: data });\n        }\n      }, cellProps),\n      isHeader && column.onHeaderClick !== false && (column.onHeaderClick || onHeaderClick) ? _react2.default.createElement(\n        _TableSortLabel2.default,\n        {\n          active: orderBy && (orderBy === column.name || orderBy === column.orderBy) && rowIndex === 0,\n          style: { width: 'inherit' } // fix text overflowing\n          , direction: orderDirection,\n          onClick: function onClick(event) {\n            return column.onHeaderClick ? column.onHeaderClick(event, { column: column }) : onHeaderClick(event, { column: column });\n          }\n        },\n        contents\n      ) : isHeader && column.resizable ? _react2.default.createElement(\n        _react2.default.Fragment,\n        null,\n        contents,\n        _react2.default.createElement(\n          _reactDraggable2.default,\n          {\n            axis: 'x',\n            defaultClassName: 'DragHandle',\n            defaultClassNameDragging: 'DragHandleActive',\n            onDrag: handleDrag(column.name),\n            position: { x: 0 }\n          },\n          _react2.default.createElement(\n            'span',\n            { className: 'DragHandleIcon' },\n            '\\u22EE'\n          )\n        )\n      ) : contents\n    );\n  };\n\n  return { cellRenderer: cellRenderer, columnWidth: getColumnWidth };\n};\n\nfunction MuiTable(_ref7) {\n  var data = _ref7.data,\n      columns = _ref7.columns,\n      width = _ref7.width,\n      height = _ref7.height,\n      _ref7$maxHeight = _ref7.maxHeight,\n      maxHeight = _ref7$maxHeight === undefined ? null : _ref7$maxHeight,\n      pagination = _ref7.pagination,\n      fitHeightToRows = _ref7.fitHeightToRows,\n      _ref7$fixedRowCount = _ref7.fixedRowCount,\n      fixedRowCount = _ref7$fixedRowCount === undefined ? 0 : _ref7$fixedRowCount,\n      _ref7$fixedColumnCoun = _ref7.fixedColumnCount,\n      fixedColumnCount = _ref7$fixedColumnCoun === undefined ? 0 : _ref7$fixedColumnCoun,\n      _ref7$rowHeight = _ref7.rowHeight,\n      rowHeight = _ref7$rowHeight === undefined ? 48 : _ref7$rowHeight,\n      style = _ref7.style,\n      columnWidth = _ref7.columnWidth,\n      _ref7$includeHeaders = _ref7.includeHeaders,\n      includeHeaders = _ref7$includeHeaders === undefined ? false : _ref7$includeHeaders,\n      isCellHovered = _ref7.isCellHovered,\n      isCellSelected = _ref7.isCellSelected,\n      isCellDisabled = _ref7.isCellDisabled,\n      Classes = _ref7.classes,\n      orderBy = _ref7.orderBy,\n      orderDirection = _ref7.orderDirection,\n      onHeaderClick = _ref7.onHeaderClick,\n      onCellClick = _ref7.onCellClick,\n      onCellDoubleClick = _ref7.onCellDoubleClick,\n      onCellContextMenu = _ref7.onCellContextMenu,\n      resizable = _ref7.resizable,\n      cellProps = _ref7.cellProps,\n      other = _objectWithoutProperties(_ref7, ['data', 'columns', 'width', 'height', 'maxHeight', 'pagination', 'fitHeightToRows', 'fixedRowCount', 'fixedColumnCount', 'rowHeight', 'style', 'columnWidth', 'includeHeaders', 'isCellHovered', 'isCellSelected', 'isCellDisabled', 'classes', 'orderBy', 'orderDirection', 'onHeaderClick', 'onCellClick', 'onCellDoubleClick', 'onCellContextMenu', 'resizable', 'cellProps']);\n\n  var classes = useStyles({ classes: Classes });\n  var theme = (0, _styles.useTheme)();\n\n  var multiGrid = _react2.default.useRef(null);\n\n  var recomputeGridSize = _react2.default.useCallback(function () {\n    return multiGrid.current && multiGrid.current.recomputeGridSize();\n  }, [multiGrid]);\n\n  _react2.default.useEffect(function () {\n    recomputeGridSize();\n  }, [columns, data, height, width, recomputeGridSize]);\n\n  var calculatedHeight = 0;\n  if (height) {\n    calculatedHeight = height; // fixed height\n  } else if (pagination && pagination.rowsPerPage && !fitHeightToRows) {\n    var rowCount = pagination.rowsPerPage + (fixedRowCount ? fixedRowCount : includeHeaders ? 1 : 0);\n    calculatedHeight = rowCount * rowHeight;\n  } else if (Array.isArray(data)) {\n    var _rowCount = data.length + (fixedRowCount ? fixedRowCount : includeHeaders ? 1 : 0);\n    calculatedHeight = _rowCount * rowHeight;\n  }\n\n  var paginationHeight = theme.mixins.toolbar.minHeight + FOOTER_BORDER_HEIGHT;\n\n  var calculatedHeightWithFooter = calculatedHeight + (pagination ? paginationHeight : 0);\n  var containerHeight = maxHeight != null ? Math.min(calculatedHeightWithFooter, maxHeight) : calculatedHeightWithFooter;\n  var multiGridHeight = containerHeight - (pagination ? paginationHeight : 0);\n\n  return _react2.default.createElement(\n    _Table2.default,\n    _extends({\n      component: 'div',\n      style: _extends({ width: width, height: containerHeight }, style),\n      className: classes.table\n    }, other),\n    _react2.default.createElement(_MultiGrid2.default, _extends({}, useCellRenderer({\n      recomputeGridSize: recomputeGridSize,\n      data: data,\n      columns: columns,\n      width: width,\n      classes: classes,\n      includeHeaders: includeHeaders,\n      columnWidth: columnWidth,\n      isCellHovered: isCellHovered,\n      isCellSelected: isCellSelected,\n      isCellDisabled: isCellDisabled,\n      orderBy: orderBy,\n      orderDirection: orderDirection,\n      onHeaderClick: onHeaderClick,\n      onCellClick: onCellClick,\n      onCellDoubleClick: onCellDoubleClick,\n      onCellContextMenu: onCellContextMenu,\n      resizable: resizable,\n      cellProps: cellProps\n    }), {\n      ref: multiGrid,\n      width: width,\n      columnCount: Array.isArray(columns) ? columns.length : 0,\n      fixedColumnCount: fixedColumnCount,\n      enableFixedColumnScroll: fixedColumnCount > 0,\n      height: multiGridHeight,\n      rowHeight: rowHeight,\n      rowCount: Array.isArray(data) ? data.length + (includeHeaders ? 1 : 0) : 0,\n      fixedRowCount: fixedRowCount,\n      enableFixedRowScroll: fixedRowCount > 0\n      // TODO: Read these from `classes` without classes.table inheritance?  How to pass props.classes down to override?\n      , classNameTopLeftGrid: 'topLeftGrid',\n      classNameTopRightGrid: 'topRightGrid',\n      classNameBottomLeftGrid: 'bottomLeftGrid',\n      classNameBottomRightGrid: 'bottomRightGrid'\n    })),\n    pagination && _react2.default.createElement(\n      _TableFooter2.default,\n      { component: 'div', className: classes.footer },\n      _react2.default.createElement(_TablePagination2.default, _extends({ component: 'div' }, pagination))\n    )\n  );\n}\n\nMuiTable.propTypes = {\n  data: _propTypes2.default.array,\n  columns: _propTypes2.default.array,\n  width: _propTypes2.default.number,\n  height: _propTypes2.default.number,\n  maxHeight: _propTypes2.default.number,\n  pagination: _propTypes2.default.object,\n  fitHeightToRows: _propTypes2.default.bool,\n  fixedRowCount: _propTypes2.default.number,\n  fixedColumnCount: _propTypes2.default.number,\n  rowHeight: _propTypes2.default.number,\n  columnWidth: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.func]),\n  includeHeaders: _propTypes2.default.bool,\n  orderBy: _propTypes2.default.string,\n  orderDirection: _propTypes2.default.string,\n  onHeaderClick: _propTypes2.default.func,\n  onCellClick: _propTypes2.default.func,\n  onCellDoubleClick: _propTypes2.default.func,\n  onCellContextMenu: _propTypes2.default.func,\n  noPointer: _propTypes2.default.bool,\n  isCellHovered: _propTypes2.default.func,\n  isCellSelected: _propTypes2.default.func,\n  isCellDisabled: _propTypes2.default.func,\n  classes: _propTypes2.default.object,\n  cellProps: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.func]),\n  style: _propTypes2.default.object\n};"],"sourceRoot":""}